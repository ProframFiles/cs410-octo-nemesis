<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="jdcoefct_8c" kind="file">
    <compoundname>jdcoefct.c</compoundname>
    <includes refid="jinclude_8h" local="yes">jinclude.h</includes>
    <includes refid="jpeglib_8h" local="yes">jpeglib.h</includes>
    <innerclass refid="structmy__coef__controller" prot="public">my_coef_controller</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="jdcoefct_8c_1ad5c3cdfae3019b8223973041a2a1304b" prot="public" static="no">
        <name>JPEG_INTERNALS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcoefct.c" line="17" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcoefct.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="jdcoefct_8c_1a5d04f73726165ed3ba748a4065eec2e8" prot="public" static="no">
        <type><ref refid="structmy__coef__controller" kindref="compound">my_coef_controller</ref> *</type>
        <definition>typedef my_coef_controller* my_coef_ptr</definition>
        <argsstring></argsstring>
        <name>my_coef_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcoefct.c" line="62" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcoefct.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="jdcoefct_8c_1ade6037eb3ae64440936e519c74933fbc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int decompress_onepass</definition>
        <argsstring>(j_decompress_ptr cinfo, JSAMPIMAGE output_buf)</argsstring>
        <name>decompress_onepass</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type>JSAMPIMAGE</type>
          <declname>output_buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcoefct.c" line="65" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcoefct.c" bodystart="147" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="jdcoefct_8c_1a9207baae02675f489723eb3da7a81ce0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void start_iMCU_row</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>start_iMCU_row</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcoefct.c" line="79" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcoefct.c" bodystart="79" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="jdcoefct_8c_1a9fe506fa24e8db202c12816d1da9d4d8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void start_input_pass</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>start_input_pass</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcoefct.c" line="107" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcoefct.c" bodystart="107" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="jdcoefct_8c_1a7ffd58b597644893f34d01950e00e981" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void start_output_pass</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>start_output_pass</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcoefct.c" line="119" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcoefct.c" bodystart="119" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="jdcoefct_8c_1a75d9f5c402670af2e22dfc3d17bdc75a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int dummy_consume_data</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>dummy_consume_data</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcoefct.c" line="227" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcoefct.c" bodystart="227" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="jdcoefct_8c_1a9492def1c87ee001cbe3364256601a19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jinit_d_coef_controller</definition>
        <argsstring>(j_decompress_ptr cinfo, boolean need_full_buffer)</argsstring>
        <name>jinit_d_coef_controller</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>need_full_buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcoefct.c" line="665" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcoefct.c" bodystart="665" bodyend="725"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>jdcoefct.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1994-1995,<sp/>Thomas<sp/>G.<sp/>Lane.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Independent<sp/>JPEG<sp/>Group&apos;s<sp/>software.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>conditions<sp/>of<sp/>distribution<sp/>and<sp/>use,<sp/>see<sp/>the<sp/>accompanying<sp/>README<sp/>file.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>the<sp/>coefficient<sp/>buffer<sp/>controller<sp/>for<sp/>decompression.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>controller<sp/>is<sp/>the<sp/>top<sp/>level<sp/>of<sp/>the<sp/>JPEG<sp/>decompressor<sp/>proper.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>The<sp/>coefficient<sp/>buffer<sp/>lies<sp/>between<sp/>entropy<sp/>decoding<sp/>and<sp/>inverse-DCT<sp/>steps.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>In<sp/>buffered-image<sp/>mode,<sp/>this<sp/>controller<sp/>is<sp/>the<sp/>interface<sp/>between</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>input-oriented<sp/>processing<sp/>and<sp/>output-oriented<sp/>processing.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>Also,<sp/>the<sp/>input<sp/>side<sp/>(only)<sp/>is<sp/>used<sp/>when<sp/>reading<sp/>a<sp/>file<sp/>for<sp/>transcoding.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JPEG_INTERNALS</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;jinclude.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jpeglib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Block<sp/>smoothing<sp/>is<sp/>only<sp/>applicable<sp/>for<sp/>progressive<sp/>JPEG,<sp/>so:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>D_PROGRESSIVE_SUPPORTED</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>BLOCK_SMOOTHING_SUPPORTED</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>buffer<sp/>controller<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__d__coef__controller" kindref="compound">jpeg_d_coef_controller</ref><sp/>pub;<sp/></highlight><highlight class="comment">/*<sp/>public<sp/>fields<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>These<sp/>variables<sp/>keep<sp/>track<sp/>of<sp/>the<sp/>current<sp/>location<sp/>of<sp/>the<sp/>input<sp/>side.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>cinfo-&gt;input_iMCU_row<sp/>is<sp/>also<sp/>used<sp/>for<sp/>this.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>MCU_ctr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>counts<sp/>MCUs<sp/>processed<sp/>in<sp/>current<sp/>row<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MCU_vert_offset;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>counts<sp/>MCU<sp/>rows<sp/>within<sp/>iMCU<sp/>row<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MCU_rows_per_iMCU_row;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>such<sp/>rows<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>output<sp/>side&apos;s<sp/>location<sp/>is<sp/>represented<sp/>by<sp/>cinfo-&gt;output_iMCU_row.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>single-pass<sp/>modes,<sp/>it&apos;s<sp/>sufficient<sp/>to<sp/>buffer<sp/>just<sp/>one<sp/>MCU.</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/>*<sp/>We<sp/>allocate<sp/>a<sp/>workspace<sp/>of<sp/>D_MAX_BLOCKS_IN_MCU<sp/>coefficient<sp/>blocks,</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/>*<sp/>and<sp/>let<sp/>the<sp/>entropy<sp/>decoder<sp/>write<sp/>into<sp/>that<sp/>workspace<sp/>each<sp/>time.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/>*<sp/>(On<sp/>80x86,<sp/>the<sp/>workspace<sp/>is<sp/>FAR<sp/>even<sp/>though<sp/>it&apos;s<sp/>not<sp/>really<sp/>very<sp/>big;</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/>*<sp/>this<sp/>is<sp/>to<sp/>keep<sp/>the<sp/>module<sp/>interfaces<sp/>unchanged<sp/>when<sp/>a<sp/>large<sp/>coefficient</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/>*<sp/>buffer<sp/>is<sp/>necessary.)</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/>*<sp/>In<sp/>multi-pass<sp/>modes,<sp/>this<sp/>array<sp/>points<sp/>to<sp/>the<sp/>current<sp/>MCU&apos;s<sp/>blocks</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/>*<sp/>within<sp/>the<sp/>virtual<sp/>arrays;<sp/>it<sp/>is<sp/>used<sp/>only<sp/>by<sp/>the<sp/>input<sp/>side.</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>JBLOCKROW<sp/>MCU_buffer[D_MAX_BLOCKS_IN_MCU];</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>D_MULTISCAN_FILES_SUPPORTED</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>multi-pass<sp/>modes,<sp/>we<sp/>need<sp/>a<sp/>virtual<sp/>block<sp/>array<sp/>for<sp/>each<sp/>component.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="structjvirt__barray__control" kindref="compound">jvirt_barray_ptr</ref><sp/>whole_image[MAX_COMPONENTS];</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BLOCK_SMOOTHING_SUPPORTED</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>doing<sp/>block<sp/>smoothing,<sp/>we<sp/>latch<sp/>coefficient<sp/>Al<sp/>values<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>coef_bits_latch;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SAVED_COEFS<sp/><sp/>6<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>save<sp/>coef_bits[0..5]<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"></highlight><highlight class="normal">}<sp/><ref refid="structmy__coef__controller" kindref="compound">my_coef_controller</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structmy__coef__controller" kindref="compound">my_coef_controller</ref><sp/>*<sp/><ref refid="structmy__coef__controller" kindref="compound">my_coef_ptr</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Forward<sp/>declarations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decompress_onepass</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>JPP((<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/>JSAMPIMAGE<sp/>output_buf));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>D_MULTISCAN_FILES_SUPPORTED</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"></highlight><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decompress_data</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>JPP((<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/>JSAMPIMAGE<sp/>output_buf));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>BLOCK_SMOOTHING_SUPPORTED</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"></highlight><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>smoothing_ok<sp/>JPP((<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="73"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decompress_smooth_data</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>JPP((<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/>JSAMPIMAGE<sp/>output_buf));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">start_iMCU_row<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Reset<sp/>within-iMCU-row<sp/>counters<sp/>for<sp/>a<sp/>new<sp/>row<sp/>(input<sp/>side)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="structmy__coef__controller" kindref="compound">my_coef_ptr</ref><sp/>coef<sp/>=<sp/>(<ref refid="structmy__coef__controller" kindref="compound">my_coef_ptr</ref>)<sp/>cinfo-&gt;coef;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>an<sp/>interleaved<sp/>scan,<sp/>an<sp/>MCU<sp/>row<sp/>is<sp/>the<sp/>same<sp/>as<sp/>an<sp/>iMCU<sp/>row.</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/>*<sp/>In<sp/>a<sp/>noninterleaved<sp/>scan,<sp/>an<sp/>iMCU<sp/>row<sp/>has<sp/>v_samp_factor<sp/>MCU<sp/>rows.</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/>*<sp/>But<sp/>at<sp/>the<sp/>bottom<sp/>of<sp/>the<sp/>image,<sp/>process<sp/>only<sp/>what&apos;s<sp/>left.</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>if<sp/>(cinfo-&gt;comps_in_scan<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>coef-&gt;MCU_rows_per_iMCU_row<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;input_iMCU_row<sp/>&lt;<sp/>(cinfo-&gt;total_iMCU_rows-1))</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>coef-&gt;MCU_rows_per_iMCU_row<sp/>=<sp/>cinfo-&gt;cur_comp_info[0]-&gt;v_samp_factor;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>coef-&gt;MCU_rows_per_iMCU_row<sp/>=<sp/>cinfo-&gt;cur_comp_info[0]-&gt;last_row_height;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>coef-&gt;MCU_ctr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>coef-&gt;MCU_vert_offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/>Initialize<sp/>for<sp/>an<sp/>input<sp/>processing<sp/>pass.</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">start_input_pass<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>cinfo-&gt;input_iMCU_row<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>start_iMCU_row(cinfo);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/>Initialize<sp/>for<sp/>an<sp/>output<sp/>processing<sp/>pass.</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">start_output_pass<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BLOCK_SMOOTHING_SUPPORTED</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="structmy__coef__controller" kindref="compound">my_coef_ptr</ref><sp/>coef<sp/>=<sp/>(<ref refid="structmy__coef__controller" kindref="compound">my_coef_ptr</ref>)<sp/>cinfo-&gt;coef;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>multipass,<sp/>check<sp/>to<sp/>see<sp/>whether<sp/>to<sp/>use<sp/>block<sp/>smoothing<sp/>on<sp/>this<sp/>pass<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>if<sp/>(coef-&gt;pub.coef_arrays<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;do_block_smoothing<sp/>&amp;&amp;<sp/>smoothing_ok(cinfo))</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>coef-&gt;pub.decompress_data<sp/>=<sp/>decompress_smooth_data;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>coef-&gt;pub.decompress_data<sp/>=<sp/>decompress_data;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>cinfo-&gt;output_iMCU_row<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/>Decompress<sp/>and<sp/>return<sp/>some<sp/>data<sp/>in<sp/>the<sp/>single-pass<sp/>case.</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/>Always<sp/>attempts<sp/>to<sp/>emit<sp/>one<sp/>fully<sp/>interleaved<sp/>MCU<sp/>row<sp/>(&quot;iMCU&quot;<sp/>row).</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/>Input<sp/>and<sp/>output<sp/>must<sp/>run<sp/>in<sp/>lockstep<sp/>since<sp/>we<sp/>have<sp/>only<sp/>a<sp/>one-MCU<sp/>buffer.</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*<sp/>Return<sp/>value<sp/>is<sp/>JPEG_ROW_COMPLETED,<sp/>JPEG_SCAN_COMPLETED,<sp/>or<sp/>JPEG_SUSPENDED.</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*<sp/>NB:<sp/>output_buf<sp/>contains<sp/>a<sp/>plane<sp/>for<sp/>each<sp/>component<sp/>in<sp/>image.</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*<sp/>For<sp/>single<sp/>pass,<sp/>this<sp/>is<sp/>the<sp/>same<sp/>as<sp/>the<sp/>components<sp/>in<sp/>the<sp/>scan.</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">decompress_onepass<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/>JSAMPIMAGE<sp/>output_buf)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="structmy__coef__controller" kindref="compound">my_coef_ptr</ref><sp/>coef<sp/>=<sp/>(<ref refid="structmy__coef__controller" kindref="compound">my_coef_ptr</ref>)<sp/>cinfo-&gt;coef;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>MCU_col_num;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>index<sp/>of<sp/>current<sp/>MCU<sp/>within<sp/>row<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>last_MCU_col<sp/>=<sp/>cinfo-&gt;MCUs_per_row<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>last_iMCU_row<sp/>=<sp/>cinfo-&gt;total_iMCU_rows<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkn,<sp/>ci,<sp/>xindex,<sp/>yindex,<sp/>yoffset,<sp/>useful_width;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>JSAMPARRAY<sp/>output_ptr;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>start_col,<sp/>output_col;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*compptr;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>inverse_DCT_method_ptr<sp/>inverse_DCT;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>to<sp/>process<sp/>as<sp/>much<sp/>as<sp/>one<sp/>whole<sp/>iMCU<sp/>row<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>for<sp/>(yoffset<sp/>=<sp/>coef-&gt;MCU_vert_offset;<sp/>yoffset<sp/>&lt;<sp/>coef-&gt;MCU_rows_per_iMCU_row;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yoffset++)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MCU_col_num<sp/>=<sp/>coef-&gt;MCU_ctr;<sp/>MCU_col_num<sp/>&lt;=<sp/>last_MCU_col;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>MCU_col_num++)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>to<sp/>fetch<sp/>an<sp/>MCU.<sp/><sp/>Entropy<sp/>decoder<sp/>expects<sp/>buffer<sp/>to<sp/>be<sp/>zeroed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jzero_far((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FAR<sp/>*)<sp/>coef-&gt;MCU_buffer[0],</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>(cinfo-&gt;blocks_in_MCU<sp/>*<sp/>SIZEOF(JBLOCK)));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>(*cinfo-&gt;entropy-&gt;decode_mcu)<sp/>(cinfo,<sp/>coef-&gt;MCU_buffer))<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Suspension<sp/>forced;<sp/>update<sp/>state<sp/>counters<sp/>and<sp/>exit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>coef-&gt;MCU_vert_offset<sp/>=<sp/>yoffset;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>coef-&gt;MCU_ctr<sp/>=<sp/>MCU_col_num;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>JPEG_SUSPENDED;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>where<sp/>data<sp/>should<sp/>go<sp/>in<sp/>output_buf<sp/>and<sp/>do<sp/>the<sp/>IDCT<sp/>thing.</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>We<sp/>skip<sp/>dummy<sp/>blocks<sp/>at<sp/>the<sp/>right<sp/>and<sp/>bottom<sp/>edges<sp/>(but<sp/>blkn<sp/>gets</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>incremented<sp/>past<sp/>them!).<sp/><sp/>Note<sp/>the<sp/>inner<sp/>loop<sp/>relies<sp/>on<sp/>having</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>allocated<sp/>the<sp/>MCU_buffer[]<sp/>blocks<sp/>sequentially.</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blkn<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>index<sp/>of<sp/>current<sp/>DCT<sp/>block<sp/>within<sp/>MCU<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;comps_in_scan;<sp/>ci++)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr<sp/>=<sp/>cinfo-&gt;cur_comp_info[ci];</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>bother<sp/>to<sp/>IDCT<sp/>an<sp/>uninteresting<sp/>component.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>compptr-&gt;component_needed)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blkn<sp/>+=<sp/>compptr-&gt;MCU_blocks;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>inverse_DCT<sp/>=<sp/>cinfo-&gt;idct-&gt;inverse_DCT[compptr-&gt;component_index];</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>useful_width<sp/>=<sp/>(MCU_col_num<sp/>&lt;<sp/>last_MCU_col)<sp/>?<sp/>compptr-&gt;MCU_width</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>compptr-&gt;last_col_width;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>output_ptr<sp/>=<sp/>output_buf[ci]<sp/>+<sp/>yoffset<sp/>*<sp/>compptr-&gt;DCT_scaled_size;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>start_col<sp/>=<sp/>MCU_col_num<sp/>*<sp/>compptr-&gt;MCU_sample_width;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(yindex<sp/>=<sp/>0;<sp/>yindex<sp/>&lt;<sp/>compptr-&gt;MCU_height;<sp/>yindex++)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;input_iMCU_row<sp/>&lt;<sp/>last_iMCU_row<sp/>||</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yoffset+yindex<sp/>&lt;<sp/>compptr-&gt;last_row_height)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_col<sp/>=<sp/>start_col;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(xindex<sp/>=<sp/>0;<sp/>xindex<sp/>&lt;<sp/>useful_width;<sp/>xindex++)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*inverse_DCT)<sp/>(cinfo,<sp/>compptr,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(JCOEFPTR)<sp/>coef-&gt;MCU_buffer[blkn+xindex],</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_ptr,<sp/>output_col);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_col<sp/>+=<sp/>compptr-&gt;DCT_scaled_size;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blkn<sp/>+=<sp/>compptr-&gt;MCU_width;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output_ptr<sp/>+=<sp/>compptr-&gt;DCT_scaled_size;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Completed<sp/>an<sp/>MCU<sp/>row,<sp/>but<sp/>perhaps<sp/>not<sp/>an<sp/>iMCU<sp/>row<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>coef-&gt;MCU_ctr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Completed<sp/>the<sp/>iMCU<sp/>row,<sp/>advance<sp/>counters<sp/>for<sp/>next<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>cinfo-&gt;output_iMCU_row++;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++(cinfo-&gt;input_iMCU_row)<sp/>&lt;<sp/>cinfo-&gt;total_iMCU_rows)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>start_iMCU_row(cinfo);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>JPEG_ROW_COMPLETED;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Completed<sp/>the<sp/>scan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>(*cinfo-&gt;inputctl-&gt;finish_input_pass)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>JPEG_SCAN_COMPLETED;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*<sp/>Dummy<sp/>consume-input<sp/>routine<sp/>for<sp/>single-pass<sp/>operation.</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">dummy_consume_data<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>JPEG_SUSPENDED;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Always<sp/>indicate<sp/>nothing<sp/>was<sp/>done<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>D_MULTISCAN_FILES_SUPPORTED</highlight></codeline>
<codeline lineno="234"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*<sp/>Consume<sp/>input<sp/>data<sp/>and<sp/>store<sp/>it<sp/>in<sp/>the<sp/>full-image<sp/>coefficient<sp/>buffer.</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*<sp/>We<sp/>read<sp/>as<sp/>much<sp/>as<sp/>one<sp/>fully<sp/>interleaved<sp/>MCU<sp/>row<sp/>(&quot;iMCU&quot;<sp/>row)<sp/>per<sp/>call,</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*<sp/>ie,<sp/>v_samp_factor<sp/>block<sp/>rows<sp/>for<sp/>each<sp/>component<sp/>in<sp/>the<sp/>scan.</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*<sp/>Return<sp/>value<sp/>is<sp/>JPEG_ROW_COMPLETED,<sp/>JPEG_SCAN_COMPLETED,<sp/>or<sp/>JPEG_SUSPENDED.</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal">consume_data<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><ref refid="structmy__coef__controller" kindref="compound">my_coef_ptr</ref><sp/>coef<sp/>=<sp/>(<ref refid="structmy__coef__controller" kindref="compound">my_coef_ptr</ref>)<sp/>cinfo-&gt;coef;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>MCU_col_num;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>index<sp/>of<sp/>current<sp/>MCU<sp/>within<sp/>row<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blkn,<sp/>ci,<sp/>xindex,<sp/>yindex,<sp/>yoffset;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>start_col;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>JBLOCKARRAY<sp/>buffer[MAX_COMPS_IN_SCAN];</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>JBLOCKROW<sp/>buffer_ptr;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*compptr;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Align<sp/>the<sp/>virtual<sp/>buffers<sp/>for<sp/>the<sp/>components<sp/>used<sp/>in<sp/>this<sp/>scan.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>for<sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;comps_in_scan;<sp/>ci++)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr<sp/>=<sp/>cinfo-&gt;cur_comp_info[ci];</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[ci]<sp/>=<sp/>(*cinfo-&gt;mem-&gt;access_virt_barray)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>coef-&gt;whole_image[compptr-&gt;component_index],</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;input_iMCU_row<sp/>*<sp/>compptr-&gt;v_samp_factor,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(JDIMENSION)<sp/>compptr-&gt;v_samp_factor,<sp/>TRUE);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note:<sp/>entropy<sp/>decoder<sp/>expects<sp/>buffer<sp/>to<sp/>be<sp/>zeroed,</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>but<sp/>this<sp/>is<sp/>handled<sp/>automatically<sp/>by<sp/>the<sp/>memory<sp/>manager</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>because<sp/>we<sp/>requested<sp/>a<sp/>pre-zeroed<sp/>array.</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>to<sp/>process<sp/>one<sp/>whole<sp/>iMCU<sp/>row<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(yoffset<sp/>=<sp/>coef-&gt;MCU_vert_offset;<sp/>yoffset<sp/>&lt;<sp/>coef-&gt;MCU_rows_per_iMCU_row;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yoffset++)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MCU_col_num<sp/>=<sp/>coef-&gt;MCU_ctr;<sp/>MCU_col_num<sp/>&lt;<sp/>cinfo-&gt;MCUs_per_row;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>MCU_col_num++)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Construct<sp/>list<sp/>of<sp/>pointers<sp/>to<sp/>DCT<sp/>blocks<sp/>belonging<sp/>to<sp/>this<sp/>MCU<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blkn<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>index<sp/>of<sp/>current<sp/>DCT<sp/>block<sp/>within<sp/>MCU<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;comps_in_scan;<sp/>ci++)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr<sp/>=<sp/>cinfo-&gt;cur_comp_info[ci];</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>start_col<sp/>=<sp/>MCU_col_num<sp/>*<sp/>compptr-&gt;MCU_width;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(yindex<sp/>=<sp/>0;<sp/>yindex<sp/>&lt;<sp/>compptr-&gt;MCU_height;<sp/>yindex++)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer_ptr<sp/>=<sp/>buffer[ci][yindex+yoffset]<sp/>+<sp/>start_col;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(xindex<sp/>=<sp/>0;<sp/>xindex<sp/>&lt;<sp/>compptr-&gt;MCU_width;<sp/>xindex++)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coef-&gt;MCU_buffer[blkn++]<sp/>=<sp/>buffer_ptr++;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>to<sp/>fetch<sp/>the<sp/>MCU.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>(*cinfo-&gt;entropy-&gt;decode_mcu)<sp/>(cinfo,<sp/>coef-&gt;MCU_buffer))<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Suspension<sp/>forced;<sp/>update<sp/>state<sp/>counters<sp/>and<sp/>exit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>coef-&gt;MCU_vert_offset<sp/>=<sp/>yoffset;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>coef-&gt;MCU_ctr<sp/>=<sp/>MCU_col_num;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>JPEG_SUSPENDED;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Completed<sp/>an<sp/>MCU<sp/>row,<sp/>but<sp/>perhaps<sp/>not<sp/>an<sp/>iMCU<sp/>row<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>coef-&gt;MCU_ctr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Completed<sp/>the<sp/>iMCU<sp/>row,<sp/>advance<sp/>counters<sp/>for<sp/>next<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++(cinfo-&gt;input_iMCU_row)<sp/>&lt;<sp/>cinfo-&gt;total_iMCU_rows)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>start_iMCU_row(cinfo);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>JPEG_ROW_COMPLETED;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Completed<sp/>the<sp/>scan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>(*cinfo-&gt;inputctl-&gt;finish_input_pass)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>JPEG_SCAN_COMPLETED;</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*<sp/>Decompress<sp/>and<sp/>return<sp/>some<sp/>data<sp/>in<sp/>the<sp/>multi-pass<sp/>case.</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/>*<sp/>Always<sp/>attempts<sp/>to<sp/>emit<sp/>one<sp/>fully<sp/>interleaved<sp/>MCU<sp/>row<sp/>(&quot;iMCU&quot;<sp/>row).</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/>*<sp/>Return<sp/>value<sp/>is<sp/>JPEG_ROW_COMPLETED,<sp/>JPEG_SCAN_COMPLETED,<sp/>or<sp/>JPEG_SUSPENDED.</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*<sp/>NB:<sp/>output_buf<sp/>contains<sp/>a<sp/>plane<sp/>for<sp/>each<sp/>component<sp/>in<sp/>image.</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal">decompress_data<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/>JSAMPIMAGE<sp/>output_buf)</highlight></codeline>
<codeline lineno="315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><ref refid="structmy__coef__controller" kindref="compound">my_coef_ptr</ref><sp/>coef<sp/>=<sp/>(<ref refid="structmy__coef__controller" kindref="compound">my_coef_ptr</ref>)<sp/>cinfo-&gt;coef;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>last_iMCU_row<sp/>=<sp/>cinfo-&gt;total_iMCU_rows<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>block_num;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci,<sp/>block_row,<sp/>block_rows;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>JBLOCKARRAY<sp/>buffer;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>JBLOCKROW<sp/>buffer_ptr;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>JSAMPARRAY<sp/>output_ptr;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>output_col;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*compptr;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>inverse_DCT_method_ptr<sp/>inverse_DCT;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Force<sp/>some<sp/>input<sp/>to<sp/>be<sp/>done<sp/>if<sp/>we<sp/>are<sp/>getting<sp/>ahead<sp/>of<sp/>the<sp/>input.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>while<sp/>(cinfo-&gt;input_scan_number<sp/>&lt;<sp/>cinfo-&gt;output_scan_number<sp/>||</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(cinfo-&gt;input_scan_number<sp/>==<sp/>cinfo-&gt;output_scan_number<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;input_iMCU_row<sp/>&lt;=<sp/>cinfo-&gt;output_iMCU_row))<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*cinfo-&gt;inputctl-&gt;consume_input)(cinfo)<sp/>==<sp/>JPEG_SUSPENDED)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>JPEG_SUSPENDED;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>OK,<sp/>output<sp/>from<sp/>the<sp/>virtual<sp/>arrays.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0,<sp/>compptr<sp/>=<sp/>cinfo-&gt;comp_info;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci++,<sp/>compptr++)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>bother<sp/>to<sp/>IDCT<sp/>an<sp/>uninteresting<sp/>component.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>compptr-&gt;component_needed)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Align<sp/>the<sp/>virtual<sp/>buffer<sp/>for<sp/>this<sp/>component.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>(*cinfo-&gt;mem-&gt;access_virt_barray)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>coef-&gt;whole_image[ci],</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;output_iMCU_row<sp/>*<sp/>compptr-&gt;v_samp_factor,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(JDIMENSION)<sp/>compptr-&gt;v_samp_factor,<sp/>FALSE);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Count<sp/>non-dummy<sp/>DCT<sp/>block<sp/>rows<sp/>in<sp/>this<sp/>iMCU<sp/>row.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;output_iMCU_row<sp/>&lt;<sp/>last_iMCU_row)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>block_rows<sp/>=<sp/>compptr-&gt;v_samp_factor;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NB:<sp/>can&apos;t<sp/>use<sp/>last_row_height<sp/>here;<sp/>it<sp/>is<sp/>input-side-dependent!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>block_rows<sp/>=<sp/>(int)<sp/>(compptr-&gt;height_in_blocks<sp/>%<sp/>compptr-&gt;v_samp_factor);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(block_rows<sp/>==<sp/>0)<sp/>block_rows<sp/>=<sp/>compptr-&gt;v_samp_factor;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>inverse_DCT<sp/>=<sp/>cinfo-&gt;idct-&gt;inverse_DCT[ci];</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>output_ptr<sp/>=<sp/>output_buf[ci];</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>over<sp/>all<sp/>DCT<sp/>blocks<sp/>to<sp/>be<sp/>processed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(block_row<sp/>=<sp/>0;<sp/>block_row<sp/>&lt;<sp/>block_rows;<sp/>block_row++)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer_ptr<sp/>=<sp/>buffer[block_row];</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output_col<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(block_num<sp/>=<sp/>0;<sp/>block_num<sp/>&lt;<sp/>compptr-&gt;width_in_blocks;<sp/>block_num++)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>(*inverse_DCT)<sp/>(cinfo,<sp/>compptr,<sp/>(JCOEFPTR)<sp/>buffer_ptr,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_ptr,<sp/>output_col);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer_ptr++;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>output_col<sp/>+=<sp/>compptr-&gt;DCT_scaled_size;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output_ptr<sp/>+=<sp/>compptr-&gt;DCT_scaled_size;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++(cinfo-&gt;output_iMCU_row)<sp/>&lt;<sp/>cinfo-&gt;total_iMCU_rows)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>JPEG_ROW_COMPLETED;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>JPEG_SCAN_COMPLETED;</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>D_MULTISCAN_FILES_SUPPORTED<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="376"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BLOCK_SMOOTHING_SUPPORTED</highlight></codeline>
<codeline lineno="379"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*<sp/>This<sp/>code<sp/>applies<sp/>interblock<sp/>smoothing<sp/>as<sp/>described<sp/>by<sp/>section<sp/>K.8</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*<sp/>of<sp/>the<sp/>JPEG<sp/>standard:<sp/>the<sp/>first<sp/>5<sp/>AC<sp/>coefficients<sp/>are<sp/>estimated<sp/>from</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*<sp/>the<sp/>DC<sp/>values<sp/>of<sp/>a<sp/>DCT<sp/>block<sp/>and<sp/>its<sp/>8<sp/>neighboring<sp/>blocks.</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/>*<sp/>We<sp/>apply<sp/>smoothing<sp/>only<sp/>for<sp/>progressive<sp/>JPEG<sp/>decoding,<sp/>and<sp/>only<sp/>if</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/>*<sp/>the<sp/>coefficients<sp/>it<sp/>can<sp/>estimate<sp/>are<sp/>not<sp/>yet<sp/>known<sp/>to<sp/>full<sp/>precision.</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*<sp/>Determine<sp/>whether<sp/>block<sp/>smoothing<sp/>is<sp/>applicable<sp/>and<sp/>safe.</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/>*<sp/>We<sp/>also<sp/>latch<sp/>the<sp/>current<sp/>states<sp/>of<sp/>the<sp/>coef_bits[]<sp/>entries<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>*<sp/>AC<sp/>coefficients;<sp/>otherwise,<sp/>if<sp/>the<sp/>input<sp/>side<sp/>of<sp/>the<sp/>decompressor</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/>*<sp/>advances<sp/>into<sp/>a<sp/>new<sp/>scan,<sp/>we<sp/>might<sp/>think<sp/>the<sp/>coefficients<sp/>are<sp/>known</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/>*<sp/>more<sp/>accurately<sp/>than<sp/>they<sp/>really<sp/>are.</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal">smoothing_ok<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><ref refid="structmy__coef__controller" kindref="compound">my_coef_ptr</ref><sp/>coef<sp/>=<sp/>(<ref refid="structmy__coef__controller" kindref="compound">my_coef_ptr</ref>)<sp/>cinfo-&gt;coef;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>smoothing_useful<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci,<sp/>coefi;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*compptr;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><ref refid="struct_j_q_u_a_n_t___t_b_l" kindref="compound">JQUANT_TBL</ref><sp/>*<sp/>qtable;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>coef_bits;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>coef_bits_latch;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>if<sp/>(!<sp/>cinfo-&gt;progressive_mode<sp/>||<sp/>cinfo-&gt;coef_bits<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>latch<sp/>area<sp/>if<sp/>not<sp/>already<sp/>done<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coef-&gt;coef_bits_latch<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>coef-&gt;coef_bits_latch<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;num_components<sp/>*</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SAVED_COEFS<sp/>*<sp/>SIZEOF(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>coef_bits_latch<sp/>=<sp/>coef-&gt;coef_bits_latch;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0,<sp/>compptr<sp/>=<sp/>cinfo-&gt;comp_info;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci++,<sp/>compptr++)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>components&apos;<sp/>quantization<sp/>values<sp/>must<sp/>already<sp/>be<sp/>latched.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((qtable<sp/>=<sp/>compptr-&gt;quant_table)<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>DC<sp/>&amp;<sp/>first<sp/>5<sp/>AC<sp/>quantizers<sp/>are<sp/>nonzero<sp/>to<sp/>avoid<sp/>zero-divide.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(coefi<sp/>=<sp/>0;<sp/>coefi<sp/>&lt;=<sp/>5;<sp/>coefi++)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qtable-&gt;quantval[coefi]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DC<sp/>values<sp/>must<sp/>be<sp/>at<sp/>least<sp/>partly<sp/>known<sp/>for<sp/>all<sp/>components.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>coef_bits<sp/>=<sp/>cinfo-&gt;coef_bits[ci];</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coef_bits[0]<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Block<sp/>smoothing<sp/>is<sp/>helpful<sp/>if<sp/>some<sp/>AC<sp/>coefficients<sp/>remain<sp/>inaccurate.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(coefi<sp/>=<sp/>1;<sp/>coefi<sp/>&lt;=<sp/>5;<sp/>coefi++)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>coef_bits_latch[coefi]<sp/>=<sp/>coef_bits[coefi];</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coef_bits[coefi]<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>smoothing_useful<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>coef_bits_latch<sp/>+=<sp/>SAVED_COEFS;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>smoothing_useful;</highlight></codeline>
<codeline lineno="442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/>*<sp/>Variant<sp/>of<sp/>decompress_data<sp/>for<sp/>use<sp/>when<sp/>doing<sp/>block<sp/>smoothing.</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal">decompress_smooth_data<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/>JSAMPIMAGE<sp/>output_buf)</highlight></codeline>
<codeline lineno="451"><highlight class="normal">{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><ref refid="structmy__coef__controller" kindref="compound">my_coef_ptr</ref><sp/>coef<sp/>=<sp/>(<ref refid="structmy__coef__controller" kindref="compound">my_coef_ptr</ref>)<sp/>cinfo-&gt;coef;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>last_iMCU_row<sp/>=<sp/>cinfo-&gt;total_iMCU_rows<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>block_num,<sp/>last_block_column;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci,<sp/>block_row,<sp/>block_rows,<sp/>access_rows;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>JBLOCKARRAY<sp/>buffer;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>JBLOCKROW<sp/>buffer_ptr,<sp/>prev_block_row,<sp/>next_block_row;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>JSAMPARRAY<sp/>output_ptr;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>output_col;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*compptr;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>inverse_DCT_method_ptr<sp/>inverse_DCT;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>first_row,<sp/>last_row;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>JBLOCK<sp/>workspace;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*coef_bits;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><ref refid="struct_j_q_u_a_n_t___t_b_l" kindref="compound">JQUANT_TBL</ref><sp/>*quanttbl;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>INT32<sp/>Q00,Q01,Q02,Q10,Q11,Q20,<sp/>num;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DC1,DC2,DC3,DC4,DC5,DC6,DC7,DC8,DC9;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Al,<sp/>pred;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Force<sp/>some<sp/>input<sp/>to<sp/>be<sp/>done<sp/>if<sp/>we<sp/>are<sp/>getting<sp/>ahead<sp/>of<sp/>the<sp/>input.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>while<sp/>(cinfo-&gt;input_scan_number<sp/>&lt;=<sp/>cinfo-&gt;output_scan_number<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>!<sp/>cinfo-&gt;inputctl-&gt;eoi_reached)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;input_scan_number<sp/>==<sp/>cinfo-&gt;output_scan_number)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>input<sp/>is<sp/>working<sp/>on<sp/>current<sp/>scan,<sp/>we<sp/>ordinarily<sp/>want<sp/>it<sp/>to</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>have<sp/>completed<sp/>the<sp/>current<sp/>row.<sp/><sp/>But<sp/>if<sp/>input<sp/>scan<sp/>is<sp/>DC,</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>want<sp/>it<sp/>to<sp/>keep<sp/>one<sp/>row<sp/>ahead<sp/>so<sp/>that<sp/>next<sp/>block<sp/>row&apos;s<sp/>DC</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>values<sp/>are<sp/>up<sp/>to<sp/>date.</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>delta<sp/>=<sp/>(cinfo-&gt;Ss<sp/>==<sp/>0)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;input_iMCU_row<sp/>&gt;<sp/>cinfo-&gt;output_iMCU_row+delta)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*cinfo-&gt;inputctl-&gt;consume_input)(cinfo)<sp/>==<sp/>JPEG_SUSPENDED)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>JPEG_SUSPENDED;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>OK,<sp/>output<sp/>from<sp/>the<sp/>virtual<sp/>arrays.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0,<sp/>compptr<sp/>=<sp/>cinfo-&gt;comp_info;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci++,<sp/>compptr++)<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>bother<sp/>to<sp/>IDCT<sp/>an<sp/>uninteresting<sp/>component.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>compptr-&gt;component_needed)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Count<sp/>non-dummy<sp/>DCT<sp/>block<sp/>rows<sp/>in<sp/>this<sp/>iMCU<sp/>row.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;output_iMCU_row<sp/>&lt;<sp/>last_iMCU_row)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>block_rows<sp/>=<sp/>compptr-&gt;v_samp_factor;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>access_rows<sp/>=<sp/>block_rows<sp/>*<sp/>2;<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>and<sp/>next<sp/>iMCU<sp/>row<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_row<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NB:<sp/>can&apos;t<sp/>use<sp/>last_row_height<sp/>here;<sp/>it<sp/>is<sp/>input-side-dependent!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>block_rows<sp/>=<sp/>(int)<sp/>(compptr-&gt;height_in_blocks<sp/>%<sp/>compptr-&gt;v_samp_factor);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(block_rows<sp/>==<sp/>0)<sp/>block_rows<sp/>=<sp/>compptr-&gt;v_samp_factor;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>access_rows<sp/>=<sp/>block_rows;<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>iMCU<sp/>row<sp/>only<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_row<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Align<sp/>the<sp/>virtual<sp/>buffer<sp/>for<sp/>this<sp/>component.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;output_iMCU_row<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>access_rows<sp/>+=<sp/>compptr-&gt;v_samp_factor;<sp/></highlight><highlight class="comment">/*<sp/>prior<sp/>iMCU<sp/>row<sp/>too<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>(*cinfo-&gt;mem-&gt;access_virt_barray)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>coef-&gt;whole_image[ci],</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(cinfo-&gt;output_iMCU_row<sp/>-<sp/>1)<sp/>*<sp/>compptr-&gt;v_samp_factor,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(JDIMENSION)<sp/>access_rows,<sp/>FALSE);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/>compptr-&gt;v_samp_factor;<sp/></highlight><highlight class="comment">/*<sp/>point<sp/>to<sp/>current<sp/>iMCU<sp/>row<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>first_row<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>(*cinfo-&gt;mem-&gt;access_virt_barray)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>coef-&gt;whole_image[ci],</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(JDIMENSION)<sp/>0,<sp/>(JDIMENSION)<sp/>access_rows,<sp/>FALSE);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>first_row<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fetch<sp/>component-dependent<sp/>info<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>coef_bits<sp/>=<sp/>coef-&gt;coef_bits_latch<sp/>+<sp/>(ci<sp/>*<sp/>SAVED_COEFS);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>quanttbl<sp/>=<sp/>compptr-&gt;quant_table;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>Q00<sp/>=<sp/>quanttbl-&gt;quantval[0];</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>Q01<sp/>=<sp/>quanttbl-&gt;quantval[1];</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>Q10<sp/>=<sp/>quanttbl-&gt;quantval[2];</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>Q20<sp/>=<sp/>quanttbl-&gt;quantval[3];</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>Q11<sp/>=<sp/>quanttbl-&gt;quantval[4];</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>Q02<sp/>=<sp/>quanttbl-&gt;quantval[5];</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>inverse_DCT<sp/>=<sp/>cinfo-&gt;idct-&gt;inverse_DCT[ci];</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>output_ptr<sp/>=<sp/>output_buf[ci];</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>over<sp/>all<sp/>DCT<sp/>blocks<sp/>to<sp/>be<sp/>processed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(block_row<sp/>=<sp/>0;<sp/>block_row<sp/>&lt;<sp/>block_rows;<sp/>block_row++)<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer_ptr<sp/>=<sp/>buffer[block_row];</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first_row<sp/>&amp;&amp;<sp/>block_row<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_block_row<sp/>=<sp/>buffer_ptr;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_block_row<sp/>=<sp/>buffer[block_row-1];</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_row<sp/>&amp;&amp;<sp/>block_row<sp/>==<sp/>block_rows-1)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>next_block_row<sp/>=<sp/>buffer_ptr;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>next_block_row<sp/>=<sp/>buffer[block_row+1];</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>fetch<sp/>the<sp/>surrounding<sp/>DC<sp/>values<sp/>using<sp/>a<sp/>sliding-register<sp/>approach.</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Initialize<sp/>all<sp/>nine<sp/>here<sp/>so<sp/>as<sp/>to<sp/>do<sp/>the<sp/>right<sp/>thing<sp/>on<sp/>narrow<sp/>pics.</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DC1<sp/>=<sp/>DC2<sp/>=<sp/>DC3<sp/>=<sp/>(int)<sp/>prev_block_row[0][0];</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DC4<sp/>=<sp/>DC5<sp/>=<sp/>DC6<sp/>=<sp/>(int)<sp/>buffer_ptr[0][0];</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DC7<sp/>=<sp/>DC8<sp/>=<sp/>DC9<sp/>=<sp/>(int)<sp/>next_block_row[0][0];</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output_col<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_block_column<sp/>=<sp/>compptr-&gt;width_in_blocks<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(block_num<sp/>=<sp/>0;<sp/>block_num<sp/>&lt;=<sp/>last_block_column;<sp/>block_num++)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fetch<sp/>current<sp/>DCT<sp/>block<sp/>into<sp/>workspace<sp/>so<sp/>we<sp/>can<sp/>modify<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>jcopy_block_row(buffer_ptr,<sp/>(JBLOCKROW)<sp/>workspace,<sp/>(JDIMENSION)<sp/>1);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>DC<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(block_num<sp/>&lt;<sp/>last_block_column)<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DC3<sp/>=<sp/>(int)<sp/>prev_block_row[1][0];</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DC6<sp/>=<sp/>(int)<sp/>buffer_ptr[1][0];</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DC9<sp/>=<sp/>(int)<sp/>next_block_row[1][0];</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>coefficient<sp/>estimates<sp/>per<sp/>K.8.</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>An<sp/>estimate<sp/>is<sp/>applied<sp/>only<sp/>if<sp/>coefficient<sp/>is<sp/>still<sp/>zero,</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>is<sp/>not<sp/>known<sp/>to<sp/>be<sp/>fully<sp/>accurate.</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AC01<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((Al=coef_bits[1])<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>workspace[1]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>=<sp/>36<sp/>*<sp/>Q00<sp/>*<sp/>(DC4<sp/>-<sp/>DC6);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>(int)<sp/>(((Q01&lt;&lt;7)<sp/>+<sp/>num)<sp/>/<sp/>(Q01&lt;&lt;8));</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Al<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>pred<sp/>&gt;=<sp/>(1&lt;&lt;Al))</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>(1&lt;&lt;Al)-1;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>(int)<sp/>(((Q01&lt;&lt;7)<sp/>-<sp/>num)<sp/>/<sp/>(Q01&lt;&lt;8));</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Al<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>pred<sp/>&gt;=<sp/>(1&lt;&lt;Al))</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>(1&lt;&lt;Al)-1;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>-pred;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>workspace[1]<sp/>=<sp/>(JCOEF)<sp/>pred;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AC10<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((Al=coef_bits[2])<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>workspace[8]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>=<sp/>36<sp/>*<sp/>Q00<sp/>*<sp/>(DC2<sp/>-<sp/>DC8);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>(int)<sp/>(((Q10&lt;&lt;7)<sp/>+<sp/>num)<sp/>/<sp/>(Q10&lt;&lt;8));</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Al<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>pred<sp/>&gt;=<sp/>(1&lt;&lt;Al))</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>(1&lt;&lt;Al)-1;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>(int)<sp/>(((Q10&lt;&lt;7)<sp/>-<sp/>num)<sp/>/<sp/>(Q10&lt;&lt;8));</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Al<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>pred<sp/>&gt;=<sp/>(1&lt;&lt;Al))</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>(1&lt;&lt;Al)-1;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>-pred;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>workspace[8]<sp/>=<sp/>(JCOEF)<sp/>pred;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AC20<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((Al=coef_bits[3])<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>workspace[16]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>=<sp/>9<sp/>*<sp/>Q00<sp/>*<sp/>(DC2<sp/>+<sp/>DC8<sp/>-<sp/>2*DC5);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>(int)<sp/>(((Q20&lt;&lt;7)<sp/>+<sp/>num)<sp/>/<sp/>(Q20&lt;&lt;8));</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Al<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>pred<sp/>&gt;=<sp/>(1&lt;&lt;Al))</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>(1&lt;&lt;Al)-1;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>(int)<sp/>(((Q20&lt;&lt;7)<sp/>-<sp/>num)<sp/>/<sp/>(Q20&lt;&lt;8));</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Al<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>pred<sp/>&gt;=<sp/>(1&lt;&lt;Al))</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>(1&lt;&lt;Al)-1;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>-pred;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>workspace[16]<sp/>=<sp/>(JCOEF)<sp/>pred;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AC11<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((Al=coef_bits[4])<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>workspace[9]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>=<sp/>5<sp/>*<sp/>Q00<sp/>*<sp/>(DC1<sp/>-<sp/>DC3<sp/>-<sp/>DC7<sp/>+<sp/>DC9);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>(int)<sp/>(((Q11&lt;&lt;7)<sp/>+<sp/>num)<sp/>/<sp/>(Q11&lt;&lt;8));</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Al<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>pred<sp/>&gt;=<sp/>(1&lt;&lt;Al))</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>(1&lt;&lt;Al)-1;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>(int)<sp/>(((Q11&lt;&lt;7)<sp/>-<sp/>num)<sp/>/<sp/>(Q11&lt;&lt;8));</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Al<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>pred<sp/>&gt;=<sp/>(1&lt;&lt;Al))</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>(1&lt;&lt;Al)-1;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>-pred;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>workspace[9]<sp/>=<sp/>(JCOEF)<sp/>pred;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AC02<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((Al=coef_bits[5])<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>workspace[2]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>=<sp/>9<sp/>*<sp/>Q00<sp/>*<sp/>(DC4<sp/>+<sp/>DC6<sp/>-<sp/>2*DC5);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>(int)<sp/>(((Q02&lt;&lt;7)<sp/>+<sp/>num)<sp/>/<sp/>(Q02&lt;&lt;8));</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Al<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>pred<sp/>&gt;=<sp/>(1&lt;&lt;Al))</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>(1&lt;&lt;Al)-1;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>(int)<sp/>(((Q02&lt;&lt;7)<sp/>-<sp/>num)<sp/>/<sp/>(Q02&lt;&lt;8));</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Al<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>pred<sp/>&gt;=<sp/>(1&lt;&lt;Al))</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>(1&lt;&lt;Al)-1;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>-pred;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>workspace[2]<sp/>=<sp/>(JCOEF)<sp/>pred;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>OK,<sp/>do<sp/>the<sp/>IDCT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>(*inverse_DCT)<sp/>(cinfo,<sp/>compptr,<sp/>(JCOEFPTR)<sp/>workspace,</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_ptr,<sp/>output_col);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Advance<sp/>for<sp/>next<sp/>column<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>DC1<sp/>=<sp/>DC2;<sp/>DC2<sp/>=<sp/>DC3;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>DC4<sp/>=<sp/>DC5;<sp/>DC5<sp/>=<sp/>DC6;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>DC7<sp/>=<sp/>DC8;<sp/>DC8<sp/>=<sp/>DC9;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer_ptr++,<sp/>prev_block_row++,<sp/>next_block_row++;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>output_col<sp/>+=<sp/>compptr-&gt;DCT_scaled_size;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output_ptr<sp/>+=<sp/>compptr-&gt;DCT_scaled_size;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++(cinfo-&gt;output_iMCU_row)<sp/>&lt;<sp/>cinfo-&gt;total_iMCU_rows)</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>JPEG_ROW_COMPLETED;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>JPEG_SCAN_COMPLETED;</highlight></codeline>
<codeline lineno="655"><highlight class="normal">}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BLOCK_SMOOTHING_SUPPORTED<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="658"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="661"><highlight class="comment"><sp/>*<sp/>Initialize<sp/>coefficient<sp/>buffer<sp/>controller.</highlight></codeline>
<codeline lineno="662"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal">jinit_d_coef_controller<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>need_full_buffer)</highlight></codeline>
<codeline lineno="666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><ref refid="structmy__coef__controller" kindref="compound">my_coef_ptr</ref><sp/>coef;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>coef<sp/>=<sp/>(<ref refid="structmy__coef__controller" kindref="compound">my_coef_ptr</ref>)</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SIZEOF(<ref refid="structmy__coef__controller" kindref="compound">my_coef_controller</ref>));</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>cinfo-&gt;coef<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__d__coef__controller" kindref="compound">jpeg_d_coef_controller</ref><sp/>*)<sp/>coef;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>coef-&gt;pub.start_input_pass<sp/>=<sp/>start_input_pass;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>coef-&gt;pub.start_output_pass<sp/>=<sp/>start_output_pass;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BLOCK_SMOOTHING_SUPPORTED</highlight></codeline>
<codeline lineno="676"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>coef-&gt;coef_bits_latch<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="678"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>the<sp/>coefficient<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(need_full_buffer)<sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>D_MULTISCAN_FILES_SUPPORTED</highlight></codeline>
<codeline lineno="682"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>a<sp/>full-image<sp/>virtual<sp/>array<sp/>for<sp/>each<sp/>component,<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>padded<sp/>to<sp/>a<sp/>multiple<sp/>of<sp/>samp_factor<sp/>DCT<sp/>blocks<sp/>in<sp/>each<sp/>direction.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note<sp/>we<sp/>ask<sp/>for<sp/>a<sp/>pre-zeroed<sp/>array.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci,<sp/>access_rows;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*compptr;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0,<sp/>compptr<sp/>=<sp/>cinfo-&gt;comp_info;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ci++,<sp/>compptr++)<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>access_rows<sp/>=<sp/>compptr-&gt;v_samp_factor;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BLOCK_SMOOTHING_SUPPORTED</highlight></codeline>
<codeline lineno="692"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>block<sp/>smoothing<sp/>could<sp/>be<sp/>used,<sp/>need<sp/>a<sp/>bigger<sp/>window<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;progressive_mode)</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>access_rows<sp/>*=<sp/>3;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="696"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>coef-&gt;whole_image[ci]<sp/>=<sp/>(*cinfo-&gt;mem-&gt;request_virt_barray)</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,<sp/>TRUE,</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(JDIMENSION)<sp/>jround_up((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>compptr-&gt;width_in_blocks,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(long)<sp/>compptr-&gt;h_samp_factor),</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(JDIMENSION)<sp/>jround_up((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>compptr-&gt;height_in_blocks,</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(long)<sp/>compptr-&gt;v_samp_factor),</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(JDIMENSION)<sp/>access_rows);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>coef-&gt;pub.consume_data<sp/>=<sp/>consume_data;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>coef-&gt;pub.decompress_data<sp/>=<sp/>decompress_data;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>coef-&gt;pub.coef_arrays<sp/>=<sp/>coef-&gt;whole_image;<sp/></highlight><highlight class="comment">/*<sp/>link<sp/>to<sp/>virtual<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="708"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_NOT_COMPILED);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="710"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>only<sp/>need<sp/>a<sp/>single-MCU<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>JBLOCKROW<sp/>buffer;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>(JBLOCKROW)</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_large)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D_MAX_BLOCKS_IN_MCU<sp/>*<sp/>SIZEOF(JBLOCK));</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>D_MAX_BLOCKS_IN_MCU;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>coef-&gt;MCU_buffer[i]<sp/>=<sp/>buffer<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>coef-&gt;pub.consume_data<sp/>=<sp/>dummy_consume_data;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>coef-&gt;pub.decompress_data<sp/>=<sp/>decompress_onepass;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>coef-&gt;pub.coef_arrays<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">/*<sp/>flag<sp/>for<sp/>no<sp/>virtual<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcoefct.c"/>
  </compounddef>
</doxygen>
