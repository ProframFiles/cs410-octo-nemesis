<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="jdcolor_8c" kind="file">
    <compoundname>jdcolor.c</compoundname>
    <includes refid="jinclude_8h" local="yes">jinclude.h</includes>
    <includes refid="jpeglib_8h" local="yes">jpeglib.h</includes>
    <innerclass refid="structmy__color__deconverter" prot="public">my_color_deconverter</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="jdcolor_8c_1ad5c3cdfae3019b8223973041a2a1304b" prot="public" static="no">
        <name>JPEG_INTERNALS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcolor.c" line="11" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcolor.c" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jdcolor_8c_1a61bda43ef3f3e965ecbb37f7cb34edb4" prot="public" static="no">
        <name>SCALEBITS</name>
        <initializer>16	/* speediest right-shift on some machines */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcolor.c" line="60" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcolor.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jdcolor_8c_1ab912dc6f2915fe1226a30465776e2015" prot="public" static="no">
        <name>ONE_HALF</name>
        <initializer>((INT32) 1 &lt;&lt; (SCALEBITS-1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcolor.c" line="61" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcolor.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jdcolor_8c_1a740431a9a1d25e39e670cd5f48454ce4" prot="public" static="no">
        <name>FIX</name>
        <param><defname>x</defname></param>
        <initializer>((INT32) ((x) * (1L&lt;&lt;SCALEBITS) + 0.5))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcolor.c" line="62" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcolor.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="jdcolor_8c_1a9b87b96df3e89c5d0841dee8c4371eca" prot="public" static="no">
        <type><ref refid="structmy__color__deconverter" kindref="compound">my_color_deconverter</ref> *</type>
        <definition>typedef my_color_deconverter* my_cconvert_ptr</definition>
        <argsstring></argsstring>
        <name>my_cconvert_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcolor.c" line="28" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcolor.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="jdcolor_8c_1a2abc53f77e31db1655f975ebfd58e0a5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void build_ycc_rgb_table</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>build_ycc_rgb_table</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcolor.c" line="70" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcolor.c" bodystart="70" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="jdcolor_8c_1a43f7e7001c6ba40dcd5f2cdaea034217" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ycc_rgb_convert</definition>
        <argsstring>(j_decompress_ptr cinfo, JSAMPIMAGE input_buf, JDIMENSION input_row, JSAMPARRAY output_buf, int num_rows)</argsstring>
        <name>ycc_rgb_convert</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type>JSAMPIMAGE</type>
          <declname>input_buf</declname>
        </param>
        <param>
          <type>JDIMENSION</type>
          <declname>input_row</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>output_buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_rows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcolor.c" line="120" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcolor.c" bodystart="120" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="jdcolor_8c_1ab19e7e5b05f74f5b8af17697f2aab110" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void null_convert</definition>
        <argsstring>(j_decompress_ptr cinfo, JSAMPIMAGE input_buf, JDIMENSION input_row, JSAMPARRAY output_buf, int num_rows)</argsstring>
        <name>null_convert</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type>JSAMPIMAGE</type>
          <declname>input_buf</declname>
        </param>
        <param>
          <type>JDIMENSION</type>
          <declname>input_row</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>output_buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_rows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcolor.c" line="169" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcolor.c" bodystart="169" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="jdcolor_8c_1a321a12f24865cda1aa7bb5422c7ceb9d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void grayscale_convert</definition>
        <argsstring>(j_decompress_ptr cinfo, JSAMPIMAGE input_buf, JDIMENSION input_row, JSAMPARRAY output_buf, int num_rows)</argsstring>
        <name>grayscale_convert</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type>JSAMPIMAGE</type>
          <declname>input_buf</declname>
        </param>
        <param>
          <type>JDIMENSION</type>
          <declname>input_row</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>output_buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_rows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcolor.c" line="201" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcolor.c" bodystart="201" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="jdcolor_8c_1afe8cd8e95d26a6a70f7863e551ff3aff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ycck_cmyk_convert</definition>
        <argsstring>(j_decompress_ptr cinfo, JSAMPIMAGE input_buf, JDIMENSION input_row, JSAMPARRAY output_buf, int num_rows)</argsstring>
        <name>ycck_cmyk_convert</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type>JSAMPIMAGE</type>
          <declname>input_buf</declname>
        </param>
        <param>
          <type>JDIMENSION</type>
          <declname>input_row</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>output_buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_rows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcolor.c" line="218" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcolor.c" bodystart="218" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="jdcolor_8c_1a74983ab68748a63c45511e75596a2ea8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void start_pass_dcolor</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>start_pass_dcolor</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcolor.c" line="266" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcolor.c" bodystart="266" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="jdcolor_8c_1a42aeebeb1e0b4024f57d58fb6184b569" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jinit_color_deconverter</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>jinit_color_deconverter</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcolor.c" line="277" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcolor.c" bodystart="277" bodyend="367"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>jdcolor.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1991-1995,<sp/>Thomas<sp/>G.<sp/>Lane.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Independent<sp/>JPEG<sp/>Group&apos;s<sp/>software.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>conditions<sp/>of<sp/>distribution<sp/>and<sp/>use,<sp/>see<sp/>the<sp/>accompanying<sp/>README<sp/>file.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>output<sp/>colorspace<sp/>conversion<sp/>routines.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JPEG_INTERNALS</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;jinclude.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jpeglib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>subobject<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="structmy__color__deconverter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__color__deconverter" kindref="compound">jpeg_color_deconverter</ref><sp/>pub;<sp/></highlight><highlight class="comment">/*<sp/>public<sp/>fields<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Private<sp/>state<sp/>for<sp/>YCC-&gt;RGB<sp/>conversion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>Cr_r_tab;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>=&gt;<sp/>table<sp/>for<sp/>Cr<sp/>to<sp/>R<sp/>conversion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>Cb_b_tab;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>=&gt;<sp/>table<sp/>for<sp/>Cb<sp/>to<sp/>B<sp/>conversion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>INT32<sp/>*<sp/>Cr_g_tab;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>=&gt;<sp/>table<sp/>for<sp/>Cr<sp/>to<sp/>G<sp/>conversion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>INT32<sp/>*<sp/>Cb_g_tab;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>=&gt;<sp/>table<sp/>for<sp/>Cb<sp/>to<sp/>G<sp/>conversion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">}<sp/><ref refid="structmy__color__deconverter" kindref="compound">my_color_deconverter</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structmy__color__deconverter" kindref="compound">my_color_deconverter</ref><sp/>*<sp/><ref refid="structmy__color__converter" kindref="compound">my_cconvert_ptr</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/****************<sp/>YCbCr<sp/>-&gt;<sp/>RGB<sp/>conversion:<sp/>most<sp/>common<sp/>case<sp/>**************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>YCbCr<sp/>is<sp/>defined<sp/>per<sp/>CCIR<sp/>601-1,<sp/>except<sp/>that<sp/>Cb<sp/>and<sp/>Cr<sp/>are</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>normalized<sp/>to<sp/>the<sp/>range<sp/>0..MAXJSAMPLE<sp/>rather<sp/>than<sp/>-0.5<sp/>..<sp/>0.5.</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>The<sp/>conversion<sp/>equations<sp/>to<sp/>be<sp/>implemented<sp/>are<sp/>therefore</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/>R<sp/>=<sp/>Y<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>1.40200<sp/>*<sp/>Cr</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/>G<sp/>=<sp/>Y<sp/>-<sp/>0.34414<sp/>*<sp/>Cb<sp/>-<sp/>0.71414<sp/>*<sp/>Cr</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/>B<sp/>=<sp/>Y<sp/>+<sp/>1.77200<sp/>*<sp/>Cb</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>where<sp/>Cb<sp/>and<sp/>Cr<sp/>represent<sp/>the<sp/>incoming<sp/>values<sp/>less<sp/>CENTERJSAMPLE.</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>(These<sp/>numbers<sp/>are<sp/>derived<sp/>from<sp/>TIFF<sp/>6.0<sp/>section<sp/>21,<sp/>dated<sp/>3-June-92.)</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>To<sp/>avoid<sp/>floating-point<sp/>arithmetic,<sp/>we<sp/>represent<sp/>the<sp/>fractional<sp/>constants</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>as<sp/>integers<sp/>scaled<sp/>up<sp/>by<sp/>2^16<sp/>(about<sp/>4<sp/>digits<sp/>precision);<sp/>we<sp/>have<sp/>to<sp/>divide</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>the<sp/>products<sp/>by<sp/>2^16,<sp/>with<sp/>appropriate<sp/>rounding,<sp/>to<sp/>get<sp/>the<sp/>correct<sp/>answer.</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>Notice<sp/>that<sp/>Y,<sp/>being<sp/>an<sp/>integral<sp/>input,<sp/>does<sp/>not<sp/>contribute<sp/>any<sp/>fraction</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>so<sp/>it<sp/>need<sp/>not<sp/>participate<sp/>in<sp/>the<sp/>rounding.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>For<sp/>even<sp/>more<sp/>speed,<sp/>we<sp/>avoid<sp/>doing<sp/>any<sp/>multiplications<sp/>in<sp/>the<sp/>inner<sp/>loop</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>by<sp/>precalculating<sp/>the<sp/>constants<sp/>times<sp/>Cb<sp/>and<sp/>Cr<sp/>for<sp/>all<sp/>possible<sp/>values.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>For<sp/>8-bit<sp/>JSAMPLEs<sp/>this<sp/>is<sp/>very<sp/>reasonable<sp/>(only<sp/>256<sp/>entries<sp/>per<sp/>table);</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>for<sp/>12-bit<sp/>samples<sp/>it<sp/>is<sp/>still<sp/>acceptable.<sp/><sp/>It&apos;s<sp/>not<sp/>very<sp/>reasonable<sp/>for</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>16-bit<sp/>samples,<sp/>but<sp/>if<sp/>you<sp/>want<sp/>lossless<sp/>storage<sp/>you<sp/>shouldn&apos;t<sp/>be<sp/>changing</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>colorspace<sp/>anyway.</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>The<sp/>Cr=&gt;R<sp/>and<sp/>Cb=&gt;B<sp/>values<sp/>can<sp/>be<sp/>rounded<sp/>to<sp/>integers<sp/>in<sp/>advance;<sp/>the</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>values<sp/>for<sp/>the<sp/>G<sp/>calculation<sp/>are<sp/>left<sp/>scaled<sp/>up,<sp/>since<sp/>we<sp/>must<sp/>add<sp/>them</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>together<sp/>before<sp/>rounding.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCALEBITS<sp/><sp/><sp/>16<sp/><sp/></highlight><highlight class="comment">/*<sp/>speediest<sp/>right-shift<sp/>on<sp/>some<sp/>machines<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ONE_HALF<sp/><sp/><sp/><sp/>((INT32)<sp/>1<sp/>&lt;&lt;<sp/>(SCALEBITS-1))</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>FIX(x)<sp/><sp/><sp/><sp/><sp/><sp/>((INT32)<sp/>((x)<sp/>*<sp/>(1L&lt;&lt;SCALEBITS)<sp/>+<sp/>0.5))</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>Initialize<sp/>tables<sp/>for<sp/>YCC-&gt;RGB<sp/>colorspace<sp/>conversion.</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">build_ycc_rgb_table<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="structmy__color__converter" kindref="compound">my_cconvert_ptr</ref><sp/>cconvert<sp/>=<sp/>(<ref refid="structmy__color__converter" kindref="compound">my_cconvert_ptr</ref>)<sp/>cinfo-&gt;cconvert;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>INT32<sp/>x;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>SHIFT_TEMPS</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>cconvert-&gt;Cr_r_tab<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MAXJSAMPLE+1)<sp/>*<sp/>SIZEOF(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>cconvert-&gt;Cb_b_tab<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MAXJSAMPLE+1)<sp/>*<sp/>SIZEOF(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>cconvert-&gt;Cr_g_tab<sp/>=<sp/>(INT32<sp/>*)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MAXJSAMPLE+1)<sp/>*<sp/>SIZEOF(INT32));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>cconvert-&gt;Cb_g_tab<sp/>=<sp/>(INT32<sp/>*)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MAXJSAMPLE+1)<sp/>*<sp/>SIZEOF(INT32));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>x<sp/>=<sp/>-CENTERJSAMPLE;<sp/>i<sp/>&lt;=<sp/>MAXJSAMPLE;<sp/>i++,<sp/>x++)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i<sp/>is<sp/>the<sp/>actual<sp/>input<sp/>pixel<sp/>value,<sp/>in<sp/>the<sp/>range<sp/>0..MAXJSAMPLE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>Cb<sp/>or<sp/>Cr<sp/>value<sp/>we<sp/>are<sp/>thinking<sp/>of<sp/>is<sp/>x<sp/>=<sp/>i<sp/>-<sp/>CENTERJSAMPLE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cr=&gt;R<sp/>value<sp/>is<sp/>nearest<sp/>int<sp/>to<sp/>1.40200<sp/>*<sp/>x<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>cconvert-&gt;Cr_r_tab[i]<sp/>=<sp/>(int)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RIGHT_SHIFT(FIX(1.40200)<sp/>*<sp/>x<sp/>+<sp/>ONE_HALF,<sp/>SCALEBITS);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cb=&gt;B<sp/>value<sp/>is<sp/>nearest<sp/>int<sp/>to<sp/>1.77200<sp/>*<sp/>x<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>cconvert-&gt;Cb_b_tab[i]<sp/>=<sp/>(int)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RIGHT_SHIFT(FIX(1.77200)<sp/>*<sp/>x<sp/>+<sp/>ONE_HALF,<sp/>SCALEBITS);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cr=&gt;G<sp/>value<sp/>is<sp/>scaled-up<sp/>-0.71414<sp/>*<sp/>x<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>cconvert-&gt;Cr_g_tab[i]<sp/>=<sp/>(-<sp/>FIX(0.71414))<sp/>*<sp/>x;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cb=&gt;G<sp/>value<sp/>is<sp/>scaled-up<sp/>-0.34414<sp/>*<sp/>x<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>also<sp/>add<sp/>in<sp/>ONE_HALF<sp/>so<sp/>that<sp/>need<sp/>not<sp/>do<sp/>it<sp/>in<sp/>inner<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>cconvert-&gt;Cb_g_tab[i]<sp/>=<sp/>(-<sp/>FIX(0.34414))<sp/>*<sp/>x<sp/>+<sp/>ONE_HALF;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*<sp/>Convert<sp/>some<sp/>rows<sp/>of<sp/>samples<sp/>to<sp/>the<sp/>output<sp/>colorspace.</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>Note<sp/>that<sp/>we<sp/>change<sp/>from<sp/>noninterleaved,<sp/>one-plane-per-component<sp/>format</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/>to<sp/>interleaved-pixel<sp/>format.<sp/><sp/>The<sp/>output<sp/>buffer<sp/>is<sp/>therefore<sp/>three<sp/>times</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/>as<sp/>wide<sp/>as<sp/>the<sp/>input<sp/>buffer.</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>A<sp/>starting<sp/>row<sp/>offset<sp/>is<sp/>provided<sp/>only<sp/>for<sp/>the<sp/>input<sp/>buffer.<sp/><sp/>The<sp/>caller</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/>can<sp/>easily<sp/>adjust<sp/>the<sp/>passed<sp/>output_buf<sp/>value<sp/>to<sp/>accommodate<sp/>any<sp/>row</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>offset<sp/>required<sp/>on<sp/>that<sp/>side.</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">ycc_rgb_convert<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPIMAGE<sp/>input_buf,<sp/>JDIMENSION<sp/>input_row,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>output_buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_rows)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="structmy__color__converter" kindref="compound">my_cconvert_ptr</ref><sp/>cconvert<sp/>=<sp/>(<ref refid="structmy__color__converter" kindref="compound">my_cconvert_ptr</ref>)<sp/>cinfo-&gt;cconvert;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/>cb,<sp/>cr;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JSAMPROW<sp/>outptr;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JSAMPROW<sp/>inptr0,<sp/>inptr1,<sp/>inptr2;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JDIMENSION<sp/>col;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>num_cols<sp/>=<sp/>cinfo-&gt;output_width;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>these<sp/>pointers<sp/>into<sp/>registers<sp/>if<sp/>possible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JSAMPLE<sp/>*<sp/>range_limit<sp/>=<sp/>cinfo-&gt;sample_range_limit;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>Crrtab<sp/>=<sp/>cconvert-&gt;Cr_r_tab;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>Cbbtab<sp/>=<sp/>cconvert-&gt;Cb_b_tab;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>INT32<sp/>*<sp/>Crgtab<sp/>=<sp/>cconvert-&gt;Cr_g_tab;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>INT32<sp/>*<sp/>Cbgtab<sp/>=<sp/>cconvert-&gt;Cb_g_tab;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>SHIFT_TEMPS</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>while<sp/>(--num_rows<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>inptr0<sp/>=<sp/>input_buf[0][input_row];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>inptr1<sp/>=<sp/>input_buf[1][input_row];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>inptr2<sp/>=<sp/>input_buf[2][input_row];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>input_row++;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>outptr<sp/>=<sp/>*output_buf++;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>num_cols;<sp/>col++)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/><sp/>=<sp/>GETJSAMPLE(inptr0[col]);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb<sp/>=<sp/>GETJSAMPLE(inptr1[col]);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cr<sp/>=<sp/>GETJSAMPLE(inptr2[col]);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Range-limiting<sp/>is<sp/>essential<sp/>due<sp/>to<sp/>noise<sp/>introduced<sp/>by<sp/>DCT<sp/>losses.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outptr[RGB_RED]<sp/>=<sp/><sp/><sp/>range_limit[y<sp/>+<sp/>Crrtab[cr]];</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outptr[RGB_GREEN]<sp/>=<sp/>range_limit[y<sp/>+</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int)<sp/>RIGHT_SHIFT(Cbgtab[cb]<sp/>+<sp/>Crgtab[cr],</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SCALEBITS))];</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outptr[RGB_BLUE]<sp/>=<sp/><sp/>range_limit[y<sp/>+<sp/>Cbbtab[cb]];</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outptr<sp/>+=<sp/>RGB_PIXELSIZE;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">/****************<sp/>Cases<sp/>other<sp/>than<sp/>YCbCr<sp/>-&gt;<sp/>RGB<sp/>**************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*<sp/>Color<sp/>conversion<sp/>for<sp/>no<sp/>colorspace<sp/>change:<sp/>just<sp/>copy<sp/>the<sp/>data,</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*<sp/>converting<sp/>from<sp/>separate-planes<sp/>to<sp/>interleaved<sp/>representation.</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">null_convert<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPIMAGE<sp/>input_buf,<sp/>JDIMENSION<sp/>input_row,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>output_buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_rows)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JSAMPROW<sp/>inptr,<sp/>outptr;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JDIMENSION<sp/>count;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_components<sp/>=<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>num_cols<sp/>=<sp/>cinfo-&gt;output_width;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--num_rows<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>num_components;<sp/>ci++)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inptr<sp/>=<sp/>input_buf[ci][input_row];</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outptr<sp/>=<sp/>output_buf[0]<sp/>+<sp/>ci;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(count<sp/>=<sp/>num_cols;<sp/>count<sp/>&gt;<sp/>0;<sp/>count--)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>*outptr<sp/>=<sp/>*inptr++;<sp/></highlight><highlight class="comment">/*<sp/>needn&apos;t<sp/>bother<sp/>with<sp/>GETJSAMPLE()<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>outptr<sp/>+=<sp/>num_components;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>input_row++;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>output_buf++;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*<sp/>Color<sp/>conversion<sp/>for<sp/>grayscale:<sp/>just<sp/>copy<sp/>the<sp/>data.</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/>This<sp/>also<sp/>works<sp/>for<sp/>YCbCr<sp/>-&gt;<sp/>grayscale<sp/>conversion,<sp/>in<sp/>which</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*<sp/>we<sp/>just<sp/>copy<sp/>the<sp/>Y<sp/>(luminance)<sp/>component<sp/>and<sp/>ignore<sp/>chrominance.</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal">grayscale_convert<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPIMAGE<sp/>input_buf,<sp/>JDIMENSION<sp/>input_row,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>output_buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_rows)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>jcopy_sample_rows(input_buf[0],<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>input_row,<sp/>output_buf,<sp/>0,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_rows,<sp/>cinfo-&gt;output_width);</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/>Adobe-style<sp/>YCCK-&gt;CMYK<sp/>conversion.</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*<sp/>We<sp/>convert<sp/>YCbCr<sp/>to<sp/>R=1-C,<sp/>G=1-M,<sp/>and<sp/>B=1-Y<sp/>using<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/>conversion<sp/>as<sp/>above,<sp/>while<sp/>passing<sp/>K<sp/>(black)<sp/>unchanged.</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/>We<sp/>assume<sp/>build_ycc_rgb_table<sp/>has<sp/>been<sp/>called.</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal">ycck_cmyk_convert<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPIMAGE<sp/>input_buf,<sp/>JDIMENSION<sp/>input_row,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>output_buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_rows)</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><ref refid="structmy__color__converter" kindref="compound">my_cconvert_ptr</ref><sp/>cconvert<sp/>=<sp/>(<ref refid="structmy__color__converter" kindref="compound">my_cconvert_ptr</ref>)<sp/>cinfo-&gt;cconvert;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/>cb,<sp/>cr;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JSAMPROW<sp/>outptr;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JSAMPROW<sp/>inptr0,<sp/>inptr1,<sp/>inptr2,<sp/>inptr3;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JDIMENSION<sp/>col;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>num_cols<sp/>=<sp/>cinfo-&gt;output_width;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>these<sp/>pointers<sp/>into<sp/>registers<sp/>if<sp/>possible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JSAMPLE<sp/>*<sp/>range_limit<sp/>=<sp/>cinfo-&gt;sample_range_limit;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>Crrtab<sp/>=<sp/>cconvert-&gt;Cr_r_tab;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>Cbbtab<sp/>=<sp/>cconvert-&gt;Cb_b_tab;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>INT32<sp/>*<sp/>Crgtab<sp/>=<sp/>cconvert-&gt;Cr_g_tab;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>INT32<sp/>*<sp/>Cbgtab<sp/>=<sp/>cconvert-&gt;Cb_g_tab;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>SHIFT_TEMPS</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>while<sp/>(--num_rows<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>inptr0<sp/>=<sp/>input_buf[0][input_row];</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>inptr1<sp/>=<sp/>input_buf[1][input_row];</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>inptr2<sp/>=<sp/>input_buf[2][input_row];</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>inptr3<sp/>=<sp/>input_buf[3][input_row];</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>input_row++;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>outptr<sp/>=<sp/>*output_buf++;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>num_cols;<sp/>col++)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/><sp/>=<sp/>GETJSAMPLE(inptr0[col]);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb<sp/>=<sp/>GETJSAMPLE(inptr1[col]);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cr<sp/>=<sp/>GETJSAMPLE(inptr2[col]);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Range-limiting<sp/>is<sp/>essential<sp/>due<sp/>to<sp/>noise<sp/>introduced<sp/>by<sp/>DCT<sp/>losses.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outptr[0]<sp/>=<sp/>range_limit[MAXJSAMPLE<sp/>-<sp/>(y<sp/>+<sp/>Crrtab[cr])];<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>red<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outptr[1]<sp/>=<sp/>range_limit[MAXJSAMPLE<sp/>-<sp/>(y<sp/>+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>green<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int)<sp/>RIGHT_SHIFT(Cbgtab[cb]<sp/>+<sp/>Crgtab[cr],</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SCALEBITS)))];</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outptr[2]<sp/>=<sp/>range_limit[MAXJSAMPLE<sp/>-<sp/>(y<sp/>+<sp/>Cbbtab[cb])];<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>blue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>K<sp/>passes<sp/>through<sp/>unchanged<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outptr[3]<sp/>=<sp/>inptr3[col];<sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>need<sp/>GETJSAMPLE<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outptr<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*<sp/>Empty<sp/>method<sp/>for<sp/>start_pass.</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">start_pass_dcolor<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>work<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*<sp/>Module<sp/>initialization<sp/>routine<sp/>for<sp/>output<sp/>colorspace<sp/>conversion.</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal">jinit_color_deconverter<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><ref refid="structmy__color__converter" kindref="compound">my_cconvert_ptr</ref><sp/>cconvert;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>cconvert<sp/>=<sp/>(<ref refid="structmy__color__converter" kindref="compound">my_cconvert_ptr</ref>)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SIZEOF(<ref refid="structmy__color__deconverter" kindref="compound">my_color_deconverter</ref>));</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>cinfo-&gt;cconvert<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__color__deconverter" kindref="compound">jpeg_color_deconverter</ref><sp/>*)<sp/>cconvert;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>cconvert-&gt;pub.start_pass<sp/>=<sp/>start_pass_dcolor;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>num_components<sp/>agrees<sp/>with<sp/>jpeg_color_space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(cinfo-&gt;jpeg_color_space)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JCS_GRAYSCALE:</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;num_components<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_BAD_J_COLORSPACE);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JCS_RGB:</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JCS_YCbCr:</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;num_components<sp/>!=<sp/>3)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_BAD_J_COLORSPACE);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JCS_CMYK:</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JCS_YCCK:</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;num_components<sp/>!=<sp/>4)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_BAD_J_COLORSPACE);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>JCS_UNKNOWN<sp/>can<sp/>be<sp/>anything<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;num_components<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_BAD_J_COLORSPACE);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>out_color_components<sp/>and<sp/>conversion<sp/>method<sp/>based<sp/>on<sp/>requested<sp/>space.</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Also<sp/>clear<sp/>the<sp/>component_needed<sp/>flags<sp/>for<sp/>any<sp/>unused<sp/>components,</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/><sp/><sp/>*<sp/>so<sp/>that<sp/>earlier<sp/>pipeline<sp/>stages<sp/>can<sp/>avoid<sp/>useless<sp/>computation.</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(cinfo-&gt;out_color_space)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JCS_GRAYSCALE:</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;out_color_components<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;jpeg_color_space<sp/>==<sp/>JCS_GRAYSCALE<sp/>||</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;jpeg_color_space<sp/>==<sp/>JCS_YCbCr)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cconvert-&gt;pub.color_convert<sp/>=<sp/>grayscale_convert;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>color-&gt;grayscale<sp/>conversion,<sp/>only<sp/>the<sp/>Y<sp/>(0)<sp/>component<sp/>is<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>1;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;<sp/>ci++)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;comp_info[ci].component_needed<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_CONVERSION_NOTIMPL);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JCS_RGB:</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;out_color_components<sp/>=<sp/>RGB_PIXELSIZE;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;jpeg_color_space<sp/>==<sp/>JCS_YCbCr)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cconvert-&gt;pub.color_convert<sp/>=<sp/>ycc_rgb_convert;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>build_ycc_rgb_table(cinfo);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;jpeg_color_space<sp/>==<sp/>JCS_RGB<sp/>&amp;&amp;<sp/>RGB_PIXELSIZE<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cconvert-&gt;pub.color_convert<sp/>=<sp/>null_convert;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_CONVERSION_NOTIMPL);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JCS_CMYK:</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;out_color_components<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;jpeg_color_space<sp/>==<sp/>JCS_YCCK)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cconvert-&gt;pub.color_convert<sp/>=<sp/>ycck_cmyk_convert;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>build_ycc_rgb_table(cinfo);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;jpeg_color_space<sp/>==<sp/>JCS_CMYK)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cconvert-&gt;pub.color_convert<sp/>=<sp/>null_convert;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_CONVERSION_NOTIMPL);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Permit<sp/>null<sp/>conversion<sp/>to<sp/>same<sp/>output<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;out_color_space<sp/>==<sp/>cinfo-&gt;jpeg_color_space)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;out_color_components<sp/>=<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cconvert-&gt;pub.color_convert<sp/>=<sp/>null_convert;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unsupported<sp/>non-null<sp/>conversion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_CONVERSION_NOTIMPL);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;quantize_colors)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;output_components<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>single<sp/>colormapped<sp/>output<sp/>component<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;output_components<sp/>=<sp/>cinfo-&gt;out_color_components;</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdcolor.c"/>
  </compounddef>
</doxygen>
