<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="jddctmgr_8c" kind="file">
    <compoundname>jddctmgr.c</compoundname>
    <includes refid="jinclude_8h" local="yes">jinclude.h</includes>
    <includes refid="jpeglib_8h" local="yes">jpeglib.h</includes>
    <includes refid="jdct_8h" local="yes">jdct.h</includes>
    <innerclass refid="structmy__idct__controller" prot="public">my_idct_controller</innerclass>
    <innerclass refid="unionmultiplier__table" prot="public">multiplier_table</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="jddctmgr_8c_1ad5c3cdfae3019b8223973041a2a1304b" prot="public" static="no">
        <name>JPEG_INTERNALS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jddctmgr.c" line="18" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jddctmgr.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="jddctmgr_8c_1aed1a4734bbe951b7a61b6650fcac4693" prot="public" static="no">
        <type><ref refid="structmy__idct__controller" kindref="compound">my_idct_controller</ref> *</type>
        <definition>typedef my_idct_controller* my_idct_ptr</definition>
        <argsstring></argsstring>
        <name>my_idct_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jddctmgr.c" line="54" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jddctmgr.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="jddctmgr_8c_1a4613090229b63009391a3b7264553cbf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void start_pass</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>start_pass</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jddctmgr.c" line="89" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jddctmgr.c" bodystart="89" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="jddctmgr_8c_1aa3e9571a2d1a80e22c8db530e38d375d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jinit_inverse_dct</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>jinit_inverse_dct</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jddctmgr.c" line="248" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jddctmgr.c" bodystart="248" bodyend="270"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>jddctmgr.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1994-1995,<sp/>Thomas<sp/>G.<sp/>Lane.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Independent<sp/>JPEG<sp/>Group&apos;s<sp/>software.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>conditions<sp/>of<sp/>distribution<sp/>and<sp/>use,<sp/>see<sp/>the<sp/>accompanying<sp/>README<sp/>file.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>the<sp/>inverse-DCT<sp/>management<sp/>logic.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>code<sp/>selects<sp/>a<sp/>particular<sp/>IDCT<sp/>implementation<sp/>to<sp/>be<sp/>used,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>and<sp/>it<sp/>performs<sp/>related<sp/>housekeeping<sp/>chores.<sp/><sp/>No<sp/>code<sp/>in<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>is<sp/>executed<sp/>per<sp/>IDCT<sp/>step,<sp/>only<sp/>during<sp/>output<sp/>pass<sp/>setup.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>Note<sp/>that<sp/>the<sp/>IDCT<sp/>routines<sp/>are<sp/>responsible<sp/>for<sp/>performing<sp/>coefficient</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>dequantization<sp/>as<sp/>well<sp/>as<sp/>the<sp/>IDCT<sp/>proper.<sp/><sp/>This<sp/>module<sp/>sets<sp/>up<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>dequantization<sp/>multiplier<sp/>table<sp/>needed<sp/>by<sp/>the<sp/>IDCT<sp/>routine.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JPEG_INTERNALS</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;jinclude.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jpeglib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jdct.h&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Private<sp/>declarations<sp/>for<sp/>DCT<sp/>subsystem<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>The<sp/>decompressor<sp/>input<sp/>side<sp/>(jdinput.c)<sp/>saves<sp/>away<sp/>the<sp/>appropriate</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>quantization<sp/>table<sp/>for<sp/>each<sp/>component<sp/>at<sp/>the<sp/>start<sp/>of<sp/>the<sp/>first<sp/>scan</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>involving<sp/>that<sp/>component.<sp/><sp/>(This<sp/>is<sp/>necessary<sp/>in<sp/>order<sp/>to<sp/>correctly</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>decode<sp/>files<sp/>that<sp/>reuse<sp/>Q-table<sp/>slots.)</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>When<sp/>we<sp/>are<sp/>ready<sp/>to<sp/>make<sp/>an<sp/>output<sp/>pass,<sp/>the<sp/>saved<sp/>Q-table<sp/>is<sp/>converted</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>to<sp/>a<sp/>multiplier<sp/>table<sp/>that<sp/>will<sp/>actually<sp/>be<sp/>used<sp/>by<sp/>the<sp/>IDCT<sp/>routine.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>The<sp/>multiplier<sp/>table<sp/>contents<sp/>are<sp/>IDCT-method-dependent.<sp/><sp/>To<sp/>support</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>application<sp/>changes<sp/>in<sp/>IDCT<sp/>method<sp/>between<sp/>scans,<sp/>we<sp/>can<sp/>remake<sp/>the</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>multiplier<sp/>tables<sp/>if<sp/>necessary.</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>In<sp/>buffered-image<sp/>mode,<sp/>the<sp/>first<sp/>output<sp/>pass<sp/>may<sp/>occur<sp/>before<sp/>any<sp/>data</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>has<sp/>been<sp/>seen<sp/>for<sp/>some<sp/>components,<sp/>and<sp/>thus<sp/>before<sp/>their<sp/>Q-tables<sp/>have</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>been<sp/>saved<sp/>away.<sp/><sp/>To<sp/>handle<sp/>this<sp/>case,<sp/>multiplier<sp/>tables<sp/>are<sp/>preset</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>to<sp/>zeroes;<sp/>the<sp/>result<sp/>of<sp/>the<sp/>IDCT<sp/>will<sp/>be<sp/>a<sp/>neutral<sp/>gray<sp/>level.</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>subobject<sp/>for<sp/>this<sp/>module<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="structmy__idct__controller" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__inverse__dct" kindref="compound">jpeg_inverse_dct</ref><sp/>pub;<sp/><sp/></highlight><highlight class="comment">/*<sp/>public<sp/>fields<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>array<sp/>contains<sp/>the<sp/>IDCT<sp/>method<sp/>code<sp/>that<sp/>each<sp/>multiplier<sp/>table</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/>*<sp/>is<sp/>currently<sp/>set<sp/>up<sp/>for,<sp/>or<sp/>-1<sp/>if<sp/>it&apos;s<sp/>not<sp/>yet<sp/>set<sp/>up.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>actual<sp/>multiplier<sp/>tables<sp/>are<sp/>pointed<sp/>to<sp/>by<sp/>dct_table<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/>*<sp/>per-component<sp/>comp_info<sp/>structures.</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cur_method[MAX_COMPONENTS];</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}<sp/><ref refid="structmy__idct__controller" kindref="compound">my_idct_controller</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structmy__idct__controller" kindref="compound">my_idct_controller</ref><sp/>*<sp/><ref refid="structmy__idct__controller" kindref="compound">my_idct_ptr</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Allocated<sp/>multiplier<sp/>tables:<sp/>big<sp/>enough<sp/>for<sp/>any<sp/>supported<sp/>variant<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="unionmultiplier__table" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>ISLOW_MULT_TYPE<sp/>islow_array[DCTSIZE2];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DCT_IFAST_SUPPORTED</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>IFAST_MULT_TYPE<sp/>ifast_array[DCTSIZE2];</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>DCT_FLOAT_SUPPORTED</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>FLOAT_MULT_TYPE<sp/>float_array[DCTSIZE2];</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="normal">}<sp/><ref refid="unionmultiplier__table" kindref="compound">multiplier_table</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>current<sp/>scaled-IDCT<sp/>routines<sp/>require<sp/>ISLOW-style<sp/>multiplier<sp/>tables,</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>so<sp/>be<sp/>sure<sp/>to<sp/>compile<sp/>that<sp/>code<sp/>if<sp/>either<sp/>ISLOW<sp/>or<sp/>SCALING<sp/>is<sp/>requested.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DCT_ISLOW_SUPPORTED</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>PROVIDE_ISLOW_TABLES</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>IDCT_SCALING_SUPPORTED</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>PROVIDE_ISLOW_TABLES</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/>Prepare<sp/>for<sp/>an<sp/>output<sp/>pass.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/>Here<sp/>we<sp/>select<sp/>the<sp/>proper<sp/>IDCT<sp/>routine<sp/>for<sp/>each<sp/>component<sp/>and<sp/>build</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/>a<sp/>matching<sp/>multiplier<sp/>table.</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">start_pass<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="structmy__idct__controller" kindref="compound">my_idct_ptr</ref><sp/>idct<sp/>=<sp/>(<ref refid="structmy__idct__controller" kindref="compound">my_idct_ptr</ref>)<sp/>cinfo-&gt;idct;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci,<sp/>i;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*compptr;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>method<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>inverse_DCT_method_ptr<sp/>method_ptr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><ref refid="struct_j_q_u_a_n_t___t_b_l" kindref="compound">JQUANT_TBL</ref><sp/>*<sp/>qtbl;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>for<sp/>(ci<sp/>=<sp/>0,<sp/>compptr<sp/>=<sp/>cinfo-&gt;comp_info;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci++,<sp/>compptr++)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Select<sp/>the<sp/>proper<sp/>IDCT<sp/>routine<sp/>for<sp/>this<sp/>component&apos;s<sp/>scaling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(compptr-&gt;DCT_scaled_size)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IDCT_SCALING_SUPPORTED</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>method_ptr<sp/>=<sp/>jpeg_idct_1x1;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>method<sp/>=<sp/>JDCT_ISLOW;<sp/><sp/></highlight><highlight class="comment">/*<sp/>jidctred<sp/>uses<sp/>islow-style<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>method_ptr<sp/>=<sp/>jpeg_idct_2x2;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>method<sp/>=<sp/>JDCT_ISLOW;<sp/><sp/></highlight><highlight class="comment">/*<sp/>jidctred<sp/>uses<sp/>islow-style<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>method_ptr<sp/>=<sp/>jpeg_idct_4x4;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>method<sp/>=<sp/>JDCT_ISLOW;<sp/><sp/></highlight><highlight class="comment">/*<sp/>jidctred<sp/>uses<sp/>islow-style<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DCTSIZE:</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(cinfo-&gt;dct_method)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DCT_ISLOW_SUPPORTED</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JDCT_ISLOW:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>method_ptr<sp/>=<sp/>jpeg_idct_islow;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>method<sp/>=<sp/>JDCT_ISLOW;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>DCT_IFAST_SUPPORTED</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JDCT_IFAST:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>method_ptr<sp/>=<sp/>jpeg_idct_ifast;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>method<sp/>=<sp/>JDCT_IFAST;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>DCT_FLOAT_SUPPORTED</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JDCT_FLOAT:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>method_ptr<sp/>=<sp/>jpeg_idct_float;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>method<sp/>=<sp/>JDCT_FLOAT;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_NOT_COMPILED);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_BAD_DCTSIZE,<sp/>compptr-&gt;DCT_scaled_size);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>idct-&gt;pub.inverse_DCT[ci]<sp/>=<sp/>method_ptr;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>multiplier<sp/>table<sp/>from<sp/>quant<sp/>table.</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>However,<sp/>we<sp/>can<sp/>skip<sp/>this<sp/>if<sp/>the<sp/>component<sp/>is<sp/>uninteresting</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>or<sp/>if<sp/>we<sp/>already<sp/>built<sp/>the<sp/>table.<sp/><sp/>Also,<sp/>if<sp/>no<sp/>quant<sp/>table</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>has<sp/>yet<sp/>been<sp/>saved<sp/>for<sp/>the<sp/>component,<sp/>we<sp/>leave<sp/>the</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>multiplier<sp/>table<sp/>all-zero;<sp/>we&apos;ll<sp/>be<sp/>reading<sp/>zeroes<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>coefficient<sp/>controller&apos;s<sp/>buffer<sp/>anyway.</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>compptr-&gt;component_needed<sp/>||<sp/>idct-&gt;cur_method[ci]<sp/>==<sp/>method)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>qtbl<sp/>=<sp/>compptr-&gt;quant_table;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qtbl<sp/>==<sp/>NULL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>happens<sp/>if<sp/>no<sp/>data<sp/>yet<sp/>for<sp/>component<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>idct-&gt;cur_method[ci]<sp/>=<sp/>method;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(method)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PROVIDE_ISLOW_TABLES</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JDCT_ISLOW:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>LL&amp;M<sp/>IDCT<sp/>method,<sp/>multipliers<sp/>are<sp/>equal<sp/>to<sp/>raw<sp/>quantization</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>coefficients,<sp/>but<sp/>are<sp/>stored<sp/>in<sp/>natural<sp/>order<sp/>as<sp/>ints.</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>ISLOW_MULT_TYPE<sp/>*<sp/>ismtbl<sp/>=<sp/>(ISLOW_MULT_TYPE<sp/>*)<sp/>compptr-&gt;dct_table;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>DCTSIZE2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ismtbl[i]<sp/>=<sp/>(ISLOW_MULT_TYPE)<sp/>qtbl-&gt;quantval[jpeg_zigzag_order[i]];</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>DCT_IFAST_SUPPORTED</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JDCT_IFAST:</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>AA&amp;N<sp/>IDCT<sp/>method,<sp/>multipliers<sp/>are<sp/>equal<sp/>to<sp/>quantization</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>coefficients<sp/>scaled<sp/>by<sp/>scalefactor[row]*scalefactor[col],<sp/>where</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>scalefactor[0]<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>scalefactor[k]<sp/>=<sp/>cos(k*PI/16)<sp/>*<sp/>sqrt(2)<sp/><sp/><sp/><sp/>for<sp/>k=1..7</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>For<sp/>integer<sp/>operation,<sp/>the<sp/>multiplier<sp/>table<sp/>is<sp/>to<sp/>be<sp/>scaled<sp/>by</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>IFAST_SCALE_BITS.<sp/><sp/>The<sp/>multipliers<sp/>are<sp/>stored<sp/>in<sp/>natural<sp/>order.</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>IFAST_MULT_TYPE<sp/>*<sp/>ifmtbl<sp/>=<sp/>(IFAST_MULT_TYPE<sp/>*)<sp/>compptr-&gt;dct_table;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">#define<sp/>CONST_BITS<sp/>14</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>INT16<sp/>aanscales[DCTSIZE2]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>precomputed<sp/>values<sp/>scaled<sp/>up<sp/>by<sp/>14<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>16384,<sp/>22725,<sp/>21407,<sp/>19266,<sp/>16384,<sp/>12873,<sp/><sp/>8867,<sp/><sp/>4520,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>22725,<sp/>31521,<sp/>29692,<sp/>26722,<sp/>22725,<sp/>17855,<sp/>12299,<sp/><sp/>6270,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>21407,<sp/>29692,<sp/>27969,<sp/>25172,<sp/>21407,<sp/>16819,<sp/>11585,<sp/><sp/>5906,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>19266,<sp/>26722,<sp/>25172,<sp/>22654,<sp/>19266,<sp/>15137,<sp/>10426,<sp/><sp/>5315,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>16384,<sp/>22725,<sp/>21407,<sp/>19266,<sp/>16384,<sp/>12873,<sp/><sp/>8867,<sp/><sp/>4520,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>12873,<sp/>17855,<sp/>16819,<sp/>15137,<sp/>12873,<sp/>10114,<sp/><sp/>6967,<sp/><sp/>3552,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8867,<sp/>12299,<sp/>11585,<sp/>10426,<sp/><sp/>8867,<sp/><sp/>6967,<sp/><sp/>4799,<sp/><sp/>2446,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4520,<sp/><sp/>6270,<sp/><sp/>5906,<sp/><sp/>5315,<sp/><sp/>4520,<sp/><sp/>3552,<sp/><sp/>2446,<sp/><sp/>1247</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>SHIFT_TEMPS</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>DCTSIZE2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ifmtbl[i]<sp/>=<sp/>(IFAST_MULT_TYPE)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DESCALE(MULTIPLY16V16((INT32)<sp/>qtbl-&gt;quantval[jpeg_zigzag_order[i]],</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(INT32)<sp/>aanscales[i]),</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONST_BITS-IFAST_SCALE_BITS);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>DCT_FLOAT_SUPPORTED</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JDCT_FLOAT:</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>float<sp/>AA&amp;N<sp/>IDCT<sp/>method,<sp/>multipliers<sp/>are<sp/>equal<sp/>to<sp/>quantization</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>coefficients<sp/>scaled<sp/>by<sp/>scalefactor[row]*scalefactor[col],<sp/>where</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>scalefactor[0]<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>scalefactor[k]<sp/>=<sp/>cos(k*PI/16)<sp/>*<sp/>sqrt(2)<sp/><sp/><sp/><sp/>for<sp/>k=1..7</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>multipliers<sp/>are<sp/>stored<sp/>in<sp/>natural<sp/>order.</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>FLOAT_MULT_TYPE<sp/>*<sp/>fmtbl<sp/>=<sp/>(FLOAT_MULT_TYPE<sp/>*)<sp/>compptr-&gt;dct_table;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row,<sp/>col;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>aanscalefactor[DCTSIZE]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1.0,<sp/>1.387039845,<sp/>1.306562965,<sp/>1.175875602,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1.0,<sp/>0.785694958,<sp/>0.541196100,<sp/>0.275899379</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>DCTSIZE;<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>DCTSIZE;<sp/>col++)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmtbl[i]<sp/>=<sp/>(FLOAT_MULT_TYPE)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>qtbl-&gt;quantval[jpeg_zigzag_order[i]]<sp/>*</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aanscalefactor[row]<sp/>*<sp/>aanscalefactor[col]);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="235"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_NOT_COMPILED);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/>Initialize<sp/>IDCT<sp/>manager.</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">jinit_inverse_dct<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><ref refid="structmy__idct__controller" kindref="compound">my_idct_ptr</ref><sp/>idct;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*compptr;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>idct<sp/>=<sp/>(<ref refid="structmy__idct__controller" kindref="compound">my_idct_ptr</ref>)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SIZEOF(<ref refid="structmy__idct__controller" kindref="compound">my_idct_controller</ref>));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>cinfo-&gt;idct<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__inverse__dct" kindref="compound">jpeg_inverse_dct</ref><sp/>*)<sp/>idct;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>idct-&gt;pub.start_pass<sp/>=<sp/>start_pass;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0,<sp/>compptr<sp/>=<sp/>cinfo-&gt;comp_info;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci++,<sp/>compptr++)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>and<sp/>pre-zero<sp/>a<sp/>multiplier<sp/>table<sp/>for<sp/>each<sp/>component<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;dct_table<sp/>=</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SIZEOF(<ref refid="unionmultiplier__table" kindref="compound">multiplier_table</ref>));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>MEMZERO(compptr-&gt;dct_table,<sp/>SIZEOF(<ref refid="unionmultiplier__table" kindref="compound">multiplier_table</ref>));</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Mark<sp/>multiplier<sp/>table<sp/>not<sp/>yet<sp/>set<sp/>up<sp/>for<sp/>any<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>idct-&gt;cur_method[ci]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jddctmgr.c"/>
  </compounddef>
</doxygen>
