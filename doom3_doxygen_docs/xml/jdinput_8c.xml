<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="jdinput_8c" kind="file">
    <compoundname>jdinput.c</compoundname>
    <includes refid="jinclude_8h" local="yes">jinclude.h</includes>
    <includes refid="jpeglib_8h" local="yes">jpeglib.h</includes>
    <innerclass refid="structmy__input__controller" prot="public">my_input_controller</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="jdinput_8c_1ad5c3cdfae3019b8223973041a2a1304b" prot="public" static="no">
        <name>JPEG_INTERNALS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdinput.c" line="14" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdinput.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="jdinput_8c_1a2a7eb13efe69898d5a8cded5fecbe040" prot="public" static="no">
        <type><ref refid="structmy__input__controller" kindref="compound">my_input_controller</ref> *</type>
        <definition>typedef my_input_controller* my_inputctl_ptr</definition>
        <argsstring></argsstring>
        <name>my_inputctl_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdinput.c" line="27" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdinput.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="jdinput_8c_1a1214ff849de251a0b530c279308f1944" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int consume_markers</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>consume_markers</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdinput.c" line="31" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdinput.c" bodystart="288" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="jdinput_8c_1ac3695a5ec98f8f7a7225c249f80917f6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void initial_setup</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>initial_setup</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdinput.c" line="39" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdinput.c" bodystart="39" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="jdinput_8c_1a123e7103b62bf59bf1225576998a0863" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void per_scan_setup</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>per_scan_setup</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdinput.c" line="121" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdinput.c" bodystart="121" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="jdinput_8c_1a573d3f63c4ff3fa523768d25ce60738a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void latch_quant_tables</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>latch_quant_tables</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdinput.c" line="220" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdinput.c" bodystart="220" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="jdinput_8c_1a9fe506fa24e8db202c12816d1da9d4d8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void start_input_pass</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>start_input_pass</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdinput.c" line="254" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdinput.c" bodystart="254" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="jdinput_8c_1a4e5be0eae09b0b414334d0aab4b19464" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void finish_input_pass</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>finish_input_pass</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdinput.c" line="271" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdinput.c" bodystart="271" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="jdinput_8c_1ab6cebe310c4d3c10ba02f8e6761f7eb4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void reset_input_controller</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>reset_input_controller</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdinput.c" line="339" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdinput.c" bodystart="339" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="jdinput_8c_1a4c4e3752c6e517d9d3ab2de707a83c23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jinit_input_controller</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>jinit_input_controller</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdinput.c" line="361" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdinput.c" bodystart="361" bodyend="381"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>jdinput.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1991-1995,<sp/>Thomas<sp/>G.<sp/>Lane.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Independent<sp/>JPEG<sp/>Group&apos;s<sp/>software.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>conditions<sp/>of<sp/>distribution<sp/>and<sp/>use,<sp/>see<sp/>the<sp/>accompanying<sp/>README<sp/>file.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>input<sp/>control<sp/>logic<sp/>for<sp/>the<sp/>JPEG<sp/>decompressor.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>These<sp/>routines<sp/>are<sp/>concerned<sp/>with<sp/>controlling<sp/>the<sp/>decompressor&apos;s<sp/>input</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>processing<sp/>(marker<sp/>reading<sp/>and<sp/>coefficient<sp/>decoding).<sp/><sp/>The<sp/>actual<sp/>input</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>reading<sp/>is<sp/>done<sp/>in<sp/>jdmarker.c,<sp/>jdhuff.c,<sp/>and<sp/>jdphuff.c.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JPEG_INTERNALS</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;jinclude.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jpeglib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="structmy__input__controller" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__input__controller" kindref="compound">jpeg_input_controller</ref><sp/>pub;<sp/></highlight><highlight class="comment">/*<sp/>public<sp/>fields<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>inheaders;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TRUE<sp/>until<sp/>first<sp/>SOS<sp/>is<sp/>reached<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">}<sp/><ref refid="structmy__input__controller" kindref="compound">my_input_controller</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structmy__input__controller" kindref="compound">my_input_controller</ref><sp/>*<sp/><ref refid="structmy__input__controller" kindref="compound">my_inputctl_ptr</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Forward<sp/>declarations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>consume_markers<sp/>JPP((<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>Routines<sp/>to<sp/>calculate<sp/>various<sp/>quantities<sp/>related<sp/>to<sp/>the<sp/>size<sp/>of<sp/>the<sp/>image.</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">initial_setup<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Called<sp/>once,<sp/>when<sp/>first<sp/>SOS<sp/>marker<sp/>is<sp/>reached<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*compptr;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>image<sp/>isn&apos;t<sp/>bigger<sp/>than<sp/>I<sp/>can<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_height<sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>JPEG_MAX_DIMENSION<sp/>||</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_width<sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>JPEG_MAX_DIMENSION)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_IMAGE_TOO_BIG,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>JPEG_MAX_DIMENSION);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>now,<sp/>precision<sp/>must<sp/>match<sp/>compiled-in<sp/>value...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;data_precision<sp/>!=<sp/>BITS_IN_JSAMPLE)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_BAD_PRECISION,<sp/>cinfo-&gt;data_precision);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>that<sp/>number<sp/>of<sp/>components<sp/>won&apos;t<sp/>exceed<sp/>internal<sp/>array<sp/>sizes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;num_components<sp/>&gt;<sp/>MAX_COMPONENTS)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT2(cinfo,<sp/>JERR_COMPONENT_COUNT,<sp/>cinfo-&gt;num_components,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAX_COMPONENTS);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>maximum<sp/>sampling<sp/>factors;<sp/>check<sp/>factor<sp/>validity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>cinfo-&gt;max_h_samp_factor<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>cinfo-&gt;max_v_samp_factor<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0,<sp/>compptr<sp/>=<sp/>cinfo-&gt;comp_info;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci++,<sp/>compptr++)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compptr-&gt;h_samp_factor&lt;=0<sp/>||<sp/>compptr-&gt;h_samp_factor&gt;MAX_SAMP_FACTOR<sp/>||</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;v_samp_factor&lt;=0<sp/>||<sp/>compptr-&gt;v_samp_factor&gt;MAX_SAMP_FACTOR)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_BAD_SAMPLING);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;max_h_samp_factor<sp/>=<sp/>MAX(cinfo-&gt;max_h_samp_factor,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compptr-&gt;h_samp_factor);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;max_v_samp_factor<sp/>=<sp/>MAX(cinfo-&gt;max_v_samp_factor,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compptr-&gt;v_samp_factor);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>initialize<sp/>DCT_scaled_size<sp/>and<sp/>min_DCT_scaled_size<sp/>to<sp/>DCTSIZE.</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/>*<sp/>In<sp/>the<sp/>full<sp/>decompressor,<sp/>this<sp/>will<sp/>be<sp/>overridden<sp/>by<sp/>jdmaster.c;</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/>*<sp/>but<sp/>in<sp/>the<sp/>transcoder,<sp/>jdmaster.c<sp/>is<sp/>not<sp/>used,<sp/>so<sp/>we<sp/>must<sp/>do<sp/>it<sp/>here.</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>cinfo-&gt;min_DCT_scaled_size<sp/>=<sp/>DCTSIZE;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>dimensions<sp/>of<sp/>components<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0,<sp/>compptr<sp/>=<sp/>cinfo-&gt;comp_info;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci++,<sp/>compptr++)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;DCT_scaled_size<sp/>=<sp/>DCTSIZE;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Size<sp/>in<sp/>DCT<sp/>blocks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;width_in_blocks<sp/>=<sp/>(JDIMENSION)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jdiv_round_up((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_width<sp/>*<sp/>(long)<sp/>compptr-&gt;h_samp_factor,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>(cinfo-&gt;max_h_samp_factor<sp/>*<sp/>DCTSIZE));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;height_in_blocks<sp/>=<sp/>(JDIMENSION)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jdiv_round_up((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_height<sp/>*<sp/>(long)<sp/>compptr-&gt;v_samp_factor,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>(cinfo-&gt;max_v_samp_factor<sp/>*<sp/>DCTSIZE));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>downsampled_width<sp/>and<sp/>downsampled_height<sp/>will<sp/>also<sp/>be<sp/>overridden<sp/>by</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>jdmaster.c<sp/>if<sp/>we<sp/>are<sp/>doing<sp/>full<sp/>decompression.<sp/><sp/>The<sp/>transcoder<sp/>library</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>doesn&apos;t<sp/>use<sp/>these<sp/>values,<sp/>but<sp/>the<sp/>calling<sp/>application<sp/>might.</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Size<sp/>in<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;downsampled_width<sp/>=<sp/>(JDIMENSION)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jdiv_round_up((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_width<sp/>*<sp/>(long)<sp/>compptr-&gt;h_samp_factor,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;max_h_samp_factor);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;downsampled_height<sp/>=<sp/>(JDIMENSION)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jdiv_round_up((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_height<sp/>*<sp/>(long)<sp/>compptr-&gt;v_samp_factor,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;max_v_samp_factor);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Mark<sp/>component<sp/>needed,<sp/>until<sp/>color<sp/>conversion<sp/>says<sp/>otherwise<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;component_needed<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Mark<sp/>no<sp/>quantization<sp/>table<sp/>yet<sp/>saved<sp/>for<sp/>component<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;quant_table<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>number<sp/>of<sp/>fully<sp/>interleaved<sp/>MCU<sp/>rows.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>cinfo-&gt;total_iMCU_rows<sp/>=<sp/>(JDIMENSION)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>jdiv_round_up((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_height,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(long)<sp/>(cinfo-&gt;max_v_samp_factor*DCTSIZE));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Decide<sp/>whether<sp/>file<sp/>contains<sp/>multiple<sp/>scans<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;comps_in_scan<sp/>&lt;<sp/>cinfo-&gt;num_components<sp/>||<sp/>cinfo-&gt;progressive_mode)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;inputctl-&gt;has_multiple_scans<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;inputctl-&gt;has_multiple_scans<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">per_scan_setup<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Do<sp/>computations<sp/>that<sp/>are<sp/>needed<sp/>before<sp/>processing<sp/>a<sp/>JPEG<sp/>scan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>cinfo-&gt;comps_in_scan<sp/>and<sp/>cinfo-&gt;cur_comp_info[]<sp/>were<sp/>set<sp/>from<sp/>SOS<sp/>marker<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci,<sp/>mcublks,<sp/>tmp;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*compptr;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;comps_in_scan<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Noninterleaved<sp/>(single-component)<sp/>scan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr<sp/>=<sp/>cinfo-&gt;cur_comp_info[0];</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Overall<sp/>image<sp/>size<sp/>in<sp/>MCUs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;MCUs_per_row<sp/>=<sp/>compptr-&gt;width_in_blocks;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;MCU_rows_in_scan<sp/>=<sp/>compptr-&gt;height_in_blocks;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>noninterleaved<sp/>scan,<sp/>always<sp/>one<sp/>block<sp/>per<sp/>MCU<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;MCU_width<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;MCU_height<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;MCU_blocks<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;MCU_sample_width<sp/>=<sp/>compptr-&gt;DCT_scaled_size;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;last_col_width<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>noninterleaved<sp/>scans,<sp/>it<sp/>is<sp/>convenient<sp/>to<sp/>define<sp/>last_row_height</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>as<sp/>the<sp/>number<sp/>of<sp/>block<sp/>rows<sp/>present<sp/>in<sp/>the<sp/>last<sp/>iMCU<sp/>row.</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(int)<sp/>(compptr-&gt;height_in_blocks<sp/>%<sp/>compptr-&gt;v_samp_factor);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>0)<sp/>tmp<sp/>=<sp/>compptr-&gt;v_samp_factor;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;last_row_height<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prepare<sp/>array<sp/>describing<sp/>MCU<sp/>composition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;blocks_in_MCU<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;MCU_membership[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Interleaved<sp/>(multi-component)<sp/>scan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;comps_in_scan<sp/>&lt;=<sp/>0<sp/>||<sp/>cinfo-&gt;comps_in_scan<sp/>&gt;<sp/>MAX_COMPS_IN_SCAN)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT2(cinfo,<sp/>JERR_COMPONENT_COUNT,<sp/>cinfo-&gt;comps_in_scan,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAX_COMPS_IN_SCAN);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Overall<sp/>image<sp/>size<sp/>in<sp/>MCUs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;MCUs_per_row<sp/>=<sp/>(JDIMENSION)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jdiv_round_up((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_width,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(long)<sp/>(cinfo-&gt;max_h_samp_factor*DCTSIZE));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;MCU_rows_in_scan<sp/>=<sp/>(JDIMENSION)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jdiv_round_up((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_height,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(long)<sp/>(cinfo-&gt;max_v_samp_factor*DCTSIZE));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;blocks_in_MCU<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;comps_in_scan;<sp/>ci++)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compptr<sp/>=<sp/>cinfo-&gt;cur_comp_info[ci];</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sampling<sp/>factors<sp/>give<sp/>#<sp/>of<sp/>blocks<sp/>of<sp/>component<sp/>in<sp/>each<sp/>MCU<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compptr-&gt;MCU_width<sp/>=<sp/>compptr-&gt;h_samp_factor;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compptr-&gt;MCU_height<sp/>=<sp/>compptr-&gt;v_samp_factor;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compptr-&gt;MCU_blocks<sp/>=<sp/>compptr-&gt;MCU_width<sp/>*<sp/>compptr-&gt;MCU_height;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compptr-&gt;MCU_sample_width<sp/>=<sp/>compptr-&gt;MCU_width<sp/>*<sp/>compptr-&gt;DCT_scaled_size;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Figure<sp/>number<sp/>of<sp/>non-dummy<sp/>blocks<sp/>in<sp/>last<sp/>MCU<sp/>column<sp/>&amp;<sp/>row<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(int)<sp/>(compptr-&gt;width_in_blocks<sp/>%<sp/>compptr-&gt;MCU_width);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>0)<sp/>tmp<sp/>=<sp/>compptr-&gt;MCU_width;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compptr-&gt;last_col_width<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(int)<sp/>(compptr-&gt;height_in_blocks<sp/>%<sp/>compptr-&gt;MCU_height);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>0)<sp/>tmp<sp/>=<sp/>compptr-&gt;MCU_height;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compptr-&gt;last_row_height<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prepare<sp/>array<sp/>describing<sp/>MCU<sp/>composition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mcublks<sp/>=<sp/>compptr-&gt;MCU_blocks;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;blocks_in_MCU<sp/>+<sp/>mcublks<sp/>&gt;<sp/>D_MAX_BLOCKS_IN_MCU)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_BAD_MCU_SIZE);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mcublks--<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;MCU_membership[cinfo-&gt;blocks_in_MCU++]<sp/>=<sp/>ci;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/>Save<sp/>away<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Q-table<sp/>referenced<sp/>by<sp/>each<sp/>component<sp/>present</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>current<sp/>scan,<sp/>unless<sp/>already<sp/>saved<sp/>during<sp/>a<sp/>prior<sp/>scan.</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/>In<sp/>a<sp/>multiple-scan<sp/>JPEG<sp/>file,<sp/>the<sp/>encoder<sp/>could<sp/>assign<sp/>different<sp/>components</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/>the<sp/>same<sp/>Q-table<sp/>slot<sp/>number,<sp/>but<sp/>change<sp/>table<sp/>definitions<sp/>between<sp/>scans</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>so<sp/>that<sp/>each<sp/>component<sp/>uses<sp/>a<sp/>different<sp/>Q-table.<sp/><sp/>(The<sp/>IJG<sp/>encoder<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/>currently<sp/>capable<sp/>of<sp/>doing<sp/>this,<sp/>but<sp/>other<sp/>encoders<sp/>might.)<sp/><sp/>Since<sp/>we<sp/>want</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/>to<sp/>be<sp/>able<sp/>to<sp/>dequantize<sp/>all<sp/>the<sp/>components<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>file,<sp/>this</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*<sp/>means<sp/>that<sp/>we<sp/>have<sp/>to<sp/>save<sp/>away<sp/>the<sp/>table<sp/>actually<sp/>used<sp/>for<sp/>each<sp/>component.</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*<sp/>We<sp/>do<sp/>this<sp/>by<sp/>copying<sp/>the<sp/>table<sp/>at<sp/>the<sp/>start<sp/>of<sp/>the<sp/>first<sp/>scan<sp/>containing</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/>the<sp/>component.</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*<sp/>The<sp/>JPEG<sp/>spec<sp/>prohibits<sp/>the<sp/>encoder<sp/>from<sp/>changing<sp/>the<sp/>contents<sp/>of<sp/>a<sp/>Q-table</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/>slot<sp/>between<sp/>scans<sp/>of<sp/>a<sp/>component<sp/>using<sp/>that<sp/>slot.<sp/><sp/>If<sp/>the<sp/>encoder<sp/>does<sp/>so</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*<sp/>anyway,<sp/>this<sp/>decoder<sp/>will<sp/>simply<sp/>use<sp/>the<sp/>Q-table<sp/>values<sp/>that<sp/>were<sp/>current</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/>at<sp/>the<sp/>start<sp/>of<sp/>the<sp/>first<sp/>scan<sp/>for<sp/>the<sp/>component.</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/>The<sp/>decompressor<sp/>output<sp/>side<sp/>looks<sp/>only<sp/>at<sp/>the<sp/>saved<sp/>quant<sp/>tables,</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*<sp/>not<sp/>at<sp/>the<sp/>current<sp/>Q-table<sp/>slots.</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal">latch_quant_tables<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci,<sp/>qtblno;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*compptr;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><ref refid="struct_j_q_u_a_n_t___t_b_l" kindref="compound">JQUANT_TBL</ref><sp/>*<sp/>qtbl;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;comps_in_scan;<sp/>ci++)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr<sp/>=<sp/>cinfo-&gt;cur_comp_info[ci];</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>work<sp/>if<sp/>we<sp/>already<sp/>saved<sp/>Q-table<sp/>for<sp/>this<sp/>component<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compptr-&gt;quant_table<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>specified<sp/>quantization<sp/>table<sp/>is<sp/>present<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>qtblno<sp/>=<sp/>compptr-&gt;quant_tbl_no;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qtblno<sp/>&lt;<sp/>0<sp/>||<sp/>qtblno<sp/>&gt;=<sp/>NUM_QUANT_TBLS<sp/>||</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;quant_tbl_ptrs[qtblno]<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_NO_QUANT_TABLE,<sp/>qtblno);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>OK,<sp/>save<sp/>away<sp/>the<sp/>quantization<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>qtbl<sp/>=<sp/>(<ref refid="struct_j_q_u_a_n_t___t_b_l" kindref="compound">JQUANT_TBL</ref><sp/>*)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SIZEOF(<ref refid="struct_j_q_u_a_n_t___t_b_l" kindref="compound">JQUANT_TBL</ref>));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>MEMCOPY(qtbl,<sp/>cinfo-&gt;quant_tbl_ptrs[qtblno],<sp/>SIZEOF(<ref refid="struct_j_q_u_a_n_t___t_b_l" kindref="compound">JQUANT_TBL</ref>));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;quant_table<sp/>=<sp/>qtbl;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*<sp/>Initialize<sp/>the<sp/>input<sp/>modules<sp/>to<sp/>read<sp/>a<sp/>scan<sp/>of<sp/>compressed<sp/>data.</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/>*<sp/>The<sp/>first<sp/>call<sp/>to<sp/>this<sp/>is<sp/>done<sp/>by<sp/>jdmaster.c<sp/>after<sp/>initializing</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/>*<sp/>the<sp/>entire<sp/>decompressor<sp/>(during<sp/>jpeg_start_decompress).</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>*<sp/>Subsequent<sp/>calls<sp/>come<sp/>from<sp/>consume_markers,<sp/>below.</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">start_input_pass<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>per_scan_setup(cinfo);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>latch_quant_tables(cinfo);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>(*cinfo-&gt;entropy-&gt;start_pass)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>(*cinfo-&gt;coef-&gt;start_input_pass)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>cinfo-&gt;inputctl-&gt;consume_input<sp/>=<sp/>cinfo-&gt;coef-&gt;consume_data;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/>Finish<sp/>up<sp/>after<sp/>inputting<sp/>a<sp/>compressed-data<sp/>scan.</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>called<sp/>by<sp/>the<sp/>coefficient<sp/>controller<sp/>after<sp/>it&apos;s<sp/>read<sp/>all</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*<sp/>the<sp/>expected<sp/>data<sp/>of<sp/>the<sp/>scan.</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal">finish_input_pass<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>cinfo-&gt;inputctl-&gt;consume_input<sp/>=<sp/>consume_markers;</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*<sp/>Read<sp/>JPEG<sp/>markers<sp/>before,<sp/>between,<sp/>or<sp/>after<sp/>compressed-data<sp/>scans.</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/>*<sp/>Change<sp/>state<sp/>as<sp/>necessary<sp/>when<sp/>a<sp/>new<sp/>scan<sp/>is<sp/>reached.</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/>*<sp/>Return<sp/>value<sp/>is<sp/>JPEG_SUSPENDED,<sp/>JPEG_REACHED_SOS,<sp/>or<sp/>JPEG_REACHED_EOI.</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*<sp/>The<sp/>consume_input<sp/>method<sp/>pointer<sp/>points<sp/>either<sp/>here<sp/>or<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*<sp/>coefficient<sp/>controller&apos;s<sp/>consume_data<sp/>routine,<sp/>depending<sp/>on<sp/>whether</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*<sp/>we<sp/>are<sp/>reading<sp/>a<sp/>compressed<sp/>data<sp/>segment<sp/>or<sp/>inter-segment<sp/>markers.</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal">consume_markers<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><ref refid="structmy__input__controller" kindref="compound">my_inputctl_ptr</ref><sp/>inputctl<sp/>=<sp/>(<ref refid="structmy__input__controller" kindref="compound">my_inputctl_ptr</ref>)<sp/>cinfo-&gt;inputctl;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>if<sp/>(inputctl-&gt;pub.eoi_reached)<sp/></highlight><highlight class="comment">/*<sp/>After<sp/>hitting<sp/>EOI,<sp/>read<sp/>no<sp/>further<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>JPEG_REACHED_EOI;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>val<sp/>=<sp/>(*cinfo-&gt;marker-&gt;read_markers)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(val)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JPEG_REACHED_SOS:<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Found<sp/>SOS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputctl-&gt;inheaders)<sp/>{<sp/><sp/></highlight><highlight class="comment">/*<sp/>1st<sp/>SOS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initial_setup(cinfo);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inputctl-&gt;inheaders<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note:<sp/>start_input_pass<sp/>must<sp/>be<sp/>called<sp/>by<sp/>jdmaster.c</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>before<sp/>any<sp/>more<sp/>input<sp/>can<sp/>be<sp/>consumed.<sp/><sp/>jdapi.c<sp/>is</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>responsible<sp/>for<sp/>enforcing<sp/>this<sp/>sequencing.</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2nd<sp/>or<sp/>later<sp/>SOS<sp/>marker<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>inputctl-&gt;pub.has_multiple_scans)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_EOI_EXPECTED);<sp/></highlight><highlight class="comment">/*<sp/>Oops,<sp/>I<sp/>wasn&apos;t<sp/>expecting<sp/>this!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_input_pass(cinfo);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JPEG_REACHED_EOI:<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Found<sp/>EOI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>inputctl-&gt;pub.eoi_reached<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputctl-&gt;inheaders)<sp/>{<sp/><sp/></highlight><highlight class="comment">/*<sp/>Tables-only<sp/>datastream,<sp/>apparently<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;marker-&gt;saw_SOF)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_SOF_NO_SOS);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prevent<sp/>infinite<sp/>loop<sp/>in<sp/>coef<sp/>ctlr&apos;s<sp/>decompress_data<sp/>routine</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>user<sp/>set<sp/>output_scan_number<sp/>larger<sp/>than<sp/>number<sp/>of<sp/>scans.</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;output_scan_number<sp/>&gt;<sp/>cinfo-&gt;input_scan_number)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;output_scan_number<sp/>=<sp/>cinfo-&gt;input_scan_number;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JPEG_SUSPENDED:</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/>*<sp/>Reset<sp/>state<sp/>to<sp/>begin<sp/>a<sp/>fresh<sp/>datastream.</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal">reset_input_controller<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><ref refid="structmy__input__controller" kindref="compound">my_inputctl_ptr</ref><sp/>inputctl<sp/>=<sp/>(<ref refid="structmy__input__controller" kindref="compound">my_inputctl_ptr</ref>)<sp/>cinfo-&gt;inputctl;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>inputctl-&gt;pub.consume_input<sp/>=<sp/>consume_markers;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>inputctl-&gt;pub.has_multiple_scans<sp/>=<sp/>FALSE;<sp/></highlight><highlight class="comment">/*<sp/>&quot;unknown&quot;<sp/>would<sp/>be<sp/>better<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>inputctl-&gt;pub.eoi_reached<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>inputctl-&gt;inheaders<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>other<sp/>modules<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>(*cinfo-&gt;err-&gt;reset_error_mgr)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>(*cinfo-&gt;marker-&gt;reset_marker_reader)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>progression<sp/>state<sp/>--<sp/>would<sp/>be<sp/>cleaner<sp/>if<sp/>entropy<sp/>decoder<sp/>did<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>cinfo-&gt;coef_bits<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/>*<sp/>Initialize<sp/>the<sp/>input<sp/>controller<sp/>module.</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>called<sp/>only<sp/>once,<sp/>when<sp/>the<sp/>decompression<sp/>object<sp/>is<sp/>created.</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal">jinit_input_controller<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><ref refid="structmy__input__controller" kindref="compound">my_inputctl_ptr</ref><sp/>inputctl;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>subobject<sp/>in<sp/>permanent<sp/>pool<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>inputctl<sp/>=<sp/>(<ref refid="structmy__input__controller" kindref="compound">my_inputctl_ptr</ref>)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_PERMANENT,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SIZEOF(<ref refid="structmy__input__controller" kindref="compound">my_input_controller</ref>));</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>cinfo-&gt;inputctl<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__input__controller" kindref="compound">jpeg_input_controller</ref><sp/>*)<sp/>inputctl;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>method<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>inputctl-&gt;pub.consume_input<sp/>=<sp/>consume_markers;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>inputctl-&gt;pub.reset_input_controller<sp/>=<sp/>reset_input_controller;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>inputctl-&gt;pub.start_input_pass<sp/>=<sp/>start_input_pass;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>inputctl-&gt;pub.finish_input_pass<sp/>=<sp/>finish_input_pass;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>state:<sp/>can&apos;t<sp/>use<sp/>reset_input_controller<sp/>since<sp/>we<sp/>don&apos;t</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/><sp/><sp/>*<sp/>want<sp/>to<sp/>try<sp/>to<sp/>reset<sp/>other<sp/>modules<sp/>yet.</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>inputctl-&gt;pub.has_multiple_scans<sp/>=<sp/>FALSE;<sp/></highlight><highlight class="comment">/*<sp/>&quot;unknown&quot;<sp/>would<sp/>be<sp/>better<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>inputctl-&gt;pub.eoi_reached<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>inputctl-&gt;inheaders<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdinput.c"/>
  </compounddef>
</doxygen>
