<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="jdmainct_8c" kind="file">
    <compoundname>jdmainct.c</compoundname>
    <includes refid="jinclude_8h" local="yes">jinclude.h</includes>
    <includes refid="jpeglib_8h" local="yes">jpeglib.h</includes>
    <innerclass refid="structmy__main__controller" prot="public">my_main_controller</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="jdmainct_8c_1ad5c3cdfae3019b8223973041a2a1304b" prot="public" static="no">
        <name>JPEG_INTERNALS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" line="16" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jdmainct_8c_1aa8d5d29516b77e54e26f55d3cf655192" prot="public" static="no">
        <name>CTX_PREPARE_FOR_IMCU</name>
        <initializer>0	/* need to prepare for MCU row */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" line="137" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jdmainct_8c_1ae33dff6a25df359392a05ee0d5839348" prot="public" static="no">
        <name>CTX_PROCESS_IMCU</name>
        <initializer>1	/* feeding iMCU to postprocessor */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" line="138" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jdmainct_8c_1ae97dd41d81f8053ac761642c64501411" prot="public" static="no">
        <name>CTX_POSTPONED_ROW</name>
        <initializer>2	/* feeding postponed row group */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" line="139" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" bodystart="139" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="jdmainct_8c_1a49ad9801b57fe5efcdb472832d31510d" prot="public" static="no">
        <type><ref refid="structmy__main__controller" kindref="compound">my_main_controller</ref> *</type>
        <definition>typedef my_main_controller* my_main_ptr</definition>
        <argsstring></argsstring>
        <name>my_main_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" line="134" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="jdmainct_8c_1a2fbbbe93a32071d54c04ec01b545bf8e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void process_data_simple_main</definition>
        <argsstring>(j_decompress_ptr cinfo, JSAMPARRAY output_buf, JDIMENSION *out_row_ctr, JDIMENSION out_rows_avail)</argsstring>
        <name>process_data_simple_main</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>output_buf</declname>
        </param>
        <param>
          <type>JDIMENSION *</type>
          <declname>out_row_ctr</declname>
        </param>
        <param>
          <type>JDIMENSION</type>
          <declname>out_rows_avail</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" line="143" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" bodystart="345" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="jdmainct_8c_1a360ed94776e17cd8be04c54763d275e7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void process_data_context_main</definition>
        <argsstring>(j_decompress_ptr cinfo, JSAMPARRAY output_buf, JDIMENSION *out_row_ctr, JDIMENSION out_rows_avail)</argsstring>
        <name>process_data_context_main</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>output_buf</declname>
        </param>
        <param>
          <type>JDIMENSION *</type>
          <declname>out_row_ctr</declname>
        </param>
        <param>
          <type>JDIMENSION</type>
          <declname>out_rows_avail</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" line="146" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" bodystart="385" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="jdmainct_8c_1a020a20c986627032201e70f2f0701f8f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void alloc_funny_pointers</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>alloc_funny_pointers</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" line="157" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" bodystart="157" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="jdmainct_8c_1a60222c2a1316f9b6bdad86463a61543c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void make_funny_pointers</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>make_funny_pointers</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" line="195" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" bodystart="195" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="jdmainct_8c_1a95ea323c33d8b29b5b8d55187794e83e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void set_wraparound_pointers</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>set_wraparound_pointers</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" line="238" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" bodystart="238" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="jdmainct_8c_1a5626e2a98d632b809665df7de2de1004" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void set_bottom_pointers</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>set_bottom_pointers</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" line="266" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" bodystart="266" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="jdmainct_8c_1a68e4bb45d3a7ebe07dde78d692e6eb7c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void start_pass_main</definition>
        <argsstring>(j_decompress_ptr cinfo, J_BUF_MODE pass_mode)</argsstring>
        <name>start_pass_main</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type>J_BUF_MODE</type>
          <declname>pass_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" line="307" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" bodystart="307" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="jdmainct_8c_1a3579da7537b9c6eb8e9bd168a73923dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jinit_d_main_controller</definition>
        <argsstring>(j_decompress_ptr cinfo, boolean need_full_buffer)</argsstring>
        <name>jinit_d_main_controller</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>need_full_buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" line="476" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c" bodystart="476" bodyend="512"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>jdmainct.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1994-1995,<sp/>Thomas<sp/>G.<sp/>Lane.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Independent<sp/>JPEG<sp/>Group&apos;s<sp/>software.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>conditions<sp/>of<sp/>distribution<sp/>and<sp/>use,<sp/>see<sp/>the<sp/>accompanying<sp/>README<sp/>file.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>the<sp/>main<sp/>buffer<sp/>controller<sp/>for<sp/>decompression.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>The<sp/>main<sp/>buffer<sp/>lies<sp/>between<sp/>the<sp/>JPEG<sp/>decompressor<sp/>proper<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>post-processor;<sp/>it<sp/>holds<sp/>downsampled<sp/>data<sp/>in<sp/>the<sp/>JPEG<sp/>colorspace.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Note<sp/>that<sp/>this<sp/>code<sp/>is<sp/>bypassed<sp/>in<sp/>raw-data<sp/>mode,<sp/>since<sp/>the<sp/>application</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>supplies<sp/>the<sp/>equivalent<sp/>of<sp/>the<sp/>main<sp/>buffer<sp/>in<sp/>that<sp/>case.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JPEG_INTERNALS</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;jinclude.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jpeglib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>In<sp/>the<sp/>current<sp/>system<sp/>design,<sp/>the<sp/>main<sp/>buffer<sp/>need<sp/>never<sp/>be<sp/>a<sp/>full-image</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>buffer;<sp/>any<sp/>full-height<sp/>buffers<sp/>will<sp/>be<sp/>found<sp/>inside<sp/>the<sp/>coefficient<sp/>or</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>postprocessing<sp/>controllers.<sp/><sp/>Nonetheless,<sp/>the<sp/>main<sp/>controller<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>trivial.<sp/><sp/>Its<sp/>responsibility<sp/>is<sp/>to<sp/>provide<sp/>context<sp/>rows<sp/>for<sp/>upsampling/</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>rescaling,<sp/>and<sp/>doing<sp/>this<sp/>in<sp/>an<sp/>efficient<sp/>fashion<sp/>is<sp/>a<sp/>bit<sp/>tricky.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>Postprocessor<sp/>input<sp/>data<sp/>is<sp/>counted<sp/>in<sp/>&quot;row<sp/>groups&quot;.<sp/><sp/>A<sp/>row<sp/>group</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>is<sp/>defined<sp/>to<sp/>be<sp/>(v_samp_factor<sp/>*<sp/>DCT_scaled_size<sp/>/<sp/>min_DCT_scaled_size)</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>sample<sp/>rows<sp/>of<sp/>each<sp/>component.<sp/><sp/>(We<sp/>require<sp/>DCT_scaled_size<sp/>values<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>chosen<sp/>such<sp/>that<sp/>these<sp/>numbers<sp/>are<sp/>integers.<sp/><sp/>In<sp/>practice<sp/>DCT_scaled_size</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>values<sp/>will<sp/>likely<sp/>be<sp/>powers<sp/>of<sp/>two,<sp/>so<sp/>we<sp/>actually<sp/>have<sp/>the<sp/>stronger</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>condition<sp/>that<sp/>DCT_scaled_size<sp/>/<sp/>min_DCT_scaled_size<sp/>is<sp/>an<sp/>integer.)</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>Upsampling<sp/>will<sp/>typically<sp/>produce<sp/>max_v_samp_factor<sp/>pixel<sp/>rows<sp/>from<sp/>each</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>row<sp/>group<sp/>(times<sp/>any<sp/>additional<sp/>scale<sp/>factor<sp/>that<sp/>the<sp/>upsampler<sp/>is</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>applying).</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>The<sp/>coefficient<sp/>controller<sp/>will<sp/>deliver<sp/>data<sp/>to<sp/>us<sp/>one<sp/>iMCU<sp/>row<sp/>at<sp/>a<sp/>time;</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>each<sp/>iMCU<sp/>row<sp/>contains<sp/>v_samp_factor<sp/>*<sp/>DCT_scaled_size<sp/>sample<sp/>rows,<sp/>or</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>exactly<sp/>min_DCT_scaled_size<sp/>row<sp/>groups.<sp/><sp/>(This<sp/>amount<sp/>of<sp/>data<sp/>corresponds</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>to<sp/>one<sp/>row<sp/>of<sp/>MCUs<sp/>when<sp/>the<sp/>image<sp/>is<sp/>fully<sp/>interleaved.)<sp/><sp/>Note<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>number<sp/>of<sp/>sample<sp/>rows<sp/>varies<sp/>across<sp/>components,<sp/>but<sp/>the<sp/>number<sp/>of<sp/>row</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>groups<sp/>does<sp/>not.<sp/><sp/>Some<sp/>garbage<sp/>sample<sp/>rows<sp/>may<sp/>be<sp/>included<sp/>in<sp/>the<sp/>last<sp/>iMCU</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>row<sp/>at<sp/>the<sp/>bottom<sp/>of<sp/>the<sp/>image.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>Depending<sp/>on<sp/>the<sp/>vertical<sp/>scaling<sp/>algorithm<sp/>used,<sp/>the<sp/>upsampler<sp/>may<sp/>need</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>access<sp/>to<sp/>the<sp/>sample<sp/>row(s)<sp/>above<sp/>and<sp/>below<sp/>its<sp/>current<sp/>input<sp/>row<sp/>group.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>The<sp/>upsampler<sp/>is<sp/>required<sp/>to<sp/>set<sp/>need_context_rows<sp/>TRUE<sp/>at<sp/>global<sp/>selection</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>time<sp/>if<sp/>so.<sp/><sp/>When<sp/>need_context_rows<sp/>is<sp/>FALSE,<sp/>this<sp/>controller<sp/>can<sp/>simply</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>obtain<sp/>one<sp/>iMCU<sp/>row<sp/>at<sp/>a<sp/>time<sp/>from<sp/>the<sp/>coefficient<sp/>controller<sp/>and<sp/>dole<sp/>it</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>out<sp/>as<sp/>row<sp/>groups<sp/>to<sp/>the<sp/>postprocessor.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>When<sp/>need_context_rows<sp/>is<sp/>TRUE,<sp/>this<sp/>controller<sp/>guarantees<sp/>that<sp/>the<sp/>buffer</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>passed<sp/>to<sp/>postprocessing<sp/>contains<sp/>at<sp/>least<sp/>one<sp/>row<sp/>group&apos;s<sp/>worth<sp/>of<sp/>samples</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>above<sp/>and<sp/>below<sp/>the<sp/>row<sp/>group(s)<sp/>being<sp/>processed.<sp/><sp/>Note<sp/>that<sp/>the<sp/>context</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>rows<sp/>&quot;above&quot;<sp/>the<sp/>first<sp/>passed<sp/>row<sp/>group<sp/>appear<sp/>at<sp/>negative<sp/>row<sp/>offsets<sp/>in</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>the<sp/>passed<sp/>buffer.<sp/><sp/>At<sp/>the<sp/>top<sp/>and<sp/>bottom<sp/>of<sp/>the<sp/>image,<sp/>the<sp/>required</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>context<sp/>rows<sp/>are<sp/>manufactured<sp/>by<sp/>duplicating<sp/>the<sp/>first<sp/>or<sp/>last<sp/>real<sp/>sample</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>row;<sp/>this<sp/>avoids<sp/>having<sp/>special<sp/>cases<sp/>in<sp/>the<sp/>upsampling<sp/>inner<sp/>loops.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>The<sp/>amount<sp/>of<sp/>context<sp/>is<sp/>fixed<sp/>at<sp/>one<sp/>row<sp/>group<sp/>just<sp/>because<sp/>that&apos;s<sp/>a</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>convenient<sp/>number<sp/>for<sp/>this<sp/>controller<sp/>to<sp/>work<sp/>with.<sp/><sp/>The<sp/>existing</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>upsamplers<sp/>really<sp/>only<sp/>need<sp/>one<sp/>sample<sp/>row<sp/>of<sp/>context.<sp/><sp/>An<sp/>upsampler</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>supporting<sp/>arbitrary<sp/>output<sp/>rescaling<sp/>might<sp/>wish<sp/>for<sp/>more<sp/>than<sp/>one<sp/>row</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>group<sp/>of<sp/>context<sp/>when<sp/>shrinking<sp/>the<sp/>image;<sp/>tough,<sp/>we<sp/>don&apos;t<sp/>handle<sp/>that.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>(This<sp/>is<sp/>justified<sp/>by<sp/>the<sp/>assumption<sp/>that<sp/>downsizing<sp/>will<sp/>be<sp/>handled<sp/>mostly</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>by<sp/>adjusting<sp/>the<sp/>DCT_scaled_size<sp/>values,<sp/>so<sp/>that<sp/>the<sp/>actual<sp/>scale<sp/>factor<sp/>at</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>the<sp/>upsample<sp/>step<sp/>needn&apos;t<sp/>be<sp/>much<sp/>less<sp/>than<sp/>one.)</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>To<sp/>provide<sp/>the<sp/>desired<sp/>context,<sp/>we<sp/>have<sp/>to<sp/>retain<sp/>the<sp/>last<sp/>two<sp/>row<sp/>groups</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>of<sp/>one<sp/>iMCU<sp/>row<sp/>while<sp/>reading<sp/>in<sp/>the<sp/>next<sp/>iMCU<sp/>row.<sp/><sp/>(The<sp/>last<sp/>row<sp/>group</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>can&apos;t<sp/>be<sp/>processed<sp/>until<sp/>we<sp/>have<sp/>another<sp/>row<sp/>group<sp/>for<sp/>its<sp/>below-context,</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>and<sp/>so<sp/>we<sp/>have<sp/>to<sp/>save<sp/>the<sp/>next-to-last<sp/>group<sp/>too<sp/>for<sp/>its<sp/>above-context.)</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>We<sp/>could<sp/>do<sp/>this<sp/>most<sp/>simply<sp/>by<sp/>copying<sp/>data<sp/>around<sp/>in<sp/>our<sp/>buffer,<sp/>but</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>that&apos;d<sp/>be<sp/>very<sp/>slow.<sp/><sp/>We<sp/>can<sp/>avoid<sp/>copying<sp/>any<sp/>data<sp/>by<sp/>creating<sp/>a<sp/>rather</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>strange<sp/>pointer<sp/>structure.<sp/><sp/>Here&apos;s<sp/>how<sp/>it<sp/>works.<sp/><sp/>We<sp/>allocate<sp/>a<sp/>workspace</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>consisting<sp/>of<sp/>M+2<sp/>row<sp/>groups<sp/>(where<sp/>M<sp/>=<sp/>min_DCT_scaled_size<sp/>is<sp/>the<sp/>number</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>of<sp/>row<sp/>groups<sp/>per<sp/>iMCU<sp/>row).<sp/><sp/>We<sp/>create<sp/>two<sp/>sets<sp/>of<sp/>redundant<sp/>pointers<sp/>to</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>the<sp/>workspace.<sp/><sp/>Labeling<sp/>the<sp/>physical<sp/>row<sp/>groups<sp/>0<sp/>to<sp/>M+1,<sp/>the<sp/>synthesized</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>pointer<sp/>lists<sp/>look<sp/>like<sp/>this:</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M+1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M-1</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>master<sp/>pointer<sp/>--&gt;<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>master<sp/>pointer<sp/>--&gt;<sp/>0</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M-3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M-3</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M-2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M+1</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M-2</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M+1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M-1</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/>We<sp/>read<sp/>alternate<sp/>iMCU<sp/>rows<sp/>using<sp/>each<sp/>master<sp/>pointer;<sp/>thus<sp/>the<sp/>last<sp/>two</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/>row<sp/>groups<sp/>of<sp/>the<sp/>previous<sp/>iMCU<sp/>row<sp/>remain<sp/>un-overwritten<sp/>in<sp/>the<sp/>workspace.</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>The<sp/>pointer<sp/>lists<sp/>are<sp/>set<sp/>up<sp/>so<sp/>that<sp/>the<sp/>required<sp/>context<sp/>rows<sp/>appear<sp/>to</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/>be<sp/>adjacent<sp/>to<sp/>the<sp/>proper<sp/>places<sp/>when<sp/>we<sp/>pass<sp/>the<sp/>pointer<sp/>lists<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>upsampler.</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>pictures<sp/>describe<sp/>the<sp/>normal<sp/>state<sp/>of<sp/>the<sp/>pointer<sp/>lists.</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/>At<sp/>top<sp/>and<sp/>bottom<sp/>of<sp/>the<sp/>image,<sp/>we<sp/>diddle<sp/>the<sp/>pointer<sp/>lists<sp/>to<sp/>duplicate</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/>the<sp/>first<sp/>or<sp/>last<sp/>sample<sp/>row<sp/>as<sp/>necessary<sp/>(this<sp/>is<sp/>cheaper<sp/>than<sp/>copying</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>sample<sp/>rows<sp/>around).</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>This<sp/>scheme<sp/>breaks<sp/>down<sp/>if<sp/>M<sp/>&lt;<sp/>2,<sp/>ie,<sp/>min_DCT_scaled_size<sp/>is<sp/>1.<sp/><sp/>In<sp/>that</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/>situation<sp/>each<sp/>iMCU<sp/>row<sp/>provides<sp/>only<sp/>one<sp/>row<sp/>group<sp/>so<sp/>the<sp/>buffering<sp/>logic</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>must<sp/>be<sp/>different<sp/>(eg,<sp/>we<sp/>must<sp/>read<sp/>two<sp/>iMCU<sp/>rows<sp/>before<sp/>we<sp/>can<sp/>emit<sp/>the</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/>first<sp/>row<sp/>group).<sp/><sp/>For<sp/>now,<sp/>we<sp/>simply<sp/>do<sp/>not<sp/>support<sp/>providing<sp/>context</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/>rows<sp/>when<sp/>min_DCT_scaled_size<sp/>is<sp/>1.<sp/><sp/>That<sp/>combination<sp/>seems<sp/>unlikely<sp/>to</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/>be<sp/>worth<sp/>providing<sp/>---<sp/>if<sp/>someone<sp/>wants<sp/>a<sp/>1/8th-size<sp/>preview,<sp/>they<sp/>probably</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/>want<sp/>it<sp/>quick<sp/>and<sp/>dirty,<sp/>so<sp/>a<sp/>context-free<sp/>upsampler<sp/>is<sp/>sufficient.</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>buffer<sp/>controller<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__d__main__controller" kindref="compound">jpeg_d_main_controller</ref><sp/>pub;<sp/></highlight><highlight class="comment">/*<sp/>public<sp/>fields<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pointer<sp/>to<sp/>allocated<sp/>workspace<sp/>(M<sp/>or<sp/>M+2<sp/>row<sp/>groups).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>JSAMPARRAY<sp/>buffer[MAX_COMPONENTS];</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>buffer_full;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Have<sp/>we<sp/>gotten<sp/>an<sp/>iMCU<sp/>row<sp/>from<sp/>decoder?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>rowgroup_ctr;<sp/><sp/></highlight><highlight class="comment">/*<sp/>counts<sp/>row<sp/>groups<sp/>output<sp/>to<sp/>postprocessor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remaining<sp/>fields<sp/>are<sp/>only<sp/>used<sp/>in<sp/>the<sp/>context<sp/>case.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>These<sp/>are<sp/>the<sp/>master<sp/>pointers<sp/>to<sp/>the<sp/>funny-order<sp/>pointer<sp/>lists.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>JSAMPIMAGE<sp/>xbuffer[2];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointers<sp/>to<sp/>weird<sp/>pointer<sp/>lists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whichptr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>indicates<sp/>which<sp/>pointer<sp/>set<sp/>is<sp/>now<sp/>in<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>context_state;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>process_data<sp/>state<sp/>machine<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>rowgroups_avail;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>row<sp/>groups<sp/>available<sp/>to<sp/>postprocessor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>iMCU_row_ctr;<sp/><sp/></highlight><highlight class="comment">/*<sp/>counts<sp/>iMCU<sp/>rows<sp/>to<sp/>detect<sp/>image<sp/>top/bot<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">}<sp/><ref refid="structmy__main__controller" kindref="compound">my_main_controller</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structmy__main__controller" kindref="compound">my_main_controller</ref><sp/>*<sp/><ref refid="structmy__main__controller" kindref="compound">my_main_ptr</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>context_state<sp/>values:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CTX_PREPARE_FOR_IMCU<sp/><sp/><sp/><sp/>0<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>need<sp/>to<sp/>prepare<sp/>for<sp/>MCU<sp/>row<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CTX_PROCESS_IMCU<sp/><sp/><sp/><sp/>1<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>feeding<sp/>iMCU<sp/>to<sp/>postprocessor<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CTX_POSTPONED_ROW<sp/><sp/><sp/>2<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>feeding<sp/>postponed<sp/>row<sp/>group<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Forward<sp/>declarations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>process_data_simple_main</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>JPP((<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/>JSAMPARRAY<sp/>output_buf,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>*out_row_ctr,<sp/>JDIMENSION<sp/>out_rows_avail));</highlight></codeline>
<codeline lineno="146"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>process_data_context_main</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>JPP((<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/>JSAMPARRAY<sp/>output_buf,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>*out_row_ctr,<sp/>JDIMENSION<sp/>out_rows_avail));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QUANT_2PASS_SUPPORTED</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"></highlight><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>process_data_crank_post</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>JPP((<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/>JSAMPARRAY<sp/>output_buf,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>*out_row_ctr,<sp/>JDIMENSION<sp/>out_rows_avail));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">alloc_funny_pointers<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Allocate<sp/>space<sp/>for<sp/>the<sp/>funny<sp/>pointer<sp/>lists.</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>done<sp/>only<sp/>once,<sp/>not<sp/>once<sp/>per<sp/>pass.</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><ref refid="structmy__main__controller" kindref="compound">my_main_ptr</ref><sp/>main<sp/>=<sp/>(<ref refid="structmy__main__controller" kindref="compound">my_main_ptr</ref>)<sp/>cinfo-&gt;main;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci,<sp/>rgroup;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M<sp/>=<sp/>cinfo-&gt;min_DCT_scaled_size;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*compptr;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>JSAMPARRAY<sp/>xbuf;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>top-level<sp/>space<sp/>for<sp/>component<sp/>array<sp/>pointers.</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/>*<sp/>We<sp/>alloc<sp/>both<sp/>arrays<sp/>with<sp/>one<sp/>call<sp/>to<sp/>save<sp/>a<sp/>few<sp/>cycles.</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>main-&gt;xbuffer[0]<sp/>=<sp/>(JSAMPIMAGE)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;num_components<sp/>*<sp/>2<sp/>*<sp/>SIZEOF(JSAMPARRAY));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>main-&gt;xbuffer[1]<sp/>=<sp/>main-&gt;xbuffer[0]<sp/>+<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0,<sp/>compptr<sp/>=<sp/>cinfo-&gt;comp_info;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci++,<sp/>compptr++)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>rgroup<sp/>=<sp/>(compptr-&gt;v_samp_factor<sp/>*<sp/>compptr-&gt;DCT_scaled_size)<sp/>/</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;min_DCT_scaled_size;<sp/></highlight><highlight class="comment">/*<sp/>height<sp/>of<sp/>a<sp/>row<sp/>group<sp/>of<sp/>component<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>space<sp/>for<sp/>pointer<sp/>lists<sp/>---<sp/>M+4<sp/>row<sp/>groups<sp/>in<sp/>each<sp/>list.</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>We<sp/>alloc<sp/>both<sp/>pointer<sp/>lists<sp/>with<sp/>one<sp/>call<sp/>to<sp/>save<sp/>a<sp/>few<sp/>cycles.</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>xbuf<sp/>=<sp/>(JSAMPARRAY)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>*<sp/>(rgroup<sp/>*<sp/>(M<sp/>+<sp/>4))<sp/>*<sp/>SIZEOF(JSAMPROW));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>xbuf<sp/>+=<sp/>rgroup;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>want<sp/>one<sp/>row<sp/>group<sp/>at<sp/>negative<sp/>offsets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>main-&gt;xbuffer[0][ci]<sp/>=<sp/>xbuf;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>xbuf<sp/>+=<sp/>rgroup<sp/>*<sp/>(M<sp/>+<sp/>4);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>main-&gt;xbuffer[1][ci]<sp/>=<sp/>xbuf;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal">make_funny_pointers<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Create<sp/>the<sp/>funny<sp/>pointer<sp/>lists<sp/>discussed<sp/>in<sp/>the<sp/>comments<sp/>above.</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*<sp/>The<sp/>actual<sp/>workspace<sp/>is<sp/>already<sp/>allocated<sp/>(in<sp/>main-&gt;buffer),</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/>and<sp/>the<sp/>space<sp/>for<sp/>the<sp/>pointer<sp/>lists<sp/>is<sp/>allocated<sp/>too.</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/>This<sp/>routine<sp/>just<sp/>fills<sp/>in<sp/>the<sp/>curiously<sp/>ordered<sp/>lists.</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*<sp/>This<sp/>will<sp/>be<sp/>repeated<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>each<sp/>pass.</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><ref refid="structmy__main__controller" kindref="compound">my_main_ptr</ref><sp/>main<sp/>=<sp/>(<ref refid="structmy__main__controller" kindref="compound">my_main_ptr</ref>)<sp/>cinfo-&gt;main;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci,<sp/>i,<sp/>rgroup;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M<sp/>=<sp/>cinfo-&gt;min_DCT_scaled_size;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*compptr;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>JSAMPARRAY<sp/>buf,<sp/>xbuf0,<sp/>xbuf1;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>for<sp/>(ci<sp/>=<sp/>0,<sp/>compptr<sp/>=<sp/>cinfo-&gt;comp_info;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci++,<sp/>compptr++)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>rgroup<sp/>=<sp/>(compptr-&gt;v_samp_factor<sp/>*<sp/>compptr-&gt;DCT_scaled_size)<sp/>/</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;min_DCT_scaled_size;<sp/></highlight><highlight class="comment">/*<sp/>height<sp/>of<sp/>a<sp/>row<sp/>group<sp/>of<sp/>component<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>xbuf0<sp/>=<sp/>main-&gt;xbuffer[0][ci];</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>xbuf1<sp/>=<sp/>main-&gt;xbuffer[1][ci];</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>copy<sp/>the<sp/>workspace<sp/>pointers<sp/>as-is<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>main-&gt;buffer[ci];</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>rgroup<sp/>*<sp/>(M<sp/>+<sp/>2);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xbuf0[i]<sp/>=<sp/>xbuf1[i]<sp/>=<sp/>buf[i];</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>the<sp/>second<sp/>list,<sp/>put<sp/>the<sp/>last<sp/>four<sp/>row<sp/>groups<sp/>in<sp/>swapped<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>rgroup<sp/>*<sp/>2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xbuf1[rgroup*(M-2)<sp/>+<sp/>i]<sp/>=<sp/>buf[rgroup*M<sp/>+<sp/>i];</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xbuf1[rgroup*M<sp/>+<sp/>i]<sp/>=<sp/>buf[rgroup*(M-2)<sp/>+<sp/>i];</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>wraparound<sp/>pointers<sp/>at<sp/>top<sp/>and<sp/>bottom<sp/>will<sp/>be<sp/>filled<sp/>later</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>(see<sp/>set_wraparound_pointers,<sp/>below).<sp/><sp/>Initially<sp/>we<sp/>want<sp/>the<sp/>&quot;above&quot;</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>pointers<sp/>to<sp/>duplicate<sp/>the<sp/>first<sp/>actual<sp/>data<sp/>line.<sp/><sp/>This<sp/>only<sp/>needs</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>happen<sp/>in<sp/>xbuffer[0].</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>rgroup;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xbuf0[i<sp/>-<sp/>rgroup]<sp/>=<sp/>xbuf0[0];</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">set_wraparound_pointers<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>the<sp/>&quot;wraparound&quot;<sp/>pointers<sp/>at<sp/>top<sp/>and<sp/>bottom<sp/>of<sp/>the<sp/>pointer<sp/>lists.</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*<sp/>This<sp/>changes<sp/>the<sp/>pointer<sp/>list<sp/>state<sp/>from<sp/>top-of-image<sp/>to<sp/>the<sp/>normal<sp/>state.</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><ref refid="structmy__main__controller" kindref="compound">my_main_ptr</ref><sp/>main<sp/>=<sp/>(<ref refid="structmy__main__controller" kindref="compound">my_main_ptr</ref>)<sp/>cinfo-&gt;main;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci,<sp/>i,<sp/>rgroup;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M<sp/>=<sp/>cinfo-&gt;min_DCT_scaled_size;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*compptr;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>JSAMPARRAY<sp/>xbuf0,<sp/>xbuf1;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>for<sp/>(ci<sp/>=<sp/>0,<sp/>compptr<sp/>=<sp/>cinfo-&gt;comp_info;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci++,<sp/>compptr++)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>rgroup<sp/>=<sp/>(compptr-&gt;v_samp_factor<sp/>*<sp/>compptr-&gt;DCT_scaled_size)<sp/>/</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;min_DCT_scaled_size;<sp/></highlight><highlight class="comment">/*<sp/>height<sp/>of<sp/>a<sp/>row<sp/>group<sp/>of<sp/>component<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>xbuf0<sp/>=<sp/>main-&gt;xbuffer[0][ci];</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>xbuf1<sp/>=<sp/>main-&gt;xbuffer[1][ci];</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>rgroup;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xbuf0[i<sp/>-<sp/>rgroup]<sp/>=<sp/>xbuf0[rgroup*(M+1)<sp/>+<sp/>i];</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xbuf1[i<sp/>-<sp/>rgroup]<sp/>=<sp/>xbuf1[rgroup*(M+1)<sp/>+<sp/>i];</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xbuf0[rgroup*(M+2)<sp/>+<sp/>i]<sp/>=<sp/>xbuf0[i];</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xbuf1[rgroup*(M+2)<sp/>+<sp/>i]<sp/>=<sp/>xbuf1[i];</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">set_bottom_pointers<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Change<sp/>the<sp/>pointer<sp/>lists<sp/>to<sp/>duplicate<sp/>the<sp/>last<sp/>sample<sp/>row<sp/>at<sp/>the<sp/>bottom</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/>of<sp/>the<sp/>image.<sp/><sp/>whichptr<sp/>indicates<sp/>which<sp/>xbuffer<sp/>holds<sp/>the<sp/>final<sp/>iMCU<sp/>row.</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/>Also<sp/>sets<sp/>rowgroups_avail<sp/>to<sp/>indicate<sp/>number<sp/>of<sp/>nondummy<sp/>row<sp/>groups<sp/>in<sp/>row.</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><ref refid="structmy__main__controller" kindref="compound">my_main_ptr</ref><sp/>main<sp/>=<sp/>(<ref refid="structmy__main__controller" kindref="compound">my_main_ptr</ref>)<sp/>cinfo-&gt;main;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci,<sp/>i,<sp/>rgroup,<sp/>iMCUheight,<sp/>rows_left;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*compptr;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>JSAMPARRAY<sp/>xbuf;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>for<sp/>(ci<sp/>=<sp/>0,<sp/>compptr<sp/>=<sp/>cinfo-&gt;comp_info;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci++,<sp/>compptr++)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Count<sp/>sample<sp/>rows<sp/>in<sp/>one<sp/>iMCU<sp/>row<sp/>and<sp/>in<sp/>one<sp/>row<sp/>group<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>iMCUheight<sp/>=<sp/>compptr-&gt;v_samp_factor<sp/>*<sp/>compptr-&gt;DCT_scaled_size;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>rgroup<sp/>=<sp/>iMCUheight<sp/>/<sp/>cinfo-&gt;min_DCT_scaled_size;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Count<sp/>nondummy<sp/>sample<sp/>rows<sp/>remaining<sp/>for<sp/>this<sp/>component<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>rows_left<sp/>=<sp/>(int)<sp/>(compptr-&gt;downsampled_height<sp/>%<sp/>(JDIMENSION)<sp/>iMCUheight);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rows_left<sp/>==<sp/>0)<sp/>rows_left<sp/>=<sp/>iMCUheight;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Count<sp/>nondummy<sp/>row<sp/>groups.<sp/><sp/>Should<sp/>get<sp/>same<sp/>answer<sp/>for<sp/>each<sp/>component,</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>so<sp/>we<sp/>need<sp/>only<sp/>do<sp/>it<sp/>once.</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ci<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>main-&gt;rowgroups_avail<sp/>=<sp/>(JDIMENSION)<sp/>((rows_left-1)<sp/>/<sp/>rgroup<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Duplicate<sp/>the<sp/>last<sp/>real<sp/>sample<sp/>row<sp/>rgroup*2<sp/>times;<sp/>this<sp/>pads<sp/>out<sp/>the</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>last<sp/>partial<sp/>rowgroup<sp/>and<sp/>ensures<sp/>at<sp/>least<sp/>one<sp/>full<sp/>rowgroup<sp/>of<sp/>context.</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>xbuf<sp/>=<sp/>main-&gt;xbuffer[main-&gt;whichptr][ci];</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>rgroup<sp/>*<sp/>2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xbuf[rows_left<sp/>+<sp/>i]<sp/>=<sp/>xbuf[rows_left-1];</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*<sp/>Initialize<sp/>for<sp/>a<sp/>processing<sp/>pass.</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal">start_pass_main<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/>J_BUF_MODE<sp/>pass_mode)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><ref refid="structmy__main__controller" kindref="compound">my_main_ptr</ref><sp/>main<sp/>=<sp/>(<ref refid="structmy__main__controller" kindref="compound">my_main_ptr</ref>)<sp/>cinfo-&gt;main;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>switch<sp/>(pass_mode)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JBUF_PASS_THRU:</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;upsample-&gt;need_context_rows)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>main-&gt;pub.process_data<sp/>=<sp/>process_data_context_main;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>make_funny_pointers(cinfo);<sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>the<sp/>xbuffer[]<sp/>lists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>main-&gt;whichptr<sp/>=<sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>first<sp/>iMCU<sp/>row<sp/>into<sp/>xbuffer[0]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>main-&gt;context_state<sp/>=<sp/>CTX_PREPARE_FOR_IMCU;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>main-&gt;iMCU_row_ctr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Simple<sp/>case<sp/>with<sp/>no<sp/>context<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>main-&gt;pub.process_data<sp/>=<sp/>process_data_simple_main;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>main-&gt;buffer_full<sp/>=<sp/>FALSE;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Mark<sp/>buffer<sp/>empty<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>main-&gt;rowgroup_ctr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QUANT_2PASS_SUPPORTED</highlight></codeline>
<codeline lineno="327"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JBUF_CRANK_DEST:</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>last<sp/>pass<sp/>of<sp/>2-pass<sp/>quantization,<sp/>just<sp/>crank<sp/>the<sp/>postprocessor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>main-&gt;pub.process_data<sp/>=<sp/>process_data_crank_post;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="332"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_BAD_BUFFER_MODE);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*<sp/>Process<sp/>some<sp/>data.</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*<sp/>This<sp/>handles<sp/>the<sp/>simple<sp/>case<sp/>where<sp/>no<sp/>context<sp/>is<sp/>required.</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal">process_data_simple_main<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>output_buf,<sp/>JDIMENSION<sp/>*out_row_ctr,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>out_rows_avail)</highlight></codeline>
<codeline lineno="348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><ref refid="structmy__main__controller" kindref="compound">my_main_ptr</ref><sp/>main<sp/>=<sp/>(<ref refid="structmy__main__controller" kindref="compound">my_main_ptr</ref>)<sp/>cinfo-&gt;main;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>rowgroups_avail;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>input<sp/>data<sp/>if<sp/>we<sp/>haven&apos;t<sp/>filled<sp/>the<sp/>main<sp/>buffer<sp/>yet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>if<sp/>(!<sp/>main-&gt;buffer_full)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>(*cinfo-&gt;coef-&gt;decompress_data)<sp/>(cinfo,<sp/>main-&gt;buffer))</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>suspension<sp/>forced,<sp/>can<sp/>do<sp/>nothing<sp/>more<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>main-&gt;buffer_full<sp/>=<sp/>TRUE;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>OK,<sp/>we<sp/>have<sp/>an<sp/>iMCU<sp/>row<sp/>to<sp/>work<sp/>with<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>There<sp/>are<sp/>always<sp/>min_DCT_scaled_size<sp/>row<sp/>groups<sp/>in<sp/>an<sp/>iMCU<sp/>row.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>rowgroups_avail<sp/>=<sp/>(JDIMENSION)<sp/>cinfo-&gt;min_DCT_scaled_size;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note:<sp/>at<sp/>the<sp/>bottom<sp/>of<sp/>the<sp/>image,<sp/>we<sp/>may<sp/>pass<sp/>extra<sp/>garbage<sp/>row<sp/>groups</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/><sp/><sp/>*<sp/>to<sp/>the<sp/>postprocessor.<sp/><sp/>The<sp/>postprocessor<sp/>has<sp/>to<sp/>check<sp/>for<sp/>bottom</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/><sp/><sp/>*<sp/>of<sp/>image<sp/>anyway<sp/>(at<sp/>row<sp/>resolution),<sp/>so<sp/>no<sp/>point<sp/>in<sp/>us<sp/>doing<sp/>it<sp/>too.</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Feed<sp/>the<sp/>postprocessor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>(*cinfo-&gt;post-&gt;post_process_data)<sp/>(cinfo,<sp/>main-&gt;buffer,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;main-&gt;rowgroup_ctr,<sp/>rowgroups_avail,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_buf,<sp/>out_row_ctr,<sp/>out_rows_avail);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Has<sp/>postprocessor<sp/>consumed<sp/>all<sp/>the<sp/>data<sp/>yet?<sp/>If<sp/>so,<sp/>mark<sp/>buffer<sp/>empty<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(main-&gt;rowgroup_ctr<sp/>&gt;=<sp/>rowgroups_avail)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>main-&gt;buffer_full<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>main-&gt;rowgroup_ctr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*<sp/>Process<sp/>some<sp/>data.</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*<sp/>This<sp/>handles<sp/>the<sp/>case<sp/>where<sp/>context<sp/>rows<sp/>must<sp/>be<sp/>provided.</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal">process_data_context_main<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>output_buf,<sp/>JDIMENSION<sp/>*out_row_ctr,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>out_rows_avail)</highlight></codeline>
<codeline lineno="388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><ref refid="structmy__main__controller" kindref="compound">my_main_ptr</ref><sp/>main<sp/>=<sp/>(<ref refid="structmy__main__controller" kindref="compound">my_main_ptr</ref>)<sp/>cinfo-&gt;main;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>input<sp/>data<sp/>if<sp/>we<sp/>haven&apos;t<sp/>filled<sp/>the<sp/>main<sp/>buffer<sp/>yet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>if<sp/>(!<sp/>main-&gt;buffer_full)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>(*cinfo-&gt;coef-&gt;decompress_data)<sp/>(cinfo,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>main-&gt;xbuffer[main-&gt;whichptr]))</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>suspension<sp/>forced,<sp/>can<sp/>do<sp/>nothing<sp/>more<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>main-&gt;buffer_full<sp/>=<sp/>TRUE;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>OK,<sp/>we<sp/>have<sp/>an<sp/>iMCU<sp/>row<sp/>to<sp/>work<sp/>with<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>main-&gt;iMCU_row_ctr++;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>count<sp/>rows<sp/>received<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Postprocessor<sp/>typically<sp/>will<sp/>not<sp/>swallow<sp/>all<sp/>the<sp/>input<sp/>data<sp/>it<sp/>is<sp/>handed</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/><sp/><sp/>*<sp/>in<sp/>one<sp/>call<sp/>(due<sp/>to<sp/>filling<sp/>the<sp/>output<sp/>buffer<sp/>first).<sp/><sp/>Must<sp/>be<sp/>prepared</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/><sp/><sp/>*<sp/>to<sp/>exit<sp/>and<sp/>restart.<sp/><sp/>This<sp/>switch<sp/>lets<sp/>us<sp/>keep<sp/>track<sp/>of<sp/>how<sp/>far<sp/>we<sp/>got.</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Note<sp/>that<sp/>each<sp/>case<sp/>falls<sp/>through<sp/>to<sp/>the<sp/>next<sp/>on<sp/>successful<sp/>completion.</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(main-&gt;context_state)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CTX_POSTPONED_ROW:</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>postprocessor<sp/>using<sp/>previously<sp/>set<sp/>pointers<sp/>for<sp/>postponed<sp/>row<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;post-&gt;post_process_data)<sp/>(cinfo,<sp/>main-&gt;xbuffer[main-&gt;whichptr],</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;main-&gt;rowgroup_ctr,<sp/>main-&gt;rowgroups_avail,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_buf,<sp/>out_row_ctr,<sp/>out_rows_avail);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(main-&gt;rowgroup_ctr<sp/>&lt;<sp/>main-&gt;rowgroups_avail)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Need<sp/>to<sp/>suspend<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>main-&gt;context_state<sp/>=<sp/>CTX_PREPARE_FOR_IMCU;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*out_row_ctr<sp/>&gt;=<sp/>out_rows_avail)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Postprocessor<sp/>exactly<sp/>filled<sp/>output<sp/>buf<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*FALLTHROUGH*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CTX_PREPARE_FOR_IMCU:</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prepare<sp/>to<sp/>process<sp/>first<sp/>M-1<sp/>row<sp/>groups<sp/>of<sp/>this<sp/>iMCU<sp/>row<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>main-&gt;rowgroup_ctr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>main-&gt;rowgroups_avail<sp/>=<sp/>(JDIMENSION)<sp/>(cinfo-&gt;min_DCT_scaled_size<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>bottom<sp/>of<sp/>image:<sp/>if<sp/>so,<sp/>tweak<sp/>pointers<sp/>to<sp/>&quot;duplicate&quot;</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>last<sp/>sample<sp/>row,<sp/>and<sp/>adjust<sp/>rowgroups_avail<sp/>to<sp/>ignore<sp/>padding<sp/>rows.</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(main-&gt;iMCU_row_ctr<sp/>==<sp/>cinfo-&gt;total_iMCU_rows)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_bottom_pointers(cinfo);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>main-&gt;context_state<sp/>=<sp/>CTX_PROCESS_IMCU;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*FALLTHROUGH*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CTX_PROCESS_IMCU:</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>postprocessor<sp/>using<sp/>previously<sp/>set<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;post-&gt;post_process_data)<sp/>(cinfo,<sp/>main-&gt;xbuffer[main-&gt;whichptr],</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;main-&gt;rowgroup_ctr,<sp/>main-&gt;rowgroups_avail,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_buf,<sp/>out_row_ctr,<sp/>out_rows_avail);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(main-&gt;rowgroup_ctr<sp/>&lt;<sp/>main-&gt;rowgroups_avail)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Need<sp/>to<sp/>suspend<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>After<sp/>the<sp/>first<sp/>iMCU,<sp/>change<sp/>wraparound<sp/>pointers<sp/>to<sp/>normal<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(main-&gt;iMCU_row_ctr<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_wraparound_pointers(cinfo);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prepare<sp/>to<sp/>load<sp/>new<sp/>iMCU<sp/>row<sp/>using<sp/>other<sp/>xbuffer<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>main-&gt;whichptr<sp/>^=<sp/>1;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0=&gt;1<sp/>or<sp/>1=&gt;0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>main-&gt;buffer_full<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Still<sp/>need<sp/>to<sp/>process<sp/>last<sp/>row<sp/>group<sp/>of<sp/>this<sp/>iMCU<sp/>row,<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>which<sp/>is<sp/>saved<sp/>at<sp/>index<sp/>M+1<sp/>of<sp/>the<sp/>other<sp/>xbuffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>main-&gt;rowgroup_ctr<sp/>=<sp/>(JDIMENSION)<sp/>(cinfo-&gt;min_DCT_scaled_size<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>main-&gt;rowgroups_avail<sp/>=<sp/>(JDIMENSION)<sp/>(cinfo-&gt;min_DCT_scaled_size<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>main-&gt;context_state<sp/>=<sp/>CTX_POSTPONED_ROW;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/>*<sp/>Process<sp/>some<sp/>data.</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/>*<sp/>Final<sp/>pass<sp/>of<sp/>two-pass<sp/>quantization:<sp/>just<sp/>call<sp/>the<sp/>postprocessor.</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/>*<sp/>Source<sp/>data<sp/>will<sp/>be<sp/>the<sp/>postprocessor<sp/>controller&apos;s<sp/>internal<sp/>buffer.</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QUANT_2PASS_SUPPORTED</highlight></codeline>
<codeline lineno="457"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal">process_data_crank_post<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>output_buf,<sp/>JDIMENSION<sp/>*out_row_ctr,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>out_rows_avail)</highlight></codeline>
<codeline lineno="462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>(*cinfo-&gt;post-&gt;post_process_data)<sp/>(cinfo,<sp/>(JSAMPIMAGE)<sp/>NULL,</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(JDIMENSION<sp/>*)<sp/>NULL,<sp/>(JDIMENSION)<sp/>0,</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_buf,<sp/>out_row_ctr,<sp/>out_rows_avail);</highlight></codeline>
<codeline lineno="466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>QUANT_2PASS_SUPPORTED<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="469"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/>*<sp/>Initialize<sp/>main<sp/>buffer<sp/>controller.</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal">jinit_d_main_controller<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>need_full_buffer)</highlight></codeline>
<codeline lineno="477"><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><ref refid="structmy__main__controller" kindref="compound">my_main_ptr</ref><sp/>main;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci,<sp/>rgroup,<sp/>ngroups;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*compptr;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>main<sp/>=<sp/>(<ref refid="structmy__main__controller" kindref="compound">my_main_ptr</ref>)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SIZEOF(<ref refid="structmy__main__controller" kindref="compound">my_main_controller</ref>));</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>cinfo-&gt;main<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__d__main__controller" kindref="compound">jpeg_d_main_controller</ref><sp/>*)<sp/>main;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>main-&gt;pub.start_pass<sp/>=<sp/>start_pass_main;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(need_full_buffer)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shouldn&apos;t<sp/>happen<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_BAD_BUFFER_MODE);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>the<sp/>workspace.</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/><sp/><sp/>*<sp/>ngroups<sp/>is<sp/>the<sp/>number<sp/>of<sp/>row<sp/>groups<sp/>we<sp/>need.</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;upsample-&gt;need_context_rows)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;min_DCT_scaled_size<sp/>&lt;<sp/>2)<sp/></highlight><highlight class="comment">/*<sp/>unsupported,<sp/>see<sp/>comments<sp/>above<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_NOTIMPL);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>alloc_funny_pointers(cinfo);<sp/></highlight><highlight class="comment">/*<sp/>Alloc<sp/>space<sp/>for<sp/>xbuffer[]<sp/>lists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>ngroups<sp/>=<sp/>cinfo-&gt;min_DCT_scaled_size<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>ngroups<sp/>=<sp/>cinfo-&gt;min_DCT_scaled_size;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0,<sp/>compptr<sp/>=<sp/>cinfo-&gt;comp_info;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci++,<sp/>compptr++)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>rgroup<sp/>=<sp/>(compptr-&gt;v_samp_factor<sp/>*<sp/>compptr-&gt;DCT_scaled_size)<sp/>/</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;min_DCT_scaled_size;<sp/></highlight><highlight class="comment">/*<sp/>height<sp/>of<sp/>a<sp/>row<sp/>group<sp/>of<sp/>component<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>main-&gt;buffer[ci]<sp/>=<sp/>(*cinfo-&gt;mem-&gt;alloc_sarray)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compptr-&gt;width_in_blocks<sp/>*<sp/>compptr-&gt;DCT_scaled_size,</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(JDIMENSION)<sp/>(rgroup<sp/>*<sp/>ngroups));</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmainct.c"/>
  </compounddef>
</doxygen>
