<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="jdmaster_8c" kind="file">
    <compoundname>jdmaster.c</compoundname>
    <includes refid="jinclude_8h" local="yes">jinclude.h</includes>
    <includes refid="jpeglib_8h" local="yes">jpeglib.h</includes>
    <innerclass refid="structmy__decomp__master" prot="public">my_decomp_master</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="jdmaster_8c_1ad5c3cdfae3019b8223973041a2a1304b" prot="public" static="no">
        <name>JPEG_INTERNALS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmaster.c" line="14" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmaster.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="jdmaster_8c_1af43dd881aff77d1ea12de4e5b15ab954" prot="public" static="no">
        <type><ref refid="structmy__decomp__master" kindref="compound">my_decomp_master</ref> *</type>
        <definition>typedef my_decomp_master* my_master_ptr</definition>
        <argsstring></argsstring>
        <name>my_master_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmaster.c" line="35" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmaster.c" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="jdmaster_8c_1a78d3d20ffff6797df1ee5b264a47b46e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>static boolean use_merged_upsample</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>use_merged_upsample</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmaster.c" line="44" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmaster.c" bodystart="44" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="jdmaster_8c_1a8a0ad7df181aa90c70960c80f5a57fa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jpeg_calc_output_dimensions</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>jpeg_calc_output_dimensions</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmaster.c" line="84" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmaster.c" bodystart="84" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="jdmaster_8c_1ad44d1e2a81651a871ee449ca551b0053" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void prepare_range_limit_table</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>prepare_range_limit_table</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmaster.c" line="248" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmaster.c" bodystart="248" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="jdmaster_8c_1a4be2063aa1032c82c0659ef340c8615b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void master_selection</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>master_selection</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmaster.c" line="288" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmaster.c" bodystart="288" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="jdmaster_8c_1a5116048d28303a2eddbb5e31d51cf0cc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void prepare_for_output_pass</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>prepare_for_output_pass</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmaster.c" line="438" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmaster.c" bodystart="438" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="jdmaster_8c_1a0bf27826230fe3eeccdba09aa56a11a3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void finish_output_pass</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>finish_output_pass</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmaster.c" line="498" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmaster.c" bodystart="498" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="jdmaster_8c_1a24e97d5f7f76e8ae7ce34e5ba272e3bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jinit_master_decompress</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>jinit_master_decompress</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmaster.c" line="543" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmaster.c" bodystart="543" bodyend="557"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>jdmaster.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1991-1995,<sp/>Thomas<sp/>G.<sp/>Lane.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Independent<sp/>JPEG<sp/>Group&apos;s<sp/>software.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>conditions<sp/>of<sp/>distribution<sp/>and<sp/>use,<sp/>see<sp/>the<sp/>accompanying<sp/>README<sp/>file.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>master<sp/>control<sp/>logic<sp/>for<sp/>the<sp/>JPEG<sp/>decompressor.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>These<sp/>routines<sp/>are<sp/>concerned<sp/>with<sp/>selecting<sp/>the<sp/>modules<sp/>to<sp/>be<sp/>executed</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>and<sp/>with<sp/>determining<sp/>the<sp/>number<sp/>of<sp/>passes<sp/>and<sp/>the<sp/>work<sp/>to<sp/>be<sp/>done<sp/>in<sp/>each</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>pass.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JPEG_INTERNALS</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;jinclude.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jpeglib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="structmy__decomp__master" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__decomp__master" kindref="compound">jpeg_decomp_master</ref><sp/>pub;<sp/></highlight><highlight class="comment">/*<sp/>public<sp/>fields<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pass_number;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>#<sp/>of<sp/>passes<sp/>completed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>using_merged_upsample;<sp/></highlight><highlight class="comment">/*<sp/>TRUE<sp/>if<sp/>using<sp/>merged<sp/>upsample/cconvert<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Saved<sp/>references<sp/>to<sp/>initialized<sp/>quantizer<sp/>modules,</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/><sp/>*<sp/>in<sp/>case<sp/>we<sp/>need<sp/>to<sp/>switch<sp/>modes.</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__color__quantizer" kindref="compound">jpeg_color_quantizer</ref><sp/>*<sp/>quantizer_1pass;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__color__quantizer" kindref="compound">jpeg_color_quantizer</ref><sp/>*<sp/>quantizer_2pass;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}<sp/><ref refid="structmy__decomp__master" kindref="compound">my_decomp_master</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structmy__decomp__master" kindref="compound">my_decomp_master</ref><sp/>*<sp/><ref refid="structmy__comp__master" kindref="compound">my_master_ptr</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>Determine<sp/>whether<sp/>merged<sp/>upsample/color<sp/>conversion<sp/>should<sp/>be<sp/>used.</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>CRUCIAL:<sp/>this<sp/>must<sp/>match<sp/>the<sp/>actual<sp/>capabilities<sp/>of<sp/>jdmerge.c!</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">use_merged_upsample<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UPSAMPLE_MERGING_SUPPORTED</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Merging<sp/>is<sp/>the<sp/>equivalent<sp/>of<sp/>plain<sp/>box-filter<sp/>upsampling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;do_fancy_upsampling<sp/>||<sp/>cinfo-&gt;CCIR601_sampling)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>jdmerge.c<sp/>only<sp/>supports<sp/>YCC=&gt;RGB<sp/>color<sp/>conversion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;jpeg_color_space<sp/>!=<sp/>JCS_YCbCr<sp/>||<sp/>cinfo-&gt;num_components<sp/>!=<sp/>3<sp/>||</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;out_color_space<sp/>!=<sp/>JCS_RGB<sp/>||</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;out_color_components<sp/>!=<sp/>RGB_PIXELSIZE)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>and<sp/>it<sp/>only<sp/>handles<sp/>2h1v<sp/>or<sp/>2h2v<sp/>sampling<sp/>ratios<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;comp_info[0].h_samp_factor<sp/>!=<sp/>2<sp/>||</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;comp_info[1].h_samp_factor<sp/>!=<sp/>1<sp/>||</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;comp_info[2].h_samp_factor<sp/>!=<sp/>1<sp/>||</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;comp_info[0].v_samp_factor<sp/>&gt;<sp/><sp/>2<sp/>||</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;comp_info[1].v_samp_factor<sp/>!=<sp/>1<sp/>||</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;comp_info[2].v_samp_factor<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>furthermore,<sp/>it<sp/>doesn&apos;t<sp/>work<sp/>if<sp/>we&apos;ve<sp/>scaled<sp/>the<sp/>IDCTs<sp/>differently<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;comp_info[0].DCT_scaled_size<sp/>!=<sp/>cinfo-&gt;min_DCT_scaled_size<sp/>||</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;comp_info[1].DCT_scaled_size<sp/>!=<sp/>cinfo-&gt;min_DCT_scaled_size<sp/>||</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;comp_info[2].DCT_scaled_size<sp/>!=<sp/>cinfo-&gt;min_DCT_scaled_size)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>???<sp/>also<sp/>need<sp/>to<sp/>test<sp/>for<sp/>upsample-time<sp/>rescaling,<sp/>when<sp/>&amp;<sp/>if<sp/>supported<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>by<sp/>golly,<sp/>it&apos;ll<sp/>work...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>Compute<sp/>output<sp/>image<sp/>dimensions<sp/>and<sp/>related<sp/>values.</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>NOTE:<sp/>this<sp/>is<sp/>exported<sp/>for<sp/>possible<sp/>use<sp/>by<sp/>application.</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>Hence<sp/>it<sp/>mustn&apos;t<sp/>do<sp/>anything<sp/>that<sp/>can&apos;t<sp/>be<sp/>done<sp/>twice.</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>Also<sp/>note<sp/>that<sp/>it<sp/>may<sp/>be<sp/>called<sp/>before<sp/>the<sp/>master<sp/>module<sp/>is<sp/>initialized!</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">jpeg_calc_output_dimensions<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Do<sp/>computations<sp/>that<sp/>are<sp/>needed<sp/>before<sp/>master<sp/>selection<sp/>phase<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0<sp/><sp/><sp/>//<sp/>JDC:<sp/>commented<sp/>out<sp/>to<sp/>remove<sp/>warning</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*compptr;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prevent<sp/>application<sp/>from<sp/>calling<sp/>me<sp/>at<sp/>wrong<sp/>times<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;global_state<sp/>!=<sp/>DSTATE_READY)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_BAD_STATE,<sp/>cinfo-&gt;global_state);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IDCT_SCALING_SUPPORTED</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>actual<sp/>output<sp/>image<sp/>dimensions<sp/>and<sp/>DCT<sp/>scaling<sp/>choices.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;scale_num<sp/>*<sp/>8<sp/>&lt;=<sp/>cinfo-&gt;scale_denom)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Provide<sp/>1/8<sp/>scaling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;output_width<sp/>=<sp/>(JDIMENSION)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jdiv_round_up((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_width,<sp/>8L);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;output_height<sp/>=<sp/>(JDIMENSION)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jdiv_round_up((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_height,<sp/>8L);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;min_DCT_scaled_size<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;scale_num<sp/>*<sp/>4<sp/>&lt;=<sp/>cinfo-&gt;scale_denom)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Provide<sp/>1/4<sp/>scaling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;output_width<sp/>=<sp/>(JDIMENSION)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jdiv_round_up((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_width,<sp/>4L);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;output_height<sp/>=<sp/>(JDIMENSION)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jdiv_round_up((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_height,<sp/>4L);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;min_DCT_scaled_size<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;scale_num<sp/>*<sp/>2<sp/>&lt;=<sp/>cinfo-&gt;scale_denom)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Provide<sp/>1/2<sp/>scaling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;output_width<sp/>=<sp/>(JDIMENSION)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jdiv_round_up((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_width,<sp/>2L);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;output_height<sp/>=<sp/>(JDIMENSION)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jdiv_round_up((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_height,<sp/>2L);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;min_DCT_scaled_size<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Provide<sp/>1/1<sp/>scaling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;output_width<sp/>=<sp/>cinfo-&gt;image_width;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;output_height<sp/>=<sp/>cinfo-&gt;image_height;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;min_DCT_scaled_size<sp/>=<sp/>DCTSIZE;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>selecting<sp/>the<sp/>actual<sp/>DCT<sp/>scaling<sp/>for<sp/>each<sp/>component,<sp/>we<sp/>try<sp/>to</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/>*<sp/>scale<sp/>up<sp/>the<sp/>chroma<sp/>components<sp/>via<sp/>IDCT<sp/>scaling<sp/>rather<sp/>than<sp/>upsampling.</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/>*<sp/>This<sp/>saves<sp/>time<sp/>if<sp/>the<sp/>upsampler<sp/>gets<sp/>to<sp/>use<sp/>1:1<sp/>scaling.</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Note<sp/>this<sp/>code<sp/>assumes<sp/>that<sp/>the<sp/>supported<sp/>DCT<sp/>scalings<sp/>are<sp/>powers<sp/>of<sp/>2.</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0,<sp/>compptr<sp/>=<sp/>cinfo-&gt;comp_info;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci++,<sp/>compptr++)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ssize<sp/>=<sp/>cinfo-&gt;min_DCT_scaled_size;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ssize<sp/>&lt;<sp/>DCTSIZE<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(compptr-&gt;h_samp_factor<sp/>*<sp/>ssize<sp/>*<sp/>2<sp/>&lt;=</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;max_h_samp_factor<sp/>*<sp/>cinfo-&gt;min_DCT_scaled_size)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(compptr-&gt;v_samp_factor<sp/>*<sp/>ssize<sp/>*<sp/>2<sp/>&lt;=</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;max_v_samp_factor<sp/>*<sp/>cinfo-&gt;min_DCT_scaled_size))<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ssize<sp/>=<sp/>ssize<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;DCT_scaled_size<sp/>=<sp/>ssize;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recompute<sp/>downsampled<sp/>dimensions<sp/>of<sp/>components;</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/>*<sp/>application<sp/>needs<sp/>to<sp/>know<sp/>these<sp/>if<sp/>using<sp/>raw<sp/>downsampled<sp/>data.</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0,<sp/>compptr<sp/>=<sp/>cinfo-&gt;comp_info;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci++,<sp/>compptr++)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Size<sp/>in<sp/>samples,<sp/>after<sp/>IDCT<sp/>scaling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;downsampled_width<sp/>=<sp/>(JDIMENSION)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jdiv_round_up((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_width<sp/>*</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(long)<sp/>(compptr-&gt;h_samp_factor<sp/>*<sp/>compptr-&gt;DCT_scaled_size),</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(long)<sp/>(cinfo-&gt;max_h_samp_factor<sp/>*<sp/>DCTSIZE));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>compptr-&gt;downsampled_height<sp/>=<sp/>(JDIMENSION)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jdiv_round_up((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_height<sp/>*</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(long)<sp/>(compptr-&gt;v_samp_factor<sp/>*<sp/>compptr-&gt;DCT_scaled_size),</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(long)<sp/>(cinfo-&gt;max_v_samp_factor<sp/>*<sp/>DCTSIZE));</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>!IDCT_SCALING_SUPPORTED<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Hardwire<sp/>it<sp/>to<sp/>&quot;no<sp/>scaling&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>cinfo-&gt;output_width<sp/>=<sp/>cinfo-&gt;image_width;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>cinfo-&gt;output_height<sp/>=<sp/>cinfo-&gt;image_height;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>jdinput.c<sp/>has<sp/>already<sp/>initialized<sp/>DCT_scaled_size<sp/>to<sp/>DCTSIZE,</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/>*<sp/>and<sp/>has<sp/>computed<sp/>unscaled<sp/>downsampled_width<sp/>and<sp/>downsampled_height.</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>IDCT_SCALING_SUPPORTED<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Report<sp/>number<sp/>of<sp/>components<sp/>in<sp/>selected<sp/>colorspace.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Probably<sp/>this<sp/>should<sp/>be<sp/>in<sp/>the<sp/>color<sp/>conversion<sp/>module...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(cinfo-&gt;out_color_space)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JCS_GRAYSCALE:</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;out_color_components<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JCS_RGB:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RGB_PIXELSIZE<sp/>!=<sp/>3</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;out_color_components<sp/>=<sp/>RGB_PIXELSIZE;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>else<sp/>share<sp/>code<sp/>with<sp/>YCbCr<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JCS_YCbCr:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;out_color_components<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JCS_CMYK:</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JCS_YCCK:</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;out_color_components<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>else<sp/>must<sp/>be<sp/>same<sp/>colorspace<sp/>as<sp/>in<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;out_color_components<sp/>=<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>cinfo-&gt;output_components<sp/>=<sp/>(cinfo-&gt;quantize_colors<sp/>?<sp/>1<sp/>:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;out_color_components);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>See<sp/>if<sp/>upsampler<sp/>will<sp/>want<sp/>to<sp/>emit<sp/>more<sp/>than<sp/>one<sp/>row<sp/>at<sp/>a<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use_merged_upsample(cinfo))</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;rec_outbuf_height<sp/>=<sp/>cinfo-&gt;max_v_samp_factor;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;rec_outbuf_height<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/>Several<sp/>decompression<sp/>processes<sp/>need<sp/>to<sp/>range-limit<sp/>values<sp/>to<sp/>the<sp/>range</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/>0..MAXJSAMPLE;<sp/>the<sp/>input<sp/>value<sp/>may<sp/>fall<sp/>somewhat<sp/>outside<sp/>this<sp/>range</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*<sp/>due<sp/>to<sp/>noise<sp/>introduced<sp/>by<sp/>quantization,<sp/>roundoff<sp/>error,<sp/>etc.<sp/><sp/>These</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*<sp/>processes<sp/>are<sp/>inner<sp/>loops<sp/>and<sp/>need<sp/>to<sp/>be<sp/>as<sp/>fast<sp/>as<sp/>possible.<sp/><sp/>On<sp/>most</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/>machines,<sp/>particularly<sp/>CPUs<sp/>with<sp/>pipelines<sp/>or<sp/>instruction<sp/>prefetch,</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*<sp/>a<sp/>(subscript-check-less)<sp/>C<sp/>table<sp/>lookup</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>sample_range_limit[x];</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*<sp/>is<sp/>faster<sp/>than<sp/>explicit<sp/>tests</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(x<sp/>&lt;<sp/>0)<sp/><sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(x<sp/>&gt;<sp/>MAXJSAMPLE)<sp/><sp/>x<sp/>=<sp/>MAXJSAMPLE;</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/>These<sp/>processes<sp/>all<sp/>use<sp/>a<sp/>common<sp/>table<sp/>prepared<sp/>by<sp/>the<sp/>routine<sp/>below.</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*<sp/>For<sp/>most<sp/>steps<sp/>we<sp/>can<sp/>mathematically<sp/>guarantee<sp/>that<sp/>the<sp/>initial<sp/>value</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*<sp/>of<sp/>x<sp/>is<sp/>within<sp/>MAXJSAMPLE+1<sp/>of<sp/>the<sp/>legal<sp/>range,<sp/>so<sp/>a<sp/>table<sp/>running<sp/>from</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*<sp/>-(MAXJSAMPLE+1)<sp/>to<sp/>2*MAXJSAMPLE+1<sp/>is<sp/>sufficient.<sp/><sp/>But<sp/>for<sp/>the<sp/>initial</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*<sp/>limiting<sp/>step<sp/>(just<sp/>after<sp/>the<sp/>IDCT),<sp/>a<sp/>wildly<sp/>out-of-range<sp/>value<sp/>is<sp/></highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*<sp/>possible<sp/>if<sp/>the<sp/>input<sp/>data<sp/>is<sp/>corrupt.<sp/><sp/>To<sp/>avoid<sp/>any<sp/>chance<sp/>of<sp/>indexing</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*<sp/>off<sp/>the<sp/>end<sp/>of<sp/>memory<sp/>and<sp/>getting<sp/>a<sp/>bad-pointer<sp/>trap,<sp/>we<sp/>perform<sp/>the</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*<sp/>post-IDCT<sp/>limiting<sp/>thus:</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>range_limit[x<sp/>&amp;<sp/>MASK];</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*<sp/>where<sp/>MASK<sp/>is<sp/>2<sp/>bits<sp/>wider<sp/>than<sp/>legal<sp/>sample<sp/>data,<sp/>ie<sp/>10<sp/>bits<sp/>for<sp/>8-bit</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*<sp/>samples.<sp/><sp/>Under<sp/>normal<sp/>circumstances<sp/>this<sp/>is<sp/>more<sp/>than<sp/>enough<sp/>range<sp/>and</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*<sp/>a<sp/>correct<sp/>output<sp/>will<sp/>be<sp/>generated;<sp/>with<sp/>bogus<sp/>input<sp/>data<sp/>the<sp/>mask<sp/>will</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/>cause<sp/>wraparound,<sp/>and<sp/>we<sp/>will<sp/>safely<sp/>generate<sp/>a<sp/>bogus-but-in-range<sp/>output.</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/>For<sp/>the<sp/>post-IDCT<sp/>step,<sp/>we<sp/>want<sp/>to<sp/>convert<sp/>the<sp/>data<sp/>from<sp/>signed<sp/>to<sp/>unsigned</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*<sp/>representation<sp/>by<sp/>adding<sp/>CENTERJSAMPLE<sp/>at<sp/>the<sp/>same<sp/>time<sp/>that<sp/>we<sp/>limit<sp/>it.</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>*<sp/>So<sp/>the<sp/>post-IDCT<sp/>limiting<sp/>table<sp/>ends<sp/>up<sp/>looking<sp/>like<sp/>this:</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*<sp/><sp/><sp/>CENTERJSAMPLE,CENTERJSAMPLE+1,...,MAXJSAMPLE,</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>*<sp/><sp/><sp/>MAXJSAMPLE<sp/>(repeat<sp/>2*(MAXJSAMPLE+1)-CENTERJSAMPLE<sp/>times),</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*<sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(repeat<sp/>2*(MAXJSAMPLE+1)-CENTERJSAMPLE<sp/>times),</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*<sp/><sp/><sp/>0,1,...,CENTERJSAMPLE-1</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*<sp/>Negative<sp/>inputs<sp/>select<sp/>values<sp/>from<sp/>the<sp/>upper<sp/>half<sp/>of<sp/>the<sp/>table<sp/>after</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*<sp/>masking.</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*<sp/>We<sp/>can<sp/>save<sp/>some<sp/>space<sp/>by<sp/>overlapping<sp/>the<sp/>start<sp/>of<sp/>the<sp/>post-IDCT<sp/>table</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>simpler<sp/>range<sp/>limiting<sp/>table.<sp/><sp/>The<sp/>post-IDCT<sp/>table<sp/>begins<sp/>at</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*<sp/>sample_range_limit<sp/>+<sp/>CENTERJSAMPLE.</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/>Note<sp/>that<sp/>the<sp/>table<sp/>is<sp/>allocated<sp/>in<sp/>near<sp/>data<sp/>space<sp/>on<sp/>PCs;<sp/>it&apos;s<sp/>small</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/>enough<sp/>and<sp/>used<sp/>often<sp/>enough<sp/>to<sp/>justify<sp/>this.</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">prepare_range_limit_table<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Allocate<sp/>and<sp/>fill<sp/>in<sp/>the<sp/>sample_range_limit<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>JSAMPLE<sp/>*<sp/>table;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>table<sp/>=<sp/>(JSAMPLE<sp/>*)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(5<sp/>*<sp/>(MAXJSAMPLE+1)<sp/>+<sp/>CENTERJSAMPLE)<sp/>*<sp/>SIZEOF(JSAMPLE));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>table<sp/>+=<sp/>(MAXJSAMPLE+1);<sp/><sp/></highlight><highlight class="comment">/*<sp/>allow<sp/>negative<sp/>subscripts<sp/>of<sp/>simple<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>cinfo-&gt;sample_range_limit<sp/>=<sp/>table;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>segment<sp/>of<sp/>&quot;simple&quot;<sp/>table:<sp/>limit[x]<sp/>=<sp/>0<sp/>for<sp/>x<sp/>&lt;<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>MEMZERO(table<sp/>-<sp/>(MAXJSAMPLE+1),<sp/>(MAXJSAMPLE+1)<sp/>*<sp/>SIZEOF(JSAMPLE));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Main<sp/>part<sp/>of<sp/>&quot;simple&quot;<sp/>table:<sp/>limit[x]<sp/>=<sp/>x<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>MAXJSAMPLE;<sp/>i++)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>table[i]<sp/>=<sp/>(JSAMPLE)<sp/>i;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>table<sp/>+=<sp/>CENTERJSAMPLE;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Point<sp/>to<sp/>where<sp/>post-IDCT<sp/>table<sp/>starts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>simple<sp/>table,<sp/>rest<sp/>of<sp/>first<sp/>half<sp/>of<sp/>post-IDCT<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>CENTERJSAMPLE;<sp/>i<sp/>&lt;<sp/>2*(MAXJSAMPLE+1);<sp/>i++)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>table[i]<sp/>=<sp/>MAXJSAMPLE;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Second<sp/>half<sp/>of<sp/>post-IDCT<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>MEMZERO(table<sp/>+<sp/>(2<sp/>*<sp/>(MAXJSAMPLE+1)),</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(2<sp/>*<sp/>(MAXJSAMPLE+1)<sp/>-<sp/>CENTERJSAMPLE)<sp/>*<sp/>SIZEOF(JSAMPLE));</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>MEMCOPY(table<sp/>+<sp/>(4<sp/>*<sp/>(MAXJSAMPLE+1)<sp/>-<sp/>CENTERJSAMPLE),</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;sample_range_limit,<sp/>CENTERJSAMPLE<sp/>*<sp/>SIZEOF(JSAMPLE));</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/>*<sp/>Master<sp/>selection<sp/>of<sp/>decompression<sp/>modules.</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>done<sp/>once<sp/>at<sp/>jpeg_start_decompress<sp/>time.<sp/><sp/>We<sp/>determine</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/>*<sp/>which<sp/>modules<sp/>will<sp/>be<sp/>used<sp/>and<sp/>give<sp/>them<sp/>appropriate<sp/>initialization<sp/>calls.</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/>*<sp/>We<sp/>also<sp/>initialize<sp/>the<sp/>decompressor<sp/>input<sp/>side<sp/>to<sp/>begin<sp/>consuming<sp/>data.</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*<sp/>Since<sp/>jpeg_read_header<sp/>has<sp/>finished,<sp/>we<sp/>know<sp/>what<sp/>is<sp/>in<sp/>the<sp/>SOF</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*<sp/>and<sp/>(first)<sp/>SOS<sp/>markers.<sp/><sp/>We<sp/>also<sp/>have<sp/>all<sp/>the<sp/>application<sp/>parameter</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*<sp/>settings.</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal">master_selection<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><ref refid="structmy__comp__master" kindref="compound">my_master_ptr</ref><sp/>master<sp/>=<sp/>(<ref refid="structmy__comp__master" kindref="compound">my_master_ptr</ref>)<sp/>cinfo-&gt;master;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>use_c_buffer;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>samplesperrow;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>jd_samplesperrow;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>dimensions<sp/>and<sp/>other<sp/>stuff<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>jpeg_calc_output_dimensions(cinfo);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>prepare_range_limit_table(cinfo);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Width<sp/>of<sp/>an<sp/>output<sp/>scanline<sp/>must<sp/>be<sp/>representable<sp/>as<sp/>JDIMENSION.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>samplesperrow<sp/>=<sp/>(long)<sp/>cinfo-&gt;output_width<sp/>*<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;out_color_components;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>jd_samplesperrow<sp/>=<sp/>(JDIMENSION)<sp/>samplesperrow;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>jd_samplesperrow<sp/>!=<sp/>samplesperrow)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_WIDTH_OVERFLOW);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>my<sp/>private<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>master-&gt;pass_number<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>master-&gt;using_merged_upsample<sp/>=<sp/>use_merged_upsample(cinfo);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Color<sp/>quantizer<sp/>selection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>master-&gt;quantizer_1pass<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>master-&gt;quantizer_2pass<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>mode<sp/>changes<sp/>if<sp/>not<sp/>using<sp/>buffered-image<sp/>mode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>cinfo-&gt;quantize_colors<sp/>||<sp/>!<sp/>cinfo-&gt;buffered_image)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;enable_1pass_quant<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;enable_external_quant<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;enable_2pass_quant<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;quantize_colors)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;raw_data_out)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_NOTIMPL);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2-pass<sp/>quantizer<sp/>only<sp/>works<sp/>in<sp/>3-component<sp/>color<sp/>space.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;out_color_components<sp/>!=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;enable_1pass_quant<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;enable_external_quant<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;enable_2pass_quant<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;colormap<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;colormap<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;enable_external_quant<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;two_pass_quantize)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;enable_2pass_quant<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;enable_1pass_quant<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;enable_1pass_quant)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QUANT_1PASS_SUPPORTED</highlight></codeline>
<codeline lineno="337"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jinit_1pass_quantizer(cinfo);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>master-&gt;quantizer_1pass<sp/>=<sp/>cinfo-&gt;cquantize;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="340"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_NOT_COMPILED);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="342"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>use<sp/>the<sp/>2-pass<sp/>code<sp/>to<sp/>map<sp/>to<sp/>external<sp/>colormaps.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;enable_2pass_quant<sp/>||<sp/>cinfo-&gt;enable_external_quant)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QUANT_2PASS_SUPPORTED</highlight></codeline>
<codeline lineno="347"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jinit_2pass_quantizer(cinfo);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>master-&gt;quantizer_2pass<sp/>=<sp/>cinfo-&gt;cquantize;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="350"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_NOT_COMPILED);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="352"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>both<sp/>quantizers<sp/>are<sp/>initialized,<sp/>the<sp/>2-pass<sp/>one<sp/>is<sp/>left<sp/>active;</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>this<sp/>is<sp/>necessary<sp/>for<sp/>starting<sp/>with<sp/>quantization<sp/>to<sp/>an<sp/>external<sp/>map.</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Post-processing:<sp/>in<sp/>particular,<sp/>color<sp/>conversion<sp/>first<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>cinfo-&gt;raw_data_out)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(master-&gt;using_merged_upsample)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UPSAMPLE_MERGING_SUPPORTED</highlight></codeline>
<codeline lineno="362"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jinit_merged_upsampler(cinfo);<sp/></highlight><highlight class="comment">/*<sp/>does<sp/>color<sp/>conversion<sp/>too<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="364"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_NOT_COMPILED);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="366"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jinit_color_deconverter(cinfo);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jinit_upsampler(cinfo);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>jinit_d_post_controller(cinfo,<sp/>cinfo-&gt;enable_2pass_quant);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Inverse<sp/>DCT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>jinit_inverse_dct(cinfo);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Entropy<sp/>decoding:<sp/>either<sp/>Huffman<sp/>or<sp/>arithmetic<sp/>coding.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;arith_code)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_ARITH_NOTIMPL);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;progressive_mode)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>D_PROGRESSIVE_SUPPORTED</highlight></codeline>
<codeline lineno="380"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jinit_phuff_decoder(cinfo);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="382"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_NOT_COMPILED);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="384"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jinit_huff_decoder(cinfo);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>principal<sp/>buffer<sp/>controllers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>use_c_buffer<sp/>=<sp/>cinfo-&gt;inputctl-&gt;has_multiple_scans<sp/>||<sp/>cinfo-&gt;buffered_image;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>jinit_d_coef_controller(cinfo,<sp/>use_c_buffer);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>cinfo-&gt;raw_data_out)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>jinit_d_main_controller(cinfo,<sp/>FALSE<sp/></highlight><highlight class="comment">/*<sp/>never<sp/>need<sp/>full<sp/>buffer<sp/>here<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>can<sp/>now<sp/>tell<sp/>the<sp/>memory<sp/>manager<sp/>to<sp/>allocate<sp/>virtual<sp/>arrays.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>(*cinfo-&gt;mem-&gt;realize_virt_arrays)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>input<sp/>side<sp/>of<sp/>decompressor<sp/>to<sp/>consume<sp/>first<sp/>scan.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>(*cinfo-&gt;inputctl-&gt;start_input_pass)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>D_MULTISCAN_FILES_SUPPORTED</highlight></codeline>
<codeline lineno="402"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>jpeg_start_decompress<sp/>will<sp/>read<sp/>the<sp/>whole<sp/>file,<sp/>initialize</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/><sp/><sp/>*<sp/>progress<sp/>monitoring<sp/>appropriately.<sp/><sp/>The<sp/>input<sp/>step<sp/>is<sp/>counted</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/><sp/><sp/>*<sp/>as<sp/>one<sp/>pass.</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;progress<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>!<sp/>cinfo-&gt;buffered_image<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;inputctl-&gt;has_multiple_scans)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nscans;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Estimate<sp/>number<sp/>of<sp/>scans<sp/>to<sp/>set<sp/>pass_limit.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;progressive_mode)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Arbitrarily<sp/>estimate<sp/>2<sp/>interleaved<sp/>DC<sp/>scans<sp/>+<sp/>3<sp/>AC<sp/>scans/component.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nscans<sp/>=<sp/>2<sp/>+<sp/>3<sp/>*<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>a<sp/>nonprogressive<sp/>multiscan<sp/>file,<sp/>estimate<sp/>1<sp/>scan<sp/>per<sp/>component.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nscans<sp/>=<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;progress-&gt;pass_counter<sp/>=<sp/>0L;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;progress-&gt;pass_limit<sp/>=<sp/>(long)<sp/>cinfo-&gt;total_iMCU_rows<sp/>*<sp/>nscans;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;progress-&gt;completed_passes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;progress-&gt;total_passes<sp/>=<sp/>(cinfo-&gt;enable_2pass_quant<sp/>?<sp/>3<sp/>:<sp/>2);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Count<sp/>the<sp/>input<sp/>pass<sp/>as<sp/>done<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>master-&gt;pass_number++;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>D_MULTISCAN_FILES_SUPPORTED<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="425"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/>*<sp/>Per-pass<sp/>setup.</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>called<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>each<sp/>output<sp/>pass.<sp/><sp/>We<sp/>determine<sp/>which</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/>*<sp/>modules<sp/>will<sp/>be<sp/>active<sp/>during<sp/>this<sp/>pass<sp/>and<sp/>give<sp/>them<sp/>appropriate</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/>*<sp/>start_pass<sp/>calls.<sp/><sp/>We<sp/>also<sp/>set<sp/>is_dummy_pass<sp/>to<sp/>indicate<sp/>whether<sp/>this</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/>*<sp/>is<sp/>a<sp/>&quot;real&quot;<sp/>output<sp/>pass<sp/>or<sp/>a<sp/>dummy<sp/>pass<sp/>for<sp/>color<sp/>quantization.</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/>*<sp/>(In<sp/>the<sp/>latter<sp/>case,<sp/>jdapi.c<sp/>will<sp/>crank<sp/>the<sp/>pass<sp/>to<sp/>completion.)</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal">prepare_for_output_pass<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><ref refid="structmy__comp__master" kindref="compound">my_master_ptr</ref><sp/>master<sp/>=<sp/>(<ref refid="structmy__comp__master" kindref="compound">my_master_ptr</ref>)<sp/>cinfo-&gt;master;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>if<sp/>(master-&gt;pub.is_dummy_pass)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QUANT_2PASS_SUPPORTED</highlight></codeline>
<codeline lineno="444"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Final<sp/>pass<sp/>of<sp/>2-pass<sp/>quantization<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>master-&gt;pub.is_dummy_pass<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;cquantize-&gt;start_pass)<sp/>(cinfo,<sp/>FALSE);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;post-&gt;start_pass)<sp/>(cinfo,<sp/>JBUF_CRANK_DEST);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;main-&gt;start_pass)<sp/>(cinfo,<sp/>JBUF_CRANK_DEST);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="450"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_NOT_COMPILED);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>QUANT_2PASS_SUPPORTED<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="452"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;quantize_colors<sp/>&amp;&amp;<sp/>cinfo-&gt;colormap<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Select<sp/>new<sp/>quantization<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;two_pass_quantize<sp/>&amp;&amp;<sp/>cinfo-&gt;enable_2pass_quant)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;cquantize<sp/>=<sp/>master-&gt;quantizer_2pass;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>master-&gt;pub.is_dummy_pass<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;enable_1pass_quant)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;cquantize<sp/>=<sp/>master-&gt;quantizer_1pass;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_MODE_CHANGE);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;idct-&gt;start_pass)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;coef-&gt;start_output_pass)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>cinfo-&gt;raw_data_out)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>master-&gt;using_merged_upsample)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;cconvert-&gt;start_pass)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*cinfo-&gt;upsample-&gt;start_pass)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;quantize_colors)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;cquantize-&gt;start_pass)<sp/>(cinfo,<sp/>master-&gt;pub.is_dummy_pass);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*cinfo-&gt;post-&gt;start_pass)<sp/>(cinfo,</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(master-&gt;pub.is_dummy_pass<sp/>?<sp/>JBUF_SAVE_AND_PASS<sp/>:<sp/>JBUF_PASS_THRU));</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*cinfo-&gt;main-&gt;start_pass)<sp/>(cinfo,<sp/>JBUF_PASS_THRU);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>progress<sp/>monitor&apos;s<sp/>pass<sp/>info<sp/>if<sp/>present<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;progress<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;progress-&gt;completed_passes<sp/>=<sp/>master-&gt;pass_number;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;progress-&gt;total_passes<sp/>=<sp/>master-&gt;pass_number<sp/>+</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(master-&gt;pub.is_dummy_pass<sp/>?<sp/>2<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>buffered-image<sp/>mode,<sp/>we<sp/>assume<sp/>one<sp/>more<sp/>output<sp/>pass<sp/>if<sp/>EOI<sp/>not</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>yet<sp/>reached,<sp/>but<sp/>no<sp/>more<sp/>passes<sp/>if<sp/>EOI<sp/>has<sp/>been<sp/>reached.</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;buffered_image<sp/>&amp;&amp;<sp/>!<sp/>cinfo-&gt;inputctl-&gt;eoi_reached)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;progress-&gt;total_passes<sp/>+=<sp/>(cinfo-&gt;enable_2pass_quant<sp/>?<sp/>2<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/>*<sp/>Finish<sp/>up<sp/>at<sp/>end<sp/>of<sp/>an<sp/>output<sp/>pass.</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal">finish_output_pass<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="499"><highlight class="normal">{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><ref refid="structmy__comp__master" kindref="compound">my_master_ptr</ref><sp/>master<sp/>=<sp/>(<ref refid="structmy__comp__master" kindref="compound">my_master_ptr</ref>)<sp/>cinfo-&gt;master;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>if<sp/>(cinfo-&gt;quantize_colors)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;cquantize-&gt;finish_pass)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>master-&gt;pass_number++;</highlight></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>D_MULTISCAN_FILES_SUPPORTED</highlight></codeline>
<codeline lineno="509"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/>*<sp/>Switch<sp/>to<sp/>a<sp/>new<sp/>external<sp/>colormap<sp/>between<sp/>output<sp/>passes.</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal">jpeg_new_colormap<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="516"><highlight class="normal">{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><ref refid="structmy__comp__master" kindref="compound">my_master_ptr</ref><sp/>master<sp/>=<sp/>(<ref refid="structmy__comp__master" kindref="compound">my_master_ptr</ref>)<sp/>cinfo-&gt;master;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prevent<sp/>application<sp/>from<sp/>calling<sp/>me<sp/>at<sp/>wrong<sp/>times<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>if<sp/>(cinfo-&gt;global_state<sp/>!=<sp/>DSTATE_BUFIMAGE)</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_BAD_STATE,<sp/>cinfo-&gt;global_state);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;quantize_colors<sp/>&amp;&amp;<sp/>cinfo-&gt;enable_external_quant<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;colormap<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Select<sp/>2-pass<sp/>quantizer<sp/>for<sp/>external<sp/>colormap<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;cquantize<sp/>=<sp/>master-&gt;quantizer_2pass;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Notify<sp/>quantizer<sp/>of<sp/>colormap<sp/>change<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;cquantize-&gt;new_color_map)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>master-&gt;pub.is_dummy_pass<sp/>=<sp/>FALSE;<sp/></highlight><highlight class="comment">/*<sp/>just<sp/>in<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_MODE_CHANGE);</highlight></codeline>
<codeline lineno="532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>D_MULTISCAN_FILES_SUPPORTED<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="535"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="538"><highlight class="comment"><sp/>*<sp/>Initialize<sp/>master<sp/>decompression<sp/>control<sp/>and<sp/>select<sp/>active<sp/>modules.</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>performed<sp/>at<sp/>the<sp/>start<sp/>of<sp/>jpeg_start_decompress.</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal">jinit_master_decompress<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="544"><highlight class="normal">{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><ref refid="structmy__comp__master" kindref="compound">my_master_ptr</ref><sp/>master;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/>master<sp/>=<sp/>(<ref refid="structmy__comp__master" kindref="compound">my_master_ptr</ref>)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SIZEOF(<ref refid="structmy__decomp__master" kindref="compound">my_decomp_master</ref>));</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>cinfo-&gt;master<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__decomp__master" kindref="compound">jpeg_decomp_master</ref><sp/>*)<sp/>master;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>master-&gt;pub.prepare_for_output_pass<sp/>=<sp/>prepare_for_output_pass;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>master-&gt;pub.finish_output_pass<sp/>=<sp/>finish_output_pass;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>master-&gt;pub.is_dummy_pass<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>master_selection(cinfo);</highlight></codeline>
<codeline lineno="557"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdmaster.c"/>
  </compounddef>
</doxygen>
