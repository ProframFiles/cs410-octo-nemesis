<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="jdsample_8c" kind="file">
    <compoundname>jdsample.c</compoundname>
    <includes refid="jinclude_8h" local="yes">jinclude.h</includes>
    <includes refid="jpeglib_8h" local="yes">jpeglib.h</includes>
    <innerclass refid="structmy__upsampler" prot="public">my_upsampler</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="jdsample_8c_1ad5c3cdfae3019b8223973041a2a1304b" prot="public" static="no">
        <name>JPEG_INTERNALS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" line="21" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="jdsample_8c_1ae446b11a1c65f30fd6bb28950623c334" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(*  upsample1_ptr)(j_decompress_ptr cinfo, jpeg_component_info *compptr, JSAMPARRAY input_data, JSAMPARRAY *output_data_ptr)</definition>
        <argsstring>)(j_decompress_ptr cinfo, jpeg_component_info *compptr, JSAMPARRAY input_data, JSAMPARRAY *output_data_ptr)</argsstring>
        <name>upsample1_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" line="29" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="jdsample_8c_1a090d1487f2ac850a7a8ba5827ea940ef" prot="public" static="no">
        <type><ref refid="structmy__upsampler" kindref="compound">my_upsampler</ref> *</type>
        <definition>typedef my_upsampler* my_upsample_ptr</definition>
        <argsstring></argsstring>
        <name>my_upsample_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" line="61" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="jdsample_8c_1a1ff656d0c16d5df9ce055390b502e43a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void start_pass_upsample</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>start_pass_upsample</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" line="69" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" bodystart="69" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="jdsample_8c_1a745392dc15da62ef68a071479cf31b76" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sep_upsample</definition>
        <argsstring>(j_decompress_ptr cinfo, JSAMPIMAGE input_buf, JDIMENSION *in_row_group_ctr, JDIMENSION in_row_groups_avail, JSAMPARRAY output_buf, JDIMENSION *out_row_ctr, JDIMENSION out_rows_avail)</argsstring>
        <name>sep_upsample</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type>JSAMPIMAGE</type>
          <declname>input_buf</declname>
        </param>
        <param>
          <type>JDIMENSION *</type>
          <declname>in_row_group_ctr</declname>
        </param>
        <param>
          <type>JDIMENSION</type>
          <declname>in_row_groups_avail</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>output_buf</declname>
        </param>
        <param>
          <type>JDIMENSION *</type>
          <declname>out_row_ctr</declname>
        </param>
        <param>
          <type>JDIMENSION</type>
          <declname>out_rows_avail</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" line="89" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" bodystart="89" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="jdsample_8c_1a400a521246620160d9361218b9c3166c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void fullsize_upsample</definition>
        <argsstring>(j_decompress_ptr cinfo, jpeg_component_info *compptr, JSAMPARRAY input_data, JSAMPARRAY *output_data_ptr)</argsstring>
        <name>fullsize_upsample</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref> *</type>
          <declname>compptr</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>input_data</declname>
        </param>
        <param>
          <type>JSAMPARRAY *</type>
          <declname>output_data_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" line="157" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" bodystart="157" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="jdsample_8c_1a087296624bad21abe80737e485a168c4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void noop_upsample</definition>
        <argsstring>(j_decompress_ptr cinfo, jpeg_component_info *compptr, JSAMPARRAY input_data, JSAMPARRAY *output_data_ptr)</argsstring>
        <name>noop_upsample</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref> *</type>
          <declname>compptr</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>input_data</declname>
        </param>
        <param>
          <type>JSAMPARRAY *</type>
          <declname>output_data_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" line="170" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" bodystart="170" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="jdsample_8c_1ac6232fdaddfbbe2033650da37235a08f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void int_upsample</definition>
        <argsstring>(j_decompress_ptr cinfo, jpeg_component_info *compptr, JSAMPARRAY input_data, JSAMPARRAY *output_data_ptr)</argsstring>
        <name>int_upsample</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref> *</type>
          <declname>compptr</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>input_data</declname>
        </param>
        <param>
          <type>JSAMPARRAY *</type>
          <declname>output_data_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" line="189" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" bodystart="189" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="jdsample_8c_1a2227f74d4575860a55f2d246e30b602c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void h2v1_upsample</definition>
        <argsstring>(j_decompress_ptr cinfo, jpeg_component_info *compptr, JSAMPARRAY input_data, JSAMPARRAY *output_data_ptr)</argsstring>
        <name>h2v1_upsample</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref> *</type>
          <declname>compptr</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>input_data</declname>
        </param>
        <param>
          <type>JSAMPARRAY *</type>
          <declname>output_data_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" line="233" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" bodystart="233" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="jdsample_8c_1ae6dde53e9a60df9ff15cea375af0acf4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void h2v2_upsample</definition>
        <argsstring>(j_decompress_ptr cinfo, jpeg_component_info *compptr, JSAMPARRAY input_data, JSAMPARRAY *output_data_ptr)</argsstring>
        <name>h2v2_upsample</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref> *</type>
          <declname>compptr</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>input_data</declname>
        </param>
        <param>
          <type>JSAMPARRAY *</type>
          <declname>output_data_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" line="261" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" bodystart="261" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="jdsample_8c_1af0787ebedb75d508a72bc44c7ea9c4c1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void h2v1_fancy_upsample</definition>
        <argsstring>(j_decompress_ptr cinfo, jpeg_component_info *compptr, JSAMPARRAY input_data, JSAMPARRAY *output_data_ptr)</argsstring>
        <name>h2v1_fancy_upsample</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref> *</type>
          <declname>compptr</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>input_data</declname>
        </param>
        <param>
          <type>JSAMPARRAY *</type>
          <declname>output_data_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" line="304" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" bodystart="304" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="jdsample_8c_1a82ec06c144999846e12980f26ecfa8fb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void h2v2_fancy_upsample</definition>
        <argsstring>(j_decompress_ptr cinfo, jpeg_component_info *compptr, JSAMPARRAY input_data, JSAMPARRAY *output_data_ptr)</argsstring>
        <name>h2v2_fancy_upsample</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref> *</type>
          <declname>compptr</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>input_data</declname>
        </param>
        <param>
          <type>JSAMPARRAY *</type>
          <declname>output_data_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" line="345" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" bodystart="345" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="jdsample_8c_1ab2123d1df577c4f731de558c61e155d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jinit_upsampler</definition>
        <argsstring>(j_decompress_ptr cinfo)</argsstring>
        <name>jinit_upsampler</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" line="399" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c" bodystart="399" bodyend="478"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>jdsample.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1991-1994,<sp/>Thomas<sp/>G.<sp/>Lane.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Independent<sp/>JPEG<sp/>Group&apos;s<sp/>software.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>conditions<sp/>of<sp/>distribution<sp/>and<sp/>use,<sp/>see<sp/>the<sp/>accompanying<sp/>README<sp/>file.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>upsampling<sp/>routines.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Upsampling<sp/>input<sp/>data<sp/>is<sp/>counted<sp/>in<sp/>&quot;row<sp/>groups&quot;.<sp/><sp/>A<sp/>row<sp/>group</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>is<sp/>defined<sp/>to<sp/>be<sp/>(v_samp_factor<sp/>*<sp/>DCT_scaled_size<sp/>/<sp/>min_DCT_scaled_size)</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>sample<sp/>rows<sp/>of<sp/>each<sp/>component.<sp/><sp/>Upsampling<sp/>will<sp/>normally<sp/>produce</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>max_v_samp_factor<sp/>pixel<sp/>rows<sp/>from<sp/>each<sp/>row<sp/>group<sp/>(but<sp/>this<sp/>could<sp/>vary</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>if<sp/>the<sp/>upsampler<sp/>is<sp/>applying<sp/>a<sp/>scale<sp/>factor<sp/>of<sp/>its<sp/>own).</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>An<sp/>excellent<sp/>reference<sp/>for<sp/>image<sp/>resampling<sp/>is</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Digital<sp/>Image<sp/>Warping,<sp/>George<sp/>Wolberg,<sp/>1990.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Pub.<sp/>by<sp/>IEEE<sp/>Computer<sp/>Society<sp/>Press,<sp/>Los<sp/>Alamitos,<sp/>CA.<sp/>ISBN<sp/>0-8186-8944-7.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JPEG_INTERNALS</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;jinclude.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jpeglib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Pointer<sp/>to<sp/>routine<sp/>to<sp/>upsample<sp/>a<sp/>single<sp/>component<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>upsample1_ptr,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*<sp/>compptr,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>input_data,<sp/>JSAMPARRAY<sp/>*<sp/>output_data_ptr));</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>subobject<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="structmy__upsampler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__upsampler" kindref="compound">jpeg_upsampler</ref><sp/>pub;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>public<sp/>fields<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Color<sp/>conversion<sp/>buffer.<sp/><sp/>When<sp/>using<sp/>separate<sp/>upsampling<sp/>and<sp/>color</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/>*<sp/>conversion<sp/>steps,<sp/>this<sp/>buffer<sp/>holds<sp/>one<sp/>upsampled<sp/>row<sp/>group<sp/>until<sp/>it</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/>*<sp/>has<sp/>been<sp/>color<sp/>converted<sp/>and<sp/>output.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Note:<sp/>we<sp/>do<sp/>not<sp/>allocate<sp/>any<sp/>storage<sp/>for<sp/>component(s)<sp/>which<sp/>are<sp/>full-size,</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/>*<sp/>ie<sp/>do<sp/>not<sp/>need<sp/>rescaling.<sp/><sp/>The<sp/>corresponding<sp/>entry<sp/>of<sp/>color_buf[]<sp/>is</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/>*<sp/>simply<sp/>set<sp/>to<sp/>point<sp/>to<sp/>the<sp/>input<sp/>data<sp/>array,<sp/>thereby<sp/>avoiding<sp/>copying.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>JSAMPARRAY<sp/>color_buf[MAX_COMPONENTS];</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Per-component<sp/>upsampling<sp/>method<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>upsample1_ptr<sp/>methods[MAX_COMPONENTS];</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next_row_out;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>counts<sp/>rows<sp/>emitted<sp/>from<sp/>color_buf<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>rows_to_go;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>counts<sp/>rows<sp/>remaining<sp/>in<sp/>image<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Height<sp/>of<sp/>an<sp/>input<sp/>row<sp/>group<sp/>for<sp/>each<sp/>component.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowgroup_height[MAX_COMPONENTS];</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>These<sp/>arrays<sp/>save<sp/>pixel<sp/>expansion<sp/>factors<sp/>so<sp/>that<sp/>int_expand<sp/>need<sp/>not</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/>*<sp/>recompute<sp/>them<sp/>each<sp/>time.<sp/><sp/>They<sp/>are<sp/>unused<sp/>for<sp/>other<sp/>upsampling<sp/>methods.</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>UINT8<sp/>h_expand[MAX_COMPONENTS];</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>UINT8<sp/>v_expand[MAX_COMPONENTS];</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}<sp/><ref refid="structmy__upsampler" kindref="compound">my_upsampler</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structmy__upsampler" kindref="compound">my_upsampler</ref><sp/>*<sp/><ref refid="structmy__upsampler" kindref="compound">my_upsample_ptr</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>Initialize<sp/>for<sp/>an<sp/>upsampling<sp/>pass.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">start_pass_upsample<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>my_upsample_ptr<sp/>upsample<sp/>=<sp/>(my_upsample_ptr)<sp/>cinfo-&gt;upsample;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Mark<sp/>the<sp/>conversion<sp/>buffer<sp/>empty<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>upsample-&gt;next_row_out<sp/>=<sp/>cinfo-&gt;max_v_samp_factor;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>total-height<sp/>counter<sp/>for<sp/>detecting<sp/>bottom<sp/>of<sp/>image<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>upsample-&gt;rows_to_go<sp/>=<sp/>cinfo-&gt;output_height;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/>Control<sp/>routine<sp/>to<sp/>do<sp/>upsampling<sp/>(and<sp/>color<sp/>conversion).</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/>In<sp/>this<sp/>version<sp/>we<sp/>upsample<sp/>each<sp/>component<sp/>independently.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/>We<sp/>upsample<sp/>one<sp/>row<sp/>group<sp/>into<sp/>the<sp/>conversion<sp/>buffer,<sp/>then<sp/>apply</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/>color<sp/>conversion<sp/>a<sp/>row<sp/>at<sp/>a<sp/>time.</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">sep_upsample<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPIMAGE<sp/>input_buf,<sp/>JDIMENSION<sp/>*in_row_group_ctr,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>in_row_groups_avail,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>output_buf,<sp/>JDIMENSION<sp/>*out_row_ctr,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>out_rows_avail)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>my_upsample_ptr<sp/>upsample<sp/>=<sp/>(my_upsample_ptr)<sp/>cinfo-&gt;upsample;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*<sp/>compptr;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>num_rows;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fill<sp/>the<sp/>conversion<sp/>buffer,<sp/>if<sp/>it&apos;s<sp/>empty<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>if<sp/>(upsample-&gt;next_row_out<sp/>&gt;=<sp/>cinfo-&gt;max_v_samp_factor)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0,<sp/>compptr<sp/>=<sp/>cinfo-&gt;comp_info;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ci++,<sp/>compptr++)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Invoke<sp/>per-component<sp/>upsample<sp/>method.<sp/><sp/>Notice<sp/>we<sp/>pass<sp/>a<sp/>POINTER</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>color_buf[ci],<sp/>so<sp/>that<sp/>fullsize_upsample<sp/>can<sp/>change<sp/>it.</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*upsample-&gt;methods[ci])<sp/>(cinfo,<sp/>compptr,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>input_buf[ci]<sp/>+<sp/>(*in_row_group_ctr<sp/>*<sp/>upsample-&gt;rowgroup_height[ci]),</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>upsample-&gt;color_buf<sp/>+<sp/>ci);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>upsample-&gt;next_row_out<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Color-convert<sp/>and<sp/>emit<sp/>rows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>How<sp/>many<sp/>we<sp/>have<sp/>in<sp/>the<sp/>buffer:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>num_rows<sp/>=<sp/>(JDIMENSION)<sp/>(cinfo-&gt;max_v_samp_factor<sp/>-<sp/>upsample-&gt;next_row_out);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>more<sp/>than<sp/>the<sp/>distance<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>image.<sp/><sp/>Need<sp/>this<sp/>test</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/>*<sp/>in<sp/>case<sp/>the<sp/>image<sp/>height<sp/>is<sp/>not<sp/>a<sp/>multiple<sp/>of<sp/>max_v_samp_factor:</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_rows<sp/>&gt;<sp/>upsample-&gt;rows_to_go)<sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>num_rows<sp/>=<sp/>upsample-&gt;rows_to_go;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>And<sp/>not<sp/>more<sp/>than<sp/>what<sp/>the<sp/>client<sp/>can<sp/>accept:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>out_rows_avail<sp/>-=<sp/>*out_row_ctr;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_rows<sp/>&gt;<sp/>out_rows_avail)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>num_rows<sp/>=<sp/>out_rows_avail;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>(*cinfo-&gt;cconvert-&gt;color_convert)<sp/>(cinfo,<sp/>upsample-&gt;color_buf,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(JDIMENSION)<sp/>upsample-&gt;next_row_out,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_buf<sp/>+<sp/>*out_row_ctr,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int)<sp/>num_rows);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Adjust<sp/>counts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>*out_row_ctr<sp/>+=<sp/>num_rows;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>upsample-&gt;rows_to_go<sp/>-=<sp/>num_rows;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>upsample-&gt;next_row_out<sp/>+=<sp/>num_rows;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>the<sp/>buffer<sp/>is<sp/>emptied,<sp/>declare<sp/>this<sp/>input<sp/>row<sp/>group<sp/>consumed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(upsample-&gt;next_row_out<sp/>&gt;=<sp/>cinfo-&gt;max_v_samp_factor)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>(*in_row_group_ctr)++;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/>These<sp/>are<sp/>the<sp/>routines<sp/>invoked<sp/>by<sp/>sep_upsample<sp/>to<sp/>upsample<sp/>pixel<sp/>values</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*<sp/>of<sp/>a<sp/>single<sp/>component.<sp/><sp/>One<sp/>row<sp/>group<sp/>is<sp/>processed<sp/>per<sp/>call.</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*<sp/>For<sp/>full-size<sp/>components,<sp/>we<sp/>just<sp/>make<sp/>color_buf[ci]<sp/>point<sp/>at<sp/>the</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*<sp/>input<sp/>buffer,<sp/>and<sp/>thus<sp/>avoid<sp/>copying<sp/>any<sp/>data.<sp/><sp/>Note<sp/>that<sp/>this<sp/>is</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/>safe<sp/>only<sp/>because<sp/>sep_upsample<sp/>doesn&apos;t<sp/>declare<sp/>the<sp/>input<sp/>row<sp/>group</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/>&quot;consumed&quot;<sp/>until<sp/>we<sp/>are<sp/>done<sp/>color<sp/>converting<sp/>and<sp/>emitting<sp/>it.</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">fullsize_upsample<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*<sp/>compptr,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>input_data,<sp/>JSAMPARRAY<sp/>*<sp/>output_data_ptr)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>*output_data_ptr<sp/>=<sp/>input_data;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>a<sp/>no-op<sp/>version<sp/>used<sp/>for<sp/>&quot;uninteresting&quot;<sp/>components.</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/>These<sp/>components<sp/>will<sp/>not<sp/>be<sp/>referenced<sp/>by<sp/>color<sp/>conversion.</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">noop_upsample<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*<sp/>compptr,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>input_data,<sp/>JSAMPARRAY<sp/>*<sp/>output_data_ptr)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>*output_data_ptr<sp/>=<sp/>NULL;<sp/><sp/></highlight><highlight class="comment">/*<sp/>safety<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*<sp/>This<sp/>version<sp/>handles<sp/>any<sp/>integral<sp/>sampling<sp/>ratios.</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>not<sp/>used<sp/>for<sp/>typical<sp/>JPEG<sp/>files,<sp/>so<sp/>it<sp/>need<sp/>not<sp/>be<sp/>fast.</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*<sp/>Nor,<sp/>for<sp/>that<sp/>matter,<sp/>is<sp/>it<sp/>particularly<sp/>accurate:<sp/>the<sp/>algorithm<sp/>is</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>simple<sp/>replication<sp/>of<sp/>the<sp/>input<sp/>pixel<sp/>onto<sp/>the<sp/>corresponding<sp/>output</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/>pixels.<sp/><sp/>The<sp/>hi-falutin<sp/>sampling<sp/>literature<sp/>refers<sp/>to<sp/>this<sp/>as<sp/>a</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/>&quot;box<sp/>filter&quot;.<sp/><sp/>A<sp/>box<sp/>filter<sp/>tends<sp/>to<sp/>introduce<sp/>visible<sp/>artifacts,</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/>so<sp/>if<sp/>you<sp/>are<sp/>actually<sp/>going<sp/>to<sp/>use<sp/>3:1<sp/>or<sp/>4:1<sp/>sampling<sp/>ratios</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/>you<sp/>would<sp/>be<sp/>well<sp/>advised<sp/>to<sp/>improve<sp/>this<sp/>code.</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal">int_upsample<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*<sp/>compptr,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>input_data,<sp/>JSAMPARRAY<sp/>*<sp/>output_data_ptr)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>my_upsample_ptr<sp/>upsample<sp/>=<sp/>(my_upsample_ptr)<sp/>cinfo-&gt;upsample;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>JSAMPARRAY<sp/>output_data<sp/>=<sp/>*output_data_ptr;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JSAMPROW<sp/>inptr,<sp/>outptr;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JSAMPLE<sp/>invalue;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>JSAMPROW<sp/>outend;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h_expand,<sp/>v_expand;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inrow,<sp/>outrow;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>h_expand<sp/>=<sp/>upsample-&gt;h_expand[compptr-&gt;component_index];</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>v_expand<sp/>=<sp/>upsample-&gt;v_expand[compptr-&gt;component_index];</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>inrow<sp/>=<sp/>outrow<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>while<sp/>(outrow<sp/>&lt;<sp/>cinfo-&gt;max_v_samp_factor)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Generate<sp/>one<sp/>output<sp/>row<sp/>with<sp/>proper<sp/>horizontal<sp/>expansion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>inptr<sp/>=<sp/>input_data[inrow];</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>outptr<sp/>=<sp/>output_data[outrow];</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>outend<sp/>=<sp/>outptr<sp/>+<sp/>cinfo-&gt;output_width;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(outptr<sp/>&lt;<sp/>outend)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>invalue<sp/>=<sp/>*inptr++;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>need<sp/>GETJSAMPLE()<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(h<sp/>=<sp/>h_expand;<sp/>h<sp/>&gt;<sp/>0;<sp/>h--)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>*outptr++<sp/>=<sp/>invalue;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Generate<sp/>any<sp/>additional<sp/>output<sp/>rows<sp/>by<sp/>duplicating<sp/>the<sp/>first<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_expand<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jcopy_sample_rows(output_data,<sp/>outrow,<sp/>output_data,<sp/>outrow+1,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_expand-1,<sp/>cinfo-&gt;output_width);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>inrow++;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>outrow<sp/>+=<sp/>v_expand;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/>Fast<sp/>processing<sp/>for<sp/>the<sp/>common<sp/>case<sp/>of<sp/>2:1<sp/>horizontal<sp/>and<sp/>1:1<sp/>vertical.</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/>It&apos;s<sp/>still<sp/>a<sp/>box<sp/>filter.</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal">h2v1_upsample<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*<sp/>compptr,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>input_data,<sp/>JSAMPARRAY<sp/>*<sp/>output_data_ptr)</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>JSAMPARRAY<sp/>output_data<sp/>=<sp/>*output_data_ptr;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JSAMPROW<sp/>inptr,<sp/>outptr;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JSAMPLE<sp/>invalue;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>JSAMPROW<sp/>outend;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inrow;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(inrow<sp/>=<sp/>0;<sp/>inrow<sp/>&lt;<sp/>cinfo-&gt;max_v_samp_factor;<sp/>inrow++)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>inptr<sp/>=<sp/>input_data[inrow];</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>outptr<sp/>=<sp/>output_data[inrow];</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>outend<sp/>=<sp/>outptr<sp/>+<sp/>cinfo-&gt;output_width;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(outptr<sp/>&lt;<sp/>outend)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>invalue<sp/>=<sp/>*inptr++;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>need<sp/>GETJSAMPLE()<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outptr++<sp/>=<sp/>invalue;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outptr++<sp/>=<sp/>invalue;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/>*<sp/>Fast<sp/>processing<sp/>for<sp/>the<sp/>common<sp/>case<sp/>of<sp/>2:1<sp/>horizontal<sp/>and<sp/>2:1<sp/>vertical.</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/>*<sp/>It&apos;s<sp/>still<sp/>a<sp/>box<sp/>filter.</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">h2v2_upsample<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*<sp/>compptr,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>input_data,<sp/>JSAMPARRAY<sp/>*<sp/>output_data_ptr)</highlight></codeline>
<codeline lineno="263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>JSAMPARRAY<sp/>output_data<sp/>=<sp/>*output_data_ptr;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JSAMPROW<sp/>inptr,<sp/>outptr;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JSAMPLE<sp/>invalue;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>JSAMPROW<sp/>outend;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inrow,<sp/>outrow;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>inrow<sp/>=<sp/>outrow<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(outrow<sp/>&lt;<sp/>cinfo-&gt;max_v_samp_factor)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>inptr<sp/>=<sp/>input_data[inrow];</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>outptr<sp/>=<sp/>output_data[outrow];</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>outend<sp/>=<sp/>outptr<sp/>+<sp/>cinfo-&gt;output_width;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(outptr<sp/>&lt;<sp/>outend)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>invalue<sp/>=<sp/>*inptr++;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>need<sp/>GETJSAMPLE()<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outptr++<sp/>=<sp/>invalue;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outptr++<sp/>=<sp/>invalue;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>jcopy_sample_rows(output_data,<sp/>outrow,<sp/>output_data,<sp/>outrow+1,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>cinfo-&gt;output_width);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>inrow++;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>outrow<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*<sp/>Fancy<sp/>processing<sp/>for<sp/>the<sp/>common<sp/>case<sp/>of<sp/>2:1<sp/>horizontal<sp/>and<sp/>1:1<sp/>vertical.</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*<sp/>The<sp/>upsampling<sp/>algorithm<sp/>is<sp/>linear<sp/>interpolation<sp/>between<sp/>pixel<sp/>centers,</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*<sp/>also<sp/>known<sp/>as<sp/>a<sp/>&quot;triangle<sp/>filter&quot;.<sp/><sp/>This<sp/>is<sp/>a<sp/>good<sp/>compromise<sp/>between</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*<sp/>speed<sp/>and<sp/>visual<sp/>quality.<sp/><sp/>The<sp/>centers<sp/>of<sp/>the<sp/>output<sp/>pixels<sp/>are<sp/>1/4<sp/>and<sp/>3/4</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>*<sp/>of<sp/>the<sp/>way<sp/>between<sp/>input<sp/>pixel<sp/>centers.</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*<sp/>A<sp/>note<sp/>about<sp/>the<sp/>&quot;bias&quot;<sp/>calculations:<sp/>when<sp/>rounding<sp/>fractional<sp/>values<sp/>to</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>*<sp/>integer,<sp/>we<sp/>do<sp/>not<sp/>want<sp/>to<sp/>always<sp/>round<sp/>0.5<sp/>up<sp/>to<sp/>the<sp/>next<sp/>integer.</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/>*<sp/>If<sp/>we<sp/>did<sp/>that,<sp/>we&apos;d<sp/>introduce<sp/>a<sp/>noticeable<sp/>bias<sp/>towards<sp/>larger<sp/>values.</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*<sp/>Instead,<sp/>this<sp/>code<sp/>is<sp/>arranged<sp/>so<sp/>that<sp/>0.5<sp/>will<sp/>be<sp/>rounded<sp/>up<sp/>or<sp/>down<sp/>at</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*<sp/>alternate<sp/>pixel<sp/>locations<sp/>(a<sp/>simple<sp/>ordered<sp/>dither<sp/>pattern).</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal">h2v1_fancy_upsample<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*<sp/>compptr,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>input_data,<sp/>JSAMPARRAY<sp/>*<sp/>output_data_ptr)</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>JSAMPARRAY<sp/>output_data<sp/>=<sp/>*output_data_ptr;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JSAMPROW<sp/>inptr,<sp/>outptr;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>invalue;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JDIMENSION<sp/>colctr;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inrow;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(inrow<sp/>=<sp/>0;<sp/>inrow<sp/>&lt;<sp/>cinfo-&gt;max_v_samp_factor;<sp/>inrow++)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>inptr<sp/>=<sp/>input_data[inrow];</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>outptr<sp/>=<sp/>output_data[inrow];</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Special<sp/>case<sp/>for<sp/>first<sp/>column<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>invalue<sp/>=<sp/>GETJSAMPLE(*inptr++);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>*outptr++<sp/>=<sp/>(JSAMPLE)<sp/>invalue;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>*outptr++<sp/>=<sp/>(JSAMPLE)<sp/>((invalue<sp/>*<sp/>3<sp/>+<sp/>GETJSAMPLE(*inptr)<sp/>+<sp/>2)<sp/>&gt;&gt;<sp/>2);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(colctr<sp/>=<sp/>compptr-&gt;downsampled_width<sp/>-<sp/>2;<sp/>colctr<sp/>&gt;<sp/>0;<sp/>colctr--)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>General<sp/>case:<sp/>3/4<sp/>*<sp/>nearer<sp/>pixel<sp/>+<sp/>1/4<sp/>*<sp/>further<sp/>pixel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>invalue<sp/>=<sp/>GETJSAMPLE(*inptr++)<sp/>*<sp/>3;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outptr++<sp/>=<sp/>(JSAMPLE)<sp/>((invalue<sp/>+<sp/>GETJSAMPLE(inptr[-2])<sp/>+<sp/>1)<sp/>&gt;&gt;<sp/>2);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outptr++<sp/>=<sp/>(JSAMPLE)<sp/>((invalue<sp/>+<sp/>GETJSAMPLE(*inptr)<sp/>+<sp/>2)<sp/>&gt;&gt;<sp/>2);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Special<sp/>case<sp/>for<sp/>last<sp/>column<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>invalue<sp/>=<sp/>GETJSAMPLE(*inptr);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>*outptr++<sp/>=<sp/>(JSAMPLE)<sp/>((invalue<sp/>*<sp/>3<sp/>+<sp/>GETJSAMPLE(inptr[-1])<sp/>+<sp/>1)<sp/>&gt;&gt;<sp/>2);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>*outptr++<sp/>=<sp/>(JSAMPLE)<sp/>invalue;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/>*<sp/>Fancy<sp/>processing<sp/>for<sp/>the<sp/>common<sp/>case<sp/>of<sp/>2:1<sp/>horizontal<sp/>and<sp/>2:1<sp/>vertical.</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>*<sp/>Again<sp/>a<sp/>triangle<sp/>filter;<sp/>see<sp/>comments<sp/>for<sp/>h2v1<sp/>case,<sp/>above.</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*<sp/>It<sp/>is<sp/>OK<sp/>for<sp/>us<sp/>to<sp/>reference<sp/>the<sp/>adjacent<sp/>input<sp/>rows<sp/>because<sp/>we<sp/>demanded</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*<sp/>context<sp/>from<sp/>the<sp/>main<sp/>buffer<sp/>controller<sp/>(see<sp/>initialization<sp/>code).</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal">h2v2_fancy_upsample<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*<sp/>compptr,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>input_data,<sp/>JSAMPARRAY<sp/>*<sp/>output_data_ptr)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>JSAMPARRAY<sp/>output_data<sp/>=<sp/>*output_data_ptr;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JSAMPROW<sp/>inptr0,<sp/>inptr1,<sp/>outptr;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BITS_IN_JSAMPLE<sp/>==<sp/>8</highlight></codeline>
<codeline lineno="351"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thiscolsum,<sp/>lastcolsum,<sp/>nextcolsum;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="353"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>INT32<sp/>thiscolsum,<sp/>lastcolsum,<sp/>nextcolsum;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="355"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JDIMENSION<sp/>colctr;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inrow,<sp/>outrow,<sp/>v;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>inrow<sp/>=<sp/>outrow<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(outrow<sp/>&lt;<sp/>cinfo-&gt;max_v_samp_factor)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(v<sp/>=<sp/>0;<sp/>v<sp/>&lt;<sp/>2;<sp/>v++)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>inptr0<sp/>points<sp/>to<sp/>nearest<sp/>input<sp/>row,<sp/>inptr1<sp/>points<sp/>to<sp/>next<sp/>nearest<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inptr0<sp/>=<sp/>input_data[inrow];</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>==<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>next<sp/>nearest<sp/>is<sp/>row<sp/>above<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>inptr1<sp/>=<sp/>input_data[inrow-1];</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>next<sp/>nearest<sp/>is<sp/>row<sp/>below<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>inptr1<sp/>=<sp/>input_data[inrow+1];</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outptr<sp/>=<sp/>output_data[outrow++];</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Special<sp/>case<sp/>for<sp/>first<sp/>column<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thiscolsum<sp/>=<sp/>GETJSAMPLE(*inptr0++)<sp/>*<sp/>3<sp/>+<sp/>GETJSAMPLE(*inptr1++);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nextcolsum<sp/>=<sp/>GETJSAMPLE(*inptr0++)<sp/>*<sp/>3<sp/>+<sp/>GETJSAMPLE(*inptr1++);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outptr++<sp/>=<sp/>(JSAMPLE)<sp/>((thiscolsum<sp/>*<sp/>4<sp/>+<sp/>8)<sp/>&gt;&gt;<sp/>4);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outptr++<sp/>=<sp/>(JSAMPLE)<sp/>((thiscolsum<sp/>*<sp/>3<sp/>+<sp/>nextcolsum<sp/>+<sp/>7)<sp/>&gt;&gt;<sp/>4);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastcolsum<sp/>=<sp/>thiscolsum;<sp/>thiscolsum<sp/>=<sp/>nextcolsum;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(colctr<sp/>=<sp/>compptr-&gt;downsampled_width<sp/>-<sp/>2;<sp/>colctr<sp/>&gt;<sp/>0;<sp/>colctr--)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>General<sp/>case:<sp/>3/4<sp/>*<sp/>nearer<sp/>pixel<sp/>+<sp/>1/4<sp/>*<sp/>further<sp/>pixel<sp/>in<sp/>each<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>dimension,<sp/>thus<sp/>9/16,<sp/>3/16,<sp/>3/16,<sp/>1/16<sp/>overall<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>nextcolsum<sp/>=<sp/>GETJSAMPLE(*inptr0++)<sp/>*<sp/>3<sp/>+<sp/>GETJSAMPLE(*inptr1++);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>*outptr++<sp/>=<sp/>(JSAMPLE)<sp/>((thiscolsum<sp/>*<sp/>3<sp/>+<sp/>lastcolsum<sp/>+<sp/>8)<sp/>&gt;&gt;<sp/>4);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>*outptr++<sp/>=<sp/>(JSAMPLE)<sp/>((thiscolsum<sp/>*<sp/>3<sp/>+<sp/>nextcolsum<sp/>+<sp/>7)<sp/>&gt;&gt;<sp/>4);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>lastcolsum<sp/>=<sp/>thiscolsum;<sp/>thiscolsum<sp/>=<sp/>nextcolsum;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Special<sp/>case<sp/>for<sp/>last<sp/>column<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outptr++<sp/>=<sp/>(JSAMPLE)<sp/>((thiscolsum<sp/>*<sp/>3<sp/>+<sp/>lastcolsum<sp/>+<sp/>8)<sp/>&gt;&gt;<sp/>4);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outptr++<sp/>=<sp/>(JSAMPLE)<sp/>((thiscolsum<sp/>*<sp/>4<sp/>+<sp/>7)<sp/>&gt;&gt;<sp/>4);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>inrow++;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/>*<sp/>Module<sp/>initialization<sp/>routine<sp/>for<sp/>upsampling.</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal">jinit_upsampler<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>my_upsample_ptr<sp/>upsample;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ci;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*<sp/>compptr;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>need_buffer,<sp/>do_fancy;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h_in_group,<sp/>v_in_group,<sp/>h_out_group,<sp/>v_out_group;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>upsample<sp/>=<sp/>(my_upsample_ptr)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SIZEOF(<ref refid="structmy__upsampler" kindref="compound">my_upsampler</ref>));</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>cinfo-&gt;upsample<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__upsampler" kindref="compound">jpeg_upsampler</ref><sp/>*)<sp/>upsample;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>upsample-&gt;pub.start_pass<sp/>=<sp/>start_pass_upsample;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>upsample-&gt;pub.upsample<sp/>=<sp/>sep_upsample;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>upsample-&gt;pub.need_context_rows<sp/>=<sp/>FALSE;<sp/></highlight><highlight class="comment">/*<sp/>until<sp/>we<sp/>find<sp/>out<sp/>differently<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;CCIR601_sampling)<sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>isn&apos;t<sp/>supported<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_CCIR601_NOTIMPL);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>jdmainct.c<sp/>doesn&apos;t<sp/>support<sp/>context<sp/>rows<sp/>when<sp/>min_DCT_scaled_size<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/><sp/><sp/>*<sp/>so<sp/>don&apos;t<sp/>ask<sp/>for<sp/>it.</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>do_fancy<sp/>=<sp/>cinfo-&gt;do_fancy_upsampling<sp/>&amp;&amp;<sp/>cinfo-&gt;min_DCT_scaled_size<sp/>&gt;<sp/>1;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Verify<sp/>we<sp/>can<sp/>handle<sp/>the<sp/>sampling<sp/>factors,<sp/>select<sp/>per-component<sp/>methods,</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/><sp/><sp/>*<sp/>and<sp/>create<sp/>storage<sp/>as<sp/>needed.</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ci<sp/>=<sp/>0,<sp/>compptr<sp/>=<sp/>cinfo-&gt;comp_info;<sp/>ci<sp/>&lt;<sp/>cinfo-&gt;num_components;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci++,<sp/>compptr++)<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>size<sp/>of<sp/>an<sp/>&quot;input<sp/>group&quot;<sp/>after<sp/>IDCT<sp/>scaling.<sp/><sp/>This<sp/>many<sp/>samples</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>are<sp/>to<sp/>be<sp/>converted<sp/>to<sp/>max_h_samp_factor<sp/>*<sp/>max_v_samp_factor<sp/>pixels.</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>h_in_group<sp/>=<sp/>(compptr-&gt;h_samp_factor<sp/>*<sp/>compptr-&gt;DCT_scaled_size)<sp/>/</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;min_DCT_scaled_size;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>v_in_group<sp/>=<sp/>(compptr-&gt;v_samp_factor<sp/>*<sp/>compptr-&gt;DCT_scaled_size)<sp/>/</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cinfo-&gt;min_DCT_scaled_size;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>h_out_group<sp/>=<sp/>cinfo-&gt;max_h_samp_factor;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>v_out_group<sp/>=<sp/>cinfo-&gt;max_v_samp_factor;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>upsample-&gt;rowgroup_height[ci]<sp/>=<sp/>v_in_group;<sp/></highlight><highlight class="comment">/*<sp/>save<sp/>for<sp/>use<sp/>later<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>need_buffer<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>compptr-&gt;component_needed)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>bother<sp/>to<sp/>upsample<sp/>an<sp/>uninteresting<sp/>component.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>upsample-&gt;methods[ci]<sp/>=<sp/>noop_upsample;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>need_buffer<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h_in_group<sp/>==<sp/>h_out_group<sp/>&amp;&amp;<sp/>v_in_group<sp/>==<sp/>v_out_group)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fullsize<sp/>components<sp/>can<sp/>be<sp/>processed<sp/>without<sp/>any<sp/>work.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>upsample-&gt;methods[ci]<sp/>=<sp/>fullsize_upsample;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>need_buffer<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h_in_group<sp/>*<sp/>2<sp/>==<sp/>h_out_group<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_in_group<sp/>==<sp/>v_out_group)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Special<sp/>cases<sp/>for<sp/>2h1v<sp/>upsampling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_fancy<sp/>&amp;&amp;<sp/>compptr-&gt;downsampled_width<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>upsample-&gt;methods[ci]<sp/>=<sp/>h2v1_fancy_upsample;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>upsample-&gt;methods[ci]<sp/>=<sp/>h2v1_upsample;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h_in_group<sp/>*<sp/>2<sp/>==<sp/>h_out_group<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_in_group<sp/>*<sp/>2<sp/>==<sp/>v_out_group)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Special<sp/>cases<sp/>for<sp/>2h2v<sp/>upsampling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_fancy<sp/>&amp;&amp;<sp/>compptr-&gt;downsampled_width<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>upsample-&gt;methods[ci]<sp/>=<sp/>h2v2_fancy_upsample;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>upsample-&gt;pub.need_context_rows<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>upsample-&gt;methods[ci]<sp/>=<sp/>h2v2_upsample;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((h_out_group<sp/>%<sp/>h_in_group)<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(v_out_group<sp/>%<sp/>v_in_group)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Generic<sp/>integral-factors<sp/>upsampling<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>upsample-&gt;methods[ci]<sp/>=<sp/>int_upsample;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>upsample-&gt;h_expand[ci]<sp/>=<sp/>(UINT8)<sp/>(h_out_group<sp/>/<sp/>h_in_group);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>upsample-&gt;v_expand[ci]<sp/>=<sp/>(UINT8)<sp/>(v_out_group<sp/>/<sp/>v_in_group);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_FRACT_SAMPLE_NOTIMPL);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(need_buffer)<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>upsample-&gt;color_buf[ci]<sp/>=<sp/>(*cinfo-&gt;mem-&gt;alloc_sarray)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(JDIMENSION)<sp/>jround_up((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;output_width,</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(long)<sp/>cinfo-&gt;max_h_samp_factor),</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(JDIMENSION)<sp/>cinfo-&gt;max_v_samp_factor);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jdsample.c"/>
  </compounddef>
</doxygen>
