<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="jerror_8c" kind="file">
    <compoundname>jerror.c</compoundname>
    <includes refid="jinclude_8h" local="yes">jinclude.h</includes>
    <includes refid="jpeglib_8h" local="yes">jpeglib.h</includes>
    <includes refid="jversion_8h" local="yes">jversion.h</includes>
    <includes refid="jerror_8h" local="yes">jerror.h</includes>
      <sectiondef kind="define">
      <memberdef kind="define" id="jerror_8c_1a73efe787c131b385070f25d18b7c9aa4" prot="public" static="no">
        <name>EXIT_FAILURE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jerror.c" line="27" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jerror.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jerror_8c_1a2cf1ff20bd8937b11087da4ae16fb2a4" prot="public" static="no">
        <name>JMESSAGE</name>
        <param><defname>code</defname></param>
        <param><defname>string</defname></param>
        <initializer>string ,</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jerror.c" line="43" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jerror.c" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="jerror_8c_1afa7cc8e31762a79ba497b9bce74ce2fc" prot="public" static="no" mutable="no">
        <type>const char *const</type>
        <definition>const char* const jpeg_std_message_table[]</definition>
        <argsstring>[]</argsstring>
        <name>jpeg_std_message_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jerror.c" line="45" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jerror.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="jerror_8c_1a6564bb944b4875e84b0e4a877922a508" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>jpg_Error</definition>
        <argsstring>(const char *fmt,...)</argsstring>
        <name>jpg_Error</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jerror.c" line="23" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Image_files.cpp" bodystart="55" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="jerror_8c_1ab32eb709e1da536559da99a402142cf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>jpg_Printf</definition>
        <argsstring>(const char *fmt,...)</argsstring>
        <name>jpg_Printf</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jerror.c" line="24" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/Image_files.cpp" bodystart="66" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="jerror_8c_1af3dc14270ad51f5462ad8808ac0f9106" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void error_exit</definition>
        <argsstring>(j_common_ptr cinfo)</argsstring>
        <name>error_exit</name>
        <param>
          <type><ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jerror.c" line="65" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jerror.c" bodystart="65" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="jerror_8c_1a3be45af8ffee1d768506d57fac2b44b7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void output_message</definition>
        <argsstring>(j_common_ptr cinfo)</argsstring>
        <name>output_message</name>
        <param>
          <type><ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jerror.c" line="86" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jerror.c" bodystart="86" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="jerror_8c_1a314f202933a559124e1b055e75d630e8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void emit_message</definition>
        <argsstring>(j_common_ptr cinfo, int msg_level)</argsstring>
        <name>emit_message</name>
        <param>
          <type><ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>msg_level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jerror.c" line="110" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jerror.c" bodystart="110" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="jerror_8c_1a565aa509d436a2b044acad8047c68cb7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void format_message</definition>
        <argsstring>(j_common_ptr cinfo, char *buffer)</argsstring>
        <name>format_message</name>
        <param>
          <type><ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jerror.c" line="139" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jerror.c" bodystart="139" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="jerror_8c_1ae5058696223e560af7f5a8c89b6e6a2b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void reset_error_mgr</definition>
        <argsstring>(j_common_ptr cinfo)</argsstring>
        <name>reset_error_mgr</name>
        <param>
          <type><ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jerror.c" line="194" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jerror.c" bodystart="194" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="jerror_8c_1a0e4aef5b05dded51fe7debcc8795f2da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structjpeg__error__mgr" kindref="compound">jpeg_error_mgr</ref> *</type>
        <definition>struct jpeg_error_mgr* jpeg_std_error</definition>
        <argsstring>(struct jpeg_error_mgr *err)</argsstring>
        <name>jpeg_std_error</name>
        <param>
          <type>struct <ref refid="structjpeg__error__mgr" kindref="compound">jpeg_error_mgr</ref> *</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jerror.c" line="213" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jerror.c" bodystart="213" bodyend="234"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>jerror.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1991-1994,<sp/>Thomas<sp/>G.<sp/>Lane.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Independent<sp/>JPEG<sp/>Group&apos;s<sp/>software.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>conditions<sp/>of<sp/>distribution<sp/>and<sp/>use,<sp/>see<sp/>the<sp/>accompanying<sp/>README<sp/>file.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>simple<sp/>error-reporting<sp/>and<sp/>trace-message<sp/>routines.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>These<sp/>are<sp/>suitable<sp/>for<sp/>Unix-like<sp/>systems<sp/>and<sp/>others<sp/>where<sp/>writing<sp/>to</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>stderr<sp/>is<sp/>the<sp/>right<sp/>thing<sp/>to<sp/>do.<sp/><sp/>Many<sp/>applications<sp/>will<sp/>want<sp/>to<sp/>replace</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>some<sp/>or<sp/>all<sp/>of<sp/>these<sp/>routines.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>These<sp/>routines<sp/>are<sp/>used<sp/>by<sp/>both<sp/>the<sp/>compression<sp/>and<sp/>decompression<sp/>code.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>not<sp/>a<sp/>core<sp/>library<sp/>module,<sp/>so<sp/>it<sp/>doesn&apos;t<sp/>define<sp/>JPEG_INTERNALS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jinclude.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jpeglib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jversion.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jerror.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>jpg_Error(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...<sp/>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>jpg_Printf(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...<sp/>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>EXIT_FAILURE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>define<sp/>exit()<sp/>codes<sp/>if<sp/>not<sp/>provided<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>EXIT_FAILURE<sp/><sp/>1</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>Create<sp/>the<sp/>message<sp/>string<sp/>table.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>We<sp/>do<sp/>this<sp/>from<sp/>the<sp/>master<sp/>message<sp/>list<sp/>in<sp/>jerror.h<sp/>by<sp/>re-reading</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>jerror.h<sp/>with<sp/>a<sp/>suitable<sp/>definition<sp/>for<sp/>macro<sp/>JMESSAGE.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>The<sp/>message<sp/>table<sp/>is<sp/>made<sp/>an<sp/>external<sp/>symbol<sp/>just<sp/>in<sp/>case<sp/>any<sp/>applications</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>want<sp/>to<sp/>refer<sp/>to<sp/>it<sp/>directly.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>NEED_SHORT_EXTERNAL_NAMES</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jpeg_std_message_table<sp/><sp/>jMsgTable</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JMESSAGE(code,string)<sp/><sp/><sp/>string<sp/>,</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>jpeg_std_message_table[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jerror.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>NULL</highlight></codeline>
<codeline lineno="48"><highlight class="normal">};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>Error<sp/>exit<sp/>handler:<sp/>must<sp/>not<sp/>return<sp/>to<sp/>caller.</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>Applications<sp/>may<sp/>override<sp/>this<sp/>if<sp/>they<sp/>want<sp/>to<sp/>get<sp/>control<sp/>back<sp/>after</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>an<sp/>error.<sp/><sp/>Typically<sp/>one<sp/>would<sp/>longjmp<sp/>somewhere<sp/>instead<sp/>of<sp/>exiting.</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>The<sp/>setjmp<sp/>buffer<sp/>can<sp/>be<sp/>made<sp/>a<sp/>private<sp/>field<sp/>within<sp/>an<sp/>expanded<sp/>error</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>handler<sp/>object.<sp/><sp/>Note<sp/>that<sp/>the<sp/>info<sp/>needed<sp/>to<sp/>generate<sp/>an<sp/>error<sp/>message</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>is<sp/>stored<sp/>in<sp/>the<sp/>error<sp/>object,<sp/>so<sp/>you<sp/>can<sp/>generate<sp/>the<sp/>message<sp/>now<sp/>or</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>later,<sp/>at<sp/>your<sp/>convenience.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>make<sp/>sure<sp/>that<sp/>the<sp/>JPEG<sp/>object<sp/>is<sp/>cleaned<sp/>up<sp/>(with<sp/>jpeg_abort</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>or<sp/>jpeg_destroy)<sp/>at<sp/>some<sp/>point.</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">error_exit<sp/>(<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[JMSG_LENGTH_MAX];</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>the<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>(*cinfo-&gt;err-&gt;format_message)<sp/>(cinfo,<sp/>buffer);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Let<sp/>the<sp/>memory<sp/>manager<sp/>delete<sp/>any<sp/>temp<sp/>files<sp/>before<sp/>we<sp/>die<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>jpeg_destroy(cinfo);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>jpg_Error(<sp/></highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>buffer<sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>Actual<sp/>output<sp/>of<sp/>an<sp/>error<sp/>or<sp/>trace<sp/>message.</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/>Applications<sp/>may<sp/>override<sp/>this<sp/>method<sp/>to<sp/>send<sp/>JPEG<sp/>messages<sp/>somewhere</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>other<sp/>than<sp/>stderr.</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">output_message<sp/>(<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[JMSG_LENGTH_MAX];</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>the<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>(*cinfo-&gt;err-&gt;format_message)<sp/>(cinfo,<sp/>buffer);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>it<sp/>to<sp/>stderr,<sp/>adding<sp/>a<sp/>newline<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>jpg_Printf(<sp/></highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>buffer<sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/>Decide<sp/>whether<sp/>to<sp/>emit<sp/>a<sp/>trace<sp/>or<sp/>warning<sp/>message.</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>msg_level<sp/>is<sp/>one<sp/>of:</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/><sp/><sp/>-1:<sp/>recoverable<sp/>corrupt-data<sp/>warning,<sp/>may<sp/>want<sp/>to<sp/>abort.</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>0:<sp/>important<sp/>advisory<sp/>messages<sp/>(always<sp/>display<sp/>to<sp/>user).</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>1:<sp/>first<sp/>level<sp/>of<sp/>tracing<sp/>detail.</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>2,3,...:<sp/>successively<sp/>more<sp/>detailed<sp/>tracing<sp/>messages.</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/>An<sp/>application<sp/>might<sp/>override<sp/>this<sp/>method<sp/>if<sp/>it<sp/>wanted<sp/>to<sp/>abort<sp/>on<sp/>warnings</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/>or<sp/>change<sp/>the<sp/>policy<sp/>about<sp/>which<sp/>messages<sp/>to<sp/>display.</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">emit_message<sp/>(<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref><sp/>cinfo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msg_level)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__error__mgr" kindref="compound">jpeg_error_mgr</ref><sp/>*<sp/>err<sp/>=<sp/>cinfo-&gt;err;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg_level<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It&apos;s<sp/>a<sp/>warning<sp/>message.<sp/><sp/>Since<sp/>corrupt<sp/>files<sp/>may<sp/>generate<sp/>many<sp/>warnings,</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>policy<sp/>implemented<sp/>here<sp/>is<sp/>to<sp/>show<sp/>only<sp/>the<sp/>first<sp/>warning,</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>unless<sp/>trace_level<sp/>&gt;=<sp/>3.</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err-&gt;num_warnings<sp/>==<sp/>0<sp/>||<sp/>err-&gt;trace_level<sp/>&gt;=<sp/>3)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*err-&gt;output_message)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Always<sp/>count<sp/>warnings<sp/>in<sp/>num_warnings.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>err-&gt;num_warnings++;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It&apos;s<sp/>a<sp/>trace<sp/>message.<sp/><sp/>Show<sp/>it<sp/>if<sp/>trace_level<sp/>&gt;=<sp/>msg_level.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err-&gt;trace_level<sp/>&gt;=<sp/>msg_level)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*err-&gt;output_message)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>Format<sp/>a<sp/>message<sp/>string<sp/>for<sp/>the<sp/>most<sp/>recent<sp/>JPEG<sp/>error<sp/>or<sp/>message.</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*<sp/>The<sp/>message<sp/>is<sp/>stored<sp/>into<sp/>buffer,<sp/>which<sp/>should<sp/>be<sp/>at<sp/>least<sp/>JMSG_LENGTH_MAX</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/>characters.<sp/><sp/>Note<sp/>that<sp/>no<sp/>&apos;\n&apos;<sp/>character<sp/>is<sp/>added<sp/>to<sp/>the<sp/>string.</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/>Few<sp/>applications<sp/>should<sp/>need<sp/>to<sp/>override<sp/>this<sp/>method.</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">format_message<sp/>(<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref><sp/>cinfo,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>buffer)</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__error__mgr" kindref="compound">jpeg_error_mgr</ref><sp/>*<sp/>err<sp/>=<sp/>cinfo-&gt;err;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msg_code<sp/>=<sp/>err-&gt;msg_code;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>msgtext<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>msgptr;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>isstring;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>up<sp/>message<sp/>string<sp/>in<sp/>proper<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg_code<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>msg_code<sp/>&lt;=<sp/>err-&gt;last_jpeg_message)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>msgtext<sp/>=<sp/>err-&gt;jpeg_message_table[msg_code];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err-&gt;addon_message_table<sp/>!=<sp/>NULL<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_code<sp/>&gt;=<sp/>err-&gt;first_addon_message<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_code<sp/>&lt;=<sp/>err-&gt;last_addon_message)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>msgtext<sp/>=<sp/>err-&gt;addon_message_table[msg_code<sp/>-<sp/>err-&gt;first_addon_message];</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Defend<sp/>against<sp/>bogus<sp/>message<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msgtext<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>err-&gt;msg_parm.i[0]<sp/>=<sp/>msg_code;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>msgtext<sp/>=<sp/>err-&gt;jpeg_message_table[0];</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>string<sp/>parameter,<sp/>as<sp/>indicated<sp/>by<sp/>%s<sp/>in<sp/>the<sp/>message<sp/>text<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>isstring<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>msgptr<sp/>=<sp/>msgtext;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((ch<sp/>=<sp/>*msgptr++)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch<sp/>==<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*msgptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">)<sp/>isstring<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Format<sp/>the<sp/>message<sp/>into<sp/>the<sp/>passed<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isstring)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buffer,<sp/>msgtext,<sp/>err-&gt;msg_parm.s);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buffer,<sp/>msgtext,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err-&gt;msg_parm.i[0],<sp/>err-&gt;msg_parm.i[1],</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err-&gt;msg_parm.i[2],<sp/>err-&gt;msg_parm.i[3],</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err-&gt;msg_parm.i[4],<sp/>err-&gt;msg_parm.i[5],</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err-&gt;msg_parm.i[6],<sp/>err-&gt;msg_parm.i[7]);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*<sp/>Reset<sp/>error<sp/>state<sp/>variables<sp/>at<sp/>start<sp/>of<sp/>a<sp/>new<sp/>image.</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>called<sp/>during<sp/>compression<sp/>startup<sp/>to<sp/>reset<sp/>trace/error</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*<sp/>processing<sp/>to<sp/>default<sp/>state,<sp/>without<sp/>losing<sp/>any<sp/>application-specific</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*<sp/>method<sp/>pointers.<sp/><sp/>An<sp/>application<sp/>might<sp/>possibly<sp/>want<sp/>to<sp/>override</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*<sp/>this<sp/>method<sp/>if<sp/>it<sp/>has<sp/>additional<sp/>error<sp/>processing<sp/>state.</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal">reset_error_mgr<sp/>(<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>cinfo-&gt;err-&gt;num_warnings<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>trace_level<sp/>is<sp/>not<sp/>reset<sp/>since<sp/>it<sp/>is<sp/>an<sp/>application-supplied<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>cinfo-&gt;err-&gt;msg_code<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>may<sp/>be<sp/>useful<sp/>as<sp/>a<sp/>flag<sp/>for<sp/>&quot;no<sp/>error&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/>Fill<sp/>in<sp/>the<sp/>standard<sp/>error-handling<sp/>methods<sp/>in<sp/>a<sp/>jpeg_error_mgr<sp/>object.</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>Typical<sp/>call<sp/>is:</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/><sp/>struct<sp/>jpeg_compress_struct<sp/>cinfo;</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/><sp/>struct<sp/>jpeg_error_mgr<sp/>err;</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*<sp/><sp/>cinfo.err<sp/>=<sp/>jpeg_std_error(&amp;err);</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/>after<sp/>which<sp/>the<sp/>application<sp/>may<sp/>override<sp/>some<sp/>of<sp/>the<sp/>methods.</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__error__mgr" kindref="compound">jpeg_error_mgr</ref><sp/>*</highlight></codeline>
<codeline lineno="213"><highlight class="normal">jpeg_std_error<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structjpeg__error__mgr" kindref="compound">jpeg_error_mgr</ref><sp/>*<sp/>err)</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>err-&gt;error_exit<sp/>=<sp/>error_exit;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>err-&gt;emit_message<sp/>=<sp/>emit_message;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>err-&gt;output_message<sp/>=<sp/>output_message;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>err-&gt;format_message<sp/>=<sp/>format_message;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>err-&gt;reset_error_mgr<sp/>=<sp/>reset_error_mgr;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>err-&gt;trace_level<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>default<sp/>=<sp/>no<sp/>tracing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>err-&gt;num_warnings<sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>warnings<sp/>emitted<sp/>yet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>err-&gt;msg_code<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>may<sp/>be<sp/>useful<sp/>as<sp/>a<sp/>flag<sp/>for<sp/>&quot;no<sp/>error&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>message<sp/>table<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>err-&gt;jpeg_message_table<sp/>=<sp/>jpeg_std_message_table;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>err-&gt;last_jpeg_message<sp/>=<sp/>(int)<sp/>JMSG_LASTMSGCODE<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>err-&gt;addon_message_table<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>err-&gt;first_addon_message<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>safety<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>err-&gt;last_addon_message<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jerror.c"/>
  </compounddef>
</doxygen>
