<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="jidctflt_8c" kind="file">
    <compoundname>jidctflt.c</compoundname>
    <includes refid="jinclude_8h" local="yes">jinclude.h</includes>
    <includes refid="jpeglib_8h" local="yes">jpeglib.h</includes>
    <includes refid="jdct_8h" local="yes">jdct.h</includes>
      <sectiondef kind="define">
      <memberdef kind="define" id="jidctflt_8c_1ad5c3cdfae3019b8223973041a2a1304b" prot="public" static="no">
        <name>JPEG_INTERNALS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jidctflt.c" line="39" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jidctflt.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jidctflt_8c_1a37697e1838dc75e1e69368bff4c60cea" prot="public" static="no">
        <name>DEQUANTIZE</name>
        <param><defname>coef</defname></param>
        <param><defname>quantval</defname></param>
        <initializer>(((FAST_FLOAT) (coef)) * (quantval))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jidctflt.c" line="60" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jidctflt.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="jidctflt_8c_1a78abc43c9c4cd9f7936ba79f2a311b53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jpeg_idct_float</definition>
        <argsstring>(j_decompress_ptr cinfo, jpeg_component_info *compptr, JCOEFPTR coef_block, JSAMPARRAY output_buf, JDIMENSION output_col)</argsstring>
        <name>jpeg_idct_float</name>
        <param>
          <type><ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref></type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref> *</type>
          <declname>compptr</declname>
        </param>
        <param>
          <type>JCOEFPTR</type>
          <declname>coef_block</declname>
        </param>
        <param>
          <type>JSAMPARRAY</type>
          <declname>output_buf</declname>
        </param>
        <param>
          <type>JDIMENSION</type>
          <declname>output_col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jidctflt.c" line="68" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jidctflt.c" bodystart="68" bodyend="239"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>jidctflt.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1994,<sp/>Thomas<sp/>G.<sp/>Lane.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Independent<sp/>JPEG<sp/>Group&apos;s<sp/>software.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>conditions<sp/>of<sp/>distribution<sp/>and<sp/>use,<sp/>see<sp/>the<sp/>accompanying<sp/>README<sp/>file.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>a<sp/>floating-point<sp/>implementation<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>inverse<sp/>DCT<sp/>(Discrete<sp/>Cosine<sp/>Transform).<sp/><sp/>In<sp/>the<sp/>IJG<sp/>code,<sp/>this<sp/>routine</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>must<sp/>also<sp/>perform<sp/>dequantization<sp/>of<sp/>the<sp/>input<sp/>coefficients.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>This<sp/>implementation<sp/>should<sp/>be<sp/>more<sp/>accurate<sp/>than<sp/>either<sp/>of<sp/>the<sp/>integer</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>IDCT<sp/>implementations.<sp/><sp/>However,<sp/>it<sp/>may<sp/>not<sp/>give<sp/>the<sp/>same<sp/>results<sp/>on<sp/>all</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>machines<sp/>because<sp/>of<sp/>differences<sp/>in<sp/>roundoff<sp/>behavior.<sp/><sp/>Speed<sp/>will<sp/>depend</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>on<sp/>the<sp/>hardware&apos;s<sp/>floating<sp/>point<sp/>capacity.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>A<sp/>2-D<sp/>IDCT<sp/>can<sp/>be<sp/>done<sp/>by<sp/>1-D<sp/>IDCT<sp/>on<sp/>each<sp/>column<sp/>followed<sp/>by<sp/>1-D<sp/>IDCT</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>on<sp/>each<sp/>row<sp/>(or<sp/>vice<sp/>versa,<sp/>but<sp/>it&apos;s<sp/>more<sp/>convenient<sp/>to<sp/>emit<sp/>a<sp/>row<sp/>at</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>a<sp/>time).<sp/><sp/>Direct<sp/>algorithms<sp/>are<sp/>also<sp/>available,<sp/>but<sp/>they<sp/>are<sp/>much<sp/>more</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>complex<sp/>and<sp/>seem<sp/>not<sp/>to<sp/>be<sp/>any<sp/>faster<sp/>when<sp/>reduced<sp/>to<sp/>code.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>This<sp/>implementation<sp/>is<sp/>based<sp/>on<sp/>Arai,<sp/>Agui,<sp/>and<sp/>Nakajima&apos;s<sp/>algorithm<sp/>for</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>scaled<sp/>DCT.<sp/><sp/>Their<sp/>original<sp/>paper<sp/>(Trans.<sp/>IEICE<sp/>E-71(11):1095)<sp/>is<sp/>in</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>Japanese,<sp/>but<sp/>the<sp/>algorithm<sp/>is<sp/>described<sp/>in<sp/>the<sp/>Pennebaker<sp/>&amp;<sp/>Mitchell</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>JPEG<sp/>textbook<sp/>(see<sp/>REFERENCES<sp/>section<sp/>in<sp/>file<sp/>README).<sp/><sp/>The<sp/>following<sp/>code</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>is<sp/>based<sp/>directly<sp/>on<sp/>figure<sp/>4-8<sp/>in<sp/>P&amp;M.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>While<sp/>an<sp/>8-point<sp/>DCT<sp/>cannot<sp/>be<sp/>done<sp/>in<sp/>less<sp/>than<sp/>11<sp/>multiplies,<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>possible<sp/>to<sp/>arrange<sp/>the<sp/>computation<sp/>so<sp/>that<sp/>many<sp/>of<sp/>the<sp/>multiplies<sp/>are</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>simple<sp/>scalings<sp/>of<sp/>the<sp/>final<sp/>outputs.<sp/><sp/>These<sp/>multiplies<sp/>can<sp/>then<sp/>be</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>folded<sp/>into<sp/>the<sp/>multiplications<sp/>or<sp/>divisions<sp/>by<sp/>the<sp/>JPEG<sp/>quantization</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>table<sp/>entries.<sp/><sp/>The<sp/>AA&amp;N<sp/>method<sp/>leaves<sp/>only<sp/>5<sp/>multiplies<sp/>and<sp/>29<sp/>adds</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>to<sp/>be<sp/>done<sp/>in<sp/>the<sp/>DCT<sp/>itself.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>The<sp/>primary<sp/>disadvantage<sp/>of<sp/>this<sp/>method<sp/>is<sp/>that<sp/>with<sp/>a<sp/>fixed-point</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>implementation,<sp/>accuracy<sp/>is<sp/>lost<sp/>due<sp/>to<sp/>imprecise<sp/>representation<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>scaled<sp/>quantization<sp/>values.<sp/><sp/>However,<sp/>that<sp/>problem<sp/>does<sp/>not<sp/>arise<sp/>if</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>we<sp/>use<sp/>floating<sp/>point<sp/>arithmetic.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JPEG_INTERNALS</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;jinclude.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jpeglib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jdct.h&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Private<sp/>declarations<sp/>for<sp/>DCT<sp/>subsystem<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DCT_FLOAT_SUPPORTED</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>This<sp/>module<sp/>is<sp/>specialized<sp/>to<sp/>the<sp/>case<sp/>DCTSIZE<sp/>=<sp/>8.</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>DCTSIZE<sp/>!=<sp/>8</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>Sorry,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>code<sp/>only<sp/>copes<sp/>with<sp/>8x8<sp/>DCTs.<sp/></highlight><highlight class="comment">/*<sp/>deliberate<sp/>syntax<sp/>err<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Dequantize<sp/>a<sp/>coefficient<sp/>by<sp/>multiplying<sp/>it<sp/>by<sp/>the<sp/>multiplier-table</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>entry;<sp/>produce<sp/>a<sp/>float<sp/>result.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEQUANTIZE(coef,quantval)<sp/><sp/>(((FAST_FLOAT)<sp/>(coef))<sp/>*<sp/>(quantval))</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>Perform<sp/>dequantization<sp/>and<sp/>inverse<sp/>DCT<sp/>on<sp/>one<sp/>block<sp/>of<sp/>coefficients.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">jpeg_idct_float<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*<sp/>compptr,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JCOEFPTR<sp/>coef_block,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>output_buf,<sp/>JDIMENSION<sp/>output_col)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>FAST_FLOAT<sp/>tmp0,<sp/>tmp1,<sp/>tmp2,<sp/>tmp3,<sp/>tmp4,<sp/>tmp5,<sp/>tmp6,<sp/>tmp7;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>FAST_FLOAT<sp/>tmp10,<sp/>tmp11,<sp/>tmp12,<sp/>tmp13;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>FAST_FLOAT<sp/>z5,<sp/>z10,<sp/>z11,<sp/>z12,<sp/>z13;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>JCOEFPTR<sp/>inptr;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>FLOAT_MULT_TYPE<sp/>*<sp/>quantptr;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>FAST_FLOAT<sp/>*<sp/>wsptr;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>JSAMPROW<sp/>outptr;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>JSAMPLE<sp/>*range_limit<sp/>=<sp/>IDCT_range_limit(cinfo);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ctr;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>FAST_FLOAT<sp/>workspace[DCTSIZE2];<sp/></highlight><highlight class="comment">/*<sp/>buffers<sp/>data<sp/>between<sp/>passes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>SHIFT_TEMPS</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pass<sp/>1:<sp/>process<sp/>columns<sp/>from<sp/>input,<sp/>store<sp/>into<sp/>work<sp/>array.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>inptr<sp/>=<sp/>coef_block;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>quantptr<sp/>=<sp/>(FLOAT_MULT_TYPE<sp/>*)<sp/>compptr-&gt;dct_table;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>wsptr<sp/>=<sp/>workspace;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>for<sp/>(ctr<sp/>=<sp/>DCTSIZE;<sp/>ctr<sp/>&gt;<sp/>0;<sp/>ctr--)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Due<sp/>to<sp/>quantization,<sp/>we<sp/>will<sp/>usually<sp/>find<sp/>that<sp/>many<sp/>of<sp/>the<sp/>input</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>coefficients<sp/>are<sp/>zero,<sp/>especially<sp/>the<sp/>AC<sp/>terms.<sp/><sp/>We<sp/>can<sp/>exploit<sp/>this</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>by<sp/>short-circuiting<sp/>the<sp/>IDCT<sp/>calculation<sp/>for<sp/>any<sp/>column<sp/>in<sp/>which<sp/>all</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>AC<sp/>terms<sp/>are<sp/>zero.<sp/><sp/>In<sp/>that<sp/>case<sp/>each<sp/>output<sp/>is<sp/>equal<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>DC<sp/>coefficient<sp/>(with<sp/>scale<sp/>factor<sp/>as<sp/>needed).</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>With<sp/>typical<sp/>images<sp/>and<sp/>quantization<sp/>tables,<sp/>half<sp/>or<sp/>more<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>column<sp/>DCT<sp/>calculations<sp/>can<sp/>be<sp/>simplified<sp/>this<sp/>way.</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((inptr[DCTSIZE*1]<sp/>|<sp/>inptr[DCTSIZE*2]<sp/>|<sp/>inptr[DCTSIZE*3]<sp/>|</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>inptr[DCTSIZE*4]<sp/>|<sp/>inptr[DCTSIZE*5]<sp/>|<sp/>inptr[DCTSIZE*6]<sp/>|</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>inptr[DCTSIZE*7])<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AC<sp/>terms<sp/>all<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FAST_FLOAT<sp/>dcval<sp/>=<sp/>DEQUANTIZE(inptr[DCTSIZE*0],<sp/>quantptr[DCTSIZE*0]);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wsptr[DCTSIZE*0]<sp/>=<sp/>dcval;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wsptr[DCTSIZE*1]<sp/>=<sp/>dcval;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wsptr[DCTSIZE*2]<sp/>=<sp/>dcval;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wsptr[DCTSIZE*3]<sp/>=<sp/>dcval;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wsptr[DCTSIZE*4]<sp/>=<sp/>dcval;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wsptr[DCTSIZE*5]<sp/>=<sp/>dcval;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wsptr[DCTSIZE*6]<sp/>=<sp/>dcval;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wsptr[DCTSIZE*7]<sp/>=<sp/>dcval;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inptr++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>pointers<sp/>to<sp/>next<sp/>column<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>quantptr++;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wsptr++;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Even<sp/>part<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp0<sp/>=<sp/>DEQUANTIZE(inptr[DCTSIZE*0],<sp/>quantptr[DCTSIZE*0]);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp1<sp/>=<sp/>DEQUANTIZE(inptr[DCTSIZE*2],<sp/>quantptr[DCTSIZE*2]);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp2<sp/>=<sp/>DEQUANTIZE(inptr[DCTSIZE*4],<sp/>quantptr[DCTSIZE*4]);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp3<sp/>=<sp/>DEQUANTIZE(inptr[DCTSIZE*6],<sp/>quantptr[DCTSIZE*6]);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp10<sp/>=<sp/>tmp0<sp/>+<sp/>tmp2;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>phase<sp/>3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp11<sp/>=<sp/>tmp0<sp/>-<sp/>tmp2;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp13<sp/>=<sp/>tmp1<sp/>+<sp/>tmp3;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>phases<sp/>5-3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp12<sp/>=<sp/>(tmp1<sp/>-<sp/>tmp3)<sp/>*<sp/>((FAST_FLOAT)<sp/>1.414213562)<sp/>-<sp/>tmp13;<sp/></highlight><highlight class="comment">/*<sp/>2*c4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp0<sp/>=<sp/>tmp10<sp/>+<sp/>tmp13;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>phase<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp3<sp/>=<sp/>tmp10<sp/>-<sp/>tmp13;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp1<sp/>=<sp/>tmp11<sp/>+<sp/>tmp12;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp2<sp/>=<sp/>tmp11<sp/>-<sp/>tmp12;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Odd<sp/>part<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp4<sp/>=<sp/>DEQUANTIZE(inptr[DCTSIZE*1],<sp/>quantptr[DCTSIZE*1]);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp5<sp/>=<sp/>DEQUANTIZE(inptr[DCTSIZE*3],<sp/>quantptr[DCTSIZE*3]);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp6<sp/>=<sp/>DEQUANTIZE(inptr[DCTSIZE*5],<sp/>quantptr[DCTSIZE*5]);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp7<sp/>=<sp/>DEQUANTIZE(inptr[DCTSIZE*7],<sp/>quantptr[DCTSIZE*7]);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>z13<sp/>=<sp/>tmp6<sp/>+<sp/>tmp5;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>phase<sp/>6<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>z10<sp/>=<sp/>tmp6<sp/>-<sp/>tmp5;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>z11<sp/>=<sp/>tmp4<sp/>+<sp/>tmp7;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>z12<sp/>=<sp/>tmp4<sp/>-<sp/>tmp7;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp7<sp/>=<sp/>z11<sp/>+<sp/>z13;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>phase<sp/>5<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp11<sp/>=<sp/>(z11<sp/>-<sp/>z13)<sp/>*<sp/>((FAST_FLOAT)<sp/>1.414213562);<sp/></highlight><highlight class="comment">/*<sp/>2*c4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>z5<sp/>=<sp/>(z10<sp/>+<sp/>z12)<sp/>*<sp/>((FAST_FLOAT)<sp/>1.847759065);<sp/></highlight><highlight class="comment">/*<sp/>2*c2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp10<sp/>=<sp/>((FAST_FLOAT)<sp/>1.082392200)<sp/>*<sp/>z12<sp/>-<sp/>z5;<sp/></highlight><highlight class="comment">/*<sp/>2*(c2-c6)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp12<sp/>=<sp/>((FAST_FLOAT)<sp/>-2.613125930)<sp/>*<sp/>z10<sp/>+<sp/>z5;<sp/></highlight><highlight class="comment">/*<sp/>-2*(c2+c6)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp6<sp/>=<sp/>tmp12<sp/>-<sp/>tmp7;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>phase<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp5<sp/>=<sp/>tmp11<sp/>-<sp/>tmp6;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp4<sp/>=<sp/>tmp10<sp/>+<sp/>tmp5;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>wsptr[DCTSIZE*0]<sp/>=<sp/>tmp0<sp/>+<sp/>tmp7;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>wsptr[DCTSIZE*7]<sp/>=<sp/>tmp0<sp/>-<sp/>tmp7;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>wsptr[DCTSIZE*1]<sp/>=<sp/>tmp1<sp/>+<sp/>tmp6;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>wsptr[DCTSIZE*6]<sp/>=<sp/>tmp1<sp/>-<sp/>tmp6;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>wsptr[DCTSIZE*2]<sp/>=<sp/>tmp2<sp/>+<sp/>tmp5;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>wsptr[DCTSIZE*5]<sp/>=<sp/>tmp2<sp/>-<sp/>tmp5;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>wsptr[DCTSIZE*4]<sp/>=<sp/>tmp3<sp/>+<sp/>tmp4;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>wsptr[DCTSIZE*3]<sp/>=<sp/>tmp3<sp/>-<sp/>tmp4;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>inptr++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>pointers<sp/>to<sp/>next<sp/>column<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>quantptr++;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>wsptr++;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pass<sp/>2:<sp/>process<sp/>rows<sp/>from<sp/>work<sp/>array,<sp/>store<sp/>into<sp/>output<sp/>array.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note<sp/>that<sp/>we<sp/>must<sp/>descale<sp/>the<sp/>results<sp/>by<sp/>a<sp/>factor<sp/>of<sp/>8<sp/>==<sp/>2**3.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>wsptr<sp/>=<sp/>workspace;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ctr<sp/>=<sp/>0;<sp/>ctr<sp/>&lt;<sp/>DCTSIZE;<sp/>ctr++)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>outptr<sp/>=<sp/>output_buf[ctr]<sp/>+<sp/>output_col;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rows<sp/>of<sp/>zeroes<sp/>can<sp/>be<sp/>exploited<sp/>in<sp/>the<sp/>same<sp/>way<sp/>as<sp/>we<sp/>did<sp/>with<sp/>columns.</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>However,<sp/>the<sp/>column<sp/>calculation<sp/>has<sp/>created<sp/>many<sp/>nonzero<sp/>AC<sp/>terms,<sp/>so</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>simplification<sp/>applies<sp/>less<sp/>often<sp/>(typically<sp/>5%<sp/>to<sp/>10%<sp/>of<sp/>the<sp/>time).</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>And<sp/>testing<sp/>floats<sp/>for<sp/>zero<sp/>is<sp/>relatively<sp/>expensive,<sp/>so<sp/>we<sp/>don&apos;t<sp/>bother.</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Even<sp/>part<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp10<sp/>=<sp/>wsptr[0]<sp/>+<sp/>wsptr[4];</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp11<sp/>=<sp/>wsptr[0]<sp/>-<sp/>wsptr[4];</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp13<sp/>=<sp/>wsptr[2]<sp/>+<sp/>wsptr[6];</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp12<sp/>=<sp/>(wsptr[2]<sp/>-<sp/>wsptr[6])<sp/>*<sp/>((FAST_FLOAT)<sp/>1.414213562)<sp/>-<sp/>tmp13;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp0<sp/>=<sp/>tmp10<sp/>+<sp/>tmp13;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp3<sp/>=<sp/>tmp10<sp/>-<sp/>tmp13;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp1<sp/>=<sp/>tmp11<sp/>+<sp/>tmp12;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp2<sp/>=<sp/>tmp11<sp/>-<sp/>tmp12;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Odd<sp/>part<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>z13<sp/>=<sp/>wsptr[5]<sp/>+<sp/>wsptr[3];</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>z10<sp/>=<sp/>wsptr[5]<sp/>-<sp/>wsptr[3];</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>z11<sp/>=<sp/>wsptr[1]<sp/>+<sp/>wsptr[7];</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>z12<sp/>=<sp/>wsptr[1]<sp/>-<sp/>wsptr[7];</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp7<sp/>=<sp/>z11<sp/>+<sp/>z13;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp11<sp/>=<sp/>(z11<sp/>-<sp/>z13)<sp/>*<sp/>((FAST_FLOAT)<sp/>1.414213562);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>z5<sp/>=<sp/>(z10<sp/>+<sp/>z12)<sp/>*<sp/>((FAST_FLOAT)<sp/>1.847759065);<sp/></highlight><highlight class="comment">/*<sp/>2*c2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp10<sp/>=<sp/>((FAST_FLOAT)<sp/>1.082392200)<sp/>*<sp/>z12<sp/>-<sp/>z5;<sp/></highlight><highlight class="comment">/*<sp/>2*(c2-c6)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp12<sp/>=<sp/>((FAST_FLOAT)<sp/>-2.613125930)<sp/>*<sp/>z10<sp/>+<sp/>z5;<sp/></highlight><highlight class="comment">/*<sp/>-2*(c2+c6)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp6<sp/>=<sp/>tmp12<sp/>-<sp/>tmp7;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp5<sp/>=<sp/>tmp11<sp/>-<sp/>tmp6;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp4<sp/>=<sp/>tmp10<sp/>+<sp/>tmp5;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Final<sp/>output<sp/>stage:<sp/>scale<sp/>down<sp/>by<sp/>a<sp/>factor<sp/>of<sp/>8<sp/>and<sp/>range-limit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>outptr[0]<sp/>=<sp/>range_limit[(int)<sp/>DESCALE((INT32)<sp/>(tmp0<sp/>+<sp/>tmp7),<sp/>3)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>RANGE_MASK];</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>outptr[7]<sp/>=<sp/>range_limit[(int)<sp/>DESCALE((INT32)<sp/>(tmp0<sp/>-<sp/>tmp7),<sp/>3)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>RANGE_MASK];</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>outptr[1]<sp/>=<sp/>range_limit[(int)<sp/>DESCALE((INT32)<sp/>(tmp1<sp/>+<sp/>tmp6),<sp/>3)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>RANGE_MASK];</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>outptr[6]<sp/>=<sp/>range_limit[(int)<sp/>DESCALE((INT32)<sp/>(tmp1<sp/>-<sp/>tmp6),<sp/>3)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>RANGE_MASK];</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>outptr[2]<sp/>=<sp/>range_limit[(int)<sp/>DESCALE((INT32)<sp/>(tmp2<sp/>+<sp/>tmp5),<sp/>3)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>RANGE_MASK];</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>outptr[5]<sp/>=<sp/>range_limit[(int)<sp/>DESCALE((INT32)<sp/>(tmp2<sp/>-<sp/>tmp5),<sp/>3)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>RANGE_MASK];</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>outptr[4]<sp/>=<sp/>range_limit[(int)<sp/>DESCALE((INT32)<sp/>(tmp3<sp/>+<sp/>tmp4),<sp/>3)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>RANGE_MASK];</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>outptr[3]<sp/>=<sp/>range_limit[(int)<sp/>DESCALE((INT32)<sp/>(tmp3<sp/>-<sp/>tmp4),<sp/>3)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>RANGE_MASK];</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>wsptr<sp/>+=<sp/>DCTSIZE;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>pointer<sp/>to<sp/>next<sp/>row<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DCT_FLOAT_SUPPORTED<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jidctflt.c"/>
  </compounddef>
</doxygen>
