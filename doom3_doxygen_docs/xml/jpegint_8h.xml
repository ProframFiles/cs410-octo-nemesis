<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="jpegint_8h" kind="file">
    <compoundname>jpegint.h</compoundname>
    <includedby refid="jpeglib_8h" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpeglib.h</includedby>
    <innerclass refid="structjpeg__comp__master" prot="public">jpeg_comp_master</innerclass>
    <innerclass refid="structjpeg__c__main__controller" prot="public">jpeg_c_main_controller</innerclass>
    <innerclass refid="structjpeg__c__prep__controller" prot="public">jpeg_c_prep_controller</innerclass>
    <innerclass refid="structjpeg__c__coef__controller" prot="public">jpeg_c_coef_controller</innerclass>
    <innerclass refid="structjpeg__color__converter" prot="public">jpeg_color_converter</innerclass>
    <innerclass refid="structjpeg__downsampler" prot="public">jpeg_downsampler</innerclass>
    <innerclass refid="structjpeg__forward__dct" prot="public">jpeg_forward_dct</innerclass>
    <innerclass refid="structjpeg__entropy__encoder" prot="public">jpeg_entropy_encoder</innerclass>
    <innerclass refid="structjpeg__marker__writer" prot="public">jpeg_marker_writer</innerclass>
    <innerclass refid="structjpeg__decomp__master" prot="public">jpeg_decomp_master</innerclass>
    <innerclass refid="structjpeg__input__controller" prot="public">jpeg_input_controller</innerclass>
    <innerclass refid="structjpeg__d__main__controller" prot="public">jpeg_d_main_controller</innerclass>
    <innerclass refid="structjpeg__d__coef__controller" prot="public">jpeg_d_coef_controller</innerclass>
    <innerclass refid="structjpeg__d__post__controller" prot="public">jpeg_d_post_controller</innerclass>
    <innerclass refid="structjpeg__marker__reader" prot="public">jpeg_marker_reader</innerclass>
    <innerclass refid="structjpeg__entropy__decoder" prot="public">jpeg_entropy_decoder</innerclass>
    <innerclass refid="structjpeg__inverse__dct" prot="public">jpeg_inverse_dct</innerclass>
    <innerclass refid="structjpeg__upsampler" prot="public">jpeg_upsampler</innerclass>
    <innerclass refid="structjpeg__color__deconverter" prot="public">jpeg_color_deconverter</innerclass>
    <innerclass refid="structjpeg__color__quantizer" prot="public">jpeg_color_quantizer</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="jpegint_8h_1a91399be27c6e355ce9d0e72bb44014e6" prot="public" static="no">
        <name>CSTATE_START</name>
        <initializer>100	/* after create_compress */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="25" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jpegint_8h_1acac7e11327de2ffceba73d7e194a1292" prot="public" static="no">
        <name>CSTATE_SCANNING</name>
        <initializer>101	/* start_compress done, write_scanlines OK */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="26" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jpegint_8h_1a1237b7006d409f24d576b18545778b8c" prot="public" static="no">
        <name>CSTATE_RAW_OK</name>
        <initializer>102	/* start_compress done, write_raw_data OK */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="27" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jpegint_8h_1a38d3dd3267d194cf01297394995c1a9e" prot="public" static="no">
        <name>CSTATE_WRCOEFS</name>
        <initializer>103	/* jpeg_write_coefficients done */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="28" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jpegint_8h_1a3198117fcdb271222f17a62f4af55538" prot="public" static="no">
        <name>DSTATE_START</name>
        <initializer>200	/* after create_decompress */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="29" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jpegint_8h_1a1f63d4c813962160ada5b835f67e4e9b" prot="public" static="no">
        <name>DSTATE_INHEADER</name>
        <initializer>201	/* reading header markers, no SOS yet */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="30" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jpegint_8h_1a2b5c98fff1854c46bff13445ea14daab" prot="public" static="no">
        <name>DSTATE_READY</name>
        <initializer>202	/* found SOS, ready for start_decompress */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="31" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jpegint_8h_1a3447d3cec946af70c20ec78c7607ef6b" prot="public" static="no">
        <name>DSTATE_PRELOAD</name>
        <initializer>203	/* reading multiscan file in start_decompress*/</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="32" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jpegint_8h_1a44f3e0b15b7c6b673aa48322e44563e6" prot="public" static="no">
        <name>DSTATE_PRESCAN</name>
        <initializer>204	/* performing dummy pass for 2-pass quant */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="33" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jpegint_8h_1a7df3db43447787e200783f098cb59f60" prot="public" static="no">
        <name>DSTATE_SCANNING</name>
        <initializer>205	/* start_decompress done, read_scanlines OK */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="34" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jpegint_8h_1a879464b239c346d0e314b768888caa66" prot="public" static="no">
        <name>DSTATE_RAW_OK</name>
        <initializer>206	/* start_decompress done, read_raw_data OK */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="35" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jpegint_8h_1a0a26b600cd2435fc699edc42f13e265a" prot="public" static="no">
        <name>DSTATE_BUFIMAGE</name>
        <initializer>207	/* expecting jpeg_start_output */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="36" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jpegint_8h_1ace1d94a085ad4992e3e6f92eca60b79a" prot="public" static="no">
        <name>DSTATE_BUFPOST</name>
        <initializer>208	/* looking for SOS/EOI in jpeg_finish_output */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="37" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jpegint_8h_1a7c43cc9e12e8b87b4131f3a385f27171" prot="public" static="no">
        <name>DSTATE_RDCOEFS</name>
        <initializer>209	/* reading file in jpeg_read_coefficients */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="38" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jpegint_8h_1ad6c954de95d412ccc9d85cc7f49ac447" prot="public" static="no">
        <name>DSTATE_STOPPING</name>
        <initializer>210	/* looking for EOI in jpeg_finish_decompress */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="39" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jpegint_8h_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" prot="public" static="no">
        <name>MAX</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>((a) &gt; (b) ? (a) : (b))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="265" column="10" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jpegint_8h_1a3acffbd305ee72dcd4593c0d8af64a4f" prot="public" static="no">
        <name>MIN</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>((a) &lt; (b) ? (a) : (b))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="267" column="10" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jpegint_8h_1a218cc59f97361c2365f680eb713e022f" prot="public" static="no">
        <name>SHIFT_TEMPS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="287" column="10" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jpegint_8h_1ad45c45ba0d42abd22b4a095dd972a4ba" prot="public" static="no">
        <name>RIGHT_SHIFT</name>
        <param><defname>x</defname></param>
        <param><defname>shft</defname></param>
        <initializer>((x) &gt;&gt; (shft))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="288" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="jpegint_8h_1a1f0803342372ac62b6903c399399c874" prot="public" static="no">
        <name>J_BUF_MODE</name>
        <enumvalue id="jpegint_8h_1a1f0803342372ac62b6903c399399c874ac4537a68c2b4991aa0aa16bfd364faf4" prot="public">
          <name>JBUF_PASS_THRU</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="jpegint_8h_1a1f0803342372ac62b6903c399399c874a9bd990af3f9fa4181bfb4783515c583d" prot="public">
          <name>JBUF_SAVE_SOURCE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="jpegint_8h_1a1f0803342372ac62b6903c399399c874af6e4aa152203a774ee81024b994bc786" prot="public">
          <name>JBUF_CRANK_DEST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="jpegint_8h_1a1f0803342372ac62b6903c399399c874aedb54e7419f575f61531cd66a6eb2447" prot="public">
          <name>JBUF_SAVE_AND_PASS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="16" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" bodystart="16" bodyend="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="jpegint_8h_1aeea03c2ebeebe4d6464bf58ca10c62db" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int jpeg_zigzag_order[]</definition>
        <argsstring>[]</argsstring>
        <name>jpeg_zigzag_order</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="378" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jutils.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="jpegint_8h_1a5f4ff2462a5937bfd72aba8bc680ece5" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int jpeg_natural_order[]</definition>
        <argsstring>[]</argsstring>
        <name>jpeg_natural_order</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="379" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jutils.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="jpegint_8h_1a2cf4077bdaa30b725535bf0be165eecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>typedef</type>
        <definition>typedef JMETHOD</definition>
        <argsstring>(void, inverse_DCT_method_ptr,(j_decompress_ptr cinfo, jpeg_component_info *compptr, JCOEFPTR coef_block, JSAMPARRAY output_buf, JDIMENSION output_col))</argsstring>
        <name>JMETHOD</name>
        <param>
          <type>void</type>
        </param>
        <param>
          <type>inverse_DCT_method_ptr</type>
        </param>
        <param>
          <type>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref> cinfo, <ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref> *compptr, JCOEFPTR coef_block, JSAMPARRAY output_buf, JDIMENSION output_col)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="218" column="1"/>
      </memberdef>
      <memberdef kind="function" id="jpegint_8h_1aea987dd4dad33ce6a3a6ef4be31ddd3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN void jinit_compress_master</type>
        <definition>EXTERN void jinit_marker_writer JPP</definition>
        <argsstring>((j_compress_ptr cinfo))</argsstring>
        <name>JPP</name>
        <param>
          <type>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref> cinfo)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="332" column="1"/>
      </memberdef>
      <memberdef kind="function" id="jpegint_8h_1a90d95f98f7bf6c661d09882375aefb29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN void jinit_c_master_control</type>
        <definition>EXTERN void jinit_c_master_control JPP</definition>
        <argsstring>((j_compress_ptr cinfo, boolean transcode_only))</argsstring>
        <name>JPP</name>
        <param>
          <type>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref> cinfo, boolean transcode_only)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="333" column="1"/>
      </memberdef>
      <memberdef kind="function" id="jpegint_8h_1adc04b7d71075e7f9b79bbaffdd5a060d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN void jinit_c_main_controller</type>
        <definition>EXTERN void jinit_c_coef_controller JPP</definition>
        <argsstring>((j_compress_ptr cinfo, boolean need_full_buffer))</argsstring>
        <name>JPP</name>
        <param>
          <type>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref> cinfo, boolean need_full_buffer)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="335" column="1"/>
      </memberdef>
      <memberdef kind="function" id="jpegint_8h_1a22d76caf7a7ee332f5683124aaa8996e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN void jinit_master_decompress</type>
        <definition>EXTERN void jinit_merged_upsampler JPP</definition>
        <argsstring>((j_decompress_ptr cinfo))</argsstring>
        <name>JPP</name>
        <param>
          <type>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref> cinfo)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="348" column="1"/>
      </memberdef>
      <memberdef kind="function" id="jpegint_8h_1acdb2e2a8c267ff86aa8d2c8e594bf542" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN void jinit_d_main_controller</type>
        <definition>EXTERN void jinit_d_post_controller JPP</definition>
        <argsstring>((j_decompress_ptr cinfo, boolean need_full_buffer))</argsstring>
        <name>JPP</name>
        <param>
          <type>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref> cinfo, boolean need_full_buffer)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="349" column="1"/>
      </memberdef>
      <memberdef kind="function" id="jpegint_8h_1a746e34b9233a77a82ab847e2f2fbb970" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN void jinit_memory_mgr</type>
        <definition>EXTERN void jinit_memory_mgr JPP</definition>
        <argsstring>((j_common_ptr cinfo))</argsstring>
        <name>JPP</name>
        <param>
          <type>(<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref> cinfo)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="366" column="1"/>
      </memberdef>
      <memberdef kind="function" id="jpegint_8h_1ad85ea04652031fa27719a082b076d781" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN long jdiv_round_up</type>
        <definition>EXTERN long jround_up JPP</definition>
        <argsstring>((long a, long b))</argsstring>
        <name>JPP</name>
        <param>
          <type>(long a, long b)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="369" column="1"/>
      </memberdef>
      <memberdef kind="function" id="jpegint_8h_1a8d6b7e645e391cc1d2e8472c1957183f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN void jcopy_sample_rows</type>
        <definition>EXTERN void jcopy_sample_rows JPP</definition>
        <argsstring>((JSAMPARRAY input_array, int source_row, JSAMPARRAY output_array, int dest_row, int num_rows, JDIMENSION num_cols))</argsstring>
        <name>JPP</name>
        <param>
          <type>(JSAMPARRAY input_array, int source_row, JSAMPARRAY output_array, int dest_row, int num_rows, JDIMENSION num_cols)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="371" column="1"/>
      </memberdef>
      <memberdef kind="function" id="jpegint_8h_1aa42df6336cc2de299043c93cc7d5b305" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN void jcopy_block_row</type>
        <definition>EXTERN void jcopy_block_row JPP</definition>
        <argsstring>((JBLOCKROW input_row, JBLOCKROW output_row, JDIMENSION num_blocks))</argsstring>
        <name>JPP</name>
        <param>
          <type>(JBLOCKROW input_row, JBLOCKROW output_row, JDIMENSION num_blocks)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="374" column="1"/>
      </memberdef>
      <memberdef kind="function" id="jpegint_8h_1adf56ef0e647c00ed293b8ddca926306b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EXTERN void jzero_far</type>
        <definition>EXTERN void jzero_far JPP</definition>
        <argsstring>((void FAR *target, size_t bytestozero))</argsstring>
        <name>JPP</name>
        <param>
          <type>(void FAR *target, size_t bytestozero)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h" line="376" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>jpegint.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1991-1995,<sp/>Thomas<sp/>G.<sp/>Lane.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Independent<sp/>JPEG<sp/>Group&apos;s<sp/>software.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>conditions<sp/>of<sp/>distribution<sp/>and<sp/>use,<sp/>see<sp/>the<sp/>accompanying<sp/>README<sp/>file.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>provides<sp/>common<sp/>declarations<sp/>for<sp/>the<sp/>various<sp/>JPEG<sp/>modules.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>These<sp/>declarations<sp/>are<sp/>considered<sp/>internal<sp/>to<sp/>the<sp/>JPEG<sp/>library;<sp/>most</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>applications<sp/>using<sp/>the<sp/>library<sp/>shouldn&apos;t<sp/>need<sp/>to<sp/>include<sp/>this<sp/>file.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Declarations<sp/>for<sp/>both<sp/>compression<sp/>&amp;<sp/>decompression<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Operating<sp/>modes<sp/>for<sp/>buffer<sp/>controllers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>JBUF_PASS_THRU,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Plain<sp/>stripwise<sp/>operation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remaining<sp/>modes<sp/>require<sp/>a<sp/>full-image<sp/>buffer<sp/>to<sp/>have<sp/>been<sp/>created<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>JBUF_SAVE_SOURCE,<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Run<sp/>source<sp/>subobject<sp/>only,<sp/>save<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>JBUF_CRANK_DEST,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Run<sp/>dest<sp/>subobject<sp/>only,<sp/>using<sp/>saved<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>JBUF_SAVE_AND_PASS<sp/><sp/></highlight><highlight class="comment">/*<sp/>Run<sp/>both<sp/>subobjects,<sp/>save<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">}<sp/>J_BUF_MODE;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Values<sp/>of<sp/>global_state<sp/>field<sp/>(jdapi.c<sp/>has<sp/>some<sp/>dependencies<sp/>on<sp/>ordering!)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CSTATE_START<sp/><sp/><sp/><sp/>100<sp/></highlight><highlight class="comment">/*<sp/>after<sp/>create_compress<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CSTATE_SCANNING<sp/>101<sp/></highlight><highlight class="comment">/*<sp/>start_compress<sp/>done,<sp/>write_scanlines<sp/>OK<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CSTATE_RAW_OK<sp/><sp/><sp/>102<sp/></highlight><highlight class="comment">/*<sp/>start_compress<sp/>done,<sp/>write_raw_data<sp/>OK<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CSTATE_WRCOEFS<sp/><sp/>103<sp/></highlight><highlight class="comment">/*<sp/>jpeg_write_coefficients<sp/>done<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DSTATE_START<sp/><sp/><sp/><sp/>200<sp/></highlight><highlight class="comment">/*<sp/>after<sp/>create_decompress<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DSTATE_INHEADER<sp/>201<sp/></highlight><highlight class="comment">/*<sp/>reading<sp/>header<sp/>markers,<sp/>no<sp/>SOS<sp/>yet<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DSTATE_READY<sp/><sp/><sp/><sp/>202<sp/></highlight><highlight class="comment">/*<sp/>found<sp/>SOS,<sp/>ready<sp/>for<sp/>start_decompress<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DSTATE_PRELOAD<sp/><sp/>203<sp/></highlight><highlight class="comment">/*<sp/>reading<sp/>multiscan<sp/>file<sp/>in<sp/>start_decompress*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DSTATE_PRESCAN<sp/><sp/>204<sp/></highlight><highlight class="comment">/*<sp/>performing<sp/>dummy<sp/>pass<sp/>for<sp/>2-pass<sp/>quant<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DSTATE_SCANNING<sp/>205<sp/></highlight><highlight class="comment">/*<sp/>start_decompress<sp/>done,<sp/>read_scanlines<sp/>OK<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DSTATE_RAW_OK<sp/><sp/><sp/>206<sp/></highlight><highlight class="comment">/*<sp/>start_decompress<sp/>done,<sp/>read_raw_data<sp/>OK<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DSTATE_BUFIMAGE<sp/>207<sp/></highlight><highlight class="comment">/*<sp/>expecting<sp/>jpeg_start_output<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DSTATE_BUFPOST<sp/><sp/>208<sp/></highlight><highlight class="comment">/*<sp/>looking<sp/>for<sp/>SOS/EOI<sp/>in<sp/>jpeg_finish_output<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DSTATE_RDCOEFS<sp/><sp/>209<sp/></highlight><highlight class="comment">/*<sp/>reading<sp/>file<sp/>in<sp/>jpeg_read_coefficients<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DSTATE_STOPPING<sp/>210<sp/></highlight><highlight class="comment">/*<sp/>looking<sp/>for<sp/>EOI<sp/>in<sp/>jpeg_finish_decompress<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Declarations<sp/>for<sp/>compression<sp/>modules<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Master<sp/>control<sp/>module<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="structjpeg__comp__master" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__comp__master" kindref="compound">jpeg_comp_master</ref><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>prepare_for_pass,<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>pass_startup,<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>finish_pass,<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>State<sp/>variables<sp/>made<sp/>visible<sp/>to<sp/>other<sp/>modules<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>call_pass_startup;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>True<sp/>if<sp/>pass_startup<sp/>must<sp/>be<sp/>called<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>is_last_pass;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>True<sp/>during<sp/>last<sp/>pass<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Main<sp/>buffer<sp/>control<sp/>(downsampled-data<sp/>buffer)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="structjpeg__c__main__controller" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__c__main__controller" kindref="compound">jpeg_c_main_controller</ref><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>start_pass,<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,<sp/>J_BUF_MODE<sp/>pass_mode));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>process_data,<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>input_buf,<sp/>JDIMENSION<sp/>*in_row_ctr,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>in_rows_avail));</highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Compression<sp/>preprocessing<sp/>(downsampling<sp/>input<sp/>buffer<sp/>control)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="structjpeg__c__prep__controller" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__c__prep__controller" kindref="compound">jpeg_c_prep_controller</ref><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>start_pass,<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,<sp/>J_BUF_MODE<sp/>pass_mode));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>pre_process_data,<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>input_buf,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>*in_row_ctr,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>in_rows_avail,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPIMAGE<sp/>output_buf,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>*out_row_group_ctr,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>out_row_groups_avail));</highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Coefficient<sp/>buffer<sp/>control<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="structjpeg__c__coef__controller" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__c__coef__controller" kindref="compound">jpeg_c_coef_controller</ref><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>start_pass,<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,<sp/>J_BUF_MODE<sp/>pass_mode));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal">,<sp/>compress_data,<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPIMAGE<sp/>input_buf));</highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Colorspace<sp/>conversion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="structjpeg__color__converter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__color__converter" kindref="compound">jpeg_color_converter</ref><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>start_pass,<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>color_convert,<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>input_buf,<sp/>JSAMPIMAGE<sp/>output_buf,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>output_row,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_rows));</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Downsampling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="structjpeg__downsampler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__downsampler" kindref="compound">jpeg_downsampler</ref><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>start_pass,<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>downsample,<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPIMAGE<sp/>input_buf,<sp/>JDIMENSION<sp/>in_row_index,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPIMAGE<sp/>output_buf,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>out_row_group_index));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>need_context_rows;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TRUE<sp/>if<sp/>need<sp/>rows<sp/>above<sp/>&amp;<sp/>below<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Forward<sp/>DCT<sp/>(also<sp/>controls<sp/>coefficient<sp/>quantization)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="structjpeg__forward__dct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__forward__dct" kindref="compound">jpeg_forward_dct</ref><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>start_pass,<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>perhaps<sp/>this<sp/>should<sp/>be<sp/>an<sp/>array???<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>forward_DCT,<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*<sp/>compptr,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>sample_data,<sp/>JBLOCKROW<sp/>coef_blocks,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>start_row,<sp/>JDIMENSION<sp/>start_col,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>num_blocks));</highlight></codeline>
<codeline lineno="110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Entropy<sp/>encoding<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="structjpeg__entropy__encoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__entropy__encoder" kindref="compound">jpeg_entropy_encoder</ref><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>start_pass,<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>gather_statistics));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal">,<sp/>encode_mcu,<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,<sp/>JBLOCKROW<sp/>*MCU_data));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>finish_pass,<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="117"><highlight class="normal">};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Marker<sp/>writing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="structjpeg__marker__writer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__marker__writer" kindref="compound">jpeg_marker_writer</ref><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>write_any_marker<sp/>is<sp/>exported<sp/>for<sp/>use<sp/>by<sp/>applications<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Probably<sp/>only<sp/>COM<sp/>and<sp/>APPn<sp/>markers<sp/>should<sp/>be<sp/>written<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>write_any_marker,<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>marker,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>JOCTET<sp/>*dataptr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>datalen));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>write_file_header,<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>write_frame_header,<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>write_scan_header,<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>write_file_trailer,<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>write_tables_only,<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="130"><highlight class="normal">};</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Declarations<sp/>for<sp/>decompression<sp/>modules<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Master<sp/>control<sp/>module<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="structjpeg__decomp__master" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__decomp__master" kindref="compound">jpeg_decomp_master</ref><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>prepare_for_output_pass,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>finish_output_pass,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>State<sp/>variables<sp/>made<sp/>visible<sp/>to<sp/>other<sp/>modules<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>is_dummy_pass;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>True<sp/>during<sp/>1st<sp/>pass<sp/>for<sp/>2-pass<sp/>quant<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal">};</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Input<sp/>control<sp/>module<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="structjpeg__input__controller" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__input__controller" kindref="compound">jpeg_input_controller</ref><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>consume_input,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>reset_input_controller,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>start_input_pass,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>finish_input_pass,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>State<sp/>variables<sp/>made<sp/>visible<sp/>to<sp/>other<sp/>modules<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>has_multiple_scans;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>True<sp/>if<sp/>file<sp/>has<sp/>multiple<sp/>scans<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>eoi_reached;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>True<sp/>when<sp/>EOI<sp/>has<sp/>been<sp/>consumed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">};</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Main<sp/>buffer<sp/>control<sp/>(downsampled-data<sp/>buffer)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="structjpeg__d__main__controller" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__d__main__controller" kindref="compound">jpeg_d_main_controller</ref><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>start_pass,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/>J_BUF_MODE<sp/>pass_mode));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>process_data,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>output_buf,<sp/>JDIMENSION<sp/>*out_row_ctr,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>out_rows_avail));</highlight></codeline>
<codeline lineno="162"><highlight class="normal">};</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Coefficient<sp/>buffer<sp/>control<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="structjpeg__d__coef__controller" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__d__coef__controller" kindref="compound">jpeg_d_coef_controller</ref><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>start_input_pass,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>consume_data,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>start_output_pass,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>decompress_data,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPIMAGE<sp/>output_buf));</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pointer<sp/>to<sp/>array<sp/>of<sp/>coefficient<sp/>virtual<sp/>arrays,<sp/>or<sp/>NULL<sp/>if<sp/>none<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><ref refid="structjvirt__barray__control" kindref="compound">jvirt_barray_ptr</ref><sp/>*coef_arrays;</highlight></codeline>
<codeline lineno="173"><highlight class="normal">};</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Decompression<sp/>postprocessing<sp/>(color<sp/>quantization<sp/>buffer<sp/>control)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="structjpeg__d__post__controller" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__d__post__controller" kindref="compound">jpeg_d_post_controller</ref><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>start_pass,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/>J_BUF_MODE<sp/>pass_mode));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>post_process_data,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPIMAGE<sp/>input_buf,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>*in_row_group_ctr,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>in_row_groups_avail,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>output_buf,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>*out_row_ctr,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>out_rows_avail));</highlight></codeline>
<codeline lineno="185"><highlight class="normal">};</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Marker<sp/>reading<sp/>&amp;<sp/>parsing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="structjpeg__marker__reader" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__marker__reader" kindref="compound">jpeg_marker_reader</ref><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>reset_marker_reader,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>markers<sp/>until<sp/>SOS<sp/>or<sp/>EOI.</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Returns<sp/>same<sp/>codes<sp/>as<sp/>are<sp/>defined<sp/>for<sp/>jpeg_consume_input:</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/>*<sp/>JPEG_SUSPENDED,<sp/>JPEG_REACHED_SOS,<sp/>or<sp/>JPEG_REACHED_EOI.</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>read_markers,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>a<sp/>restart<sp/>marker<sp/>---<sp/>exported<sp/>for<sp/>use<sp/>by<sp/>entropy<sp/>decoder<sp/>only<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>jpeg_marker_parser_method<sp/>read_restart_marker;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Application-overridable<sp/>marker<sp/>processing<sp/>methods<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>jpeg_marker_parser_method<sp/>process_COM;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>jpeg_marker_parser_method<sp/>process_APPn[16];</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>State<sp/>of<sp/>marker<sp/>reader<sp/>---<sp/>nominally<sp/>internal,<sp/>but<sp/>applications</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/>*<sp/>supplying<sp/>COM<sp/>or<sp/>APPn<sp/>handlers<sp/>might<sp/>like<sp/>to<sp/>know<sp/>the<sp/>state.</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>saw_SOI;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>found<sp/>SOI?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>saw_SOF;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>found<sp/>SOF?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next_restart_num;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>next<sp/>restart<sp/>number<sp/>expected<sp/>(0-7)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>discarded_bytes;<sp/></highlight><highlight class="comment">/*<sp/>#<sp/>of<sp/>bytes<sp/>skipped<sp/>looking<sp/>for<sp/>a<sp/>marker<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">};</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Entropy<sp/>decoding<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="structjpeg__entropy__decoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__entropy__decoder" kindref="compound">jpeg_entropy_decoder</ref><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>start_pass,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal">,<sp/>decode_mcu,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JBLOCKROW<sp/>*MCU_data));</highlight></codeline>
<codeline lineno="215"><highlight class="normal">};</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Inverse<sp/>DCT<sp/>(also<sp/>performs<sp/>dequantization)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>inverse_DCT_method_ptr,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/><ref refid="structjpeg__component__info" kindref="compound">jpeg_component_info</ref><sp/>*<sp/>compptr,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JCOEFPTR<sp/>coef_block,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>output_buf,<sp/>JDIMENSION<sp/>output_col));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="structjpeg__inverse__dct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__inverse__dct" kindref="compound">jpeg_inverse_dct</ref><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>start_pass,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>It<sp/>is<sp/>useful<sp/>to<sp/>allow<sp/>each<sp/>component<sp/>to<sp/>have<sp/>a<sp/>separate<sp/>IDCT<sp/>method.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>inverse_DCT_method_ptr<sp/>inverse_DCT[MAX_COMPONENTS];</highlight></codeline>
<codeline lineno="227"><highlight class="normal">};</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Upsampling<sp/>(note<sp/>that<sp/>upsampler<sp/>must<sp/>also<sp/>call<sp/>color<sp/>converter)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="structjpeg__upsampler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__upsampler" kindref="compound">jpeg_upsampler</ref><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>start_pass,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>upsample,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPIMAGE<sp/>input_buf,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>*in_row_group_ctr,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>in_row_groups_avail,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>output_buf,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>*out_row_ctr,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>out_rows_avail));</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>need_context_rows;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TRUE<sp/>if<sp/>need<sp/>rows<sp/>above<sp/>&amp;<sp/>below<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal">};</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Colorspace<sp/>conversion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="structjpeg__color__deconverter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__color__deconverter" kindref="compound">jpeg_color_deconverter</ref><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>start_pass,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>color_convert,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPIMAGE<sp/>input_buf,<sp/>JDIMENSION<sp/>input_row,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>output_buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_rows));</highlight></codeline>
<codeline lineno="249"><highlight class="normal">};</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Color<sp/>quantization<sp/>or<sp/>color<sp/>precision<sp/>reduction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="structjpeg__color__quantizer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__color__quantizer" kindref="compound">jpeg_color_quantizer</ref><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>start_pass,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>is_pre_scan));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>color_quantize,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>input_buf,<sp/>JSAMPARRAY<sp/>output_buf,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_rows));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>finish_pass,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>JMETHOD(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/>new_color_map,<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="259"><highlight class="normal">};</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Miscellaneous<sp/>useful<sp/>macros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MAX</highlight></codeline>
<codeline lineno="265"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>MAX(a,b)<sp/><sp/><sp/><sp/>((a)<sp/>&gt;<sp/>(b)<sp/>?<sp/>(a)<sp/>:<sp/>(b))</highlight></codeline>
<codeline lineno="266"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>MIN</highlight></codeline>
<codeline lineno="267"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>MIN(a,b)<sp/><sp/><sp/><sp/>((a)<sp/>&lt;<sp/>(b)<sp/>?<sp/>(a)<sp/>:<sp/>(b))</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>We<sp/>assume<sp/>that<sp/>right<sp/>shift<sp/>corresponds<sp/>to<sp/>signed<sp/>division<sp/>by<sp/>2<sp/>with</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/>rounding<sp/>towards<sp/>minus<sp/>infinity.<sp/><sp/>This<sp/>is<sp/>correct<sp/>for<sp/>typical<sp/>&quot;arithmetic</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*<sp/>shift&quot;<sp/>instructions<sp/>that<sp/>shift<sp/>in<sp/>copies<sp/>of<sp/>the<sp/>sign<sp/>bit.<sp/><sp/>But<sp/>some</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*<sp/>C<sp/>compilers<sp/>implement<sp/>&gt;&gt;<sp/>with<sp/>an<sp/>unsigned<sp/>shift.<sp/><sp/>For<sp/>these<sp/>machines<sp/>you</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*<sp/>must<sp/>define<sp/>RIGHT_SHIFT_IS_UNSIGNED.</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*<sp/>RIGHT_SHIFT<sp/>provides<sp/>a<sp/>proper<sp/>signed<sp/>right<sp/>shift<sp/>of<sp/>an<sp/>INT32<sp/>quantity.</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/>*<sp/>It<sp/>is<sp/>only<sp/>applied<sp/>with<sp/>constant<sp/>shift<sp/>counts.<sp/><sp/>SHIFT_TEMPS<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/>*<sp/>included<sp/>in<sp/>the<sp/>variables<sp/>of<sp/>any<sp/>routine<sp/>using<sp/>RIGHT_SHIFT.</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>RIGHT_SHIFT_IS_UNSIGNED</highlight></codeline>
<codeline lineno="281"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SHIFT_TEMPS<sp/>INT32<sp/>shift_temp;</highlight></codeline>
<codeline lineno="282"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>RIGHT_SHIFT(x,shft)<sp/><sp/>\</highlight></codeline>
<codeline lineno="283"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((shift_temp<sp/>=<sp/>(x))<sp/>&lt;<sp/>0<sp/>?<sp/>\</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>(shift_temp<sp/>&gt;&gt;<sp/>(shft))<sp/>|<sp/>((~((INT32)<sp/>0))<sp/>&lt;&lt;<sp/>(32-(shft)))<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="285"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>(shift_temp<sp/>&gt;&gt;<sp/>(shft)))</highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SHIFT_TEMPS</highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>RIGHT_SHIFT(x,shft)<sp/>((x)<sp/>&gt;&gt;<sp/>(shft))</highlight></codeline>
<codeline lineno="289"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="290"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Short<sp/>forms<sp/>of<sp/>external<sp/>names<sp/>for<sp/>systems<sp/>with<sp/>brain-damaged<sp/>linkers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>NEED_SHORT_EXTERNAL_NAMES</highlight></codeline>
<codeline lineno="295"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_compress_master<sp/><sp/><sp/>jICompress</highlight></codeline>
<codeline lineno="296"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_c_master_control<sp/><sp/>jICMaster</highlight></codeline>
<codeline lineno="297"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_c_main_controller<sp/>jICMainC</highlight></codeline>
<codeline lineno="298"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_c_prep_controller<sp/>jICPrepC</highlight></codeline>
<codeline lineno="299"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_c_coef_controller<sp/>jICCoefC</highlight></codeline>
<codeline lineno="300"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_color_converter<sp/><sp/><sp/>jICColor</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_downsampler<sp/><sp/><sp/>jIDownsampler</highlight></codeline>
<codeline lineno="302"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_forward_dct<sp/><sp/><sp/>jIFDCT</highlight></codeline>
<codeline lineno="303"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_huff_encoder<sp/><sp/>jIHEncoder</highlight></codeline>
<codeline lineno="304"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_phuff_encoder<sp/>jIPHEncoder</highlight></codeline>
<codeline lineno="305"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_marker_writer<sp/>jIMWriter</highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_master_decompress<sp/>jIDMaster</highlight></codeline>
<codeline lineno="307"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_d_main_controller<sp/>jIDMainC</highlight></codeline>
<codeline lineno="308"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_d_coef_controller<sp/>jIDCoefC</highlight></codeline>
<codeline lineno="309"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_d_post_controller<sp/>jIDPostC</highlight></codeline>
<codeline lineno="310"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_input_controller<sp/><sp/>jIInCtlr</highlight></codeline>
<codeline lineno="311"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_marker_reader<sp/>jIMReader</highlight></codeline>
<codeline lineno="312"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_huff_decoder<sp/><sp/>jIHDecoder</highlight></codeline>
<codeline lineno="313"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_phuff_decoder<sp/>jIPHDecoder</highlight></codeline>
<codeline lineno="314"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_inverse_dct<sp/><sp/><sp/>jIIDCT</highlight></codeline>
<codeline lineno="315"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_upsampler<sp/><sp/><sp/><sp/><sp/>jIUpsampler</highlight></codeline>
<codeline lineno="316"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_color_deconverter<sp/>jIDColor</highlight></codeline>
<codeline lineno="317"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_1pass_quantizer<sp/><sp/><sp/>jI1Quant</highlight></codeline>
<codeline lineno="318"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_2pass_quantizer<sp/><sp/><sp/>jI2Quant</highlight></codeline>
<codeline lineno="319"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_merged_upsampler<sp/><sp/>jIMUpsampler</highlight></codeline>
<codeline lineno="320"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jinit_memory_mgr<sp/><sp/><sp/><sp/>jIMemMgr</highlight></codeline>
<codeline lineno="321"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jdiv_round_up<sp/><sp/><sp/><sp/><sp/><sp/><sp/>jDivRound</highlight></codeline>
<codeline lineno="322"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jround_up<sp/><sp/><sp/><sp/><sp/><sp/><sp/>jRound</highlight></codeline>
<codeline lineno="323"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jcopy_sample_rows<sp/><sp/><sp/>jCopySamples</highlight></codeline>
<codeline lineno="324"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jcopy_block_row<sp/><sp/><sp/><sp/><sp/>jCopyBlocks</highlight></codeline>
<codeline lineno="325"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jzero_far<sp/><sp/><sp/><sp/><sp/><sp/><sp/>jZeroFar</highlight></codeline>
<codeline lineno="326"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jpeg_zigzag_order<sp/><sp/><sp/>jZIGTable</highlight></codeline>
<codeline lineno="327"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>jpeg_natural_order<sp/><sp/>jZAGTable</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>NEED_SHORT_EXTERNAL_NAMES<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="329"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Compression<sp/>module<sp/>initialization<sp/>routines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_compress_master<sp/>JPP((<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="333"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_c_master_control<sp/>JPP((<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>transcode_only));</highlight></codeline>
<codeline lineno="335"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_c_main_controller<sp/>JPP((<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>need_full_buffer));</highlight></codeline>
<codeline lineno="337"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_c_prep_controller<sp/>JPP((<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>need_full_buffer));</highlight></codeline>
<codeline lineno="339"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_c_coef_controller<sp/>JPP((<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>need_full_buffer));</highlight></codeline>
<codeline lineno="341"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_color_converter<sp/>JPP((<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="342"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_downsampler<sp/>JPP((<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="343"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_forward_dct<sp/>JPP((<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="344"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_huff_encoder<sp/>JPP((<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="345"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_phuff_encoder<sp/>JPP((<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="346"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_marker_writer<sp/>JPP((<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Decompression<sp/>module<sp/>initialization<sp/>routines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_master_decompress<sp/>JPP((<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="349"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_d_main_controller<sp/>JPP((<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>need_full_buffer));</highlight></codeline>
<codeline lineno="351"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_d_coef_controller<sp/>JPP((<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>need_full_buffer));</highlight></codeline>
<codeline lineno="353"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_d_post_controller<sp/>JPP((<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>need_full_buffer));</highlight></codeline>
<codeline lineno="355"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_input_controller<sp/>JPP((<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="356"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_marker_reader<sp/>JPP((<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="357"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_huff_decoder<sp/>JPP((<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="358"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_phuff_decoder<sp/>JPP((<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="359"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_inverse_dct<sp/>JPP((<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="360"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_upsampler<sp/>JPP((<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="361"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_color_deconverter<sp/>JPP((<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="362"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_1pass_quantizer<sp/>JPP((<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="363"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_2pass_quantizer<sp/>JPP((<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="364"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_merged_upsampler<sp/>JPP((<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Memory<sp/>manager<sp/>initialization<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jinit_memory_mgr<sp/>JPP((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref><sp/>cinfo));</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Utility<sp/>routines<sp/>in<sp/>jutils.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jdiv_round_up<sp/>JPP((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>b));</highlight></codeline>
<codeline lineno="370"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>jround_up<sp/>JPP((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>b));</highlight></codeline>
<codeline lineno="371"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jcopy_sample_rows<sp/>JPP((JSAMPARRAY<sp/>input_array,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source_row,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>output_array,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dest_row,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_rows,<sp/>JDIMENSION<sp/>num_cols));</highlight></codeline>
<codeline lineno="374"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jcopy_block_row<sp/>JPP((JBLOCKROW<sp/>input_row,<sp/>JBLOCKROW<sp/>output_row,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JDIMENSION<sp/>num_blocks));</highlight></codeline>
<codeline lineno="376"><highlight class="normal">EXTERN<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>jzero_far<sp/>JPP((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FAR<sp/>*<sp/>target,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytestozero));</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Constant<sp/>tables<sp/>in<sp/>jutils.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jpeg_zigzag_order[];<sp/></highlight><highlight class="comment">/*<sp/>natural<sp/>coef<sp/>order<sp/>to<sp/>zigzag<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jpeg_natural_order[];<sp/></highlight><highlight class="comment">/*<sp/>zigzag<sp/>coef<sp/>order<sp/>to<sp/>natural<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Suppress<sp/>undefined-structure<sp/>complaints<sp/>if<sp/>necessary.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>INCOMPLETE_TYPES_BROKEN</highlight></codeline>
<codeline lineno="384"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifndef<sp/>AM_MEMORY_MANAGER<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>only<sp/>jmemmgr.c<sp/>defines<sp/>these<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="385"><highlight class="preprocessor"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjvirt__sarray__control" kindref="compound">jvirt_sarray_control</ref><sp/>{<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>dummy;<sp/>};</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjvirt__barray__control" kindref="compound">jvirt_barray_control</ref><sp/>{<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>dummy;<sp/>};</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="388"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INCOMPLETE_TYPES_BROKEN<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jpegint.h"/>
  </compounddef>
</doxygen>
