<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="jquant2_8c" kind="file">
    <compoundname>jquant2.c</compoundname>
    <includes refid="jinclude_8h" local="yes">jinclude.h</includes>
    <includes refid="jpeglib_8h" local="yes">jpeglib.h</includes>
      <sectiondef kind="define">
      <memberdef kind="define" id="jquant2_8c_1ad5c3cdfae3019b8223973041a2a1304b" prot="public" static="no">
        <name>JPEG_INTERNALS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jquant2.c" line="20" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jquant2.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>jquant2.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1991-1995,<sp/>Thomas<sp/>G.<sp/>Lane.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Independent<sp/>JPEG<sp/>Group&apos;s<sp/>software.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>For<sp/>conditions<sp/>of<sp/>distribution<sp/>and<sp/>use,<sp/>see<sp/>the<sp/>accompanying<sp/>README<sp/>file.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>2-pass<sp/>color<sp/>quantization<sp/>(color<sp/>mapping)<sp/>routines.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>These<sp/>routines<sp/>provide<sp/>selection<sp/>of<sp/>a<sp/>custom<sp/>color<sp/>map<sp/>for<sp/>an<sp/>image,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>followed<sp/>by<sp/>mapping<sp/>of<sp/>the<sp/>image<sp/>to<sp/>that<sp/>color<sp/>map,<sp/>with<sp/>optional</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Floyd-Steinberg<sp/>dithering.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>It<sp/>is<sp/>also<sp/>possible<sp/>to<sp/>use<sp/>just<sp/>the<sp/>second<sp/>pass<sp/>to<sp/>map<sp/>to<sp/>an<sp/>arbitrary</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>externally-given<sp/>color<sp/>map.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>Note:<sp/>ordered<sp/>dithering<sp/>is<sp/>not<sp/>supported,<sp/>since<sp/>there<sp/>isn&apos;t<sp/>any<sp/>fast</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>way<sp/>to<sp/>compute<sp/>intercolor<sp/>distances;<sp/>it&apos;s<sp/>unclear<sp/>that<sp/>ordered<sp/>dither&apos;s</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>fundamental<sp/>assumptions<sp/>even<sp/>hold<sp/>with<sp/>an<sp/>irregularly<sp/>spaced<sp/>color<sp/>map.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JPEG_INTERNALS</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;jinclude.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;jpeglib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QUANT_2PASS_SUPPORTED</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>This<sp/>module<sp/>implements<sp/>the<sp/>well-known<sp/>Heckbert<sp/>paradigm<sp/>for<sp/>color</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>quantization.<sp/><sp/>Most<sp/>of<sp/>the<sp/>ideas<sp/>used<sp/>here<sp/>can<sp/>be<sp/>traced<sp/>back<sp/>to</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>Heckbert&apos;s<sp/>seminal<sp/>paper</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Heckbert,<sp/>Paul.<sp/><sp/>&quot;Color<sp/>Image<sp/>Quantization<sp/>for<sp/>Frame<sp/>Buffer<sp/>Display&quot;,</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Proc.<sp/>SIGGRAPH<sp/>&apos;82,<sp/>Computer<sp/>Graphics<sp/>v.16<sp/>#3<sp/>(July<sp/>1982),<sp/>pp<sp/>297-304.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>In<sp/>the<sp/>first<sp/>pass<sp/>over<sp/>the<sp/>image,<sp/>we<sp/>accumulate<sp/>a<sp/>histogram<sp/>showing<sp/>the</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>usage<sp/>count<sp/>of<sp/>each<sp/>possible<sp/>color.<sp/><sp/>To<sp/>keep<sp/>the<sp/>histogram<sp/>to<sp/>a<sp/>reasonable</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>size,<sp/>we<sp/>reduce<sp/>the<sp/>precision<sp/>of<sp/>the<sp/>input;<sp/>typical<sp/>practice<sp/>is<sp/>to<sp/>retain</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>5<sp/>or<sp/>6<sp/>bits<sp/>per<sp/>color,<sp/>so<sp/>that<sp/>8<sp/>or<sp/>4<sp/>different<sp/>input<sp/>values<sp/>are<sp/>counted</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>same<sp/>histogram<sp/>cell.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>Next,<sp/>the<sp/>color-selection<sp/>step<sp/>begins<sp/>with<sp/>a<sp/>box<sp/>representing<sp/>the<sp/>whole</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>color<sp/>space,<sp/>and<sp/>repeatedly<sp/>splits<sp/>the<sp/>&quot;largest&quot;<sp/>remaining<sp/>box<sp/>until<sp/>we</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>have<sp/>as<sp/>many<sp/>boxes<sp/>as<sp/>desired<sp/>colors.<sp/><sp/>Then<sp/>the<sp/>mean<sp/>color<sp/>in<sp/>each</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>remaining<sp/>box<sp/>becomes<sp/>one<sp/>of<sp/>the<sp/>possible<sp/>output<sp/>colors.</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>The<sp/>second<sp/>pass<sp/>over<sp/>the<sp/>image<sp/>maps<sp/>each<sp/>input<sp/>pixel<sp/>to<sp/>the<sp/>closest<sp/>output</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>color<sp/>(optionally<sp/>after<sp/>applying<sp/>a<sp/>Floyd-Steinberg<sp/>dithering<sp/>correction).</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>This<sp/>mapping<sp/>is<sp/>logically<sp/>trivial,<sp/>but<sp/>making<sp/>it<sp/>go<sp/>fast<sp/>enough<sp/>requires</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>considerable<sp/>care.</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>Heckbert-style<sp/>quantizers<sp/>vary<sp/>a<sp/>good<sp/>deal<sp/>in<sp/>their<sp/>policies<sp/>for<sp/>choosing</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>the<sp/>&quot;largest&quot;<sp/>box<sp/>and<sp/>deciding<sp/>where<sp/>to<sp/>cut<sp/>it.<sp/><sp/>The<sp/>particular<sp/>policies</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>used<sp/>here<sp/>have<sp/>proved<sp/>out<sp/>well<sp/>in<sp/>experimental<sp/>comparisons,<sp/>but<sp/>better<sp/>ones</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>may<sp/>yet<sp/>be<sp/>found.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>In<sp/>earlier<sp/>versions<sp/>of<sp/>the<sp/>IJG<sp/>code,<sp/>this<sp/>module<sp/>quantized<sp/>in<sp/>YCbCr<sp/>color</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>space,<sp/>processing<sp/>the<sp/>raw<sp/>upsampled<sp/>data<sp/>without<sp/>a<sp/>color<sp/>conversion<sp/>step.</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>This<sp/>allowed<sp/>the<sp/>color<sp/>conversion<sp/>math<sp/>to<sp/>be<sp/>done<sp/>only<sp/>once<sp/>per<sp/>colormap</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>entry,<sp/>not<sp/>once<sp/>per<sp/>pixel.<sp/><sp/>However,<sp/>that<sp/>optimization<sp/>precluded<sp/>other</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>useful<sp/>optimizations<sp/>(such<sp/>as<sp/>merging<sp/>color<sp/>conversion<sp/>with<sp/>upsampling)</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>and<sp/>it<sp/>also<sp/>interfered<sp/>with<sp/>desired<sp/>capabilities<sp/>such<sp/>as<sp/>quantizing<sp/>to<sp/>an</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>externally-supplied<sp/>colormap.<sp/><sp/>We<sp/>have<sp/>therefore<sp/>abandoned<sp/>that<sp/>approach.</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>The<sp/>present<sp/>code<sp/>works<sp/>in<sp/>the<sp/>post-conversion<sp/>color<sp/>space,<sp/>typically<sp/>RGB.</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>To<sp/>improve<sp/>the<sp/>visual<sp/>quality<sp/>of<sp/>the<sp/>results,<sp/>we<sp/>actually<sp/>work<sp/>in<sp/>scaled</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>RGB<sp/>space,<sp/>giving<sp/>G<sp/>distances<sp/>more<sp/>weight<sp/>than<sp/>R,<sp/>and<sp/>R<sp/>in<sp/>turn<sp/>more<sp/>than</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>B.<sp/><sp/>To<sp/>do<sp/>everything<sp/>in<sp/>integer<sp/>math,<sp/>we<sp/>must<sp/>use<sp/>integer<sp/>scale<sp/>factors.</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>The<sp/>2/3/1<sp/>scale<sp/>factors<sp/>used<sp/>here<sp/>correspond<sp/>loosely<sp/>to<sp/>the<sp/>relative</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>weights<sp/>of<sp/>the<sp/>colors<sp/>in<sp/>the<sp/>NTSC<sp/>grayscale<sp/>equation.</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>If<sp/>you<sp/>want<sp/>to<sp/>use<sp/>this<sp/>code<sp/>to<sp/>quantize<sp/>a<sp/>non-RGB<sp/>color<sp/>space,<sp/>you&apos;ll</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>probably<sp/>need<sp/>to<sp/>change<sp/>these<sp/>scale<sp/>factors.</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>R_SCALE<sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>scale<sp/>R<sp/>distances<sp/>by<sp/>this<sp/>much<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>G_SCALE<sp/>3<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>scale<sp/>G<sp/>distances<sp/>by<sp/>this<sp/>much<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>B_SCALE<sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>and<sp/>B<sp/>by<sp/>this<sp/>much<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Relabel<sp/>R/G/B<sp/>as<sp/>components<sp/>0/1/2,<sp/>respecting<sp/>the<sp/>RGB<sp/>ordering<sp/>defined</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>in<sp/>jmorecfg.h.<sp/><sp/>As<sp/>the<sp/>code<sp/>stands,<sp/>it<sp/>will<sp/>do<sp/>the<sp/>right<sp/>thing<sp/>for<sp/>R,G,B</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>and<sp/>B,G,R<sp/>orders.<sp/><sp/>If<sp/>you<sp/>define<sp/>some<sp/>other<sp/>weird<sp/>order<sp/>in<sp/>jmorecfg.h,</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>you&apos;ll<sp/>get<sp/>compile<sp/>errors<sp/>until<sp/>you<sp/>extend<sp/>this<sp/>logic.<sp/><sp/>In<sp/>that<sp/>case</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/>you&apos;ll<sp/>probably<sp/>want<sp/>to<sp/>tweak<sp/>the<sp/>histogram<sp/>sizes<sp/>too.</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RGB_RED<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>C0_SCALE<sp/>R_SCALE</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>RGB_BLUE<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>C0_SCALE<sp/>B_SCALE</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>RGB_GREEN<sp/>==<sp/>1</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>C1_SCALE<sp/>G_SCALE</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>RGB_RED<sp/>==<sp/>2</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>C2_SCALE<sp/>R_SCALE</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>RGB_BLUE<sp/>==<sp/>2</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>C2_SCALE<sp/>B_SCALE</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>First<sp/>we<sp/>have<sp/>the<sp/>histogram<sp/>data<sp/>structure<sp/>and<sp/>routines<sp/>for<sp/>creating<sp/>it.</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>The<sp/>number<sp/>of<sp/>bits<sp/>of<sp/>precision<sp/>can<sp/>be<sp/>adjusted<sp/>by<sp/>changing<sp/>these<sp/>symbols.</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/>We<sp/>recommend<sp/>keeping<sp/>6<sp/>bits<sp/>for<sp/>G<sp/>and<sp/>5<sp/>each<sp/>for<sp/>R<sp/>and<sp/>B.</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/>If<sp/>you<sp/>have<sp/>plenty<sp/>of<sp/>memory<sp/>and<sp/>cycles,<sp/>6<sp/>bits<sp/>all<sp/>around<sp/>gives<sp/>marginally</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/>better<sp/>results;<sp/>if<sp/>you<sp/>are<sp/>short<sp/>of<sp/>memory,<sp/>5<sp/>bits<sp/>all<sp/>around<sp/>will<sp/>save</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/>some<sp/>space<sp/>but<sp/>degrade<sp/>the<sp/>results.</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*<sp/>To<sp/>maintain<sp/>a<sp/>fully<sp/>accurate<sp/>histogram,<sp/>we&apos;d<sp/>need<sp/>to<sp/>allocate<sp/>a<sp/>&quot;long&quot;</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/>(preferably<sp/>unsigned<sp/>long)<sp/>for<sp/>each<sp/>cell.<sp/><sp/>In<sp/>practice<sp/>this<sp/>is<sp/>overkill;</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>we<sp/>can<sp/>get<sp/>by<sp/>with<sp/>16<sp/>bits<sp/>per<sp/>cell.<sp/><sp/>Few<sp/>of<sp/>the<sp/>cell<sp/>counts<sp/>will<sp/>overflow,</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/>and<sp/>clamping<sp/>those<sp/>that<sp/>do<sp/>overflow<sp/>to<sp/>the<sp/>maximum<sp/>value<sp/>will<sp/>give<sp/>close-</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/>enough<sp/>results.<sp/><sp/>This<sp/>reduces<sp/>the<sp/>recommended<sp/>histogram<sp/>size<sp/>from<sp/>256Kb</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>to<sp/>128Kb,<sp/>which<sp/>is<sp/>a<sp/>useful<sp/>savings<sp/>on<sp/>PC-class<sp/>machines.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/>(In<sp/>the<sp/>second<sp/>pass<sp/>the<sp/>histogram<sp/>space<sp/>is<sp/>re-used<sp/>for<sp/>pixel<sp/>mapping<sp/>data;</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>in<sp/>that<sp/>capacity,<sp/>each<sp/>cell<sp/>must<sp/>be<sp/>able<sp/>to<sp/>store<sp/>zero<sp/>to<sp/>the<sp/>number<sp/>of</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/>desired<sp/>colors.<sp/><sp/>16<sp/>bits/cell<sp/>is<sp/>plenty<sp/>for<sp/>that<sp/>too.)</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/>Since<sp/>the<sp/>JPEG<sp/>code<sp/>is<sp/>intended<sp/>to<sp/>run<sp/>in<sp/>small<sp/>memory<sp/>model<sp/>on<sp/>80x86</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/>machines,<sp/>we<sp/>can&apos;t<sp/>just<sp/>allocate<sp/>the<sp/>histogram<sp/>in<sp/>one<sp/>chunk.<sp/><sp/>Instead</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*<sp/>of<sp/>a<sp/>true<sp/>3-D<sp/>array,<sp/>we<sp/>use<sp/>a<sp/>row<sp/>of<sp/>pointers<sp/>to<sp/>2-D<sp/>arrays.<sp/><sp/>Each</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/>pointer<sp/>corresponds<sp/>to<sp/>a<sp/>C0<sp/>value<sp/>(typically<sp/>2^5<sp/>=<sp/>32<sp/>pointers)<sp/>and</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/>each<sp/>2-D<sp/>array<sp/>has<sp/>2^6*2^5<sp/>=<sp/>2048<sp/>or<sp/>2^6*2^6<sp/>=<sp/>4096<sp/>entries.<sp/><sp/>Note<sp/>that</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/>on<sp/>80x86<sp/>machines,<sp/>the<sp/>pointer<sp/>row<sp/>is<sp/>in<sp/>near<sp/>memory<sp/>but<sp/>the<sp/>actual</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/>arrays<sp/>are<sp/>in<sp/>far<sp/>memory<sp/>(same<sp/>arrangement<sp/>as<sp/>we<sp/>use<sp/>for<sp/>image<sp/>arrays).</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAXNUMCOLORS<sp/><sp/>(MAXJSAMPLE+1)<sp/></highlight><highlight class="comment">/*<sp/>maximum<sp/>size<sp/>of<sp/>colormap<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>will<sp/>do<sp/>the<sp/>right<sp/>thing<sp/>for<sp/>either<sp/>R,G,B<sp/>or<sp/>B,G,R<sp/>color<sp/>order,</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/>but<sp/>you<sp/>may<sp/>not<sp/>like<sp/>the<sp/>results<sp/>for<sp/>other<sp/>color<sp/>orders.</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HIST_C0_BITS<sp/><sp/>5<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bits<sp/>of<sp/>precision<sp/>in<sp/>R/B<sp/>histogram<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>HIST_C1_BITS<sp/><sp/>6<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bits<sp/>of<sp/>precision<sp/>in<sp/>G<sp/>histogram<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="134"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>HIST_C2_BITS<sp/><sp/>5<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bits<sp/>of<sp/>precision<sp/>in<sp/>B/R<sp/>histogram<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>elements<sp/>along<sp/>histogram<sp/>axes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HIST_C0_ELEMS<sp/><sp/>(1&lt;&lt;HIST_C0_BITS)</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>HIST_C1_ELEMS<sp/><sp/>(1&lt;&lt;HIST_C1_BITS)</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>HIST_C2_ELEMS<sp/><sp/>(1&lt;&lt;HIST_C2_BITS)</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>are<sp/>the<sp/>amounts<sp/>to<sp/>shift<sp/>an<sp/>input<sp/>value<sp/>to<sp/>get<sp/>a<sp/>histogram<sp/>index.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>C0_SHIFT<sp/><sp/>(BITS_IN_JSAMPLE-HIST_C0_BITS)</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>C1_SHIFT<sp/><sp/>(BITS_IN_JSAMPLE-HIST_C1_BITS)</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>C2_SHIFT<sp/><sp/>(BITS_IN_JSAMPLE-HIST_C2_BITS)</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>UINT16<sp/>histcell;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>histogram<sp/>cell;<sp/>prefer<sp/>an<sp/>unsigned<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>histcell<sp/>FAR<sp/>*<sp/>histptr;<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>pointers<sp/>to<sp/>histogram<sp/>cells<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>histcell<sp/>hist1d[HIST_C2_ELEMS];<sp/></highlight><highlight class="comment">/*<sp/>typedefs<sp/>for<sp/>the<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>hist1d<sp/>FAR<sp/>*<sp/>hist2d;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>type<sp/>for<sp/>the<sp/>2nd-level<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>hist2d<sp/>*<sp/>hist3d;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>type<sp/>for<sp/>top-level<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Declarations<sp/>for<sp/>Floyd-Steinberg<sp/>dithering.</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*<sp/>Errors<sp/>are<sp/>accumulated<sp/>into<sp/>the<sp/>array<sp/>fserrors[],<sp/>at<sp/>a<sp/>resolution<sp/>of</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/>1/16th<sp/>of<sp/>a<sp/>pixel<sp/>count.<sp/><sp/>The<sp/>error<sp/>at<sp/>a<sp/>given<sp/>pixel<sp/>is<sp/>propagated</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/>to<sp/>its<sp/>not-yet-processed<sp/>neighbors<sp/>using<sp/>the<sp/>standard<sp/>F-S<sp/>fractions,</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>...<sp/>(here)<sp/><sp/>7/16</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>3/16<sp/><sp/><sp/><sp/>5/16<sp/><sp/><sp/><sp/>1/16</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/>We<sp/>work<sp/>left-to-right<sp/>on<sp/>even<sp/>rows,<sp/>right-to-left<sp/>on<sp/>odd<sp/>rows.</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*<sp/>We<sp/>can<sp/>get<sp/>away<sp/>with<sp/>a<sp/>single<sp/>array<sp/>(holding<sp/>one<sp/>row&apos;s<sp/>worth<sp/>of<sp/>errors)</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/>by<sp/>using<sp/>it<sp/>to<sp/>store<sp/>the<sp/>current<sp/>row&apos;s<sp/>errors<sp/>at<sp/>pixel<sp/>columns<sp/>not<sp/>yet</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*<sp/>processed,<sp/>but<sp/>the<sp/>next<sp/>row&apos;s<sp/>errors<sp/>at<sp/>columns<sp/>already<sp/>processed.<sp/><sp/>We</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*<sp/>need<sp/>only<sp/>a<sp/>few<sp/>extra<sp/>variables<sp/>to<sp/>hold<sp/>the<sp/>errors<sp/>immediately<sp/>around<sp/>the</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*<sp/>current<sp/>column.<sp/><sp/>(If<sp/>we<sp/>are<sp/>lucky,<sp/>those<sp/>variables<sp/>are<sp/>in<sp/>registers,<sp/>but</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*<sp/>even<sp/>if<sp/>not,<sp/>they&apos;re<sp/>probably<sp/>cheaper<sp/>to<sp/>access<sp/>than<sp/>array<sp/>elements<sp/>are.)</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/>The<sp/>fserrors[]<sp/>array<sp/>has<sp/>(#columns<sp/>+<sp/>2)<sp/>entries;<sp/>the<sp/>extra<sp/>entry<sp/>at</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*<sp/>each<sp/>end<sp/>saves<sp/>us<sp/>from<sp/>special-casing<sp/>the<sp/>first<sp/>and<sp/>last<sp/>pixels.</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/>Each<sp/>entry<sp/>is<sp/>three<sp/>values<sp/>long,<sp/>one<sp/>value<sp/>for<sp/>each<sp/>color<sp/>component.</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*<sp/>Note:<sp/>on<sp/>a<sp/>wide<sp/>image,<sp/>we<sp/>might<sp/>not<sp/>have<sp/>enough<sp/>room<sp/>in<sp/>a<sp/>PC&apos;s<sp/>near<sp/>data</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*<sp/>segment<sp/>to<sp/>hold<sp/>the<sp/>error<sp/>array;<sp/>so<sp/>it<sp/>is<sp/>allocated<sp/>with<sp/>alloc_large.</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BITS_IN_JSAMPLE<sp/>==<sp/>8</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>INT16<sp/>FSERROR;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>16<sp/>bits<sp/>should<sp/>be<sp/>enough<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LOCFSERROR;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>&apos;int&apos;<sp/>for<sp/>calculation<sp/>temps<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>INT32<sp/>FSERROR;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>may<sp/>need<sp/>more<sp/>than<sp/>16<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>INT32<sp/>LOCFSERROR;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>be<sp/>sure<sp/>calculation<sp/>temps<sp/>are<sp/>big<sp/>enough<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>FSERROR<sp/>FAR<sp/>*FSERRPTR;<sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>to<sp/>error<sp/>array<sp/>(in<sp/>FAR<sp/>storage!)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>subobject<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__color__quantizer" kindref="compound">jpeg_color_quantizer</ref><sp/>pub;<sp/></highlight><highlight class="comment">/*<sp/>public<sp/>fields<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Space<sp/>for<sp/>the<sp/>eventually<sp/>created<sp/>colormap<sp/>is<sp/>stashed<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>JSAMPARRAY<sp/>sv_colormap;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>colormap<sp/>allocated<sp/>at<sp/>init<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desired;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>desired<sp/>#<sp/>of<sp/>colors<sp/>=<sp/>size<sp/>of<sp/>colormap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Variables<sp/>for<sp/>accumulating<sp/>image<sp/>statistics<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>hist3d<sp/>histogram;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>to<sp/>the<sp/>histogram<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>needs_zeroed;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TRUE<sp/>if<sp/>next<sp/>pass<sp/>must<sp/>zero<sp/>histogram<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Variables<sp/>for<sp/>Floyd-Steinberg<sp/>dithering<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>FSERRPTR<sp/>fserrors;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>accumulated<sp/>errors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>on_odd_row;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>flag<sp/>to<sp/>remember<sp/>which<sp/>row<sp/>we<sp/>are<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>error_limiter;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>table<sp/>for<sp/>clamping<sp/>the<sp/>applied<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">}<sp/>my_cquantizer;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>my_cquantizer<sp/>*<sp/>my_cquantize_ptr;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/>Prescan<sp/>some<sp/>rows<sp/>of<sp/>pixels.</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*<sp/>In<sp/>this<sp/>module<sp/>the<sp/>prescan<sp/>simply<sp/>updates<sp/>the<sp/>histogram,<sp/>which<sp/>has<sp/>been</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*<sp/>initialized<sp/>to<sp/>zeroes<sp/>by<sp/>start_pass.</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*<sp/>An<sp/>output_buf<sp/>parameter<sp/>is<sp/>required<sp/>by<sp/>the<sp/>method<sp/>signature,<sp/>but<sp/>no<sp/>data</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*<sp/>is<sp/>actually<sp/>output<sp/>(in<sp/>fact<sp/>the<sp/>buffer<sp/>controller<sp/>is<sp/>probably<sp/>passing<sp/>a</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*<sp/>NULL<sp/>pointer).</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">prescan_quantize<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/>JSAMPARRAY<sp/>input_buf,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>output_buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_rows)</highlight></codeline>
<codeline lineno="226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>my_cquantize_ptr<sp/>cquantize<sp/>=<sp/>(my_cquantize_ptr)<sp/>cinfo-&gt;cquantize;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JSAMPROW<sp/>ptr;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>histptr<sp/>histp;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>hist3d<sp/>histogram<sp/>=<sp/>cquantize-&gt;histogram;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>col;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>width<sp/>=<sp/>cinfo-&gt;output_width;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>for<sp/>(row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>num_rows;<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>input_buf[row];</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(col<sp/>=<sp/>width;<sp/>col<sp/>&gt;<sp/>0;<sp/>col--)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>pixel<sp/>value<sp/>and<sp/>index<sp/>into<sp/>the<sp/>histogram<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>histp<sp/>=<sp/>&amp;<sp/>histogram[GETJSAMPLE(ptr[0])<sp/>&gt;&gt;<sp/>C0_SHIFT]</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[GETJSAMPLE(ptr[1])<sp/>&gt;&gt;<sp/>C1_SHIFT]</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[GETJSAMPLE(ptr[2])<sp/>&gt;&gt;<sp/>C2_SHIFT];</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>increment,<sp/>check<sp/>for<sp/>overflow<sp/>and<sp/>undo<sp/>increment<sp/>if<sp/>so.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++(*histp)<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>(*histp)--;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/>*<sp/>Next<sp/>we<sp/>have<sp/>the<sp/>really<sp/>interesting<sp/>routines:<sp/>selection<sp/>of<sp/>a<sp/>colormap</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/>*<sp/>given<sp/>the<sp/>completed<sp/>histogram.</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/>*<sp/>These<sp/>routines<sp/>work<sp/>with<sp/>a<sp/>list<sp/>of<sp/>&quot;boxes&quot;,<sp/>each<sp/>representing<sp/>a<sp/>rectangular</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/>*<sp/>subset<sp/>of<sp/>the<sp/>input<sp/>color<sp/>space<sp/>(to<sp/>histogram<sp/>precision).</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>bounds<sp/>of<sp/>the<sp/>box<sp/>(inclusive);<sp/>expressed<sp/>as<sp/>histogram<sp/>indexes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c0min,<sp/>c0max;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c1min,<sp/>c1max;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c2min,<sp/>c2max;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>volume<sp/>(actually<sp/>2-norm)<sp/>of<sp/>the<sp/>box<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>INT32<sp/>volume;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>number<sp/>of<sp/>nonzero<sp/>histogram<sp/>cells<sp/>within<sp/>this<sp/>box<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>colorcount;</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}<sp/>box;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>box<sp/>*<sp/>boxptr;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal">LOCAL<sp/>boxptr</highlight></codeline>
<codeline lineno="273"><highlight class="normal">find_biggest_color_pop<sp/>(boxptr<sp/>boxlist,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numboxes)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Find<sp/>the<sp/>splittable<sp/>box<sp/>with<sp/>the<sp/>largest<sp/>color<sp/>population<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Returns<sp/>NULL<sp/>if<sp/>no<sp/>splittable<sp/>boxes<sp/>remain<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>boxptr<sp/>boxp;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>maxc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>boxptr<sp/>which<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>boxp<sp/>=<sp/>boxlist;<sp/>i<sp/>&lt;<sp/>numboxes;<sp/>i++,<sp/>boxp++)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boxp-&gt;colorcount<sp/>&gt;<sp/>maxc<sp/>&amp;&amp;<sp/>boxp-&gt;volume<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>which<sp/>=<sp/>boxp;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>maxc<sp/>=<sp/>boxp-&gt;colorcount;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>which;</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal">LOCAL<sp/>boxptr</highlight></codeline>
<codeline lineno="293"><highlight class="normal">find_biggest_volume<sp/>(boxptr<sp/>boxlist,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numboxes)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Find<sp/>the<sp/>splittable<sp/>box<sp/>with<sp/>the<sp/>largest<sp/>(scaled)<sp/>volume<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Returns<sp/>NULL<sp/>if<sp/>no<sp/>splittable<sp/>boxes<sp/>remain<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>boxptr<sp/>boxp;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>INT32<sp/>maxv<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>boxptr<sp/>which<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>boxp<sp/>=<sp/>boxlist;<sp/>i<sp/>&lt;<sp/>numboxes;<sp/>i++,<sp/>boxp++)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boxp-&gt;volume<sp/>&gt;<sp/>maxv)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>which<sp/>=<sp/>boxp;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>maxv<sp/>=<sp/>boxp-&gt;volume;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>which;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal">update_box<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/>boxptr<sp/>boxp)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Shrink<sp/>the<sp/>min/max<sp/>bounds<sp/>of<sp/>a<sp/>box<sp/>to<sp/>enclose<sp/>only<sp/>nonzero<sp/>elements,<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>and<sp/>recompute<sp/>its<sp/>volume<sp/>and<sp/>population<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>my_cquantize_ptr<sp/>cquantize<sp/>=<sp/>(my_cquantize_ptr)<sp/>cinfo-&gt;cquantize;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>hist3d<sp/>histogram<sp/>=<sp/>cquantize-&gt;histogram;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>histptr<sp/>histp;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c0,c1,c2;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c0min,c0max,c1min,c1max,c2min,c2max;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>INT32<sp/>dist0,dist1,dist2;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ccount;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>c0min<sp/>=<sp/>boxp-&gt;c0min;<sp/><sp/>c0max<sp/>=<sp/>boxp-&gt;c0max;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>c1min<sp/>=<sp/>boxp-&gt;c1min;<sp/><sp/>c1max<sp/>=<sp/>boxp-&gt;c1max;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>c2min<sp/>=<sp/>boxp-&gt;c2min;<sp/><sp/>c2max<sp/>=<sp/>boxp-&gt;c2max;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>if<sp/>(c0max<sp/>&gt;<sp/>c0min)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c0<sp/>=<sp/>c0min;<sp/>c0<sp/>&lt;=<sp/>c0max;<sp/>c0++)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c1<sp/>=<sp/>c1min;<sp/>c1<sp/>&lt;=<sp/>c1max;<sp/>c1++)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>histp<sp/>=<sp/>&amp;<sp/>histogram[c0][c1][c2min];</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c2<sp/>=<sp/>c2min;<sp/>c2<sp/>&lt;=<sp/>c2max;<sp/>c2++)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*histp++<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxp-&gt;c0min<sp/>=<sp/>c0min<sp/>=<sp/>c0;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>have_c0min;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/>have_c0min:</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c0max<sp/>&gt;<sp/>c0min)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c0<sp/>=<sp/>c0max;<sp/>c0<sp/>&gt;=<sp/>c0min;<sp/>c0--)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c1<sp/>=<sp/>c1min;<sp/>c1<sp/>&lt;=<sp/>c1max;<sp/>c1++)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>histp<sp/>=<sp/>&amp;<sp/>histogram[c0][c1][c2min];</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c2<sp/>=<sp/>c2min;<sp/>c2<sp/>&lt;=<sp/>c2max;<sp/>c2++)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*histp++<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxp-&gt;c0max<sp/>=<sp/>c0max<sp/>=<sp/>c0;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>have_c0max;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/>have_c0max:</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c1max<sp/>&gt;<sp/>c1min)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c1<sp/>=<sp/>c1min;<sp/>c1<sp/>&lt;=<sp/>c1max;<sp/>c1++)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c0<sp/>=<sp/>c0min;<sp/>c0<sp/>&lt;=<sp/>c0max;<sp/>c0++)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>histp<sp/>=<sp/>&amp;<sp/>histogram[c0][c1][c2min];</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c2<sp/>=<sp/>c2min;<sp/>c2<sp/>&lt;=<sp/>c2max;<sp/>c2++)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*histp++<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxp-&gt;c1min<sp/>=<sp/>c1min<sp/>=<sp/>c1;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>have_c1min;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/>have_c1min:</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c1max<sp/>&gt;<sp/>c1min)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c1<sp/>=<sp/>c1max;<sp/>c1<sp/>&gt;=<sp/>c1min;<sp/>c1--)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c0<sp/>=<sp/>c0min;<sp/>c0<sp/>&lt;=<sp/>c0max;<sp/>c0++)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>histp<sp/>=<sp/>&amp;<sp/>histogram[c0][c1][c2min];</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c2<sp/>=<sp/>c2min;<sp/>c2<sp/>&lt;=<sp/>c2max;<sp/>c2++)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*histp++<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxp-&gt;c1max<sp/>=<sp/>c1max<sp/>=<sp/>c1;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>have_c1max;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/>have_c1max:</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c2max<sp/>&gt;<sp/>c2min)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c2<sp/>=<sp/>c2min;<sp/>c2<sp/>&lt;=<sp/>c2max;<sp/>c2++)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c0<sp/>=<sp/>c0min;<sp/>c0<sp/>&lt;=<sp/>c0max;<sp/>c0++)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>histp<sp/>=<sp/>&amp;<sp/>histogram[c0][c1min][c2];</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c1<sp/>=<sp/>c1min;<sp/>c1<sp/>&lt;=<sp/>c1max;<sp/>c1++,<sp/>histp<sp/>+=<sp/>HIST_C2_ELEMS)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*histp<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxp-&gt;c2min<sp/>=<sp/>c2min<sp/>=<sp/>c2;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>have_c2min;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/>have_c2min:</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c2max<sp/>&gt;<sp/>c2min)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c2<sp/>=<sp/>c2max;<sp/>c2<sp/>&gt;=<sp/>c2min;<sp/>c2--)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c0<sp/>=<sp/>c0min;<sp/>c0<sp/>&lt;=<sp/>c0max;<sp/>c0++)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>histp<sp/>=<sp/>&amp;<sp/>histogram[c0][c1min][c2];</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c1<sp/>=<sp/>c1min;<sp/>c1<sp/>&lt;=<sp/>c1max;<sp/>c1++,<sp/>histp<sp/>+=<sp/>HIST_C2_ELEMS)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*histp<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxp-&gt;c2max<sp/>=<sp/>c2max<sp/>=<sp/>c2;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>have_c2max;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/>have_c2max:</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>box<sp/>volume.</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/><sp/><sp/>*<sp/>We<sp/>use<sp/>2-norm<sp/>rather<sp/>than<sp/>real<sp/>volume<sp/>here;<sp/>this<sp/>biases<sp/>the<sp/>method</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/><sp/><sp/>*<sp/>against<sp/>making<sp/>long<sp/>narrow<sp/>boxes,<sp/>and<sp/>it<sp/>has<sp/>the<sp/>side<sp/>benefit<sp/>that</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/><sp/><sp/>*<sp/>a<sp/>box<sp/>is<sp/>splittable<sp/>iff<sp/>norm<sp/>&gt;<sp/>0.</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Since<sp/>the<sp/>differences<sp/>are<sp/>expressed<sp/>in<sp/>histogram-cell<sp/>units,</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/><sp/><sp/>*<sp/>we<sp/>have<sp/>to<sp/>shift<sp/>back<sp/>to<sp/>JSAMPLE<sp/>units<sp/>to<sp/>get<sp/>consistent<sp/>distances;</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/><sp/><sp/>*<sp/>after<sp/>which,<sp/>we<sp/>scale<sp/>according<sp/>to<sp/>the<sp/>selected<sp/>distance<sp/>scale<sp/>factors.</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>dist0<sp/>=<sp/>((c0max<sp/>-<sp/>c0min)<sp/>&lt;&lt;<sp/>C0_SHIFT)<sp/>*<sp/>C0_SCALE;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>dist1<sp/>=<sp/>((c1max<sp/>-<sp/>c1min)<sp/>&lt;&lt;<sp/>C1_SHIFT)<sp/>*<sp/>C1_SCALE;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>dist2<sp/>=<sp/>((c2max<sp/>-<sp/>c2min)<sp/>&lt;&lt;<sp/>C2_SHIFT)<sp/>*<sp/>C2_SCALE;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>boxp-&gt;volume<sp/>=<sp/>dist0*dist0<sp/>+<sp/>dist1*dist1<sp/>+<sp/>dist2*dist2;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>scan<sp/>remaining<sp/>volume<sp/>of<sp/>box<sp/>and<sp/>compute<sp/>population<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>ccount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c0<sp/>=<sp/>c0min;<sp/>c0<sp/>&lt;=<sp/>c0max;<sp/>c0++)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c1<sp/>=<sp/>c1min;<sp/>c1<sp/>&lt;=<sp/>c1max;<sp/>c1++)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>histp<sp/>=<sp/>&amp;<sp/>histogram[c0][c1][c2min];</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c2<sp/>=<sp/>c2min;<sp/>c2<sp/>&lt;=<sp/>c2max;<sp/>c2++,<sp/>histp++)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*histp<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ccount++;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>boxp-&gt;colorcount<sp/>=<sp/>ccount;</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal">median_cut<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/>boxptr<sp/>boxlist,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numboxes,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desired_colors)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Repeatedly<sp/>select<sp/>and<sp/>split<sp/>the<sp/>largest<sp/>box<sp/>until<sp/>we<sp/>have<sp/>enough<sp/>boxes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,lb;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c0,c1,c2,cmax;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>boxptr<sp/>b1,b2;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(numboxes<sp/>&lt;<sp/>desired_colors)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Select<sp/>box<sp/>to<sp/>split.</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Current<sp/>algorithm:<sp/>by<sp/>population<sp/>for<sp/>first<sp/>half,<sp/>then<sp/>by<sp/>volume.</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numboxes*2<sp/>&lt;=<sp/>desired_colors)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b1<sp/>=<sp/>find_biggest_color_pop(boxlist,<sp/>numboxes);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b1<sp/>=<sp/>find_biggest_volume(boxlist,<sp/>numboxes);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b1<sp/>==<sp/>NULL)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>splittable<sp/>boxes<sp/>left!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>b2<sp/>=<sp/>&amp;boxlist[numboxes];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>where<sp/>new<sp/>box<sp/>will<sp/>go<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>the<sp/>color<sp/>bounds<sp/>to<sp/>the<sp/>new<sp/>box.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>b2-&gt;c0max<sp/>=<sp/>b1-&gt;c0max;<sp/>b2-&gt;c1max<sp/>=<sp/>b1-&gt;c1max;<sp/>b2-&gt;c2max<sp/>=<sp/>b1-&gt;c2max;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>b2-&gt;c0min<sp/>=<sp/>b1-&gt;c0min;<sp/>b2-&gt;c1min<sp/>=<sp/>b1-&gt;c1min;<sp/>b2-&gt;c2min<sp/>=<sp/>b1-&gt;c2min;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Choose<sp/>which<sp/>axis<sp/>to<sp/>split<sp/>the<sp/>box<sp/>on.</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Current<sp/>algorithm:<sp/>longest<sp/>scaled<sp/>axis.</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>See<sp/>notes<sp/>in<sp/>update_box<sp/>about<sp/>scaling<sp/>distances.</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>c0<sp/>=<sp/>((b1-&gt;c0max<sp/>-<sp/>b1-&gt;c0min)<sp/>&lt;&lt;<sp/>C0_SHIFT)<sp/>*<sp/>C0_SCALE;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>c1<sp/>=<sp/>((b1-&gt;c1max<sp/>-<sp/>b1-&gt;c1min)<sp/>&lt;&lt;<sp/>C1_SHIFT)<sp/>*<sp/>C1_SCALE;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>((b1-&gt;c2max<sp/>-<sp/>b1-&gt;c2min)<sp/>&lt;&lt;<sp/>C2_SHIFT)<sp/>*<sp/>C2_SCALE;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>want<sp/>to<sp/>break<sp/>any<sp/>ties<sp/>in<sp/>favor<sp/>of<sp/>green,<sp/>then<sp/>red,<sp/>blue<sp/>last.</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>code<sp/>does<sp/>the<sp/>right<sp/>thing<sp/>for<sp/>R,G,B<sp/>or<sp/>B,G,R<sp/>color<sp/>orders<sp/>only.</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RGB_RED<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="458"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>cmax<sp/>=<sp/>c1;<sp/>n<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c0<sp/>&gt;<sp/>cmax)<sp/>{<sp/>cmax<sp/>=<sp/>c0;<sp/>n<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c2<sp/>&gt;<sp/>cmax)<sp/>{<sp/>n<sp/>=<sp/>2;<sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="462"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>cmax<sp/>=<sp/>c1;<sp/>n<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c2<sp/>&gt;<sp/>cmax)<sp/>{<sp/>cmax<sp/>=<sp/>c2;<sp/>n<sp/>=<sp/>2;<sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c0<sp/>&gt;<sp/>cmax)<sp/>{<sp/>n<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="466"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Choose<sp/>split<sp/>point<sp/>along<sp/>selected<sp/>axis,<sp/>and<sp/>update<sp/>box<sp/>bounds.</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Current<sp/>algorithm:<sp/>split<sp/>at<sp/>halfway<sp/>point.</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>(Since<sp/>the<sp/>box<sp/>has<sp/>been<sp/>shrunk<sp/>to<sp/>minimum<sp/>volume,</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>any<sp/>split<sp/>will<sp/>produce<sp/>two<sp/>nonempty<sp/>subboxes.)</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Note<sp/>that<sp/>lb<sp/>value<sp/>is<sp/>max<sp/>for<sp/>lower<sp/>box,<sp/>so<sp/>must<sp/>be<sp/>&lt;<sp/>old<sp/>max.</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(n)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lb<sp/>=<sp/>(b1-&gt;c0max<sp/>+<sp/>b1-&gt;c0min)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b1-&gt;c0max<sp/>=<sp/>lb;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b2-&gt;c0min<sp/>=<sp/>lb+1;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lb<sp/>=<sp/>(b1-&gt;c1max<sp/>+<sp/>b1-&gt;c1min)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b1-&gt;c1max<sp/>=<sp/>lb;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b2-&gt;c1min<sp/>=<sp/>lb+1;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lb<sp/>=<sp/>(b1-&gt;c2max<sp/>+<sp/>b1-&gt;c2min)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b1-&gt;c2max<sp/>=<sp/>lb;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b2-&gt;c2min<sp/>=<sp/>lb+1;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>stats<sp/>for<sp/>boxes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>update_box(cinfo,<sp/>b1);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>update_box(cinfo,<sp/>b2);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>numboxes++;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numboxes;</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal">compute_color<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/>boxptr<sp/>boxp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icolor)</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Compute<sp/>representative<sp/>color<sp/>for<sp/>a<sp/>box,<sp/>put<sp/>it<sp/>in<sp/>colormap[icolor]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Current<sp/>algorithm:<sp/>mean<sp/>weighted<sp/>by<sp/>pixels<sp/>(not<sp/>colors)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note<sp/>it<sp/>is<sp/>important<sp/>to<sp/>get<sp/>the<sp/>rounding<sp/>correct!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>my_cquantize_ptr<sp/>cquantize<sp/>=<sp/>(my_cquantize_ptr)<sp/>cinfo-&gt;cquantize;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>hist3d<sp/>histogram<sp/>=<sp/>cquantize-&gt;histogram;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>histptr<sp/>histp;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c0,c1,c2;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c0min,c0max,c1min,c1max,c2min,c2max;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>total<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>c0total<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>c1total<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>c2total<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>c0min<sp/>=<sp/>boxp-&gt;c0min;<sp/><sp/>c0max<sp/>=<sp/>boxp-&gt;c0max;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>c1min<sp/>=<sp/>boxp-&gt;c1min;<sp/><sp/>c1max<sp/>=<sp/>boxp-&gt;c1max;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>c2min<sp/>=<sp/>boxp-&gt;c2min;<sp/><sp/>c2max<sp/>=<sp/>boxp-&gt;c2max;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>for<sp/>(c0<sp/>=<sp/>c0min;<sp/>c0<sp/>&lt;=<sp/>c0max;<sp/>c0++)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c1<sp/>=<sp/>c1min;<sp/>c1<sp/>&lt;=<sp/>c1max;<sp/>c1++)<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>histp<sp/>=<sp/>&amp;<sp/>histogram[c0][c1][c2min];</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c2<sp/>=<sp/>c2min;<sp/>c2<sp/>&lt;=<sp/>c2max;<sp/>c2++)<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((count<sp/>=<sp/>*histp++)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>+=<sp/>count;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c0total<sp/>+=<sp/>((c0<sp/>&lt;&lt;<sp/>C0_SHIFT)<sp/>+<sp/>((1&lt;&lt;C0_SHIFT)&gt;&gt;1))<sp/>*<sp/>count;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c1total<sp/>+=<sp/>((c1<sp/>&lt;&lt;<sp/>C1_SHIFT)<sp/>+<sp/>((1&lt;&lt;C1_SHIFT)&gt;&gt;1))<sp/>*<sp/>count;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c2total<sp/>+=<sp/>((c2<sp/>&lt;&lt;<sp/>C2_SHIFT)<sp/>+<sp/>((1&lt;&lt;C2_SHIFT)&gt;&gt;1))<sp/>*<sp/>count;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>cinfo-&gt;colormap[0][icolor]<sp/>=<sp/>(JSAMPLE)<sp/>((c0total<sp/>+<sp/>(total&gt;&gt;1))<sp/>/<sp/>total);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>cinfo-&gt;colormap[1][icolor]<sp/>=<sp/>(JSAMPLE)<sp/>((c1total<sp/>+<sp/>(total&gt;&gt;1))<sp/>/<sp/>total);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>cinfo-&gt;colormap[2][icolor]<sp/>=<sp/>(JSAMPLE)<sp/>((c2total<sp/>+<sp/>(total&gt;&gt;1))<sp/>/<sp/>total);</highlight></codeline>
<codeline lineno="535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal">select_colors<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desired_colors)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Master<sp/>routine<sp/>for<sp/>color<sp/>selection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>boxptr<sp/>boxlist;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numboxes;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>workspace<sp/>for<sp/>box<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/>boxlist<sp/>=<sp/>(boxptr)<sp/>(*cinfo-&gt;mem-&gt;alloc_small)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,<sp/>desired_colors<sp/>*<sp/>SIZEOF(box));</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>one<sp/>box<sp/>containing<sp/>whole<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>numboxes<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>boxlist[0].c0min<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>boxlist[0].c0max<sp/>=<sp/>MAXJSAMPLE<sp/>&gt;&gt;<sp/>C0_SHIFT;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>boxlist[0].c1min<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>boxlist[0].c1max<sp/>=<sp/>MAXJSAMPLE<sp/>&gt;&gt;<sp/>C1_SHIFT;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>boxlist[0].c2min<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>boxlist[0].c2max<sp/>=<sp/>MAXJSAMPLE<sp/>&gt;&gt;<sp/>C2_SHIFT;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Shrink<sp/>it<sp/>to<sp/>actually-used<sp/>volume<sp/>and<sp/>set<sp/>its<sp/>statistics<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>update_box(cinfo,<sp/>&amp;<sp/>boxlist[0]);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Perform<sp/>median-cut<sp/>to<sp/>produce<sp/>final<sp/>box<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>numboxes<sp/>=<sp/>median_cut(cinfo,<sp/>boxlist,<sp/>numboxes,<sp/>desired_colors);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>the<sp/>representative<sp/>color<sp/>for<sp/>each<sp/>box,<sp/>fill<sp/>colormap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numboxes;<sp/>i++)</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>compute_color(cinfo,<sp/>&amp;<sp/>boxlist[i],<sp/>i);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>cinfo-&gt;actual_number_of_colors<sp/>=<sp/>numboxes;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>TRACEMS1(cinfo,<sp/>1,<sp/>JTRC_QUANT_SELECTED,<sp/>numboxes);</highlight></codeline>
<codeline lineno="566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/>*<sp/>These<sp/>routines<sp/>are<sp/>concerned<sp/>with<sp/>the<sp/>time-critical<sp/>task<sp/>of<sp/>mapping<sp/>input</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/>*<sp/>colors<sp/>to<sp/>the<sp/>nearest<sp/>color<sp/>in<sp/>the<sp/>selected<sp/>colormap.</highlight></codeline>
<codeline lineno="572"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="573"><highlight class="comment"><sp/>*<sp/>We<sp/>re-use<sp/>the<sp/>histogram<sp/>space<sp/>as<sp/>an<sp/>&quot;inverse<sp/>color<sp/>map&quot;,<sp/>essentially<sp/>a</highlight></codeline>
<codeline lineno="574"><highlight class="comment"><sp/>*<sp/>cache<sp/>for<sp/>the<sp/>results<sp/>of<sp/>nearest-color<sp/>searches.<sp/><sp/>All<sp/>colors<sp/>within<sp/>a</highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/>*<sp/>histogram<sp/>cell<sp/>will<sp/>be<sp/>mapped<sp/>to<sp/>the<sp/>same<sp/>colormap<sp/>entry,<sp/>namely<sp/>the<sp/>one</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/>*<sp/>closest<sp/>to<sp/>the<sp/>cell&apos;s<sp/>center.<sp/><sp/>This<sp/>may<sp/>not<sp/>be<sp/>quite<sp/>the<sp/>closest<sp/>entry<sp/>to</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/>*<sp/>the<sp/>actual<sp/>input<sp/>color,<sp/>but<sp/>it&apos;s<sp/>almost<sp/>as<sp/>good.<sp/><sp/>A<sp/>zero<sp/>in<sp/>the<sp/>cache</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/>*<sp/>indicates<sp/>we<sp/>haven&apos;t<sp/>found<sp/>the<sp/>nearest<sp/>color<sp/>for<sp/>that<sp/>cell<sp/>yet;<sp/>the<sp/>array</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/>*<sp/>is<sp/>cleared<sp/>to<sp/>zeroes<sp/>before<sp/>starting<sp/>the<sp/>mapping<sp/>pass.<sp/><sp/>When<sp/>we<sp/>find<sp/>the</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/>*<sp/>nearest<sp/>color<sp/>for<sp/>a<sp/>cell,<sp/>its<sp/>colormap<sp/>index<sp/>plus<sp/>one<sp/>is<sp/>recorded<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/>*<sp/>cache<sp/>for<sp/>future<sp/>use.<sp/><sp/>The<sp/>pass2<sp/>scanning<sp/>routines<sp/>call<sp/>fill_inverse_cmap</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/>*<sp/>when<sp/>they<sp/>need<sp/>to<sp/>use<sp/>an<sp/>unfilled<sp/>entry<sp/>in<sp/>the<sp/>cache.</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/>*<sp/>Our<sp/>method<sp/>of<sp/>efficiently<sp/>finding<sp/>nearest<sp/>colors<sp/>is<sp/>based<sp/>on<sp/>the<sp/>&quot;locally</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/>*<sp/>sorted<sp/>search&quot;<sp/>idea<sp/>described<sp/>by<sp/>Heckbert<sp/>and<sp/>on<sp/>the<sp/>incremental<sp/>distance</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/>*<sp/>calculation<sp/>described<sp/>by<sp/>Spencer<sp/>W.<sp/>Thomas<sp/>in<sp/>chapter<sp/>III.1<sp/>of<sp/>Graphics</highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/>*<sp/>Gems<sp/>II<sp/>(James<sp/>Arvo,<sp/>ed.<sp/><sp/>Academic<sp/>Press,<sp/>1991).<sp/><sp/>Thomas<sp/>points<sp/>out<sp/>that</highlight></codeline>
<codeline lineno="588"><highlight class="comment"><sp/>*<sp/>the<sp/>distances<sp/>from<sp/>a<sp/>given<sp/>colormap<sp/>entry<sp/>to<sp/>each<sp/>cell<sp/>of<sp/>the<sp/>histogram<sp/>can</highlight></codeline>
<codeline lineno="589"><highlight class="comment"><sp/>*<sp/>be<sp/>computed<sp/>quickly<sp/>using<sp/>an<sp/>incremental<sp/>method:<sp/>the<sp/>differences<sp/>between</highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/>*<sp/>distances<sp/>to<sp/>adjacent<sp/>cells<sp/>themselves<sp/>differ<sp/>by<sp/>a<sp/>constant.<sp/><sp/>This<sp/>allows<sp/>a</highlight></codeline>
<codeline lineno="591"><highlight class="comment"><sp/>*<sp/>fairly<sp/>fast<sp/>implementation<sp/>of<sp/>the<sp/>&quot;brute<sp/>force&quot;<sp/>approach<sp/>of<sp/>computing<sp/>the</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/>*<sp/>distance<sp/>from<sp/>every<sp/>colormap<sp/>entry<sp/>to<sp/>every<sp/>histogram<sp/>cell.<sp/><sp/>Unfortunately,</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/>*<sp/>it<sp/>needs<sp/>a<sp/>work<sp/>array<sp/>to<sp/>hold<sp/>the<sp/>best-distance-so-far<sp/>for<sp/>each<sp/>histogram</highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/>*<sp/>cell<sp/>(because<sp/>the<sp/>inner<sp/>loop<sp/>has<sp/>to<sp/>be<sp/>over<sp/>cells,<sp/>not<sp/>colormap<sp/>entries).</highlight></codeline>
<codeline lineno="595"><highlight class="comment"><sp/>*<sp/>The<sp/>work<sp/>array<sp/>elements<sp/>have<sp/>to<sp/>be<sp/>INT32s,<sp/>so<sp/>the<sp/>work<sp/>array<sp/>would<sp/>need</highlight></codeline>
<codeline lineno="596"><highlight class="comment"><sp/>*<sp/>256Kb<sp/>at<sp/>our<sp/>recommended<sp/>precision.<sp/><sp/>This<sp/>is<sp/>not<sp/>feasible<sp/>in<sp/>DOS<sp/>machines.</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/>*<sp/>To<sp/>get<sp/>around<sp/>these<sp/>problems,<sp/>we<sp/>apply<sp/>Thomas&apos;<sp/>method<sp/>to<sp/>compute<sp/>the</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/>*<sp/>nearest<sp/>colors<sp/>for<sp/>only<sp/>the<sp/>cells<sp/>within<sp/>a<sp/>small<sp/>subbox<sp/>of<sp/>the<sp/>histogram.</highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/>*<sp/>The<sp/>work<sp/>array<sp/>need<sp/>be<sp/>only<sp/>as<sp/>big<sp/>as<sp/>the<sp/>subbox,<sp/>so<sp/>the<sp/>memory<sp/>usage</highlight></codeline>
<codeline lineno="601"><highlight class="comment"><sp/>*<sp/>problem<sp/>is<sp/>solved.<sp/><sp/>Furthermore,<sp/>we<sp/>need<sp/>not<sp/>fill<sp/>subboxes<sp/>that<sp/>are<sp/>never</highlight></codeline>
<codeline lineno="602"><highlight class="comment"><sp/>*<sp/>referenced<sp/>in<sp/>pass2;<sp/>many<sp/>images<sp/>use<sp/>only<sp/>part<sp/>of<sp/>the<sp/>color<sp/>gamut,<sp/>so<sp/>a</highlight></codeline>
<codeline lineno="603"><highlight class="comment"><sp/>*<sp/>fair<sp/>amount<sp/>of<sp/>work<sp/>is<sp/>saved.<sp/><sp/>An<sp/>additional<sp/>advantage<sp/>of<sp/>this</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/>*<sp/>approach<sp/>is<sp/>that<sp/>we<sp/>can<sp/>apply<sp/>Heckbert&apos;s<sp/>locality<sp/>criterion<sp/>to<sp/>quickly</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/>*<sp/>eliminate<sp/>colormap<sp/>entries<sp/>that<sp/>are<sp/>far<sp/>away<sp/>from<sp/>the<sp/>subbox;<sp/>typically</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/>*<sp/>three-fourths<sp/>of<sp/>the<sp/>colormap<sp/>entries<sp/>are<sp/>rejected<sp/>by<sp/>Heckbert&apos;s<sp/>criterion,</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/>*<sp/>and<sp/>we<sp/>need<sp/>not<sp/>compute<sp/>their<sp/>distances<sp/>to<sp/>individual<sp/>cells<sp/>in<sp/>the<sp/>subbox.</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/>*<sp/>The<sp/>speed<sp/>of<sp/>this<sp/>approach<sp/>is<sp/>heavily<sp/>influenced<sp/>by<sp/>the<sp/>subbox<sp/>size:<sp/>too</highlight></codeline>
<codeline lineno="609"><highlight class="comment"><sp/>*<sp/>small<sp/>means<sp/>too<sp/>much<sp/>overhead,<sp/>too<sp/>big<sp/>loses<sp/>because<sp/>Heckbert&apos;s<sp/>criterion</highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/>*<sp/>can&apos;t<sp/>eliminate<sp/>as<sp/>many<sp/>colormap<sp/>entries.<sp/><sp/>Empirically<sp/>the<sp/>best<sp/>subbox</highlight></codeline>
<codeline lineno="611"><highlight class="comment"><sp/>*<sp/>size<sp/>seems<sp/>to<sp/>be<sp/>about<sp/>1/512th<sp/>of<sp/>the<sp/>histogram<sp/>(1/8th<sp/>in<sp/>each<sp/>direction).</highlight></codeline>
<codeline lineno="612"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="613"><highlight class="comment"><sp/>*<sp/>Thomas&apos;<sp/>article<sp/>also<sp/>describes<sp/>a<sp/>refined<sp/>method<sp/>which<sp/>is<sp/>asymptotically</highlight></codeline>
<codeline lineno="614"><highlight class="comment"><sp/>*<sp/>faster<sp/>than<sp/>the<sp/>brute-force<sp/>method,<sp/>but<sp/>it<sp/>is<sp/>also<sp/>far<sp/>more<sp/>complex<sp/>and</highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/>*<sp/>cannot<sp/>efficiently<sp/>be<sp/>applied<sp/>to<sp/>small<sp/>subboxes.<sp/><sp/>It<sp/>is<sp/>therefore<sp/>not</highlight></codeline>
<codeline lineno="616"><highlight class="comment"><sp/>*<sp/>useful<sp/>for<sp/>programs<sp/>intended<sp/>to<sp/>be<sp/>portable<sp/>to<sp/>DOS<sp/>machines.<sp/><sp/>On<sp/>machines</highlight></codeline>
<codeline lineno="617"><highlight class="comment"><sp/>*<sp/>with<sp/>plenty<sp/>of<sp/>memory,<sp/>filling<sp/>the<sp/>whole<sp/>histogram<sp/>in<sp/>one<sp/>shot<sp/>with<sp/>Thomas&apos;</highlight></codeline>
<codeline lineno="618"><highlight class="comment"><sp/>*<sp/>refined<sp/>method<sp/>might<sp/>be<sp/>faster<sp/>than<sp/>the<sp/>present<sp/>code<sp/>---<sp/>but<sp/>then<sp/>again,</highlight></codeline>
<codeline lineno="619"><highlight class="comment"><sp/>*<sp/>it<sp/>might<sp/>not<sp/>be<sp/>any<sp/>faster,<sp/>and<sp/>it&apos;s<sp/>certainly<sp/>more<sp/>complicated.</highlight></codeline>
<codeline lineno="620"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>log2(histogram<sp/>cells<sp/>in<sp/>update<sp/>box)<sp/>for<sp/>each<sp/>axis;<sp/>this<sp/>can<sp/>be<sp/>adjusted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOX_C0_LOG<sp/><sp/>(HIST_C0_BITS-3)</highlight></codeline>
<codeline lineno="625"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOX_C1_LOG<sp/><sp/>(HIST_C1_BITS-3)</highlight></codeline>
<codeline lineno="626"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOX_C2_LOG<sp/><sp/>(HIST_C2_BITS-3)</highlight></codeline>
<codeline lineno="627"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOX_C0_ELEMS<sp/><sp/>(1&lt;&lt;BOX_C0_LOG)<sp/></highlight><highlight class="comment">/*<sp/>#<sp/>of<sp/>hist<sp/>cells<sp/>in<sp/>update<sp/>box<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="629"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOX_C1_ELEMS<sp/><sp/>(1&lt;&lt;BOX_C1_LOG)</highlight></codeline>
<codeline lineno="630"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOX_C2_ELEMS<sp/><sp/>(1&lt;&lt;BOX_C2_LOG)</highlight></codeline>
<codeline lineno="631"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOX_C0_SHIFT<sp/><sp/>(C0_SHIFT<sp/>+<sp/>BOX_C0_LOG)</highlight></codeline>
<codeline lineno="633"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOX_C1_SHIFT<sp/><sp/>(C1_SHIFT<sp/>+<sp/>BOX_C1_LOG)</highlight></codeline>
<codeline lineno="634"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOX_C2_SHIFT<sp/><sp/>(C2_SHIFT<sp/>+<sp/>BOX_C2_LOG)</highlight></codeline>
<codeline lineno="635"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/>*<sp/>The<sp/>next<sp/>three<sp/>routines<sp/>implement<sp/>inverse<sp/>colormap<sp/>filling.<sp/><sp/>They<sp/>could</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/>*<sp/>all<sp/>be<sp/>folded<sp/>into<sp/>one<sp/>big<sp/>routine,<sp/>but<sp/>splitting<sp/>them<sp/>up<sp/>this<sp/>way<sp/>saves</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/>*<sp/>some<sp/>stack<sp/>space<sp/>(the<sp/>mindist[]<sp/>and<sp/>bestdist[]<sp/>arrays<sp/>need<sp/>not<sp/>coexist)</highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/>*<sp/>and<sp/>may<sp/>allow<sp/>some<sp/>compilers<sp/>to<sp/>produce<sp/>better<sp/>code<sp/>by<sp/>registerizing<sp/>more</highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/>*<sp/>inner-loop<sp/>variables.</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal">find_nearby_colors<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minc0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minc1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minc2,</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPLE<sp/>colorlist[])</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Locate<sp/>the<sp/>colormap<sp/>entries<sp/>close<sp/>enough<sp/>to<sp/>an<sp/>update<sp/>box<sp/>to<sp/>be<sp/>candidates</highlight></codeline>
<codeline lineno="649"><highlight class="comment"><sp/>*<sp/>for<sp/>the<sp/>nearest<sp/>entry<sp/>to<sp/>some<sp/>cell(s)<sp/>in<sp/>the<sp/>update<sp/>box.<sp/><sp/>The<sp/>update<sp/>box</highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/>*<sp/>is<sp/>specified<sp/>by<sp/>the<sp/>center<sp/>coordinates<sp/>of<sp/>its<sp/>first<sp/>cell.<sp/><sp/>The<sp/>number<sp/>of</highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/>*<sp/>candidate<sp/>colormap<sp/>entries<sp/>is<sp/>returned,<sp/>and<sp/>their<sp/>colormap<sp/>indexes<sp/>are</highlight></codeline>
<codeline lineno="652"><highlight class="comment"><sp/>*<sp/>placed<sp/>in<sp/>colorlist[].</highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/>*<sp/>This<sp/>routine<sp/>uses<sp/>Heckbert&apos;s<sp/>&quot;locally<sp/>sorted<sp/>search&quot;<sp/>criterion<sp/>to<sp/>select</highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/>*<sp/>the<sp/>colors<sp/>that<sp/>need<sp/>further<sp/>consideration.</highlight></codeline>
<codeline lineno="655"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal">{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcolors<sp/>=<sp/>cinfo-&gt;actual_number_of_colors;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxc0,<sp/>maxc1,<sp/>maxc2;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>centerc0,<sp/>centerc1,<sp/>centerc2;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>x,<sp/>ncolors;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>INT32<sp/>minmaxdist,<sp/>min_dist,<sp/>max_dist,<sp/>tdist;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>INT32<sp/>mindist[MAXNUMCOLORS];<sp/><sp/></highlight><highlight class="comment">/*<sp/>min<sp/>distance<sp/>to<sp/>colormap<sp/>entry<sp/>i<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>true<sp/>coordinates<sp/>of<sp/>update<sp/>box&apos;s<sp/>upper<sp/>corner<sp/>and<sp/>center.</highlight></codeline>
<codeline lineno="665"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Actually<sp/>we<sp/>compute<sp/>the<sp/>coordinates<sp/>of<sp/>the<sp/>center<sp/>of<sp/>the<sp/>upper-corner</highlight></codeline>
<codeline lineno="666"><highlight class="comment"><sp/><sp/><sp/>*<sp/>histogram<sp/>cell,<sp/>which<sp/>are<sp/>the<sp/>upper<sp/>bounds<sp/>of<sp/>the<sp/>volume<sp/>we<sp/>care<sp/>about.</highlight></codeline>
<codeline lineno="667"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Note<sp/>that<sp/>since<sp/>&quot;&gt;&gt;&quot;<sp/>rounds<sp/>down,<sp/>the<sp/>&quot;center&quot;<sp/>values<sp/>may<sp/>be<sp/>closer<sp/>to</highlight></codeline>
<codeline lineno="668"><highlight class="comment"><sp/><sp/><sp/>*<sp/>min<sp/>than<sp/>to<sp/>max;<sp/>hence<sp/>comparisons<sp/>to<sp/>them<sp/>must<sp/>be<sp/>&quot;&lt;=&quot;,<sp/>not<sp/>&quot;&lt;&quot;.</highlight></codeline>
<codeline lineno="669"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>maxc0<sp/>=<sp/>minc0<sp/>+<sp/>((1<sp/>&lt;&lt;<sp/>BOX_C0_SHIFT)<sp/>-<sp/>(1<sp/>&lt;&lt;<sp/>C0_SHIFT));</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/>centerc0<sp/>=<sp/>(minc0<sp/>+<sp/>maxc0)<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>maxc1<sp/>=<sp/>minc1<sp/>+<sp/>((1<sp/>&lt;&lt;<sp/>BOX_C1_SHIFT)<sp/>-<sp/>(1<sp/>&lt;&lt;<sp/>C1_SHIFT));</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>centerc1<sp/>=<sp/>(minc1<sp/>+<sp/>maxc1)<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>maxc2<sp/>=<sp/>minc2<sp/>+<sp/>((1<sp/>&lt;&lt;<sp/>BOX_C2_SHIFT)<sp/>-<sp/>(1<sp/>&lt;&lt;<sp/>C2_SHIFT));</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>centerc2<sp/>=<sp/>(minc2<sp/>+<sp/>maxc2)<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>each<sp/>color<sp/>in<sp/>colormap,<sp/>find:</highlight></codeline>
<codeline lineno="678"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>1.<sp/>its<sp/>minimum<sp/>squared-distance<sp/>to<sp/>any<sp/>point<sp/>in<sp/>the<sp/>update<sp/>box</highlight></codeline>
<codeline lineno="679"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/>(zero<sp/>if<sp/>color<sp/>is<sp/>within<sp/>update<sp/>box);</highlight></codeline>
<codeline lineno="680"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>2.<sp/>its<sp/>maximum<sp/>squared-distance<sp/>to<sp/>any<sp/>point<sp/>in<sp/>the<sp/>update<sp/>box.</highlight></codeline>
<codeline lineno="681"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Both<sp/>of<sp/>these<sp/>can<sp/>be<sp/>found<sp/>by<sp/>considering<sp/>only<sp/>the<sp/>corners<sp/>of<sp/>the<sp/>box.</highlight></codeline>
<codeline lineno="682"><highlight class="comment"><sp/><sp/><sp/>*<sp/>We<sp/>save<sp/>the<sp/>minimum<sp/>distance<sp/>for<sp/>each<sp/>color<sp/>in<sp/>mindist[];</highlight></codeline>
<codeline lineno="683"><highlight class="comment"><sp/><sp/><sp/>*<sp/>only<sp/>the<sp/>smallest<sp/>maximum<sp/>distance<sp/>is<sp/>of<sp/>interest.</highlight></codeline>
<codeline lineno="684"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/>minmaxdist<sp/>=<sp/>0x7FFFFFFFL;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numcolors;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>compute<sp/>the<sp/>squared-c0-distance<sp/>term,<sp/>then<sp/>add<sp/>in<sp/>the<sp/>other<sp/>two.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>GETJSAMPLE(cinfo-&gt;colormap[0][i]);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>minc0)<sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tdist<sp/>=<sp/>(x<sp/>-<sp/>minc0)<sp/>*<sp/>C0_SCALE;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min_dist<sp/>=<sp/>tdist*tdist;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tdist<sp/>=<sp/>(x<sp/>-<sp/>maxc0)<sp/>*<sp/>C0_SCALE;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_dist<sp/>=<sp/>tdist*tdist;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;<sp/>maxc0)<sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tdist<sp/>=<sp/>(x<sp/>-<sp/>maxc0)<sp/>*<sp/>C0_SCALE;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min_dist<sp/>=<sp/>tdist*tdist;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tdist<sp/>=<sp/>(x<sp/>-<sp/>minc0)<sp/>*<sp/>C0_SCALE;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_dist<sp/>=<sp/>tdist*tdist;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>within<sp/>cell<sp/>range<sp/>so<sp/>no<sp/>contribution<sp/>to<sp/>min_dist<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min_dist<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;=<sp/>centerc0)<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>tdist<sp/>=<sp/>(x<sp/>-<sp/>maxc0)<sp/>*<sp/>C0_SCALE;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>max_dist<sp/>=<sp/>tdist*tdist;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>tdist<sp/>=<sp/>(x<sp/>-<sp/>minc0)<sp/>*<sp/>C0_SCALE;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>max_dist<sp/>=<sp/>tdist*tdist;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>GETJSAMPLE(cinfo-&gt;colormap[1][i]);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>minc1)<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tdist<sp/>=<sp/>(x<sp/>-<sp/>minc1)<sp/>*<sp/>C1_SCALE;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min_dist<sp/>+=<sp/>tdist*tdist;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tdist<sp/>=<sp/>(x<sp/>-<sp/>maxc1)<sp/>*<sp/>C1_SCALE;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_dist<sp/>+=<sp/>tdist*tdist;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;<sp/>maxc1)<sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tdist<sp/>=<sp/>(x<sp/>-<sp/>maxc1)<sp/>*<sp/>C1_SCALE;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min_dist<sp/>+=<sp/>tdist*tdist;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tdist<sp/>=<sp/>(x<sp/>-<sp/>minc1)<sp/>*<sp/>C1_SCALE;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_dist<sp/>+=<sp/>tdist*tdist;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>within<sp/>cell<sp/>range<sp/>so<sp/>no<sp/>contribution<sp/>to<sp/>min_dist<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;=<sp/>centerc1)<sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>tdist<sp/>=<sp/>(x<sp/>-<sp/>maxc1)<sp/>*<sp/>C1_SCALE;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>max_dist<sp/>+=<sp/>tdist*tdist;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>tdist<sp/>=<sp/>(x<sp/>-<sp/>minc1)<sp/>*<sp/>C1_SCALE;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>max_dist<sp/>+=<sp/>tdist*tdist;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>GETJSAMPLE(cinfo-&gt;colormap[2][i]);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>minc2)<sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tdist<sp/>=<sp/>(x<sp/>-<sp/>minc2)<sp/>*<sp/>C2_SCALE;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min_dist<sp/>+=<sp/>tdist*tdist;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tdist<sp/>=<sp/>(x<sp/>-<sp/>maxc2)<sp/>*<sp/>C2_SCALE;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_dist<sp/>+=<sp/>tdist*tdist;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;<sp/>maxc2)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tdist<sp/>=<sp/>(x<sp/>-<sp/>maxc2)<sp/>*<sp/>C2_SCALE;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min_dist<sp/>+=<sp/>tdist*tdist;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tdist<sp/>=<sp/>(x<sp/>-<sp/>minc2)<sp/>*<sp/>C2_SCALE;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_dist<sp/>+=<sp/>tdist*tdist;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>within<sp/>cell<sp/>range<sp/>so<sp/>no<sp/>contribution<sp/>to<sp/>min_dist<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;=<sp/>centerc2)<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>tdist<sp/>=<sp/>(x<sp/>-<sp/>maxc2)<sp/>*<sp/>C2_SCALE;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>max_dist<sp/>+=<sp/>tdist*tdist;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>tdist<sp/>=<sp/>(x<sp/>-<sp/>minc2)<sp/>*<sp/>C2_SCALE;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>max_dist<sp/>+=<sp/>tdist*tdist;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>mindist[i]<sp/>=<sp/>min_dist;<sp/><sp/></highlight><highlight class="comment">/*<sp/>save<sp/>away<sp/>the<sp/>results<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_dist<sp/>&lt;<sp/>minmaxdist)</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minmaxdist<sp/>=<sp/>max_dist;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>we<sp/>know<sp/>that<sp/>no<sp/>cell<sp/>in<sp/>the<sp/>update<sp/>box<sp/>is<sp/>more<sp/>than<sp/>minmaxdist</highlight></codeline>
<codeline lineno="762"><highlight class="comment"><sp/><sp/><sp/>*<sp/>away<sp/>from<sp/>some<sp/>colormap<sp/>entry.<sp/><sp/>Therefore,<sp/>only<sp/>colors<sp/>that<sp/>are</highlight></codeline>
<codeline lineno="763"><highlight class="comment"><sp/><sp/><sp/>*<sp/>within<sp/>minmaxdist<sp/>of<sp/>some<sp/>part<sp/>of<sp/>the<sp/>box<sp/>need<sp/>be<sp/>considered.</highlight></codeline>
<codeline lineno="764"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/>ncolors<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numcolors;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mindist[i]<sp/>&lt;=<sp/>minmaxdist)</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>colorlist[ncolors++]<sp/>=<sp/>(JSAMPLE)<sp/>i;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ncolors;</highlight></codeline>
<codeline lineno="771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal">find_best_colors<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minc0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minc1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minc2,</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcolors,<sp/>JSAMPLE<sp/>colorlist[],<sp/>JSAMPLE<sp/>bestcolor[])</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Find<sp/>the<sp/>closest<sp/>colormap<sp/>entry<sp/>for<sp/>each<sp/>cell<sp/>in<sp/>the<sp/>update<sp/>box,</highlight></codeline>
<codeline lineno="778"><highlight class="comment"><sp/>*<sp/>given<sp/>the<sp/>list<sp/>of<sp/>candidate<sp/>colors<sp/>prepared<sp/>by<sp/>find_nearby_colors.</highlight></codeline>
<codeline lineno="779"><highlight class="comment"><sp/>*<sp/>Return<sp/>the<sp/>indexes<sp/>of<sp/>the<sp/>closest<sp/>entries<sp/>in<sp/>the<sp/>bestcolor[]<sp/>array.</highlight></codeline>
<codeline lineno="780"><highlight class="comment"><sp/>*<sp/>This<sp/>routine<sp/>uses<sp/>Thomas&apos;<sp/>incremental<sp/>distance<sp/>calculation<sp/>method<sp/>to</highlight></codeline>
<codeline lineno="781"><highlight class="comment"><sp/>*<sp/>find<sp/>the<sp/>distance<sp/>from<sp/>a<sp/>colormap<sp/>entry<sp/>to<sp/>successive<sp/>cells<sp/>in<sp/>the<sp/>box.</highlight></codeline>
<codeline lineno="782"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal">{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ic0,<sp/>ic1,<sp/>ic2;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>icolor;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>INT32<sp/>*<sp/>bptr;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>into<sp/>bestdist[]<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/>JSAMPLE<sp/>*<sp/>cptr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>into<sp/>bestcolor[]<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/>INT32<sp/>dist0,<sp/>dist1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initial<sp/>distance<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>INT32<sp/>dist2;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>current<sp/>distance<sp/>in<sp/>inner<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/>INT32<sp/>xx0,<sp/>xx1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>distance<sp/>increments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>INT32<sp/>xx2;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/>INT32<sp/>inc0,<sp/>inc1,<sp/>inc2;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initial<sp/>values<sp/>for<sp/>increments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>array<sp/>holds<sp/>the<sp/>distance<sp/>to<sp/>the<sp/>nearest-so-far<sp/>color<sp/>for<sp/>each<sp/>cell<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>INT32<sp/>bestdist[BOX_C0_ELEMS<sp/>*<sp/>BOX_C1_ELEMS<sp/>*<sp/>BOX_C2_ELEMS];</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>best-distance<sp/>for<sp/>each<sp/>cell<sp/>of<sp/>the<sp/>update<sp/>box<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>bptr<sp/>=<sp/>bestdist;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>BOX_C0_ELEMS*BOX_C1_ELEMS*BOX_C2_ELEMS-1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>*bptr++<sp/>=<sp/>0x7FFFFFFFL;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>each<sp/>color<sp/>selected<sp/>by<sp/>find_nearby_colors,</highlight></codeline>
<codeline lineno="802"><highlight class="comment"><sp/><sp/><sp/>*<sp/>compute<sp/>its<sp/>distance<sp/>to<sp/>the<sp/>center<sp/>of<sp/>each<sp/>cell<sp/>in<sp/>the<sp/>box.</highlight></codeline>
<codeline lineno="803"><highlight class="comment"><sp/><sp/><sp/>*<sp/>If<sp/>that&apos;s<sp/>less<sp/>than<sp/>best-so-far,<sp/>update<sp/>best<sp/>distance<sp/>and<sp/>color<sp/>number.</highlight></codeline>
<codeline lineno="804"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nominal<sp/>steps<sp/>between<sp/>cell<sp/>centers<sp/>(&quot;x&quot;<sp/>in<sp/>Thomas<sp/>article)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STEP_C0<sp/><sp/>((1<sp/>&lt;&lt;<sp/>C0_SHIFT)<sp/>*<sp/>C0_SCALE)</highlight></codeline>
<codeline lineno="808"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>STEP_C1<sp/><sp/>((1<sp/>&lt;&lt;<sp/>C1_SHIFT)<sp/>*<sp/>C1_SCALE)</highlight></codeline>
<codeline lineno="809"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>STEP_C2<sp/><sp/>((1<sp/>&lt;&lt;<sp/>C2_SHIFT)<sp/>*<sp/>C2_SCALE)</highlight></codeline>
<codeline lineno="810"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numcolors;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>icolor<sp/>=<sp/>GETJSAMPLE(colorlist[i]);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>(square<sp/>of)<sp/>distance<sp/>from<sp/>minc0/c1/c2<sp/>to<sp/>this<sp/>color<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>inc0<sp/>=<sp/>(minc0<sp/>-<sp/>GETJSAMPLE(cinfo-&gt;colormap[0][icolor]))<sp/>*<sp/>C0_SCALE;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>dist0<sp/>=<sp/>inc0*inc0;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>inc1<sp/>=<sp/>(minc1<sp/>-<sp/>GETJSAMPLE(cinfo-&gt;colormap[1][icolor]))<sp/>*<sp/>C1_SCALE;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>dist0<sp/>+=<sp/>inc1*inc1;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>inc2<sp/>=<sp/>(minc2<sp/>-<sp/>GETJSAMPLE(cinfo-&gt;colormap[2][icolor]))<sp/>*<sp/>C2_SCALE;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>dist0<sp/>+=<sp/>inc2*inc2;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Form<sp/>the<sp/>initial<sp/>difference<sp/>increments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>inc0<sp/>=<sp/>inc0<sp/>*<sp/>(2<sp/>*<sp/>STEP_C0)<sp/>+<sp/>STEP_C0<sp/>*<sp/>STEP_C0;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>inc1<sp/>=<sp/>inc1<sp/>*<sp/>(2<sp/>*<sp/>STEP_C1)<sp/>+<sp/>STEP_C1<sp/>*<sp/>STEP_C1;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>inc2<sp/>=<sp/>inc2<sp/>*<sp/>(2<sp/>*<sp/>STEP_C2)<sp/>+<sp/>STEP_C2<sp/>*<sp/>STEP_C2;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>loop<sp/>over<sp/>all<sp/>cells<sp/>in<sp/>box,<sp/>updating<sp/>distance<sp/>per<sp/>Thomas<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>bptr<sp/>=<sp/>bestdist;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>cptr<sp/>=<sp/>bestcolor;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>xx0<sp/>=<sp/>inc0;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ic0<sp/>=<sp/>BOX_C0_ELEMS-1;<sp/>ic0<sp/>&gt;=<sp/>0;<sp/>ic0--)<sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dist1<sp/>=<sp/>dist0;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xx1<sp/>=<sp/>inc1;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ic1<sp/>=<sp/>BOX_C1_ELEMS-1;<sp/>ic1<sp/>&gt;=<sp/>0;<sp/>ic1--)<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>dist2<sp/>=<sp/>dist1;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>xx2<sp/>=<sp/>inc2;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ic2<sp/>=<sp/>BOX_C2_ELEMS-1;<sp/>ic2<sp/>&gt;=<sp/>0;<sp/>ic2--)<sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist2<sp/>&lt;<sp/>*bptr)<sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*bptr<sp/>=<sp/>dist2;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cptr<sp/>=<sp/>(JSAMPLE)<sp/>icolor;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dist2<sp/>+=<sp/>xx2;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xx2<sp/>+=<sp/>2<sp/>*<sp/>STEP_C2<sp/>*<sp/>STEP_C2;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bptr++;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cptr++;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>dist1<sp/>+=<sp/>xx1;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>xx1<sp/>+=<sp/>2<sp/>*<sp/>STEP_C1<sp/>*<sp/>STEP_C1;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dist0<sp/>+=<sp/>xx0;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xx0<sp/>+=<sp/>2<sp/>*<sp/>STEP_C0<sp/>*<sp/>STEP_C0;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal">fill_inverse_cmap<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c2)</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Fill<sp/>the<sp/>inverse-colormap<sp/>entries<sp/>in<sp/>the<sp/>update<sp/>box<sp/>that<sp/>contains<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>histogram<sp/>cell<sp/>c0/c1/c2.<sp/><sp/>(Only<sp/>that<sp/>one<sp/>cell<sp/>MUST<sp/>be<sp/>filled,<sp/>but<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>we<sp/>can<sp/>fill<sp/>as<sp/>many<sp/>others<sp/>as<sp/>we<sp/>wish.)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal">{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/>my_cquantize_ptr<sp/>cquantize<sp/>=<sp/>(my_cquantize_ptr)<sp/>cinfo-&gt;cquantize;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/>hist3d<sp/>histogram<sp/>=<sp/>cquantize-&gt;histogram;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minc0,<sp/>minc1,<sp/>minc2;<sp/><sp/></highlight><highlight class="comment">/*<sp/>lower<sp/>left<sp/>corner<sp/>of<sp/>update<sp/>box<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ic0,<sp/>ic1,<sp/>ic2;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JSAMPLE<sp/>*<sp/>cptr;<sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>into<sp/>bestcolor[]<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>histptr<sp/>cachep;<sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>into<sp/>main<sp/>cache<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>array<sp/>lists<sp/>the<sp/>candidate<sp/>colormap<sp/>indexes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>JSAMPLE<sp/>colorlist[MAXNUMCOLORS];</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcolors;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>candidate<sp/>colors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>array<sp/>holds<sp/>the<sp/>actually<sp/>closest<sp/>colormap<sp/>index<sp/>for<sp/>each<sp/>cell.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/>JSAMPLE<sp/>bestcolor[BOX_C0_ELEMS<sp/>*<sp/>BOX_C1_ELEMS<sp/>*<sp/>BOX_C2_ELEMS];</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>cell<sp/>coordinates<sp/>to<sp/>update<sp/>box<sp/>ID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/>c0<sp/>&gt;&gt;=<sp/>BOX_C0_LOG;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/>c1<sp/>&gt;&gt;=<sp/>BOX_C1_LOG;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/>c2<sp/>&gt;&gt;=<sp/>BOX_C2_LOG;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>true<sp/>coordinates<sp/>of<sp/>update<sp/>box&apos;s<sp/>origin<sp/>corner.</highlight></codeline>
<codeline lineno="878"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Actually<sp/>we<sp/>compute<sp/>the<sp/>coordinates<sp/>of<sp/>the<sp/>center<sp/>of<sp/>the<sp/>corner</highlight></codeline>
<codeline lineno="879"><highlight class="comment"><sp/><sp/><sp/>*<sp/>histogram<sp/>cell,<sp/>which<sp/>are<sp/>the<sp/>lower<sp/>bounds<sp/>of<sp/>the<sp/>volume<sp/>we<sp/>care<sp/>about.</highlight></codeline>
<codeline lineno="880"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>minc0<sp/>=<sp/>(c0<sp/>&lt;&lt;<sp/>BOX_C0_SHIFT)<sp/>+<sp/>((1<sp/>&lt;&lt;<sp/>C0_SHIFT)<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>minc1<sp/>=<sp/>(c1<sp/>&lt;&lt;<sp/>BOX_C1_SHIFT)<sp/>+<sp/>((1<sp/>&lt;&lt;<sp/>C1_SHIFT)<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>minc2<sp/>=<sp/>(c2<sp/>&lt;&lt;<sp/>BOX_C2_SHIFT)<sp/>+<sp/>((1<sp/>&lt;&lt;<sp/>C2_SHIFT)<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>which<sp/>colormap<sp/>entries<sp/>are<sp/>close<sp/>enough<sp/>to<sp/>be<sp/>candidates</highlight></codeline>
<codeline lineno="886"><highlight class="comment"><sp/><sp/><sp/>*<sp/>for<sp/>the<sp/>nearest<sp/>entry<sp/>to<sp/>some<sp/>cell<sp/>in<sp/>the<sp/>update<sp/>box.</highlight></codeline>
<codeline lineno="887"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/>numcolors<sp/>=<sp/>find_nearby_colors(cinfo,<sp/>minc0,<sp/>minc1,<sp/>minc2,<sp/>colorlist);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>the<sp/>actually<sp/>nearest<sp/>colors.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/>find_best_colors(cinfo,<sp/>minc0,<sp/>minc1,<sp/>minc2,<sp/>numcolors,<sp/>colorlist,</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestcolor);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Save<sp/>the<sp/>best<sp/>color<sp/>numbers<sp/>(plus<sp/>1)<sp/>in<sp/>the<sp/>main<sp/>cache<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/>c0<sp/>&lt;&lt;=<sp/>BOX_C0_LOG;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>ID<sp/>back<sp/>to<sp/>base<sp/>cell<sp/>indexes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/>c1<sp/>&lt;&lt;=<sp/>BOX_C1_LOG;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/>c2<sp/>&lt;&lt;=<sp/>BOX_C2_LOG;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/>cptr<sp/>=<sp/>bestcolor;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ic0<sp/>=<sp/>0;<sp/>ic0<sp/>&lt;<sp/>BOX_C0_ELEMS;<sp/>ic0++)<sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ic1<sp/>=<sp/>0;<sp/>ic1<sp/>&lt;<sp/>BOX_C1_ELEMS;<sp/>ic1++)<sp/>{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cachep<sp/>=<sp/>&amp;<sp/>histogram[c0+ic0][c1+ic1][c2];</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ic2<sp/>=<sp/>0;<sp/>ic2<sp/>&lt;<sp/>BOX_C2_ELEMS;<sp/>ic2++)<sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>*cachep++<sp/>=<sp/>(histcell)<sp/>(GETJSAMPLE(*cptr++)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="907"><highlight class="normal">}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="911"><highlight class="comment"><sp/>*<sp/>Map<sp/>some<sp/>rows<sp/>of<sp/>pixels<sp/>to<sp/>the<sp/>output<sp/>colormapped<sp/>representation.</highlight></codeline>
<codeline lineno="912"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal">pass2_no_dither<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>input_buf,<sp/>JSAMPARRAY<sp/>output_buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_rows)</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>version<sp/>performs<sp/>no<sp/>dithering<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal">{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/>my_cquantize_ptr<sp/>cquantize<sp/>=<sp/>(my_cquantize_ptr)<sp/>cinfo-&gt;cquantize;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/>hist3d<sp/>histogram<sp/>=<sp/>cquantize-&gt;histogram;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>JSAMPROW<sp/>inptr,<sp/>outptr;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>histptr<sp/>cachep;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c0,<sp/>c1,<sp/>c2;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>col;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>width<sp/>=<sp/>cinfo-&gt;output_width;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/>for<sp/>(row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>num_rows;<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>inptr<sp/>=<sp/>input_buf[row];</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/>outptr<sp/>=<sp/>output_buf[row];</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(col<sp/>=<sp/>width;<sp/>col<sp/>&gt;<sp/>0;<sp/>col--)<sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>pixel<sp/>value<sp/>and<sp/>index<sp/>into<sp/>the<sp/>cache<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c0<sp/>=<sp/>GETJSAMPLE(*inptr++)<sp/>&gt;&gt;<sp/>C0_SHIFT;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c1<sp/>=<sp/>GETJSAMPLE(*inptr++)<sp/>&gt;&gt;<sp/>C1_SHIFT;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c2<sp/>=<sp/>GETJSAMPLE(*inptr++)<sp/>&gt;&gt;<sp/>C2_SHIFT;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cachep<sp/>=<sp/>&amp;<sp/>histogram[c0][c1][c2];</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>have<sp/>not<sp/>seen<sp/>this<sp/>color<sp/>before,<sp/>find<sp/>nearest<sp/>colormap<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>and<sp/>update<sp/>the<sp/>cache<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*cachep<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>fill_inverse_cmap(cinfo,<sp/>c0,c1,c2);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>emit<sp/>the<sp/>colormap<sp/>index<sp/>for<sp/>this<sp/>cell<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outptr++<sp/>=<sp/>(JSAMPLE)<sp/>(*cachep<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal">pass2_fs_dither<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JSAMPARRAY<sp/>input_buf,<sp/>JSAMPARRAY<sp/>output_buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_rows)</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>version<sp/>performs<sp/>Floyd-Steinberg<sp/>dithering<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal">{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/>my_cquantize_ptr<sp/>cquantize<sp/>=<sp/>(my_cquantize_ptr)<sp/>cinfo-&gt;cquantize;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/>hist3d<sp/>histogram<sp/>=<sp/>cquantize-&gt;histogram;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>LOCFSERROR<sp/>cur0,<sp/>cur1,<sp/>cur2;<sp/></highlight><highlight class="comment">/*<sp/>current<sp/>error<sp/>or<sp/>pixel<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>LOCFSERROR<sp/>belowerr0,<sp/>belowerr1,<sp/>belowerr2;<sp/></highlight><highlight class="comment">/*<sp/>error<sp/>for<sp/>pixel<sp/>below<sp/>cur<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/>LOCFSERROR<sp/>bpreverr0,<sp/>bpreverr1,<sp/>bpreverr2;<sp/></highlight><highlight class="comment">/*<sp/>error<sp/>for<sp/>below/prev<sp/>col<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>FSERRPTR<sp/>errorptr;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>=&gt;<sp/>fserrors[]<sp/>at<sp/>column<sp/>before<sp/>current<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/>JSAMPROW<sp/>inptr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>=&gt;<sp/>current<sp/>input<sp/>pixel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/>JSAMPROW<sp/>outptr;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>=&gt;<sp/>current<sp/>output<sp/>pixel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/>histptr<sp/>cachep;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>+1<sp/>or<sp/>-1<sp/>depending<sp/>on<sp/>direction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>3*dir,<sp/>for<sp/>advancing<sp/>inptr<sp/>&amp;<sp/>errorptr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>col;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>width<sp/>=<sp/>cinfo-&gt;output_width;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/>JSAMPLE<sp/>*range_limit<sp/>=<sp/>cinfo-&gt;sample_range_limit;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*error_limit<sp/>=<sp/>cquantize-&gt;error_limiter;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/>JSAMPROW<sp/>colormap0<sp/>=<sp/>cinfo-&gt;colormap[0];</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/>JSAMPROW<sp/>colormap1<sp/>=<sp/>cinfo-&gt;colormap[1];</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/>JSAMPROW<sp/>colormap2<sp/>=<sp/>cinfo-&gt;colormap[2];</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/>SHIFT_TEMPS</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/>for<sp/>(row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>num_rows;<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>inptr<sp/>=<sp/>input_buf[row];</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>outptr<sp/>=<sp/>output_buf[row];</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cquantize-&gt;on_odd_row)<sp/>{</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>work<sp/>right<sp/>to<sp/>left<sp/>in<sp/>this<sp/>row<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inptr<sp/>+=<sp/>(width-1)<sp/>*<sp/>3;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>so<sp/>point<sp/>to<sp/>rightmost<sp/>pixel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outptr<sp/>+=<sp/>width-1;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dir3<sp/>=<sp/>-3;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>errorptr<sp/>=<sp/>cquantize-&gt;fserrors<sp/>+<sp/>(width+1)*3;<sp/></highlight><highlight class="comment">/*<sp/>=&gt;<sp/>entry<sp/>after<sp/>last<sp/>column<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cquantize-&gt;on_odd_row<sp/>=<sp/>FALSE;<sp/></highlight><highlight class="comment">/*<sp/>flip<sp/>for<sp/>next<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>work<sp/>left<sp/>to<sp/>right<sp/>in<sp/>this<sp/>row<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dir3<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>errorptr<sp/>=<sp/>cquantize-&gt;fserrors;<sp/></highlight><highlight class="comment">/*<sp/>=&gt;<sp/>entry<sp/>before<sp/>first<sp/>real<sp/>column<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cquantize-&gt;on_odd_row<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>flip<sp/>for<sp/>next<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Preset<sp/>error<sp/>values:<sp/>no<sp/>error<sp/>propagated<sp/>to<sp/>first<sp/>pixel<sp/>from<sp/>left<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>cur0<sp/>=<sp/>cur1<sp/>=<sp/>cur2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>and<sp/>no<sp/>error<sp/>propagated<sp/>to<sp/>row<sp/>below<sp/>yet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>belowerr0<sp/>=<sp/>belowerr1<sp/>=<sp/>belowerr2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>bpreverr0<sp/>=<sp/>bpreverr1<sp/>=<sp/>bpreverr2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(col<sp/>=<sp/>width;<sp/>col<sp/>&gt;<sp/>0;<sp/>col--)<sp/>{</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>curN<sp/>holds<sp/>the<sp/>error<sp/>propagated<sp/>from<sp/>the<sp/>previous<sp/>pixel<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="1000"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>current<sp/>line.<sp/><sp/>Add<sp/>the<sp/>error<sp/>propagated<sp/>from<sp/>the<sp/>previous<sp/>line</highlight></codeline>
<codeline lineno="1001"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>form<sp/>the<sp/>complete<sp/>error<sp/>correction<sp/>term<sp/>for<sp/>this<sp/>pixel,<sp/>and</highlight></codeline>
<codeline lineno="1002"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>round<sp/>the<sp/>error<sp/>term<sp/>(which<sp/>is<sp/>expressed<sp/>*<sp/>16)<sp/>to<sp/>an<sp/>integer.</highlight></codeline>
<codeline lineno="1003"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>RIGHT_SHIFT<sp/>rounds<sp/>towards<sp/>minus<sp/>infinity,<sp/>so<sp/>adding<sp/>8<sp/>is<sp/>correct</highlight></codeline>
<codeline lineno="1004"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>for<sp/>either<sp/>sign<sp/>of<sp/>the<sp/>error<sp/>value.</highlight></codeline>
<codeline lineno="1005"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Note:<sp/>errorptr<sp/>points<sp/>to<sp/>*previous*<sp/>column&apos;s<sp/>array<sp/>entry.</highlight></codeline>
<codeline lineno="1006"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur0<sp/>=<sp/>RIGHT_SHIFT(cur0<sp/>+<sp/>errorptr[dir3+0]<sp/>+<sp/>8,<sp/>4);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur1<sp/>=<sp/>RIGHT_SHIFT(cur1<sp/>+<sp/>errorptr[dir3+1]<sp/>+<sp/>8,<sp/>4);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur2<sp/>=<sp/>RIGHT_SHIFT(cur2<sp/>+<sp/>errorptr[dir3+2]<sp/>+<sp/>8,<sp/>4);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Limit<sp/>the<sp/>error<sp/>using<sp/>transfer<sp/>function<sp/>set<sp/>by<sp/>init_error_limit.</highlight></codeline>
<codeline lineno="1011"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>See<sp/>comments<sp/>with<sp/>init_error_limit<sp/>for<sp/>rationale.</highlight></codeline>
<codeline lineno="1012"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur0<sp/>=<sp/>error_limit[cur0];</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur1<sp/>=<sp/>error_limit[cur1];</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur2<sp/>=<sp/>error_limit[cur2];</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Form<sp/>pixel<sp/>value<sp/>+<sp/>error,<sp/>and<sp/>range-limit<sp/>to<sp/>0..MAXJSAMPLE.</highlight></codeline>
<codeline lineno="1017"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>maximum<sp/>error<sp/>is<sp/>+-<sp/>MAXJSAMPLE<sp/>(or<sp/>less<sp/>with<sp/>error<sp/>limiting);</highlight></codeline>
<codeline lineno="1018"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>this<sp/>sets<sp/>the<sp/>required<sp/>size<sp/>of<sp/>the<sp/>range_limit<sp/>array.</highlight></codeline>
<codeline lineno="1019"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur0<sp/>+=<sp/>GETJSAMPLE(inptr[0]);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur1<sp/>+=<sp/>GETJSAMPLE(inptr[1]);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur2<sp/>+=<sp/>GETJSAMPLE(inptr[2]);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur0<sp/>=<sp/>GETJSAMPLE(range_limit[cur0]);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur1<sp/>=<sp/>GETJSAMPLE(range_limit[cur1]);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur2<sp/>=<sp/>GETJSAMPLE(range_limit[cur2]);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Index<sp/>into<sp/>the<sp/>cache<sp/>with<sp/>adjusted<sp/>pixel<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cachep<sp/>=<sp/>&amp;<sp/>histogram[cur0&gt;&gt;C0_SHIFT][cur1&gt;&gt;C1_SHIFT][cur2&gt;&gt;C2_SHIFT];</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>have<sp/>not<sp/>seen<sp/>this<sp/>color<sp/>before,<sp/>find<sp/>nearest<sp/>colormap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>entry<sp/>and<sp/>update<sp/>the<sp/>cache<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*cachep<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>fill_inverse_cmap(cinfo,<sp/>cur0&gt;&gt;C0_SHIFT,cur1&gt;&gt;C1_SHIFT,cur2&gt;&gt;C2_SHIFT);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>emit<sp/>the<sp/>colormap<sp/>index<sp/>for<sp/>this<sp/>cell<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixcode<sp/>=<sp/>*cachep<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>*outptr<sp/>=<sp/>(JSAMPLE)<sp/>pixcode;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>representation<sp/>error<sp/>for<sp/>this<sp/>pixel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/>cur0<sp/>-=<sp/>GETJSAMPLE(colormap0[pixcode]);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>cur1<sp/>-=<sp/>GETJSAMPLE(colormap1[pixcode]);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>cur2<sp/>-=<sp/>GETJSAMPLE(colormap2[pixcode]);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>error<sp/>fractions<sp/>to<sp/>be<sp/>propagated<sp/>to<sp/>adjacent<sp/>pixels.</highlight></codeline>
<codeline lineno="1041"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Add<sp/>these<sp/>into<sp/>the<sp/>running<sp/>sums,<sp/>and<sp/>simultaneously<sp/>shift<sp/>the</highlight></codeline>
<codeline lineno="1042"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>next-line<sp/>error<sp/>sums<sp/>left<sp/>by<sp/>1<sp/>column.</highlight></codeline>
<codeline lineno="1043"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>LOCFSERROR<sp/>bnexterr,<sp/>delta;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>bnexterr<sp/>=<sp/>cur0;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>component<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>cur0<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>cur0<sp/>+=<sp/>delta;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>form<sp/>error<sp/>*<sp/>3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>errorptr[0]<sp/>=<sp/>(FSERROR)<sp/>(bpreverr0<sp/>+<sp/>cur0);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>cur0<sp/>+=<sp/>delta;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>form<sp/>error<sp/>*<sp/>5<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>bpreverr0<sp/>=<sp/>belowerr0<sp/>+<sp/>cur0;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>belowerr0<sp/>=<sp/>bnexterr;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>cur0<sp/>+=<sp/>delta;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>form<sp/>error<sp/>*<sp/>7<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>bnexterr<sp/>=<sp/>cur1;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>component<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>cur1<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>cur1<sp/>+=<sp/>delta;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>form<sp/>error<sp/>*<sp/>3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>errorptr[1]<sp/>=<sp/>(FSERROR)<sp/>(bpreverr1<sp/>+<sp/>cur1);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>cur1<sp/>+=<sp/>delta;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>form<sp/>error<sp/>*<sp/>5<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>bpreverr1<sp/>=<sp/>belowerr1<sp/>+<sp/>cur1;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>belowerr1<sp/>=<sp/>bnexterr;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>cur1<sp/>+=<sp/>delta;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>form<sp/>error<sp/>*<sp/>7<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>bnexterr<sp/>=<sp/>cur2;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>component<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>cur2<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>cur2<sp/>+=<sp/>delta;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>form<sp/>error<sp/>*<sp/>3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>errorptr[2]<sp/>=<sp/>(FSERROR)<sp/>(bpreverr2<sp/>+<sp/>cur2);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>cur2<sp/>+=<sp/>delta;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>form<sp/>error<sp/>*<sp/>5<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>bpreverr2<sp/>=<sp/>belowerr2<sp/>+<sp/>cur2;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/>belowerr2<sp/>=<sp/>bnexterr;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>cur2<sp/>+=<sp/>delta;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>form<sp/>error<sp/>*<sp/>7<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>At<sp/>this<sp/>point<sp/>curN<sp/>contains<sp/>the<sp/>7/16<sp/>error<sp/>value<sp/>to<sp/>be<sp/>propagated</highlight></codeline>
<codeline lineno="1072"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>the<sp/>next<sp/>pixel<sp/>on<sp/>the<sp/>current<sp/>line,<sp/>and<sp/>all<sp/>the<sp/>errors<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="1073"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>next<sp/>line<sp/>have<sp/>been<sp/>shifted<sp/>over.<sp/><sp/>We<sp/>are<sp/>therefore<sp/>ready<sp/>to<sp/>move<sp/>on.</highlight></codeline>
<codeline lineno="1074"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inptr<sp/>+=<sp/>dir3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Advance<sp/>pixel<sp/>pointers<sp/>to<sp/>next<sp/>column<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outptr<sp/>+=<sp/>dir;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>errorptr<sp/>+=<sp/>dir3;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>errorptr<sp/>to<sp/>current<sp/>column<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Post-loop<sp/>cleanup:<sp/>we<sp/>must<sp/>unload<sp/>the<sp/>final<sp/>error<sp/>values<sp/>into<sp/>the</highlight></codeline>
<codeline lineno="1080"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>final<sp/>fserrors[]<sp/>entry.<sp/><sp/>Note<sp/>we<sp/>need<sp/>not<sp/>unload<sp/>belowerrN<sp/>because</highlight></codeline>
<codeline lineno="1081"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>it<sp/>is<sp/>for<sp/>the<sp/>dummy<sp/>column<sp/>before<sp/>or<sp/>after<sp/>the<sp/>actual<sp/>array.</highlight></codeline>
<codeline lineno="1082"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>errorptr[0]<sp/>=<sp/>(FSERROR)<sp/>bpreverr0;<sp/></highlight><highlight class="comment">/*<sp/>unload<sp/>prev<sp/>errs<sp/>into<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>errorptr[1]<sp/>=<sp/>(FSERROR)<sp/>bpreverr1;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>errorptr[2]<sp/>=<sp/>(FSERROR)<sp/>bpreverr2;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1091"><highlight class="comment"><sp/>*<sp/>Initialize<sp/>the<sp/>error-limiting<sp/>transfer<sp/>function<sp/>(lookup<sp/>table).</highlight></codeline>
<codeline lineno="1092"><highlight class="comment"><sp/>*<sp/>The<sp/>raw<sp/>F-S<sp/>error<sp/>computation<sp/>can<sp/>potentially<sp/>compute<sp/>error<sp/>values<sp/>of<sp/>up<sp/>to</highlight></codeline>
<codeline lineno="1093"><highlight class="comment"><sp/>*<sp/>+-<sp/>MAXJSAMPLE.<sp/><sp/>But<sp/>we<sp/>want<sp/>the<sp/>maximum<sp/>correction<sp/>applied<sp/>to<sp/>a<sp/>pixel<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="1094"><highlight class="comment"><sp/>*<sp/>much<sp/>less,<sp/>otherwise<sp/>obviously<sp/>wrong<sp/>pixels<sp/>will<sp/>be<sp/>created.<sp/><sp/>(Typical</highlight></codeline>
<codeline lineno="1095"><highlight class="comment"><sp/>*<sp/>effects<sp/>include<sp/>weird<sp/>fringes<sp/>at<sp/>color-area<sp/>boundaries,<sp/>isolated<sp/>bright</highlight></codeline>
<codeline lineno="1096"><highlight class="comment"><sp/>*<sp/>pixels<sp/>in<sp/>a<sp/>dark<sp/>area,<sp/>etc.)<sp/><sp/>The<sp/>standard<sp/>advice<sp/>for<sp/>avoiding<sp/>this<sp/>problem</highlight></codeline>
<codeline lineno="1097"><highlight class="comment"><sp/>*<sp/>is<sp/>to<sp/>ensure<sp/>that<sp/>the<sp/>&quot;corners&quot;<sp/>of<sp/>the<sp/>color<sp/>cube<sp/>are<sp/>allocated<sp/>as<sp/>output</highlight></codeline>
<codeline lineno="1098"><highlight class="comment"><sp/>*<sp/>colors;<sp/>then<sp/>repeated<sp/>errors<sp/>in<sp/>the<sp/>same<sp/>direction<sp/>cannot<sp/>cause<sp/>cascading</highlight></codeline>
<codeline lineno="1099"><highlight class="comment"><sp/>*<sp/>error<sp/>buildup.<sp/><sp/>However,<sp/>that<sp/>only<sp/>prevents<sp/>the<sp/>error<sp/>from<sp/>getting</highlight></codeline>
<codeline lineno="1100"><highlight class="comment"><sp/>*<sp/>completely<sp/>out<sp/>of<sp/>hand;<sp/>Aaron<sp/>Giles<sp/>reports<sp/>that<sp/>error<sp/>limiting<sp/>improves</highlight></codeline>
<codeline lineno="1101"><highlight class="comment"><sp/>*<sp/>the<sp/>results<sp/>even<sp/>with<sp/>corner<sp/>colors<sp/>allocated.</highlight></codeline>
<codeline lineno="1102"><highlight class="comment"><sp/>*<sp/>A<sp/>simple<sp/>clamping<sp/>of<sp/>the<sp/>error<sp/>values<sp/>to<sp/>about<sp/>+-<sp/>MAXJSAMPLE/8<sp/>works<sp/>pretty</highlight></codeline>
<codeline lineno="1103"><highlight class="comment"><sp/>*<sp/>well,<sp/>but<sp/>the<sp/>smoother<sp/>transfer<sp/>function<sp/>used<sp/>below<sp/>is<sp/>even<sp/>better.<sp/><sp/>Thanks</highlight></codeline>
<codeline lineno="1104"><highlight class="comment"><sp/>*<sp/>to<sp/>Aaron<sp/>Giles<sp/>for<sp/>this<sp/>idea.</highlight></codeline>
<codeline lineno="1105"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal">LOCAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal">init_error_limit<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Allocate<sp/>and<sp/>fill<sp/>in<sp/>the<sp/>error_limiter<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/>my_cquantize_ptr<sp/>cquantize<sp/>=<sp/>(my_cquantize_ptr)<sp/>cinfo-&gt;cquantize;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>table;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>in,<sp/>out;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/>table<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)<sp/>(*cinfo-&gt;mem-&gt;alloc_small)</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,<sp/>(MAXJSAMPLE*2+1)<sp/>*<sp/>SIZEOF(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/>table<sp/>+=<sp/>MAXJSAMPLE;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>so<sp/>can<sp/>index<sp/>-MAXJSAMPLE<sp/>..<sp/>+MAXJSAMPLE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/>cquantize-&gt;error_limiter<sp/>=<sp/>table;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STEPSIZE<sp/>((MAXJSAMPLE+1)/16)</highlight></codeline>
<codeline lineno="1121"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Map<sp/>errors<sp/>1:1<sp/>up<sp/>to<sp/>+-<sp/>MAXJSAMPLE/16<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/>out<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(in<sp/>=<sp/>0;<sp/>in<sp/>&lt;<sp/>STEPSIZE;<sp/>in++,<sp/>out++)<sp/>{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>table[in]<sp/>=<sp/>out;<sp/>table[-in]<sp/>=<sp/>-out;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Map<sp/>errors<sp/>1:2<sp/>up<sp/>to<sp/>+-<sp/>3*MAXJSAMPLE/16<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>in<sp/>&lt;<sp/>STEPSIZE*3;<sp/>in++,<sp/>out<sp/>+=<sp/>(in&amp;1)<sp/>?<sp/>0<sp/>:<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>table[in]<sp/>=<sp/>out;<sp/>table[-in]<sp/>=<sp/>-out;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clamp<sp/>the<sp/>rest<sp/>to<sp/>final<sp/>out<sp/>value<sp/>(which<sp/>is<sp/>(MAXJSAMPLE+1)/8)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>in<sp/>&lt;=<sp/>MAXJSAMPLE;<sp/>in++)<sp/>{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>table[in]<sp/>=<sp/>out;<sp/>table[-in]<sp/>=<sp/>-out;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>STEPSIZE</highlight></codeline>
<codeline lineno="1135"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1139"><highlight class="comment"><sp/>*<sp/>Finish<sp/>up<sp/>at<sp/>the<sp/>end<sp/>of<sp/>each<sp/>pass.</highlight></codeline>
<codeline lineno="1140"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal">finish_pass1<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="1144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/>my_cquantize_ptr<sp/>cquantize<sp/>=<sp/>(my_cquantize_ptr)<sp/>cinfo-&gt;cquantize;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Select<sp/>the<sp/>representative<sp/>colors<sp/>and<sp/>fill<sp/>in<sp/>cinfo-&gt;colormap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/>cinfo-&gt;colormap<sp/>=<sp/>cquantize-&gt;sv_colormap;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/>select_colors(cinfo,<sp/>cquantize-&gt;desired);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Force<sp/>next<sp/>pass<sp/>to<sp/>zero<sp/>the<sp/>color<sp/>index<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/>cquantize-&gt;needs_zeroed<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal">finish_pass2<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="1157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>work<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1163"><highlight class="comment"><sp/>*<sp/>Initialize<sp/>for<sp/>each<sp/>processing<sp/>pass.</highlight></codeline>
<codeline lineno="1164"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal">start_pass_2_quant<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>is_pre_scan)</highlight></codeline>
<codeline lineno="1168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/>my_cquantize_ptr<sp/>cquantize<sp/>=<sp/>(my_cquantize_ptr)<sp/>cinfo-&gt;cquantize;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/>hist3d<sp/>histogram<sp/>=<sp/>cquantize-&gt;histogram;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Only<sp/>F-S<sp/>dithering<sp/>or<sp/>no<sp/>dithering<sp/>is<sp/>supported.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>user<sp/>asks<sp/>for<sp/>ordered<sp/>dither,<sp/>give<sp/>him<sp/>F-S.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/>if<sp/>(cinfo-&gt;dither_mode<sp/>!=<sp/>JDITHER_NONE)</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;dither_mode<sp/>=<sp/>JDITHER_FS;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_pre_scan)<sp/>{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>method<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/>cquantize-&gt;pub.color_quantize<sp/>=<sp/>prescan_quantize;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/>cquantize-&gt;pub.finish_pass<sp/>=<sp/>finish_pass1;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>cquantize-&gt;needs_zeroed<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>Always<sp/>zero<sp/>histogram<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>method<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;dither_mode<sp/>==<sp/>JDITHER_FS)</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cquantize-&gt;pub.color_quantize<sp/>=<sp/>pass2_fs_dither;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cquantize-&gt;pub.color_quantize<sp/>=<sp/>pass2_no_dither;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>cquantize-&gt;pub.finish_pass<sp/>=<sp/>finish_pass2;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>color<sp/>count<sp/>is<sp/>acceptable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>cinfo-&gt;actual_number_of_colors;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_QUANT_FEW_COLORS,<sp/>1);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>MAXNUMCOLORS)</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_QUANT_MANY_COLORS,<sp/>MAXNUMCOLORS);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;dither_mode<sp/>==<sp/>JDITHER_FS)<sp/>{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>arraysize<sp/>=<sp/>(size_t)<sp/>((cinfo-&gt;output_width<sp/>+<sp/>2)<sp/>*</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(3<sp/>*<sp/>SIZEOF(FSERROR)));</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>Floyd-Steinberg<sp/>workspace<sp/>if<sp/>we<sp/>didn&apos;t<sp/>already.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cquantize-&gt;fserrors<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>cquantize-&gt;fserrors<sp/>=<sp/>(FSERRPTR)<sp/>(*cinfo-&gt;mem-&gt;alloc_large)</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,<sp/>arraysize);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>the<sp/>propagated<sp/>errors<sp/>to<sp/>zero.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jzero_far((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FAR<sp/>*)<sp/>cquantize-&gt;fserrors,<sp/>arraysize);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>the<sp/>error-limit<sp/>table<sp/>if<sp/>we<sp/>didn&apos;t<sp/>already.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cquantize-&gt;error_limiter<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>init_error_limit(cinfo);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cquantize-&gt;on_odd_row<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Zero<sp/>the<sp/>histogram<sp/>or<sp/>inverse<sp/>color<sp/>map,<sp/>if<sp/>necessary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cquantize-&gt;needs_zeroed)<sp/>{</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>HIST_C0_ELEMS;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jzero_far((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FAR<sp/>*)<sp/>histogram[i],</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HIST_C1_ELEMS*HIST_C2_ELEMS<sp/>*<sp/>SIZEOF(histcell));</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>cquantize-&gt;needs_zeroed<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1226"><highlight class="comment"><sp/>*<sp/>Switch<sp/>to<sp/>a<sp/>new<sp/>external<sp/>colormap<sp/>between<sp/>output<sp/>passes.</highlight></codeline>
<codeline lineno="1227"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal">METHODDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal">new_color_map_2_quant<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="1231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/>my_cquantize_ptr<sp/>cquantize<sp/>=<sp/>(my_cquantize_ptr)<sp/>cinfo-&gt;cquantize;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>the<sp/>inverse<sp/>color<sp/>map<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/>cquantize-&gt;needs_zeroed<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1240"><highlight class="comment"><sp/>*<sp/>Module<sp/>initialization<sp/>routine<sp/>for<sp/>2-pass<sp/>color<sp/>quantization.</highlight></codeline>
<codeline lineno="1241"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal">GLOBAL<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal">jinit_2pass_quantizer<sp/>(<ref refid="structjpeg__decompress__struct" kindref="compound">j_decompress_ptr</ref><sp/>cinfo)</highlight></codeline>
<codeline lineno="1245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/>my_cquantize_ptr<sp/>cquantize;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/>cquantize<sp/>=<sp/>(my_cquantize_ptr)</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SIZEOF(my_cquantizer));</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/>cinfo-&gt;cquantize<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__color__quantizer" kindref="compound">jpeg_color_quantizer</ref><sp/>*)<sp/>cquantize;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/>cquantize-&gt;pub.start_pass<sp/>=<sp/>start_pass_2_quant;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/>cquantize-&gt;pub.new_color_map<sp/>=<sp/>new_color_map_2_quant;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/>cquantize-&gt;fserrors<sp/>=<sp/>NULL;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>flag<sp/>optional<sp/>arrays<sp/>not<sp/>allocated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/>cquantize-&gt;error_limiter<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>jdmaster<sp/>didn&apos;t<sp/>give<sp/>me<sp/>a<sp/>case<sp/>I<sp/>can&apos;t<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;out_color_components<sp/>!=<sp/>3)</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT(cinfo,<sp/>JERR_NOTIMPL);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>the<sp/>histogram/inverse<sp/>colormap<sp/>storage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/>cquantize-&gt;histogram<sp/>=<sp/>(hist3d)<sp/>(*cinfo-&gt;mem-&gt;alloc_small)</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,<sp/>HIST_C0_ELEMS<sp/>*<sp/>SIZEOF(hist2d));</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>HIST_C0_ELEMS;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/>cquantize-&gt;histogram[i]<sp/>=<sp/>(hist2d)<sp/>(*cinfo-&gt;mem-&gt;alloc_large)</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HIST_C1_ELEMS*HIST_C2_ELEMS<sp/>*<sp/>SIZEOF(histcell));</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/>cquantize-&gt;needs_zeroed<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>histogram<sp/>is<sp/>garbage<sp/>now<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>storage<sp/>for<sp/>the<sp/>completed<sp/>colormap,<sp/>if<sp/>required.</highlight></codeline>
<codeline lineno="1273"><highlight class="comment"><sp/><sp/><sp/>*<sp/>We<sp/>do<sp/>this<sp/>now<sp/>since<sp/>it<sp/>is<sp/>FAR<sp/>storage<sp/>and<sp/>may<sp/>affect</highlight></codeline>
<codeline lineno="1274"><highlight class="comment"><sp/><sp/><sp/>*<sp/>the<sp/>memory<sp/>manager&apos;s<sp/>space<sp/>calculations.</highlight></codeline>
<codeline lineno="1275"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;enable_2pass_quant)<sp/>{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>color<sp/>count<sp/>is<sp/>acceptable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desired<sp/>=<sp/>cinfo-&gt;desired_number_of_colors;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Lower<sp/>bound<sp/>on<sp/>#<sp/>of<sp/>colors<sp/>...<sp/>somewhat<sp/>arbitrary<sp/>as<sp/>long<sp/>as<sp/>&gt;<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desired<sp/>&lt;<sp/>8)</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_QUANT_FEW_COLORS,<sp/>8);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>colormap<sp/>indexes<sp/>can<sp/>be<sp/>represented<sp/>by<sp/>JSAMPLEs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desired<sp/>&gt;<sp/>MAXNUMCOLORS)</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_QUANT_MANY_COLORS,<sp/>MAXNUMCOLORS);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/>cquantize-&gt;sv_colormap<sp/>=<sp/>(*cinfo-&gt;mem-&gt;alloc_sarray)</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,JPOOL_IMAGE,<sp/>(JDIMENSION)<sp/>desired,<sp/>(JDIMENSION)<sp/>3);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/>cquantize-&gt;desired<sp/>=<sp/>desired;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>cquantize-&gt;sv_colormap<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Only<sp/>F-S<sp/>dithering<sp/>or<sp/>no<sp/>dithering<sp/>is<sp/>supported.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>user<sp/>asks<sp/>for<sp/>ordered<sp/>dither,<sp/>give<sp/>him<sp/>F-S.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;dither_mode<sp/>!=<sp/>JDITHER_NONE)</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;dither_mode<sp/>=<sp/>JDITHER_FS;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>Floyd-Steinberg<sp/>workspace<sp/>if<sp/>necessary.</highlight></codeline>
<codeline lineno="1297"><highlight class="comment"><sp/><sp/><sp/>*<sp/>This<sp/>isn&apos;t<sp/>really<sp/>needed<sp/>until<sp/>pass<sp/>2,<sp/>but<sp/>again<sp/>it<sp/>is<sp/>FAR<sp/>storage.</highlight></codeline>
<codeline lineno="1298"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Although<sp/>we<sp/>will<sp/>cope<sp/>with<sp/>a<sp/>later<sp/>change<sp/>in<sp/>dither_mode,</highlight></codeline>
<codeline lineno="1299"><highlight class="comment"><sp/><sp/><sp/>*<sp/>we<sp/>do<sp/>not<sp/>promise<sp/>to<sp/>honor<sp/>max_memory_to_use<sp/>if<sp/>dither_mode<sp/>changes.</highlight></codeline>
<codeline lineno="1300"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;dither_mode<sp/>==<sp/>JDITHER_FS)<sp/>{</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/>cquantize-&gt;fserrors<sp/>=<sp/>(FSERRPTR)<sp/>(*cinfo-&gt;mem-&gt;alloc_large)</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_IMAGE,</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>((cinfo-&gt;output_width<sp/>+<sp/>2)<sp/>*<sp/>(3<sp/>*<sp/>SIZEOF(FSERROR))));</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Might<sp/>as<sp/>well<sp/>create<sp/>the<sp/>error-limiting<sp/>table<sp/>too.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>init_error_limit(cinfo);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>QUANT_2PASS_SUPPORTED<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/renderer/jpeg-6/jquant2.c"/>
  </compounddef>
</doxygen>
