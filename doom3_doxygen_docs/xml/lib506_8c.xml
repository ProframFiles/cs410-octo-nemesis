<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="lib506_8c" kind="file">
    <compoundname>lib506.c</compoundname>
    <includes refid="test_8h" local="yes">test.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">errno.h</includes>
    <incdepgraph>
      <node id="658">
        <label>stdlib.h</label>
      </node>
      <node id="660">
        <label>errno.h</label>
      </node>
      <node id="659">
        <label>ctype.h</label>
      </node>
      <node id="657">
        <label>E:/sources/3rd_party/DOOM/neo/curl/tests/libtest/lib506.c</label>
        <link refid="lib506.c"/>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="659" relation="include">
        </childnode>
        <childnode refid="660" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_tdata" prot="public">Tdata</innerclass>
    <innerclass refid="structuserdata" prot="public">userdata</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="lib506_8c_1a2fcfdf60d28725b11b5a3539d3acd0d4" prot="public" static="no">
        <name>THREADS</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/tests/libtest/lib506.c" line="8" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/tests/libtest/lib506.c" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="lib506_8c_1ac4e3d7485790c9e2eadc81919f15e6da" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* HOSTHEADER</definition>
        <argsstring></argsstring>
        <name>HOSTHEADER</name>
        <initializer>= &quot;Host: www.host.foo.com&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/tests/libtest/lib506.c" line="6" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/tests/libtest/lib506.c" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lib506_8c_1a086a9065fde426822dee92f3927c4bc7" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* JAR</definition>
        <argsstring></argsstring>
        <name>JAR</name>
        <initializer>= &quot;log/jar506&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/tests/libtest/lib506.c" line="7" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/tests/libtest/lib506.c" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lib506_8c_1a92503406a8c38fb4df6ded0184e3de87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lock</definition>
        <argsstring>(CURL *handle, curl_lock_data data, curl_lock_access access, void *useptr)</argsstring>
        <name>lock</name>
        <param>
          <type>CURL *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>curl_lock_data</type>
          <declname>data</declname>
        </param>
        <param>
          <type>curl_lock_access</type>
          <declname>access</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>useptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/tests/libtest/lib506.c" line="10" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/tests/libtest/lib506.c" bodystart="29" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="lib506_8c_1ae9fb84c3d1178080217a7616b7c1c007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unlock</definition>
        <argsstring>(CURL *handle, curl_lock_data data, void *useptr)</argsstring>
        <name>unlock</name>
        <param>
          <type>CURL *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>curl_lock_data</type>
          <declname>data</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>useptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/tests/libtest/lib506.c" line="12" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/tests/libtest/lib506.c" bodystart="57" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="lib506_8c_1a06730f7eb5d5a65687671311b3a8107b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structcurl__slist" kindref="compound">curl_slist</ref> *</type>
        <definition>struct curl_slist * sethost</definition>
        <argsstring>(struct curl_slist *headers)</argsstring>
        <name>sethost</name>
        <param>
          <type>struct <ref refid="structcurl__slist" kindref="compound">curl_slist</ref> *</type>
          <declname>headers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/tests/libtest/lib506.c" line="13" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/tests/libtest/lib506.c" bodystart="82" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="lib506_8c_1ac62ce1ba0e7cd7137e68bce3f6c70b4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * fire</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>fire</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/tests/libtest/lib506.c" line="14" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/tests/libtest/lib506.c" bodystart="90" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="lib506_8c_1a266d02353c060d2a784e90525523bc9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * suburl</definition>
        <argsstring>(char *base, int i)</argsstring>
        <name>suburl</name>
        <param>
          <type>char *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/tests/libtest/lib506.c" line="15" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/tests/libtest/lib506.c" bodystart="121" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="lib506_8c_1a9e699fe9161c9d812566449797c97c2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int test</definition>
        <argsstring>(char *URL)</argsstring>
        <name>test</name>
        <param>
          <type>char *</type>
          <declname>URL</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/tests/libtest/lib506.c" line="136" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/tests/libtest/lib506.c" bodystart="136" bodyend="229"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;test.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*HOSTHEADER<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Host:<sp/>www.host.foo.com&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*JAR<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;log/jar506&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THREADS<sp/>2</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lock(CURL<sp/>*handle,<sp/>curl_lock_data<sp/>data,<sp/>curl_lock_access<sp/>access,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*useptr<sp/>);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unlock(CURL<sp/>*handle,<sp/>curl_lock_data<sp/>data,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*useptr<sp/>);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcurl__slist" kindref="compound">curl_slist</ref><sp/>*sethost(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcurl__slist" kindref="compound">curl_slist</ref><sp/>*headers);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*fire(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*suburl(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*base,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>struct<sp/>containing<sp/>data<sp/>of<sp/>a<sp/>thread<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="struct_tdata" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_tdata" kindref="compound">Tdata</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>CURLSH<sp/>*share;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*url;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="structuserdata" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structuserdata" kindref="compound">userdata</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>counter;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>lock<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lock(CURL<sp/>*handle,<sp/>curl_lock_data<sp/>data,<sp/>curl_lock_access<sp/>access,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*useptr<sp/>)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*what;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structuserdata" kindref="compound">userdata</ref><sp/>*user<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structuserdata" kindref="compound">userdata</ref><sp/>*)useptr;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>(void)handle;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>(void)access;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>data<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURL_LOCK_DATA_SHARE:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>what<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;share&quot;</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURL_LOCK_DATA_DNS:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>what<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;dns&quot;</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURL_LOCK_DATA_COOKIE:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>what<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;cookie&quot;</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;lock:<sp/>no<sp/>such<sp/>data:<sp/>%d\n&quot;</highlight><highlight class="normal">,data);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;lock:<sp/><sp/><sp/>%-6s<sp/>&lt;%s&gt;:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>what,<sp/>user-&gt;text,<sp/>user-&gt;counter);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>user-&gt;counter++;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>unlock<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unlock(CURL<sp/>*handle,<sp/>curl_lock_data<sp/>data,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*useptr<sp/>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*what;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structuserdata" kindref="compound">userdata</ref><sp/>*user<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structuserdata" kindref="compound">userdata</ref><sp/>*)useptr;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>(void)handle;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>data<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURL_LOCK_DATA_SHARE:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>what<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;share&quot;</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURL_LOCK_DATA_DNS:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>what<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;dns&quot;</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURL_LOCK_DATA_COOKIE:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>what<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;cookie&quot;</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;unlock:<sp/>no<sp/>such<sp/>data:<sp/>%d\n&quot;</highlight><highlight class="normal">,data);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;unlock:<sp/>%-6s<sp/>&lt;%s&gt;:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>what,<sp/>user-&gt;text,<sp/>user-&gt;counter);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>user-&gt;counter++;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>build<sp/>host<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcurl__slist" kindref="compound">curl_slist</ref><sp/>*sethost(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcurl__slist" kindref="compound">curl_slist</ref><sp/>*headers)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>(void)headers;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>curl_slist_append(NULL,<sp/>HOSTHEADER<sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>the<sp/>dummy<sp/>thread<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*fire(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>CURLcode<sp/>code;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcurl__slist" kindref="compound">curl_slist</ref><sp/>*headers;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_tdata" kindref="compound">Tdata</ref><sp/>*tdata<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_tdata" kindref="compound">Tdata</ref>*)ptr;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>CURL<sp/>*curl<sp/>=<sp/>curl_easy_init();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>headers<sp/>=<sp/>sethost(NULL);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>curl_easy_setopt(curl,<sp/>CURLOPT_VERBOSE,<sp/><sp/><sp/><sp/>1);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>curl_easy_setopt(curl,<sp/>CURLOPT_HTTPHEADER,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)headers);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>curl_easy_setopt(curl,<sp/>CURLOPT_URL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)tdata-&gt;url);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;CURLOPT_SHARE\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>curl_easy_setopt(curl,<sp/>CURLOPT_SHARE,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)tdata-&gt;share);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;PERFORM\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>code<sp/>=<sp/>curl_easy_perform(curl);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>code<sp/>!=<sp/>CURLE_OK<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;perform<sp/>url<sp/>&apos;%s&apos;<sp/>repeat<sp/>%d<sp/>failed,<sp/>curlcode<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tdata-&gt;url,<sp/>i,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)code);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;CLEANUP\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>curl_easy_cleanup(curl);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>curl_slist_free_all(headers);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>build<sp/>request<sp/>url<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*suburl(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*base,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>strlen(base);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*url<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)malloc(len+5);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!url)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>strcpy(url,<sp/>base);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>strcat(url,<sp/></highlight><highlight class="stringliteral">&quot;0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>url[len+3]<sp/>=<sp/>48+i;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>url;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>test<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*URL)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>CURLSHcode<sp/>scode;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*url;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_tdata" kindref="compound">Tdata</ref><sp/>tdata;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>CURL<sp/>*curl;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>CURLSH<sp/>*share;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcurl__slist" kindref="compound">curl_slist</ref><sp/>*headers;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structuserdata" kindref="compound">userdata</ref><sp/>user;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>user.text<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;Pigs<sp/>in<sp/>space&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>user.counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;GLOBAL_INIT\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>curl_global_init(<sp/>CURL_GLOBAL_ALL<sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>prepare<sp/>share<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;SHARE_INIT\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>share<sp/>=<sp/>curl_share_init();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>curl_share_setopt(<sp/>share,<sp/>CURLSHOPT_LOCKFUNC,<sp/><sp/><sp/>lock);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>curl_share_setopt(<sp/>share,<sp/>CURLSHOPT_UNLOCKFUNC,<sp/>unlock);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>curl_share_setopt(<sp/>share,<sp/>CURLSHOPT_USERDATA,<sp/><sp/><sp/>&amp;user);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;CURL_LOCK_DATA_COOKIE\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>curl_share_setopt(<sp/>share,<sp/>CURLSHOPT_SHARE,<sp/><sp/><sp/><sp/><sp/><sp/>CURL_LOCK_DATA_COOKIE);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;CURL_LOCK_DATA_DNS\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>curl_share_setopt(<sp/>share,<sp/>CURLSHOPT_SHARE,<sp/><sp/><sp/><sp/><sp/><sp/>CURL_LOCK_DATA_DNS);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>treads<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=1;<sp/>i&lt;=THREADS;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>thread<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>tdata.url<sp/><sp/><sp/>=<sp/>suburl(<sp/>URL,<sp/>i<sp/>);<sp/></highlight><highlight class="comment">/*<sp/>must<sp/>be<sp/>freed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>tdata.share<sp/>=<sp/>share;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>simulate<sp/>thread,<sp/>direct<sp/>call<sp/>of<sp/>&quot;thread&quot;<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>run<sp/>%d\n&quot;</highlight><highlight class="normal">,i<sp/>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>fire(<sp/>&amp;tdata<sp/>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>free(<sp/>tdata.url<sp/>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>fetch<sp/>a<sp/>another<sp/>one<sp/>and<sp/>save<sp/>cookies<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;***<sp/>run<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>curl<sp/>=<sp/>curl_easy_init();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>url<sp/>=<sp/>suburl(<sp/>URL,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>headers<sp/>=<sp/>sethost(<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>curl_easy_setopt(<sp/>curl,<sp/>CURLOPT_HTTPHEADER,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)headers<sp/>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>curl_easy_setopt(<sp/>curl,<sp/>CURLOPT_URL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>url<sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;CURLOPT_SHARE\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>curl_easy_setopt(<sp/>curl,<sp/>CURLOPT_SHARE,<sp/><sp/><sp/><sp/><sp/><sp/>share<sp/>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;CURLOPT_COOKIEJAR\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>curl_easy_setopt(<sp/>curl,<sp/>CURLOPT_COOKIEJAR,<sp/><sp/>JAR<sp/>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;PERFORM\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>curl_easy_perform(<sp/>curl<sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>try<sp/>to<sp/>free<sp/>share,<sp/>expect<sp/>to<sp/>fail<sp/>because<sp/>share<sp/>is<sp/>in<sp/>use*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;try<sp/>SHARE_CLEANUP...\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>scode<sp/>=<sp/>curl_share_cleanup(<sp/>share<sp/>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>scode==CURLSHE_OK<sp/>)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;curl_share_cleanup<sp/>succeed<sp/>but<sp/>error<sp/>expected\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>share<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;SHARE_CLEANUP<sp/>failed,<sp/>correct\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>clean<sp/>up<sp/>last<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;CLEANUP\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>curl_easy_cleanup(<sp/>curl<sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>curl_slist_free_all(<sp/>headers<sp/>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>free(url);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>share<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;SHARE_CLEANUP\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>scode<sp/>=<sp/>curl_share_cleanup(<sp/>share<sp/>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>scode!=CURLSHE_OK<sp/>)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;curl_share_cleanup<sp/>failed,<sp/>code<sp/>errno<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>scode);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;GLOBAL_CLEANUP\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>curl_global_cleanup();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/curl/tests/libtest/lib506.c"/>
  </compounddef>
</doxygen>
