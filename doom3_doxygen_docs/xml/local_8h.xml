<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="local_8h" kind="file">
    <compoundname>local.h</compoundname>
    <includes local="no">X11/extensions/xf86vmode.h</includes>
    <includes local="no">X11/XKBlib.h</includes>
    <includedby refid="dedicated_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/sys/linux/dedicated.cpp</includedby>
    <includedby refid="glimp_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/sys/linux/glimp.cpp</includedby>
    <includedby refid="input_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/sys/linux/input.cpp</includedby>
    <includedby refid="sys_2linux_2main_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/sys/linux/main.cpp</includedby>
    <incdepgraph>
      <node id="2237">
        <label>X11/XKBlib.h</label>
      </node>
      <node id="2235">
        <label>E:/sources/3rd_party/DOOM/neo/sys/linux/local.h</label>
        <link refid="local.h"/>
        <childnode refid="2236" relation="include">
        </childnode>
        <childnode refid="2237" relation="include">
        </childnode>
      </node>
      <node id="2236">
        <label>X11/extensions/xf86vmode.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="local_8h_1ad0c475de6664a29bd77b0a977b7be38b" prot="public" static="no">
        <name>KEY_MASK</name>
        <initializer>(KeyPressMask | KeyReleaseMask)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/local.h" line="51" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/local.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="local_8h_1a3827dd7e924d260f38f9d045860f1cbd" prot="public" static="no">
        <name>MOUSE_MASK</name>
        <initializer>(ButtonPressMask | ButtonReleaseMask | PointerMotionMask | ButtonMotionMask )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/local.h" line="52" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/local.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="local_8h_1a09979d068bec6c269ebb4d698bb5da0f" prot="public" static="no">
        <name>X_MASK</name>
        <initializer>(KEY_MASK | MOUSE_MASK | VisibilityChangeMask | StructureNotifyMask )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/local.h" line="53" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/local.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="local_8h_1ae5a86f4b2e7724fd33b09be699cacc97" prot="public" static="no" mutable="no">
        <type><ref refid="structglconfig__s" kindref="compound">glconfig_t</ref></type>
        <definition>glconfig_t glConfig</definition>
        <argsstring></argsstring>
        <name>glConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/local.h" line="31" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="local_8h_1a7d43b3edf58f8d85a89852ab95b740f6" prot="public" static="no" mutable="no">
        <type>Display *</type>
        <definition>Display* dpy</definition>
        <argsstring></argsstring>
        <name>dpy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/local.h" line="43" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/glimp.cpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="local_8h_1af5e9cbaf11bc8c0c330917f546d0045f" prot="public" static="no" mutable="no">
        <type>Window</type>
        <definition>Window win</definition>
        <argsstring></argsstring>
        <name>win</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/local.h" line="44" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/glimp.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="local_8h_1af26feaaefafc9d124b2969ef3fa306c1" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool dga_found</definition>
        <argsstring></argsstring>
        <name>dga_found</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/local.h" line="47" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/glimp.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="local_8h_1a3a94d95c2690668f9de2c6f987cfd000" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sys_XEvents</definition>
        <argsstring>()</argsstring>
        <name>Sys_XEvents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/local.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="local_8h_1ac8440bcfd1407968b0d2e79c8164f4a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sys_XUninstallGrabs</definition>
        <argsstring>()</argsstring>
        <name>Sys_XUninstallGrabs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/local.h" line="49" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/input.cpp" bodystart="194" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="local_8h_1ac70ae7a1ba8c510b1eecbea564fdb77f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GLimp_dlopen</definition>
        <argsstring>()</argsstring>
        <name>GLimp_dlopen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/local.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="local_8h_1adb813c2019dbc6c446c88736e448e862" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_dlclose</definition>
        <argsstring>()</argsstring>
        <name>GLimp_dlclose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/local.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="local_8h_1a354a46b008a160a3a345d6e145684942" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_BindLogging</definition>
        <argsstring>()</argsstring>
        <name>GLimp_BindLogging</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/local.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="local_8h_1a2c7e3bf0f02687979da2e0e91063a3e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_BindNative</definition>
        <argsstring>()</argsstring>
        <name>GLimp_BindNative</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/local.h" line="60" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__LINUX_LOCAL_H__</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__LINUX_LOCAL_H__</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structglconfig__s" kindref="compound">glconfig_t</ref><sp/>glConfig;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>glimp.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>ID_ENABLE_DGA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(<sp/>ID_ENABLE_DGA<sp/>)</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;X11/extensions/xf86dga.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;X11/extensions/xf86vmode.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;X11/XKBlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>Display<sp/>*dpy;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>Window<sp/>win;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>input.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dga_found;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Sys_XEvents();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Sys_XUninstallGrabs();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KEY_MASK<sp/>(KeyPressMask<sp/>|<sp/>KeyReleaseMask)</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>MOUSE_MASK<sp/>(ButtonPressMask<sp/>|<sp/>ButtonReleaseMask<sp/>|<sp/>PointerMotionMask<sp/>|<sp/>ButtonMotionMask<sp/>)</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>X_MASK<sp/>(KEY_MASK<sp/>|<sp/>MOUSE_MASK<sp/>|<sp/>VisibilityChangeMask<sp/>|<sp/>StructureNotifyMask<sp/>)</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ID_GL_HARDLINK</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GLimp_dlopen();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GLimp_dlclose();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GLimp_BindLogging();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GLimp_BindNative();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/local.h"/>
  </compounddef>
</doxygen>
