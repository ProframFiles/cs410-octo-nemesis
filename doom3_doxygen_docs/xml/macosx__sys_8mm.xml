<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="macosx__sys_8mm" kind="file">
    <compoundname>macosx_sys.mm</compoundname>
    <includes refid="precompiled_8h" local="yes">../../idlib/precompiled.h</includes>
    <includes refid="macosx__local_8h" local="yes">macosx_local.h</includes>
    <includes refid="macosx__sys_8h" local="yes">macosx_sys.h</includes>
    <includes refid="macosx__common_8h" local="yes">macosx_common.h</includes>
    <includes local="yes">dlfcn.h</includes>
    <includes local="no">AppKit/AppKit.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">sys/param.h</includes>
    <includes local="no">sys/mount.h</includes>
    <includes local="no">sys/wait.h</includes>
    <incdepgraph>
      <node id="2362">
        <label>sys/mount.h</label>
      </node>
      <node id="2356">
        <label>E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm</label>
        <link refid="macosx_sys.mm"/>
        <childnode refid="2357" relation="include">
        </childnode>
        <childnode refid="2358" relation="include">
        </childnode>
        <childnode refid="2359" relation="include">
        </childnode>
        <childnode refid="2360" relation="include">
        </childnode>
        <childnode refid="2361" relation="include">
        </childnode>
        <childnode refid="2362" relation="include">
        </childnode>
        <childnode refid="2363" relation="include">
        </childnode>
      </node>
      <node id="2359">
        <label>sys/types.h</label>
      </node>
      <node id="2358">
        <label>AppKit/AppKit.h</label>
      </node>
      <node id="2360">
        <label>unistd.h</label>
      </node>
      <node id="2361">
        <label>sys/param.h</label>
      </node>
      <node id="2363">
        <label>sys/wait.h</label>
      </node>
      <node id="2357">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="macosx__sys_8mm_1a00856fb0f72560c531f680752bcfc5a8" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* ansiColors[8]</definition>
        <argsstring>[8]</argsstring>
        <name>ansiColors</name>
        <initializer>=
	{ &quot;\033[30m&quot; ,	
	  &quot;\033[31m&quot; ,	
	  &quot;\033[32m&quot; ,	
	  &quot;\033[33m&quot; ,  
	  &quot;\033[34m&quot; ,	
	  &quot;\033[36m&quot; ,  
	  &quot;\033[35m&quot; ,	
	  &quot;\033[37m&quot; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" line="188" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" bodystart="188" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="macosx__sys_8mm_1adfdb874494a7e96ac1256869f1a7e9d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sys_Init</definition>
        <argsstring>(void)</argsstring>
        <name>Sys_Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="macosx__sys_8mm_1a55fb1f59c7d953e70b7e29f8232212cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* Sys_GetCurrentUser</definition>
        <argsstring>(void)</argsstring>
        <name>Sys_GetCurrentUser</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" line="52" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_shared.cpp" bodystart="239" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="macosx__sys_8mm_1a2fe6e82a2dd55741246a156d74cc7dab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sys_Error</definition>
        <argsstring>(const char *error,...)</argsstring>
        <name>Sys_Error</name>
        <param>
          <type>const char *</type>
          <declname>error</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" line="54" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" bodystart="156" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="macosx__sys_8mm_1a745fd700e60470ed4e547bd6c67d4630" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sys_Quit</definition>
        <argsstring>(void)</argsstring>
        <name>Sys_Quit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="macosx__sys_8mm_1a5896b948b6201a1f9abf99d5bb4a19c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* Sys_GetClipboardData</definition>
        <argsstring>(void)</argsstring>
        <name>Sys_GetClipboardData</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="macosx__sys_8mm_1ae5ce4f5b686c5c57eb9741e26d2691c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sys_Print</definition>
        <argsstring>(const char *msg)</argsstring>
        <name>Sys_Print</name>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" line="58" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" bodystart="198" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="macosx__sys_8mm_1ac0f2228420376f4db7e1274f2b41667c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, const char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" line="61" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="macosx__sys_8mm_1aed0ea34dd761b99284b6bdf22d33986b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sys_Sleep</definition>
        <argsstring>(const int time)</argsstring>
        <name>Sys_Sleep</name>
        <param>
          <type>const int</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" line="67" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="macosx__sys_8mm_1a230a5a960e2ac801da50d53647bd0be6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EditorPrintConsole</definition>
        <argsstring>(const char *test)</argsstring>
        <name>EditorPrintConsole</name>
        <param>
          <type>const char *</type>
          <declname>test</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" line="71" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" bodystart="71" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="macosx__sys_8mm_1ad14e5508d94cf69ddba9e0574ac70a8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sys_UnloadDll</definition>
        <argsstring>(void *dllHandle)</argsstring>
        <name>Sys_UnloadDll</name>
        <param>
          <type>void *</type>
          <declname>dllHandle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" line="80" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" bodystart="80" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="macosx__sys_8mm_1a8ad68e370f10bfef0736c91e2fc74a86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* FS_BuildOSPath</definition>
        <argsstring>(const char *base, const char *game, const char *qpath)</argsstring>
        <name>FS_BuildOSPath</name>
        <param>
          <type>const char *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>game</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>qpath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="macosx__sys_8mm_1ac673d500ea2bab42fdf916bd4d751bde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* Sys_LoadDll</definition>
        <argsstring>(const char *name, int(**entryPoint)(int,...), int(*systemcalls)(int,...))</argsstring>
        <name>Sys_LoadDll</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int(**)(int,...)</type>
          <declname>entryPoint</declname>
        </param>
        <param>
          <type>int(*)(int,...)</type>
          <declname>systemcalls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" line="92" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" bodystart="92" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="macosx__sys_8mm_1af6eb89b5c1b26641705926579314091b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sys_BeginProfiling</definition>
        <argsstring>(void)</argsstring>
        <name>Sys_BeginProfiling</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" line="120" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" bodystart="120" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="macosx__sys_8mm_1a198aa8b3d33827baf65c13811cb2d20f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sys_EndProfiling</definition>
        <argsstring>(void)</argsstring>
        <name>Sys_EndProfiling</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" line="124" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" bodystart="124" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="macosx__sys_8mm_1aab717bf5c56454273cb0e6368c271360" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sys_Shutdown</definition>
        <argsstring>(void)</argsstring>
        <name>Sys_Shutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" line="148" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" bodystart="148" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="macosx__sys_8mm_1aeb260bc5bcebe1d2cdce33b6cad56878" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OutputDebugString</definition>
        <argsstring>(const char *text)</argsstring>
        <name>OutputDebugString</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" line="243" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" bodystart="243" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="macosx__sys_8mm_1a8f8111e42ed251d8a58abf602fb5afb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sys_OutputDebugString</definition>
        <argsstring>(const char *text)</argsstring>
        <name>Sys_OutputDebugString</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" line="247" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" bodystart="247" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="macosx__sys_8mm_1a1105829dc96fa85299e3f3ee194726b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Sys_CheckCD</definition>
        <argsstring>(void)</argsstring>
        <name>Sys_CheckCD</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" line="258" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm" bodystart="258" bodyend="260"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-*-<sp/>mode:<sp/>objc<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&quot;../../idlib/precompiled.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&quot;macosx_local.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&quot;macosx_sys.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&quot;macosx_common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&quot;dlfcn.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;AppKit/AppKit.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;sys/param.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;sys/mount.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#import<sp/>&lt;sys/wait.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OMNI_TIMER</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#import<sp/>&quot;macosx_timers.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_Init<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*Sys_GetCurrentUser(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_Error(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*error,<sp/>...);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_Quit<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*Sys_GetClipboardData(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);<sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>this<sp/>isn&apos;t<sp/>journaled...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_Print(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg<sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NSApplicationMain(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Sys_Sleep(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>sleep(<sp/>time<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EditorPrintConsole(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*test<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="75"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="76"><highlight class="comment">Sys_UnloadDll</highlight></codeline>
<codeline lineno="77"><highlight class="comment"></highlight></codeline>
<codeline lineno="78"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="79"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Sys_UnloadDll(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dllHandle<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="84"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="85"><highlight class="comment">Sys_LoadDll</highlight></codeline>
<codeline lineno="86"><highlight class="comment"></highlight></codeline>
<codeline lineno="87"><highlight class="comment">Used<sp/>to<sp/>load<sp/>a<sp/>development<sp/>dll<sp/>instead<sp/>of<sp/>a<sp/>virtual<sp/>machine</highlight></codeline>
<codeline lineno="88"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="89"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*FS_BuildOSPath(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*base,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*game,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*qpath<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Sys_LoadDll(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(**entryPoint)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>...),</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*systemcalls)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>...)<sp/>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Sys_GetClipboardData(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>FIXME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>NSPasteboard<sp/>*pasteboard;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>NSArray<sp/>*pasteboardTypes;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>pasteboard<sp/>=<sp/>[NSPasteboard<sp/>generalPasteboard];</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>pasteboardTypes<sp/>=<sp/>[pasteboard<sp/>types];</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>([pasteboardTypes<sp/>containsObject:NSStringPboardType])<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NSString<sp/>*clipboardString;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipboardString<sp/>=<sp/>[pasteboard<sp/>stringForType:NSStringPboardType];</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipboardString<sp/>&amp;&amp;<sp/>[clipboardString<sp/>length]<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strdup([clipboardString<sp/>cString]);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Sys_BeginProfiling(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Sys_EndProfiling(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="131"><highlight class="comment">================</highlight></codeline>
<codeline lineno="132"><highlight class="comment">Sys_Init</highlight></codeline>
<codeline lineno="133"><highlight class="comment"></highlight></codeline>
<codeline lineno="134"><highlight class="comment">The<sp/>cvar<sp/>and<sp/>file<sp/>system<sp/>has<sp/>been<sp/>setup,<sp/>so<sp/>configurations<sp/>are<sp/>loaded</highlight></codeline>
<codeline lineno="135"><highlight class="comment">================</highlight></codeline>
<codeline lineno="136"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Sys_Init(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Sys_InitNetwork();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_InitInput();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="144"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="145"><highlight class="comment">Sys_Shutdown</highlight></codeline>
<codeline lineno="146"><highlight class="comment">=================</highlight></codeline>
<codeline lineno="147"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Sys_Shutdown(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;-----<sp/>Sys_Shutdown<sp/>-----\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_EndProfiling();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_ShutdownInput();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;------------------------\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Sys_Error(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*error,<sp/>...)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>argptr;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>NSString<sp/>*formattedString;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_Shutdown();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(argptr,error);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>formattedString<sp/>=<sp/>[[NSString<sp/>alloc]<sp/>initWithFormat:[NSString<sp/>stringWithCString:error]<sp/>arguments:argptr];</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(argptr);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>NSLog(</highlight><highlight class="stringliteral">@&quot;Sys_Error:<sp/>%@&quot;</highlight><highlight class="normal">,<sp/>formattedString);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>NSRunAlertPanel(</highlight><highlight class="stringliteral">@&quot;DOOM<sp/>Error&quot;</highlight><highlight class="normal">,<sp/>formattedString,<sp/>nil,<sp/>nil,<sp/>nil);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_Quit();</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Sys_Quit(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_Shutdown();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>[NSApp<sp/>terminate:nil];</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="180"><highlight class="comment">================</highlight></codeline>
<codeline lineno="181"><highlight class="comment">Sys_Print</highlight></codeline>
<codeline lineno="182"><highlight class="comment"></highlight></codeline>
<codeline lineno="183"><highlight class="comment">This<sp/>is<sp/>called<sp/>for<sp/>all<sp/>console<sp/>output,<sp/>even<sp/>if<sp/>the<sp/>game<sp/>is<sp/>running</highlight></codeline>
<codeline lineno="184"><highlight class="comment">full<sp/>screen<sp/>and<sp/>the<sp/>dedicated<sp/>console<sp/>window<sp/>is<sp/>hidden.</highlight></codeline>
<codeline lineno="185"><highlight class="comment">================</highlight></codeline>
<codeline lineno="186"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ansiColors[8]<sp/>=</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;\033[30m&quot;</highlight><highlight class="normal"><sp/>,<sp/><sp/></highlight><highlight class="comment">/*<sp/>ANSI<sp/>Black<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[31m&quot;</highlight><highlight class="normal"><sp/>,<sp/><sp/></highlight><highlight class="comment">/*<sp/>ANSI<sp/>Red<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[32m&quot;</highlight><highlight class="normal"><sp/>,<sp/><sp/></highlight><highlight class="comment">/*<sp/>ANSI<sp/>Green<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[33m&quot;</highlight><highlight class="normal"><sp/>,<sp/><sp/></highlight><highlight class="comment">/*<sp/>ANSI<sp/>Yellow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[34m&quot;</highlight><highlight class="normal"><sp/>,<sp/><sp/></highlight><highlight class="comment">/*<sp/>ANSI<sp/>Blue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[36m&quot;</highlight><highlight class="normal"><sp/>,<sp/><sp/></highlight><highlight class="comment">/*<sp/>ANSI<sp/>Cyan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[35m&quot;</highlight><highlight class="normal"><sp/>,<sp/><sp/></highlight><highlight class="comment">/*<sp/>ANSI<sp/>Magenta<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[37m&quot;</highlight><highlight class="normal"><sp/>};<sp/></highlight><highlight class="comment">/*<sp/>ANSI<sp/>White<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Sys_Print(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text)</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="201"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Okay,<sp/>this<sp/>is<sp/>a<sp/>stupid<sp/>hack,<sp/>but<sp/>what<sp/>the<sp/>hell,<sp/>I<sp/>was<sp/>bored.<sp/>;)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*scan<sp/>=<sp/>text;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>code;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>terminal<sp/>mode<sp/>is<sp/>reset<sp/>at<sp/>the<sp/>start<sp/>of<sp/>the<sp/>line...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>fputs(</highlight><highlight class="stringliteral">&quot;\033[0m&quot;</highlight><highlight class="normal">,<sp/>stdout);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*scan)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>See<sp/>if<sp/>we<sp/>have<sp/>a<sp/>color<sp/>control<sp/>code.<sp/><sp/>If<sp/>so,<sp/>snarf<sp/>the<sp/>character,<sp/></highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print<sp/>what<sp/>we<sp/>have<sp/>so<sp/>far,<sp/>print<sp/>the<sp/>ANSI<sp/>Terminal<sp/>color<sp/>code,</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skip<sp/>over<sp/>the<sp/>color<sp/>control<sp/>code<sp/>and<sp/>continue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Q_IsColorString(scan))<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>ColorIndex(scan[1]);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flush<sp/>current<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(scan<sp/>!=<sp/>text)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(text,<sp/>scan<sp/>-<sp/>text,<sp/>1,<sp/>stdout);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>ANSI<sp/>color<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fputs(ansiColors[index],<sp/>stdout);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>search<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>scan+2;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan<sp/>=<sp/>text;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scan++;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flush<sp/>whatever&apos;s<sp/>left<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>fputs(text,<sp/>stdout);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>terminal<sp/>mode<sp/>is<sp/>reset<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>line<sp/>too...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>fputs(</highlight><highlight class="stringliteral">&quot;\033[0m&quot;</highlight><highlight class="normal">,<sp/>stdout);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="239"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>fputs(text,<sp/>stdout);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight></codeline>
<codeline lineno="241"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputDebugString(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>Sys_Print(<sp/>text<sp/>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Sys_OutputDebugString(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputDebugString(<sp/>text<sp/>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="252"><highlight class="comment">================</highlight></codeline>
<codeline lineno="253"><highlight class="comment">Sys_CheckCD</highlight></codeline>
<codeline lineno="254"><highlight class="comment"></highlight></codeline>
<codeline lineno="255"><highlight class="comment">Return<sp/>true<sp/>if<sp/>the<sp/>proper<sp/>CD<sp/>is<sp/>in<sp/>the<sp/>drive</highlight></codeline>
<codeline lineno="256"><highlight class="comment">================</highlight></codeline>
<codeline lineno="257"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sys_CheckCD(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>macosx_scanForLibraryDirectory()<sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.mm"/>
  </compounddef>
</doxygen>
