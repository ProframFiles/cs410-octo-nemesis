<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="midi__core_8h" kind="file">
    <compoundname>midi_core.h</compoundname>
    <innerclass refid="structmidi__input__info" prot="public">midi_input_info</innerclass>
    <innerclass refid="structmidi__operations" prot="public">midi_operations</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="midi__core_8h_1aca173d27e41d4f45c2069283b34346f2" prot="public" static="no">
        <name>MI_MAX</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/oss/include/midi_core.h" line="23" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/oss/include/midi_core.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="midi__core_8h_1aca32aaab8e78e5b6586f3678d972ae1b" prot="public" static="no">
        <name>MST_INIT</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/oss/include/midi_core.h" line="28" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/oss/include/midi_core.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="midi__core_8h_1a57c0b8cce5e9240be3785ddfa68a4390" prot="public" static="no">
        <name>MST_DATA</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/oss/include/midi_core.h" line="29" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/oss/include/midi_core.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="midi__core_8h_1a80aac4d75c867c567a2d33ae04362b10" prot="public" static="no">
        <name>MST_SYSEX</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/oss/include/midi_core.h" line="30" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/oss/include/midi_core.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="midi__core_8h_1af7771ee2e5bd5c45d2359026b057eb64" prot="public" static="no">
        <name>MFLAG_NOSEQUENCER</name>
        <initializer>0x00000001 /* Not to be used by the sequencer driver */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/oss/include/midi_core.h" line="61" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/oss/include/midi_core.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="midi__core_8h_1ae1d7b4bf616458dc7843d4a31ba8f7fe" prot="public" static="no">
        <type>struct <ref refid="structmidi__operations" kindref="compound">midi_operations</ref></type>
        <definition>typedef struct midi_operations  mididev_t</definition>
        <argsstring></argsstring>
        <name>mididev_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/oss/include/midi_core.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="midi__core_8h_1a6c1d10a5892453f1053378bde2ca39c7" prot="public" static="no">
        <type>struct <ref refid="structmidi__operations" kindref="compound">midi_operations</ref> *</type>
        <definition>typedef struct midi_operations * mididev_p</definition>
        <argsstring></argsstring>
        <name>mididev_p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/oss/include/midi_core.h" line="62" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="midi__core_8h_1a2cdd20fe8d81452f04e0169822389f46" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structmidi__operations" kindref="compound">midi_operations</ref> **</type>
        <definition>struct midi_operations** midi_devs</definition>
        <argsstring></argsstring>
        <name>midi_devs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/oss/include/midi_core.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="midi__core_8h_1ae89903382b05375705ea44cdd3186a33" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int num_mididevs</definition>
        <argsstring></argsstring>
        <name>num_mididevs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/oss/include/midi_core.h" line="65" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>MIDI_CORE_H</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>MIDI_CORE_H</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>by<sp/>4Front<sp/>Technologies<sp/>1993-2004</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>IMPORTANT<sp/>NOTICE!</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>internal<sp/>structures<sp/>used<sp/>by<sp/>Open<sp/>Sound<sp/>Systems.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>They<sp/>will<sp/>change<sp/>without<sp/>any<sp/>notice<sp/>between<sp/>OSS<sp/>versions.<sp/>Care<sp/>must<sp/>be<sp/>taken</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>to<sp/>make<sp/>sure<sp/>any<sp/>software<sp/>using<sp/>this<sp/>header<sp/>gets<sp/>properly<sp/>re-compiled<sp/>before</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>use.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>4Front<sp/>Technologies<sp/>(or<sp/>anybody<sp/>else)<sp/>takes<sp/>no<sp/>responsibility<sp/>of<sp/>damages</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>caused<sp/>by<sp/>use<sp/>of<sp/>this<sp/>file.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="structmidi__input__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmidi__input__info" kindref="compound">midi_input_info</ref></highlight></codeline>
<codeline lineno="22"><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>MIDI<sp/>input<sp/>scanner<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MI_MAX<sp/><sp/>32</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_busy;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>m_buf[MI_MAX];</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>m_prev_status;<sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>running<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_ptr;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MST_INIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>MST_DATA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>MST_SYSEX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_state;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_left;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="structmidi__operations" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmidi__operations" kindref="compound">midi_operations</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmidi__info" kindref="compound">midi_info</ref><sp/>info;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">synth_operations<sp/>*converter;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmidi__input__info" kindref="compound">midi_input_info</ref><sp/>in_info;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>int<sp/>(*open)<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dev,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*inputintr)<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dev,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*outputintr)<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dev));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>void<sp/>(*close)<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dev);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>int<sp/>(*ioctl)<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dev,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmd,<sp/>ioctl_arg<sp/>arg);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>int<sp/>(*outputc)<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dev,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>int<sp/>(*start_read)<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dev);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>int<sp/>(*end_read)<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dev);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>void<sp/>(*kick)<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dev);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>int<sp/>(*command)<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dev,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>int<sp/>(*buffer_status)<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dev);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>int<sp/>(*prefix_cmd)<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dev,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>status);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>void<sp/>(*input_callback)<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dev,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>midich);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">coproc_operations<sp/>*coproc;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*devc;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>sound_os_info<sp/>*osp;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>card_number;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CONFIGURE_C</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>oss_mutex<sp/>mutex;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>flags;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MFLAG_NOSEQUENCER<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00000001<sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>to<sp/>be<sp/>used<sp/>by<sp/>the<sp/>sequencer<sp/>driver<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="normal">}<sp/><ref refid="structmidi__operations" kindref="compound">mididev_t</ref>,<sp/>*<ref refid="structmidi__operations" kindref="compound">mididev_p</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmidi__operations" kindref="compound">midi_operations</ref><sp/>**midi_devs;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_mididevs;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/oss/include/midi_core.h"/>
  </compounddef>
</doxygen>
