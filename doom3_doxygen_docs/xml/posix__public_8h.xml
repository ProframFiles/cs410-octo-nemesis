<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="posix__public_8h" kind="file">
    <compoundname>posix_public.h</compoundname>
    <includes local="no">signal.h</includes>
    <includedby refid="dedicated_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/sys/linux/dedicated.cpp</includedby>
    <includedby refid="input_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/sys/linux/input.cpp</includedby>
    <includedby refid="sys_2linux_2main_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/sys/linux/main.cpp</includedby>
    <includedby refid="sys_2linux_2_sound_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/sys/linux/sound.cpp</includedby>
    <includedby refid="sound__alsa_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/sys/linux/sound_alsa.cpp</includedby>
    <includedby refid="macosx__sys_8h" local="yes">E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_sys.h</includedby>
    <includedby refid="posix__input_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/sys/posix/posix_input.cpp</includedby>
    <includedby refid="posix__main_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/sys/posix/posix_main.cpp</includedby>
    <includedby refid="posix__signal_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/sys/posix/posix_signal.cpp</includedby>
    <includedby refid="posix__threads_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/sys/posix/posix_threads.cpp</includedby>
    <incdepgraph>
      <node id="2464">
        <label>E:/sources/3rd_party/DOOM/neo/sys/posix/posix_public.h</label>
        <link refid="posix_public.h"/>
        <childnode refid="2465" relation="include">
        </childnode>
      </node>
      <node id="2465">
        <label>signal.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="posix__public_8h_1a877866ca9a3ffcfef4b194799a8963b6" prot="public" static="no" mutable="no">
        <type><ref refid="structxthread_info" kindref="compound">xthreadInfo</ref></type>
        <definition>xthreadInfo asyncThread</definition>
        <argsstring></argsstring>
        <name>asyncThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_public.h" line="51" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_threads.cpp" bodystart="247" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="posix__public_8h_1ac97e233edce15e955a5198d1d0cb3cdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Posix_QueEvent</definition>
        <argsstring>(sysEventType_t type, int value, int value2, int ptrLength, void *ptr)</argsstring>
        <name>Posix_QueEvent</name>
        <param>
          <type>sysEventType_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ptrLength</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_public.h" line="34" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_main.cpp" bodystart="275" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="posix__public_8h_1ac567f815be8cb9d6e3f3dd034baef4e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* Posix_Cwd</definition>
        <argsstring>(void)</argsstring>
        <name>Posix_Cwd</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_public.h" line="35" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_main.cpp" bodystart="337" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="posix__public_8h_1aa4d31204d7369964c2b5a5612ff04350" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Posix_EarlyInit</definition>
        <argsstring>()</argsstring>
        <name>Posix_EarlyInit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_public.h" line="38" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_main.cpp" bodystart="538" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="posix__public_8h_1a21e42835f5f1414a7e3f69ad454e0a2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Posix_LateInit</definition>
        <argsstring>()</argsstring>
        <name>Posix_LateInit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_public.h" line="40" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_main.cpp" bodystart="552" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="posix__public_8h_1a816e202a160003f3b71e00cf39e427e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Posix_InitPThreads</definition>
        <argsstring>()</argsstring>
        <name>Posix_InitPThreads</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_public.h" line="42" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_threads.cpp" bodystart="268" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="posix__public_8h_1a20c2866536c3b35675ab47ae95dd5636" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Posix_InitSigs</definition>
        <argsstring>()</argsstring>
        <name>Posix_InitSigs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_public.h" line="43" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_signal.cpp" bodystart="128" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="posix__public_8h_1abcf2f5bd36c824ed7024fba598d3360a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Posix_ClearSigs</definition>
        <argsstring>()</argsstring>
        <name>Posix_ClearSigs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_public.h" line="44" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_signal.cpp" bodystart="72" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="posix__public_8h_1aec454959e7af7f843c7d85626c321c7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Posix_Exit</definition>
        <argsstring>(int ret)</argsstring>
        <name>Posix_Exit</name>
        <param>
          <type>int</type>
          <declname>ret</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_public.h" line="46" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_main.cpp" bodystart="80" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="posix__public_8h_1a5963e7e86a6e8f7506f40c44c3883a3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Posix_SetExit</definition>
        <argsstring>(int ret)</argsstring>
        <name>Posix_SetExit</name>
        <param>
          <type>int</type>
          <declname>ret</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_public.h" line="47" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_main.cpp" bodystart="109" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="posix__public_8h_1ad85cda28b2cfd8fffccb7d0b0716ffd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Posix_SetExitSpawn</definition>
        <argsstring>(const char *exeName)</argsstring>
        <name>Posix_SetExitSpawn</name>
        <param>
          <type>const char *</type>
          <declname>exeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_public.h" line="48" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_main.cpp" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="posix__public_8h_1a45536a7659fbeffe9ef93af7bcc00ede" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Posix_StartAsyncThread</definition>
        <argsstring>(void)</argsstring>
        <name>Posix_StartAsyncThread</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_public.h" line="50" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_threads.cpp" bodystart="254" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="posix__public_8h_1af44dd1829c93462213390bfd4f3dec92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Posix_AddKeyboardPollEvent</definition>
        <argsstring>(int key, bool state)</argsstring>
        <name>Posix_AddKeyboardPollEvent</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_public.h" line="53" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_input.cpp" bodystart="55" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="posix__public_8h_1ac3eb6f82455bbc39135072810a58fb51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Posix_AddMousePollEvent</definition>
        <argsstring>(int action, int value)</argsstring>
        <name>Posix_AddMousePollEvent</name>
        <param>
          <type>int</type>
          <declname>action</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_public.h" line="54" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_input.cpp" bodystart="72" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="posix__public_8h_1a873813f331e0fec48dcc48f36342ec06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Posix_PollInput</definition>
        <argsstring>(void)</argsstring>
        <name>Posix_PollInput</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_public.h" line="56" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/input.cpp" bodystart="337" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="posix__public_8h_1a7414c294578dbd52d3ebfd9d4ddf6173" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Posix_InitConsoleInput</definition>
        <argsstring>(void)</argsstring>
        <name>Posix_InitConsoleInput</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_public.h" line="57" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_main.cpp" bodystart="568" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="posix__public_8h_1acf85b27992291a2a798778017e465093" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Posix_Shutdown</definition>
        <argsstring>(void)</argsstring>
        <name>Posix_Shutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_public.h" line="58" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_main.cpp" bodystart="376" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="posix__public_8h_1a05edca7f8f0a605ccb811c95a5142f22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sys_FPE_handler</definition>
        <argsstring>(int signum, siginfo_t *info, void *context)</argsstring>
        <name>Sys_FPE_handler</name>
        <param>
          <type>int</type>
          <declname>signum</declname>
        </param>
        <param>
          <type>siginfo_t *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_public.h" line="60" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/main.cpp" bodystart="235" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="posix__public_8h_1aff29451ab17c89a9f197b8bb35d424f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sys_DoStartProcess</definition>
        <argsstring>(const char *exeName, bool dofork=true)</argsstring>
        <name>Sys_DoStartProcess</name>
        <param>
          <type>const char *</type>
          <declname>exeName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>dofork</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_public.h" line="61" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/main.cpp" bodystart="368" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="posix__public_8h_1a120674717b4491ce71562513f45dc5bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sys_AsyncThread</definition>
        <argsstring>(void)</argsstring>
        <name>Sys_AsyncThread</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_public.h" line="63" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/main.cpp" bodystart="61" bodyend="112"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__SYS_POSIX__</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__SYS_POSIX__</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Posix_QueEvent(<sp/>sysEventType_t<sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ptrLength,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr<sp/>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>Posix_Cwd(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>called<sp/>first<sp/>thing.<sp/>does<sp/>InitSigs<sp/>and<sp/>various<sp/>things</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Posix_EarlyInit(<sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>called<sp/>after<sp/>common<sp/>has<sp/>been<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Posix_LateInit(<sp/>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Posix_InitPThreads(<sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Posix_InitSigs(<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Posix_ClearSigs(<sp/>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Posix_Exit(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Posix_SetExit(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret);<sp/></highlight><highlight class="comment">//<sp/>override<sp/>the<sp/>exit<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Posix_SetExitSpawn(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*exeName<sp/>);<sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>process<sp/>to<sp/>be<sp/>spawned<sp/>when<sp/>we<sp/>quit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Posix_StartAsyncThread(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structxthread_info" kindref="compound">xthreadInfo</ref><sp/>asyncThread;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Posix_AddKeyboardPollEvent(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>state<sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Posix_AddMousePollEvent(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>action,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value<sp/>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Posix_PollInput(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Posix_InitConsoleInput(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Posix_Shutdown(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sys_FPE_handler(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>signum,<sp/>siginfo_t<sp/>*info,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sys_DoStartProcess(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*exeName,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dofork<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);<sp/></highlight><highlight class="comment">//<sp/>if<sp/>not<sp/>forking,<sp/>current<sp/>process<sp/>gets<sp/>replaced</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sys_AsyncThread(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/sys/posix/posix_public.h"/>
  </compounddef>
</doxygen>
