<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="progress_8c" kind="file">
    <compoundname>progress.c</compoundname>
    <includes refid="lib_2setup_8h" local="yes">setup.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">time.h</includes>
    <includes refid="curl_8h" local="no">curl/curl.h</includes>
    <includes refid="urldata_8h" local="yes">urldata.h</includes>
    <includes refid="sendf_8h" local="yes">sendf.h</includes>
    <includes refid="progress_8h" local="yes">progress.h</includes>
    <includes refid="mprintf_8h" local="no">curl/mprintf.h</includes>
    <incdepgraph>
      <node id="443">
        <label>E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c</label>
        <link refid="progress.c"/>
        <childnode refid="444" relation="include">
        </childnode>
        <childnode refid="445" relation="include">
        </childnode>
      </node>
      <node id="444">
        <label>string.h</label>
      </node>
      <node id="445">
        <label>time.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="progress_8c_1ad0c1862ea86ace30c84408d669a3fc7e" prot="public" static="no">
        <name>_MPRINTF_REPLACE</name>
        <initializer>/* use our functions only */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" line="42" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="progress_8c_1a4c523cda4c3fdef82056a14af468a461" prot="public" static="no">
        <name>ONE_KILOBYTE</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" line="58" column="9"/>
      </memberdef>
      <memberdef kind="define" id="progress_8c_1aae4d4761b231a4321c08bd4bd18937e0" prot="public" static="no">
        <name>ONE_MEGABYTE</name>
        <initializer>(1024*1024)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" line="59" column="9"/>
      </memberdef>
      <memberdef kind="define" id="progress_8c_1a392b0fd73abc05b7803d7db8975d1ffa" prot="public" static="no">
        <name>ONE_GIGABYTE</name>
        <initializer>(1024*1024*1024)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" line="60" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="progress_8c_1aedcc622394758d766745f4866b3e0669" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void time2str</definition>
        <argsstring>(char *r, int t)</argsstring>
        <name>time2str</name>
        <param>
          <type>char *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" line="46" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" bodystart="46" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="progress_8c_1a1a9c970a9df00b5c5e323daea7c07e57" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char* max5data</definition>
        <argsstring>(curl_off_t bytes, char *max5)</argsstring>
        <name>max5data</name>
        <param>
          <type>curl_off_t</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>max5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" line="56" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" bodystart="56" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="progress_8c_1af50694752cbdb7de105e10b51a0134f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Curl_pgrsDone</definition>
        <argsstring>(struct connectdata *conn)</argsstring>
        <name>Curl_pgrsDone</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" line="105" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" bodystart="105" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="progress_8c_1a7281aef15d14d3e51c8c25104e0d803a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Curl_pgrsResetTimes</definition>
        <argsstring>(struct SessionHandle *data)</argsstring>
        <name>Curl_pgrsResetTimes</name>
        <param>
          <type>struct <ref refid="struct_session_handle" kindref="compound">SessionHandle</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" line="118" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" bodystart="118" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="progress_8c_1a5933a4513738947b35c4988a8a8fb318" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Curl_pgrsTime</definition>
        <argsstring>(struct SessionHandle *data, timerid timer)</argsstring>
        <name>Curl_pgrsTime</name>
        <param>
          <type>struct <ref refid="struct_session_handle" kindref="compound">SessionHandle</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>timerid</type>
          <declname>timer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" line="126" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" bodystart="126" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="progress_8c_1a648ee4b78903cda01aee89b89a294372" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Curl_pgrsStartNow</definition>
        <argsstring>(struct SessionHandle *data)</argsstring>
        <name>Curl_pgrsStartNow</name>
        <param>
          <type>struct <ref refid="struct_session_handle" kindref="compound">SessionHandle</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" line="164" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" bodystart="164" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="progress_8c_1aa6dc89c9327cedc2c55a7d65d8252fa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Curl_pgrsSetDownloadCounter</definition>
        <argsstring>(struct SessionHandle *data, curl_off_t size)</argsstring>
        <name>Curl_pgrsSetDownloadCounter</name>
        <param>
          <type>struct <ref refid="struct_session_handle" kindref="compound">SessionHandle</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>curl_off_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" line="170" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="progress_8c_1a98e74f77ff30af94348f5fbdfd3ea8fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Curl_pgrsSetUploadCounter</definition>
        <argsstring>(struct SessionHandle *data, curl_off_t size)</argsstring>
        <name>Curl_pgrsSetUploadCounter</name>
        <param>
          <type>struct <ref refid="struct_session_handle" kindref="compound">SessionHandle</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>curl_off_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" line="175" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" bodystart="175" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="progress_8c_1a59ab131b477046f9bebbf8525837e034" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Curl_pgrsSetDownloadSize</definition>
        <argsstring>(struct SessionHandle *data, curl_off_t size)</argsstring>
        <name>Curl_pgrsSetDownloadSize</name>
        <param>
          <type>struct <ref refid="struct_session_handle" kindref="compound">SessionHandle</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>curl_off_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" line="180" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" bodystart="180" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="progress_8c_1aa1c91fa28dc8dc6e2f48da6a9bbed37d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Curl_pgrsSetUploadSize</definition>
        <argsstring>(struct SessionHandle *data, curl_off_t size)</argsstring>
        <name>Curl_pgrsSetUploadSize</name>
        <param>
          <type>struct <ref refid="struct_session_handle" kindref="compound">SessionHandle</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>curl_off_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" line="189" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" bodystart="189" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="progress_8c_1a40686d443707afea0c0e47cee805df01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Curl_pgrsUpdate</definition>
        <argsstring>(struct connectdata *conn)</argsstring>
        <name>Curl_pgrsUpdate</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" line="206" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c" bodystart="206" bodyend="406"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_<sp/><sp/><sp/>_<sp/>____<sp/><sp/>_<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>Project<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>___|<sp/>|<sp/>|<sp/>|<sp/><sp/>_<sp/>\|<sp/>|<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>__|<sp/>|<sp/>|<sp/>|<sp/>|_)<sp/>|<sp/>|<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(__|<sp/>|_|<sp/>|<sp/><sp/>_<sp/>&lt;|<sp/>|___<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\___|\___/|_|<sp/>\_\_____|</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1998<sp/>-<sp/>2004,<sp/>Daniel<sp/>Stenberg,<sp/>&lt;daniel@haxx.se&gt;,<sp/>et<sp/>al.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>is<sp/>licensed<sp/>as<sp/>described<sp/>in<sp/>the<sp/>file<sp/>COPYING,<sp/>which</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>you<sp/>should<sp/>have<sp/>received<sp/>as<sp/>part<sp/>of<sp/>this<sp/>distribution.<sp/>The<sp/>terms</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>are<sp/>also<sp/>available<sp/>at<sp/>http://curl.haxx.se/docs/copyright.html.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>opt<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>COPYING<sp/>file.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>basis,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>progress.c,v<sp/>1.57<sp/>2004/03/11<sp/>21:48:15<sp/>bagder<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;setup.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>20000318<sp/>mgs</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>later<sp/>we<sp/>use<sp/>_scrsize<sp/>to<sp/>determine<sp/>the<sp/>screen<sp/>width,<sp/>this<sp/>emx<sp/>library</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>function<sp/>needs<sp/>stdlib.h<sp/>to<sp/>be<sp/>included<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__EMX__)</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;curl/curl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;urldata.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sendf.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;progress.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_MPRINTF_REPLACE<sp/></highlight><highlight class="comment">/*<sp/>use<sp/>our<sp/>functions<sp/>only<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;curl/mprintf.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>time2str(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*r,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>(t/3600);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>(t-(h*3600))/60;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>(t-(h*3600)-(m*60));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>sprintf(r,</highlight><highlight class="stringliteral">&quot;%2d:%02d:%02d&quot;</highlight><highlight class="normal">,h,m,s);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>point<sp/>of<sp/>this<sp/>function<sp/>would<sp/>be<sp/>to<sp/>return<sp/>a<sp/>string<sp/>of<sp/>the<sp/>input<sp/>data,</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/>but<sp/>never<sp/>longer<sp/>than<sp/>5<sp/>columns.<sp/>Add<sp/>suffix<sp/>k,<sp/>M,<sp/>G<sp/>when<sp/>suitable...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*max5data(curl_off_t<sp/>bytes,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*max5)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ONE_KILOBYTE<sp/>1024</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ONE_MEGABYTE<sp/>(1024*1024)</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ONE_GIGABYTE<sp/>(1024*1024*1024)</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bytes<sp/>&lt;<sp/>100000)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(max5,<sp/></highlight><highlight class="stringliteral">&quot;%5&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T,<sp/>bytes);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bytes<sp/>&lt;<sp/>(10000*ONE_KILOBYTE))<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(max5,<sp/></highlight><highlight class="stringliteral">&quot;%4&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T<sp/></highlight><highlight class="stringliteral">&quot;k&quot;</highlight><highlight class="normal">,<sp/>(curl_off_t)(bytes/ONE_KILOBYTE));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bytes<sp/>&lt;<sp/>(100*ONE_MEGABYTE))<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&apos;XX.XM&apos;<sp/>is<sp/>good<sp/>as<sp/>long<sp/>as<sp/>we&apos;re<sp/>less<sp/>than<sp/>100<sp/>megs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(max5,<sp/></highlight><highlight class="stringliteral">&quot;%2d.%0dM&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(bytes/ONE_MEGABYTE),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(bytes%ONE_MEGABYTE)/(ONE_MEGABYTE/10)<sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SIZEOF_CURL_OFF_T<sp/>&gt;<sp/>4</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bytes<sp/>&lt;<sp/>((curl_off_t)10000*ONE_MEGABYTE))<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(max5,<sp/></highlight><highlight class="stringliteral">&quot;%4&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T<sp/></highlight><highlight class="stringliteral">&quot;M&quot;</highlight><highlight class="normal">,<sp/>(curl_off_t)(bytes/ONE_MEGABYTE));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>10000<sp/>MB<sp/>-<sp/>8589934587<sp/>GB<sp/>!!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(max5,<sp/></highlight><highlight class="stringliteral">&quot;%2d.%0dG&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(bytes/ONE_GIGABYTE),</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(bytes%ONE_GIGABYTE)/(ONE_GIGABYTE/10)<sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(max5,<sp/></highlight><highlight class="stringliteral">&quot;%4&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T<sp/></highlight><highlight class="stringliteral">&quot;M&quot;</highlight><highlight class="normal">,<sp/>(curl_off_t)(bytes/ONE_MEGABYTE));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max5;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="92"><highlight class="comment"></highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/>New<sp/>proposed<sp/>interface,<sp/>9th<sp/>of<sp/>February<sp/>2000:</highlight></codeline>
<codeline lineno="94"><highlight class="comment"></highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/>pgrsStartNow()<sp/>-<sp/>sets<sp/>start<sp/>time</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/>pgrsSetDownloadSize(x)<sp/>-<sp/>known<sp/>expected<sp/>download<sp/>size</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/>pgrsSetUploadSize(x)<sp/>-<sp/>known<sp/>expected<sp/>upload<sp/>size</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/>pgrsSetDownloadCounter()<sp/>-<sp/>amount<sp/>of<sp/>data<sp/>currently<sp/>downloaded</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/>pgrsSetUploadCounter()<sp/>-<sp/>amount<sp/>of<sp/>data<sp/>currently<sp/>uploaded</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/>pgrsUpdate()<sp/>-<sp/>show<sp/>progress</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/>pgrsDone()<sp/>-<sp/>transfer<sp/>complete</highlight></codeline>
<codeline lineno="102"><highlight class="comment"></highlight></codeline>
<codeline lineno="103"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Curl_pgrsDone(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data<sp/>=<sp/>conn-&gt;data;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(data-&gt;progress.flags<sp/>&amp;<sp/>PGRS_HIDE))<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;progress.lastshow=0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>Curl_pgrsUpdate(conn);<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>final<sp/>(forced)<sp/>update<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!data-&gt;progress.callback)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>only<sp/>output<sp/>if<sp/>we<sp/>don&apos;t<sp/>use<sp/>progress<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(data-&gt;set.err,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>reset<sp/>all<sp/>times<sp/>except<sp/>redirect<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Curl_pgrsResetTimes(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>data-&gt;progress.t_nslookup<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>data-&gt;progress.t_connect<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>data-&gt;progress.t_pretransfer<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>data-&gt;progress.t_starttransfer<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Curl_pgrsTime(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data,<sp/>timerid<sp/>timer)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(timer)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TIMER_NONE:</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>mistake<sp/>filter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TIMER_STARTSINGLE:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>set<sp/>at<sp/>the<sp/>start<sp/>of<sp/>a<sp/>single<sp/>fetch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;progress.t_startsingle<sp/>=<sp/>Curl_tvnow();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TIMER_NAMELOOKUP:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;progress.t_nslookup<sp/>=</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(double)Curl_tvdiff(Curl_tvnow(),<sp/>data-&gt;progress.t_startsingle)/1000.0;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TIMER_CONNECT:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;progress.t_connect<sp/>=</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(double)Curl_tvdiff(Curl_tvnow(),<sp/>data-&gt;progress.t_startsingle)/1000.0;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TIMER_PRETRANSFER:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;progress.t_pretransfer<sp/>=</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(double)Curl_tvdiff(Curl_tvnow(),<sp/>data-&gt;progress.t_startsingle)/1000.0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TIMER_STARTTRANSFER:</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;progress.t_starttransfer<sp/>=</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(double)Curl_tvdiff(Curl_tvnow(),<sp/>data-&gt;progress.t_startsingle)/1000.0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TIMER_POSTRANSFER:</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>the<sp/>normal<sp/>end-of-transfer<sp/>thing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TIMER_REDIRECT:</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;progress.t_redirect<sp/>=</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(double)Curl_tvdiff(Curl_tvnow(),<sp/>data-&gt;progress.start)/1000.0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Curl_pgrsStartNow(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data)</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>data-&gt;progress.speeder_c<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>the<sp/>progress<sp/>meter<sp/>display<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>data-&gt;progress.start<sp/>=<sp/>Curl_tvnow();</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Curl_pgrsSetDownloadCounter(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data,<sp/>curl_off_t<sp/>size)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>data-&gt;progress.downloaded<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Curl_pgrsSetUploadCounter(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data,<sp/>curl_off_t<sp/>size)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>data-&gt;progress.uploaded<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Curl_pgrsSetDownloadSize(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data,<sp/>curl_off_t<sp/>size)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>data-&gt;progress.size_dl<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;progress.flags<sp/>|=<sp/>PGRS_DL_SIZE_KNOWN;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;progress.flags<sp/>&amp;=<sp/>~PGRS_DL_SIZE_KNOWN;</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Curl_pgrsSetUploadSize(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data,<sp/>curl_off_t<sp/>size)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>data-&gt;progress.size_ul<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;progress.flags<sp/>|=<sp/>PGRS_UL_SIZE_KNOWN;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;progress.flags<sp/>&amp;=<sp/>~PGRS_UL_SIZE_KNOWN;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>EXAMPLE<sp/>OUTPUT<sp/>to<sp/>follow:</highlight></codeline>
<codeline lineno="199"><highlight class="comment"></highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/>%<sp/>Total<sp/><sp/><sp/><sp/>%<sp/>Received<sp/>%<sp/>Xferd<sp/><sp/>Average<sp/>Speed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Time<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Curr.</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dload<sp/><sp/>Upload<sp/>Total<sp/><sp/><sp/><sp/>Current<sp/><sp/>Left<sp/><sp/><sp/><sp/>Speed</highlight></codeline>
<codeline lineno="202"><highlight class="comment">100<sp/>12345<sp/><sp/>100<sp/>12345<sp/><sp/>100<sp/>12345<sp/><sp/>12345<sp/><sp/>12345<sp/>12:12:12<sp/>12:12:12<sp/>12:12:12<sp/>12345</highlight></codeline>
<codeline lineno="203"><highlight class="comment"></highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Curl_pgrsUpdate(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn)</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtimeval" kindref="compound">timeval</ref><sp/>now;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>max5[6][10];</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dlpercen=0;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ulpercen=0;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total_percen=0;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>curl_off_t<sp/>total_transfer;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>curl_off_t<sp/>total_expected_transfer;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timespent;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data<sp/>=<sp/>conn-&gt;data;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nowindex<sp/>=<sp/>data-&gt;progress.speeder_c%<sp/>CURR_TIME;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>checkindex;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>countindex;<sp/></highlight><highlight class="comment">/*<sp/>amount<sp/>of<sp/>seconds<sp/>stored<sp/>in<sp/>the<sp/>speeder<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>time_left[10];</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>TIME_Total[10];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>time_current[10];</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ulestimate=0;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dlestimate=0;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total_estimate;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;progress.flags<sp/>&amp;<sp/>PGRS_HIDE)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">/*<sp/>We<sp/>do<sp/>enter<sp/>this<sp/>function<sp/>even<sp/>if<sp/>we<sp/>don&apos;t<sp/>wanna<sp/>see<sp/>anything,<sp/>since</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>is<sp/>were<sp/>lots<sp/>of<sp/>the<sp/>calculations<sp/>are<sp/>being<sp/>made<sp/>that<sp/>will<sp/>be<sp/>used</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>even<sp/>when<sp/>not<sp/>displayed!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(data-&gt;progress.flags<sp/>&amp;<sp/>PGRS_HEADERS_OUT))<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data-&gt;progress.callback)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;resume_from)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(data-&gt;set.err,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;**<sp/>Resuming<sp/>transfer<sp/>from<sp/>byte<sp/>position<sp/>%&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;resume_from);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(data-&gt;set.err,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%%<sp/>Total<sp/><sp/><sp/><sp/>%%<sp/>Received<sp/>%%<sp/>Xferd<sp/><sp/>Average<sp/>Speed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Time<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Curr.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dload<sp/><sp/>Upload<sp/>Total<sp/><sp/><sp/><sp/>Current<sp/><sp/>Left<sp/><sp/><sp/><sp/>Speed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;progress.flags<sp/>|=<sp/>PGRS_HEADERS_OUT;<sp/></highlight><highlight class="comment">/*<sp/>headers<sp/>are<sp/>shown<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>now<sp/>=<sp/>Curl_tvnow();<sp/></highlight><highlight class="comment">/*<sp/>what<sp/>time<sp/>is<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>exact<sp/>time<sp/>spent<sp/>so<sp/>far<sp/>(from<sp/>the<sp/>start)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>timespent<sp/>=<sp/>(double)Curl_tvdiff<sp/>(now,<sp/>data-&gt;progress.start)/1000;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>data-&gt;progress.timespent<sp/>=<sp/>timespent;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>average<sp/>download<sp/>speed<sp/>this<sp/>far<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>data-&gt;progress.dlspeed<sp/>=</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>(curl_off_t)(<sp/>data-&gt;progress.downloaded/(timespent&gt;0.01?timespent:1)<sp/>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>average<sp/>upload<sp/>speed<sp/>this<sp/>far<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>data-&gt;progress.ulspeed<sp/>=</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>(curl_off_t)(<sp/>data-&gt;progress.uploaded/(timespent&gt;0.01?timespent:1)<sp/>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;progress.lastshow<sp/>==<sp/>Curl_tvlong(now))</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>never<sp/>update<sp/>this<sp/>more<sp/>than<sp/>once<sp/>a<sp/>second<sp/>if<sp/>the<sp/>end<sp/>isn&apos;t<sp/></highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reached<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>data-&gt;progress.lastshow<sp/>=<sp/>now.tv_sec;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Let&apos;s<sp/>do<sp/>the<sp/>&quot;current<sp/>speed&quot;<sp/>thing,<sp/>which<sp/>should<sp/>use<sp/>the<sp/>fastest</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>dl/ul<sp/>speeds.<sp/>Store<sp/>the<sp/>fasted<sp/>speed<sp/>at<sp/>entry<sp/>&apos;nowindex&apos;.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>data-&gt;progress.speeder[<sp/>nowindex<sp/>]<sp/>=</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;progress.downloaded&gt;data-&gt;progress.uploaded?</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;progress.downloaded:data-&gt;progress.uploaded;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>remember<sp/>the<sp/>exact<sp/>time<sp/>for<sp/>this<sp/>moment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>data-&gt;progress.speeder_time<sp/>[<sp/>nowindex<sp/>]<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>our<sp/>speeder_c<sp/>counter,<sp/>which<sp/>is<sp/>increased<sp/>every<sp/>time<sp/>we<sp/>get</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>here<sp/>and<sp/>we<sp/>expect<sp/>it<sp/>to<sp/>never<sp/>wrap<sp/>as<sp/>2^32<sp/>is<sp/>a<sp/>lot<sp/>of<sp/>seconds!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>data-&gt;progress.speeder_c++;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>figure<sp/>out<sp/>how<sp/>many<sp/>index<sp/>entries<sp/>of<sp/>data<sp/>we<sp/>have<sp/>stored<sp/>in<sp/>our<sp/>speeder</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>array.<sp/>With<sp/>N_ENTRIES<sp/>filled<sp/>in,<sp/>we<sp/>have<sp/>about<sp/>N_ENTRIES-1<sp/>seconds<sp/>of</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>transfer.<sp/>Imagine,<sp/>after<sp/>one<sp/>second<sp/>we<sp/>have<sp/>filled<sp/>in<sp/>two<sp/>entries,</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>after<sp/>two<sp/>seconds<sp/>we&apos;ve<sp/>filled<sp/>in<sp/>three<sp/>entries<sp/>etc.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>countindex<sp/>=<sp/>((data-&gt;progress.speeder_c&gt;=CURR_TIME)?</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CURR_TIME:data-&gt;progress.speeder_c)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>of<sp/>all,<sp/>we<sp/>don&apos;t<sp/>do<sp/>this<sp/>if<sp/>there&apos;s<sp/>no<sp/>counted<sp/>seconds<sp/>yet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(countindex)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>span_ms;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>index<sp/>position<sp/>to<sp/>compare<sp/>with<sp/>the<sp/>&apos;nowindex&apos;<sp/>position.</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Get<sp/>the<sp/>oldest<sp/>entry<sp/>possible.<sp/>While<sp/>we<sp/>have<sp/>less<sp/>than<sp/>CURR_TIME</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entries,<sp/>the<sp/>first<sp/>entry<sp/>will<sp/>remain<sp/>the<sp/>oldest.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>checkindex<sp/>=<sp/>(data-&gt;progress.speeder_c&gt;=CURR_TIME)?</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;progress.speeder_c%CURR_TIME:0;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Figure<sp/>out<sp/>the<sp/>exact<sp/>time<sp/>for<sp/>the<sp/>time<sp/>span<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>span_ms<sp/>=<sp/>Curl_tvdiff(now,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;progress.speeder_time[checkindex]);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>span_ms)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>span_ms=1;<sp/></highlight><highlight class="comment">/*<sp/>at<sp/>least<sp/>one<sp/>millisecond<sp/>MUST<sp/>have<sp/>passed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>the<sp/>average<sp/>speed<sp/>the<sp/>last<sp/>&apos;countindex&apos;<sp/>seconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;progress.current_speed<sp/>=</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(curl_off_t)((data-&gt;progress.speeder[nowindex]-</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;progress.speeder[checkindex])/((double)span_ms/1000)<sp/>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>first<sp/>second<sp/>we<sp/>use<sp/>the<sp/>main<sp/>average<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;progress.current_speed<sp/>=</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(data-&gt;progress.ulspeed&gt;data-&gt;progress.dlspeed)?</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;progress.ulspeed:data-&gt;progress.dlspeed;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;progress.flags<sp/>&amp;<sp/>PGRS_HIDE)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.fprogress)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>There&apos;s<sp/>a<sp/>callback<sp/>set,<sp/>so<sp/>we<sp/>call<sp/>that<sp/>instead<sp/>of<sp/>writing</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anything<sp/>ourselves.<sp/>This<sp/>really<sp/>is<sp/>the<sp/>way<sp/>to<sp/>go.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>result=<sp/>data-&gt;set.fprogress(data-&gt;set.progress_client,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)data-&gt;progress.size_dl,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)data-&gt;progress.downloaded,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)data-&gt;progress.size_ul,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)data-&gt;progress.uploaded);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Callback<sp/>aborted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Figure<sp/>out<sp/>the<sp/>estimated<sp/>time<sp/>of<sp/>arrival<sp/>for<sp/>the<sp/>upload<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((data-&gt;progress.flags<sp/>&amp;<sp/>PGRS_UL_SIZE_KNOWN)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(data-&gt;progress.ulspeed<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>ulestimate<sp/>=<sp/>(double)data-&gt;progress.size_ul<sp/>/<sp/>data-&gt;progress.ulspeed;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>ulpercen<sp/>=<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)data-&gt;progress.uploaded<sp/>/<sp/>data-&gt;progress.size_ul)*100;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>...<sp/>and<sp/>the<sp/>download<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((data-&gt;progress.flags<sp/>&amp;<sp/>PGRS_DL_SIZE_KNOWN)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(data-&gt;progress.dlspeed<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>dlestimate<sp/>=<sp/>(double)data-&gt;progress.size_dl<sp/>/<sp/>data-&gt;progress.dlspeed;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>dlpercen<sp/>=<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)data-&gt;progress.downloaded<sp/>/<sp/>data-&gt;progress.size_dl)*100;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>figure<sp/>out<sp/>which<sp/>of<sp/>them<sp/>that<sp/>is<sp/>slower<sp/>and<sp/>use<sp/>for<sp/>the<sp/>for</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>total<sp/>estimate!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>total_estimate<sp/>=<sp/>ulestimate&gt;dlestimate?ulestimate:dlestimate;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>have<sp/>a<sp/>total<sp/>estimate,<sp/>we<sp/>can<sp/>display<sp/>that<sp/>and<sp/>the<sp/>expected</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>time<sp/>left<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(total_estimate<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>time2str(time_left,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(total_estimate<sp/>-<sp/>data-&gt;progress.timespent));<sp/></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>time2str(TIME_Total,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)total_estimate);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>otherwise<sp/>we<sp/>blank<sp/>those<sp/>times<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(time_left,<sp/><sp/></highlight><highlight class="stringliteral">&quot;--:--:--&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(TIME_Total,<sp/></highlight><highlight class="stringliteral">&quot;--:--:--&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>time<sp/>spent<sp/>so<sp/>far<sp/>is<sp/>always<sp/>known<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>time2str(time_current,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)data-&gt;progress.timespent);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>total<sp/>amount<sp/>of<sp/>data<sp/>expected<sp/>to<sp/>get<sp/>transfered<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>total_expected_transfer<sp/>=<sp/></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>(data-&gt;progress.flags<sp/>&amp;<sp/>PGRS_UL_SIZE_KNOWN?</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>data-&gt;progress.size_ul:data-&gt;progress.uploaded)+</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>(data-&gt;progress.flags<sp/>&amp;<sp/>PGRS_DL_SIZE_KNOWN?</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>data-&gt;progress.size_dl:data-&gt;progress.downloaded);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>have<sp/>transfered<sp/>this<sp/>much<sp/>so<sp/>far<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>total_transfer<sp/>=<sp/>data-&gt;progress.downloaded<sp/>+<sp/>data-&gt;progress.uploaded;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>percentage<sp/>of<sp/>data<sp/>transfered<sp/>so<sp/>far<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(total_expected_transfer<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>total_percen=((double)total_transfer/total_expected_transfer)*100;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>fprintf(data-&gt;set.err,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\r%3d<sp/>%s<sp/><sp/>%3d<sp/>%s<sp/><sp/>%3d<sp/>%s<sp/><sp/>%s<sp/><sp/>%s<sp/>%s<sp/>%s<sp/>%s<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)total_percen,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>total<sp/>%<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max5data(total_expected_transfer,<sp/>max5[2]),<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>total<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)dlpercen,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>rcvd<sp/>%<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max5data(data-&gt;progress.downloaded,<sp/>max5[0]),<sp/></highlight><highlight class="comment">/*<sp/>rcvd<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ulpercen,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xfer<sp/>%<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max5data(data-&gt;progress.uploaded,<sp/>max5[1]),<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xfer<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max5data(data-&gt;progress.dlspeed,<sp/>max5[3]),<sp/></highlight><highlight class="comment">/*<sp/>avrg<sp/>dl<sp/>speed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max5data(data-&gt;progress.ulspeed,<sp/>max5[4]),<sp/></highlight><highlight class="comment">/*<sp/>avrg<sp/>ul<sp/>speed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TIME_Total,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>total<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_current,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>current<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_left,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>time<sp/>left<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max5data(data-&gt;progress.current_speed,<sp/>max5[5])<sp/></highlight><highlight class="comment">/*<sp/>current<sp/>speed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>flush<sp/>the<sp/>output<sp/>stream<sp/>to<sp/>make<sp/>it<sp/>appear<sp/>as<sp/>soon<sp/>as<sp/>possible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>fflush(data-&gt;set.err);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/progress.c"/>
  </compounddef>
</doxygen>
