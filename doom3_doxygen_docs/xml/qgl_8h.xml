<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="qgl_8h" kind="file">
    <compoundname>qgl.h</compoundname>
    <includes local="no">gl.h</includes>
    <includes refid="glext_8h" local="yes">glext.h</includes>
    <incdepgraph>
      <node id="1904">
        <label>gl.h</label>
      </node>
      <node id="1903">
        <label>E:/sources/3rd_party/DOOM/neo/renderer/qgl.h</label>
        <link refid="qgl.h"/>
        <childnode refid="1904" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="qgl_8h_1a428a91acf2c2439dc1a257708ee1f805" prot="public" static="no">
        <name>APIENTRY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="61" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="qgl_8h_1a9aa60e1ead64be77ad551e745cbfd4d3" prot="public" static="no">
        <name>WINAPI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="64" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="qgl_8h_1a9e3627c00832a236b308e1ab7cf07d85" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* GLExtension_t)(void)</definition>
        <argsstring>)(void)</argsstring>
        <name>GLExtension_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="75" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="qgl_8h_1ab317511e255d468a71f7a53cf57c561b" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglMultiTexCoord2fARB)(GLenum texture, GLfloat s, GLfloat t)</definition>
        <argsstring>)(GLenum texture, GLfloat s, GLfloat t)</argsstring>
        <name>qglMultiTexCoord2fARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a7f02e43709df2bdbcb756f6ad1c306fd" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglMultiTexCoord2fvARB)(GLenum texture, GLfloat *st)</definition>
        <argsstring>)(GLenum texture, GLfloat *st)</argsstring>
        <name>qglMultiTexCoord2fvARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a64f91b2af01150667c910724bdc4a693" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglActiveTextureARB)(GLenum texture)</definition>
        <argsstring>)(GLenum texture)</argsstring>
        <name>qglActiveTextureARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a5339ad0f924a7d948e53dfa022aa3ec1" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglClientActiveTextureARB)(GLenum texture)</definition>
        <argsstring>)(GLenum texture)</argsstring>
        <name>qglClientActiveTextureARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1afd11f53af6bb555234be5f0a5ae9c018" prot="public" static="no" mutable="no">
        <type>PFNGLBINDBUFFERARBPROC</type>
        <definition>PFNGLBINDBUFFERARBPROC qglBindBufferARB</definition>
        <argsstring></argsstring>
        <name>qglBindBufferARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="94" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1adc3b1396464e085167a878f32e511b9e" prot="public" static="no" mutable="no">
        <type>PFNGLDELETEBUFFERSARBPROC</type>
        <definition>PFNGLDELETEBUFFERSARBPROC qglDeleteBuffersARB</definition>
        <argsstring></argsstring>
        <name>qglDeleteBuffersARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="95" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ad170b81964b4e6df2b18689d3d416c51" prot="public" static="no" mutable="no">
        <type>PFNGLGENBUFFERSARBPROC</type>
        <definition>PFNGLGENBUFFERSARBPROC qglGenBuffersARB</definition>
        <argsstring></argsstring>
        <name>qglGenBuffersARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="96" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a56d559a11073536443f91cf9bde65e2c" prot="public" static="no" mutable="no">
        <type>PFNGLISBUFFERARBPROC</type>
        <definition>PFNGLISBUFFERARBPROC qglIsBufferARB</definition>
        <argsstring></argsstring>
        <name>qglIsBufferARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="97" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a10d8e0b94fcd8fc3414766431aafe5fc" prot="public" static="no" mutable="no">
        <type>PFNGLBUFFERDATAARBPROC</type>
        <definition>PFNGLBUFFERDATAARBPROC qglBufferDataARB</definition>
        <argsstring></argsstring>
        <name>qglBufferDataARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="98" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ac1f18735888fca0bfb9790cbdf2b9276" prot="public" static="no" mutable="no">
        <type>PFNGLBUFFERSUBDATAARBPROC</type>
        <definition>PFNGLBUFFERSUBDATAARBPROC qglBufferSubDataARB</definition>
        <argsstring></argsstring>
        <name>qglBufferSubDataARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="99" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a3356e9cf65746a6bf85d79d45dee071a" prot="public" static="no" mutable="no">
        <type>PFNGLGETBUFFERSUBDATAARBPROC</type>
        <definition>PFNGLGETBUFFERSUBDATAARBPROC qglGetBufferSubDataARB</definition>
        <argsstring></argsstring>
        <name>qglGetBufferSubDataARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="100" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1afbbe60fe34fb0e2d94305b304c9bb4b3" prot="public" static="no" mutable="no">
        <type>PFNGLMAPBUFFERARBPROC</type>
        <definition>PFNGLMAPBUFFERARBPROC qglMapBufferARB</definition>
        <argsstring></argsstring>
        <name>qglMapBufferARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="101" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ac8ee1a3222e84344b81c98f2c97117fb" prot="public" static="no" mutable="no">
        <type>PFNGLUNMAPBUFFERARBPROC</type>
        <definition>PFNGLUNMAPBUFFERARBPROC qglUnmapBufferARB</definition>
        <argsstring></argsstring>
        <name>qglUnmapBufferARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="102" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a97cafc578902ff805aad9af93c5473e2" prot="public" static="no" mutable="no">
        <type>PFNGLGETBUFFERPARAMETERIVARBPROC</type>
        <definition>PFNGLGETBUFFERPARAMETERIVARBPROC qglGetBufferParameterivARB</definition>
        <argsstring></argsstring>
        <name>qglGetBufferParameterivARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="103" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a6c2c4eb997726006a55f2166bba1f1be" prot="public" static="no" mutable="no">
        <type>PFNGLGETBUFFERPOINTERVARBPROC</type>
        <definition>PFNGLGETBUFFERPOINTERVARBPROC qglGetBufferPointervARB</definition>
        <argsstring></argsstring>
        <name>qglGetBufferPointervARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="104" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a72877aa6731aa86ac6745113adb7bfcb" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( * qglCombinerParameterfvNV)(GLenum pname, const GLfloat *params)</definition>
        <argsstring>)(GLenum pname, const GLfloat *params)</argsstring>
        <name>qglCombinerParameterfvNV</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a1ded298d24c91abb1e967cdd8abedd92" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( * qglCombinerParameterivNV)(GLenum pname, const GLint *params)</definition>
        <argsstring>)(GLenum pname, const GLint *params)</argsstring>
        <name>qglCombinerParameterivNV</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a5b6eda35c374fa63b8b46fe1246906a9" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( * qglCombinerParameterfNV)(GLenum pname, const GLfloat param)</definition>
        <argsstring>)(GLenum pname, const GLfloat param)</argsstring>
        <name>qglCombinerParameterfNV</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a68bb8bc7946236b06ec977bbd1ac173f" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( * qglCombinerParameteriNV)(GLenum pname, const GLint param)</definition>
        <argsstring>)(GLenum pname, const GLint param)</argsstring>
        <name>qglCombinerParameteriNV</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ab07e70575a87b1c44f0e1e1f7c18c043" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( * qglCombinerInputNV)(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage)</definition>
        <argsstring>)(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage)</argsstring>
        <name>qglCombinerInputNV</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a8559c2cec44d4bc528700c04371227a4" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( * qglCombinerOutputNV)(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum)</definition>
        <argsstring>)(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum)</argsstring>
        <name>qglCombinerOutputNV</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aafc77ee079bb3fac0462c45592ea0b23" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( * qglFinalCombinerInputNV)(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage)</definition>
        <argsstring>)(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage)</argsstring>
        <name>qglFinalCombinerInputNV</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aebacdef1b02820410a5ced48b8aeab7d" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( * qglTexImage3D)(GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, const GLvoid *)</definition>
        <argsstring>)(GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, const GLvoid *)</argsstring>
        <name>qglTexImage3D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a656e13bc804096182d1c11680c3caf08" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( * qglColorTableEXT)(int, int, int, int, int, const void *)</definition>
        <argsstring>)(int, int, int, int, int, const void *)</argsstring>
        <name>qglColorTableEXT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a8454bc2e10740b782e89ea8b407d1442" prot="public" static="no" mutable="no">
        <type>PFNGLGENFRAGMENTSHADERSATIPROC</type>
        <definition>PFNGLGENFRAGMENTSHADERSATIPROC qglGenFragmentShadersATI</definition>
        <argsstring></argsstring>
        <name>qglGenFragmentShadersATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="126" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ab16a20488e8712e0f1b64a50c6a564b8" prot="public" static="no" mutable="no">
        <type>PFNGLBINDFRAGMENTSHADERATIPROC</type>
        <definition>PFNGLBINDFRAGMENTSHADERATIPROC qglBindFragmentShaderATI</definition>
        <argsstring></argsstring>
        <name>qglBindFragmentShaderATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="127" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1abb2bf142de39fdc07f732cec9ebccb9d" prot="public" static="no" mutable="no">
        <type>PFNGLDELETEFRAGMENTSHADERATIPROC</type>
        <definition>PFNGLDELETEFRAGMENTSHADERATIPROC qglDeleteFragmentShaderATI</definition>
        <argsstring></argsstring>
        <name>qglDeleteFragmentShaderATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="128" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ac748f0df53a32659102465276491dfa9" prot="public" static="no" mutable="no">
        <type>PFNGLBEGINFRAGMENTSHADERATIPROC</type>
        <definition>PFNGLBEGINFRAGMENTSHADERATIPROC qglBeginFragmentShaderATI</definition>
        <argsstring></argsstring>
        <name>qglBeginFragmentShaderATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="129" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a1da898f56295cc15c1d47590c23b8996" prot="public" static="no" mutable="no">
        <type>PFNGLENDFRAGMENTSHADERATIPROC</type>
        <definition>PFNGLENDFRAGMENTSHADERATIPROC qglEndFragmentShaderATI</definition>
        <argsstring></argsstring>
        <name>qglEndFragmentShaderATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="130" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a636c8e1194cb470da9c4fa6b57f93d8b" prot="public" static="no" mutable="no">
        <type>PFNGLPASSTEXCOORDATIPROC</type>
        <definition>PFNGLPASSTEXCOORDATIPROC qglPassTexCoordATI</definition>
        <argsstring></argsstring>
        <name>qglPassTexCoordATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="131" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a5a835901ecaf04f0ae6ee0c5170ad75e" prot="public" static="no" mutable="no">
        <type>PFNGLSAMPLEMAPATIPROC</type>
        <definition>PFNGLSAMPLEMAPATIPROC qglSampleMapATI</definition>
        <argsstring></argsstring>
        <name>qglSampleMapATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="132" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a2dfb14f91924a167d977abdb2d7b1613" prot="public" static="no" mutable="no">
        <type>PFNGLCOLORFRAGMENTOP1ATIPROC</type>
        <definition>PFNGLCOLORFRAGMENTOP1ATIPROC qglColorFragmentOp1ATI</definition>
        <argsstring></argsstring>
        <name>qglColorFragmentOp1ATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="133" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ad743f7dc75273ed0789f03484692b1f8" prot="public" static="no" mutable="no">
        <type>PFNGLCOLORFRAGMENTOP2ATIPROC</type>
        <definition>PFNGLCOLORFRAGMENTOP2ATIPROC qglColorFragmentOp2ATI</definition>
        <argsstring></argsstring>
        <name>qglColorFragmentOp2ATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="134" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a3690ecda10a9e1eaf7182596899fe67f" prot="public" static="no" mutable="no">
        <type>PFNGLCOLORFRAGMENTOP3ATIPROC</type>
        <definition>PFNGLCOLORFRAGMENTOP3ATIPROC qglColorFragmentOp3ATI</definition>
        <argsstring></argsstring>
        <name>qglColorFragmentOp3ATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="135" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ad17696b2400c914ce3e53e77ef9c6c6d" prot="public" static="no" mutable="no">
        <type>PFNGLALPHAFRAGMENTOP1ATIPROC</type>
        <definition>PFNGLALPHAFRAGMENTOP1ATIPROC qglAlphaFragmentOp1ATI</definition>
        <argsstring></argsstring>
        <name>qglAlphaFragmentOp1ATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="136" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1abd572cf04efccb606974211f764bc147" prot="public" static="no" mutable="no">
        <type>PFNGLALPHAFRAGMENTOP2ATIPROC</type>
        <definition>PFNGLALPHAFRAGMENTOP2ATIPROC qglAlphaFragmentOp2ATI</definition>
        <argsstring></argsstring>
        <name>qglAlphaFragmentOp2ATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="137" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aa286ea31dab011dfc1324c0483159873" prot="public" static="no" mutable="no">
        <type>PFNGLALPHAFRAGMENTOP3ATIPROC</type>
        <definition>PFNGLALPHAFRAGMENTOP3ATIPROC qglAlphaFragmentOp3ATI</definition>
        <argsstring></argsstring>
        <name>qglAlphaFragmentOp3ATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="138" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a58ec3918fb2debdc2901661a3f8df263" prot="public" static="no" mutable="no">
        <type>PFNGLSETFRAGMENTSHADERCONSTANTATIPROC</type>
        <definition>PFNGLSETFRAGMENTSHADERCONSTANTATIPROC qglSetFragmentShaderConstantATI</definition>
        <argsstring></argsstring>
        <name>qglSetFragmentShaderConstantATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="139" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a9ae13d3a8e72ef242ddc119029a2a7f1" prot="public" static="no" mutable="no">
        <type>PFNGLACTIVESTENCILFACEEXTPROC</type>
        <definition>PFNGLACTIVESTENCILFACEEXTPROC qglActiveStencilFaceEXT</definition>
        <argsstring></argsstring>
        <name>qglActiveStencilFaceEXT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="142" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aa179c406dc50741bdfec41ef761d97c6" prot="public" static="no" mutable="no">
        <type>PFNGLSTENCILOPSEPARATEATIPROC</type>
        <definition>PFNGLSTENCILOPSEPARATEATIPROC qglStencilOpSeparateATI</definition>
        <argsstring></argsstring>
        <name>qglStencilOpSeparateATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="146" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a56e4abdccdffb10804b528269e32f6de" prot="public" static="no" mutable="no">
        <type>PFNGLSTENCILFUNCSEPARATEATIPROC</type>
        <definition>PFNGLSTENCILFUNCSEPARATEATIPROC qglStencilFuncSeparateATI</definition>
        <argsstring></argsstring>
        <name>qglStencilFuncSeparateATI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="147" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a0728f96ded26c1cca371c2aa49f50ddf" prot="public" static="no" mutable="no">
        <type>PFNGLCOMPRESSEDTEXIMAGE2DARBPROC</type>
        <definition>PFNGLCOMPRESSEDTEXIMAGE2DARBPROC qglCompressedTexImage2DARB</definition>
        <argsstring></argsstring>
        <name>qglCompressedTexImage2DARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="150" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a731fcee5b8a6bb379d6e9c7b1e7645f0" prot="public" static="no" mutable="no">
        <type>PFNGLGETCOMPRESSEDTEXIMAGEARBPROC</type>
        <definition>PFNGLGETCOMPRESSEDTEXIMAGEARBPROC qglGetCompressedTexImageARB</definition>
        <argsstring></argsstring>
        <name>qglGetCompressedTexImageARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="151" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1afe8dc4527a6fc5d6180486f306398077" prot="public" static="no" mutable="no">
        <type>PFNGLVERTEXATTRIBPOINTERARBPROC</type>
        <definition>PFNGLVERTEXATTRIBPOINTERARBPROC qglVertexAttribPointerARB</definition>
        <argsstring></argsstring>
        <name>qglVertexAttribPointerARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="154" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a83fef877505b70fb7fc6b1dd785e86ee" prot="public" static="no" mutable="no">
        <type>PFNGLENABLEVERTEXATTRIBARRAYARBPROC</type>
        <definition>PFNGLENABLEVERTEXATTRIBARRAYARBPROC qglEnableVertexAttribArrayARB</definition>
        <argsstring></argsstring>
        <name>qglEnableVertexAttribArrayARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="155" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a87913c4ff1ad8b6911511cf32568f350" prot="public" static="no" mutable="no">
        <type>PFNGLDISABLEVERTEXATTRIBARRAYARBPROC</type>
        <definition>PFNGLDISABLEVERTEXATTRIBARRAYARBPROC qglDisableVertexAttribArrayARB</definition>
        <argsstring></argsstring>
        <name>qglDisableVertexAttribArrayARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="156" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ac1501c5f6a83d23a56d607945af4527f" prot="public" static="no" mutable="no">
        <type>PFNGLPROGRAMSTRINGARBPROC</type>
        <definition>PFNGLPROGRAMSTRINGARBPROC qglProgramStringARB</definition>
        <argsstring></argsstring>
        <name>qglProgramStringARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="157" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ac3e18dabd1ca60b9156ab793e2ed9869" prot="public" static="no" mutable="no">
        <type>PFNGLBINDPROGRAMARBPROC</type>
        <definition>PFNGLBINDPROGRAMARBPROC qglBindProgramARB</definition>
        <argsstring></argsstring>
        <name>qglBindProgramARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="158" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a6f4e5ead8d2bdd99a583c947b713b0fa" prot="public" static="no" mutable="no">
        <type>PFNGLGENPROGRAMSARBPROC</type>
        <definition>PFNGLGENPROGRAMSARBPROC qglGenProgramsARB</definition>
        <argsstring></argsstring>
        <name>qglGenProgramsARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="159" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1afb39e1de7fb1aa4edee9cdbad57ddd7c" prot="public" static="no" mutable="no">
        <type>PFNGLPROGRAMENVPARAMETER4FVARBPROC</type>
        <definition>PFNGLPROGRAMENVPARAMETER4FVARBPROC qglProgramEnvParameter4fvARB</definition>
        <argsstring></argsstring>
        <name>qglProgramEnvParameter4fvARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="160" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a52ab7d7abd13567a24276650643059c7" prot="public" static="no" mutable="no">
        <type>PFNGLPROGRAMLOCALPARAMETER4FVARBPROC</type>
        <definition>PFNGLPROGRAMLOCALPARAMETER4FVARBPROC qglProgramLocalParameter4fvARB</definition>
        <argsstring></argsstring>
        <name>qglProgramLocalParameter4fvARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="161" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1afbae01f0d4829d3c4f2606b6de71043d" prot="public" static="no" mutable="no">
        <type>PFNGLDEPTHBOUNDSEXTPROC</type>
        <definition>PFNGLDEPTHBOUNDSEXTPROC qglDepthBoundsEXT</definition>
        <argsstring></argsstring>
        <name>qglDepthBoundsEXT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="164" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ae3e3e9f454e31c1b26ff8449eae5d31d" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglAccum)(GLenum op, GLfloat value)</definition>
        <argsstring>)(GLenum op, GLfloat value)</argsstring>
        <name>qglAccum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="177" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aee22f7451902d4496cdc44e85743c841" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglAlphaFunc)(GLenum func, GLclampf ref)</definition>
        <argsstring>)(GLenum func, GLclampf ref)</argsstring>
        <name>qglAlphaFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="178" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a383258ce1db613bfb57cb6dbaf54b288" prot="public" static="no" mutable="no">
        <type>GLboolean(*</type>
        <definition>GLboolean( *  qglAreTexturesResident)(GLsizei n, const GLuint *textures, GLboolean *residences)</definition>
        <argsstring>)(GLsizei n, const GLuint *textures, GLboolean *residences)</argsstring>
        <name>qglAreTexturesResident</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="179" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a8ac3f3f13d66807123c37038212e3a10" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglArrayElement)(GLint i)</definition>
        <argsstring>)(GLint i)</argsstring>
        <name>qglArrayElement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="180" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a2af16ba06835f4226cb17514284665da" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglBegin)(GLenum mode)</definition>
        <argsstring>)(GLenum mode)</argsstring>
        <name>qglBegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="181" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a679db93424027c9d433fb392b32f0b28" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglBindTexture)(GLenum target, GLuint texture)</definition>
        <argsstring>)(GLenum target, GLuint texture)</argsstring>
        <name>qglBindTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="182" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ad820b98f539757441b15324ec759aa0f" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglBitmap)(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap)</definition>
        <argsstring>)(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap)</argsstring>
        <name>qglBitmap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="183" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a928e64e9b03104d83ef3feff79a9be91" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglBlendFunc)(GLenum sfactor, GLenum dfactor)</definition>
        <argsstring>)(GLenum sfactor, GLenum dfactor)</argsstring>
        <name>qglBlendFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="184" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a000aa201013d87b72b2e0f0ee6c61b9b" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglCallList)(GLuint list)</definition>
        <argsstring>)(GLuint list)</argsstring>
        <name>qglCallList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="185" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ab55addc895b10cfd233bf8d071d952ad" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglCallLists)(GLsizei n, GLenum type, const GLvoid *lists)</definition>
        <argsstring>)(GLsizei n, GLenum type, const GLvoid *lists)</argsstring>
        <name>qglCallLists</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="186" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1afdad086be2fb9f44c93717a67aba99ba" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglClear)(GLbitfield mask)</definition>
        <argsstring>)(GLbitfield mask)</argsstring>
        <name>qglClear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="187" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a21309fcd1eb306d9ada8cf8251008eab" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglClearAccum)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)</definition>
        <argsstring>)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)</argsstring>
        <name>qglClearAccum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="188" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a89f124cf998421ab0db7a99b9c981db4" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglClearColor)(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)</definition>
        <argsstring>)(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)</argsstring>
        <name>qglClearColor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="189" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a0b0c141eb6e4ba2262e0acb664315282" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglClearDepth)(GLclampd depth)</definition>
        <argsstring>)(GLclampd depth)</argsstring>
        <name>qglClearDepth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="190" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a8afbf2f9bc758abea4a34f69c7bc9187" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglClearIndex)(GLfloat c)</definition>
        <argsstring>)(GLfloat c)</argsstring>
        <name>qglClearIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="191" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a19995eb4548341f868991546b2c59e7c" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglClearStencil)(GLint s)</definition>
        <argsstring>)(GLint s)</argsstring>
        <name>qglClearStencil</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="192" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a3b842c9156a9e094a2c65fa9693e5ace" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglClipPlane)(GLenum plane, const GLdouble *equation)</definition>
        <argsstring>)(GLenum plane, const GLdouble *equation)</argsstring>
        <name>qglClipPlane</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="193" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a255738bbcaa05ecf5bafbaea28630691" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor3b)(GLbyte red, GLbyte green, GLbyte blue)</definition>
        <argsstring>)(GLbyte red, GLbyte green, GLbyte blue)</argsstring>
        <name>qglColor3b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="194" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a26122e49fa6c519eee83375af744971e" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor3bv)(const GLbyte *v)</definition>
        <argsstring>)(const GLbyte *v)</argsstring>
        <name>qglColor3bv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="195" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aad0ecd8481e4c724aa063e737ac9df82" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor3d)(GLdouble red, GLdouble green, GLdouble blue)</definition>
        <argsstring>)(GLdouble red, GLdouble green, GLdouble blue)</argsstring>
        <name>qglColor3d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="196" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a49b0c09a2614e6907eb7e2af664b673c" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor3dv)(const GLdouble *v)</definition>
        <argsstring>)(const GLdouble *v)</argsstring>
        <name>qglColor3dv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="197" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a1fad126c603650bc131a61776e02fc68" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor3f)(GLfloat red, GLfloat green, GLfloat blue)</definition>
        <argsstring>)(GLfloat red, GLfloat green, GLfloat blue)</argsstring>
        <name>qglColor3f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="198" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a16e499bea3fa32c6242065eabcc5690b" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor3fv)(const GLfloat *v)</definition>
        <argsstring>)(const GLfloat *v)</argsstring>
        <name>qglColor3fv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="199" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1af76dee8e126461f501dcc6a7811fd5ce" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor3i)(GLint red, GLint green, GLint blue)</definition>
        <argsstring>)(GLint red, GLint green, GLint blue)</argsstring>
        <name>qglColor3i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="200" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a8cb28ca07a5a55fbacbbe04000f5d27e" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor3iv)(const GLint *v)</definition>
        <argsstring>)(const GLint *v)</argsstring>
        <name>qglColor3iv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="201" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1abe2687e3c5b383fa68a5d3118239058a" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor3s)(GLshort red, GLshort green, GLshort blue)</definition>
        <argsstring>)(GLshort red, GLshort green, GLshort blue)</argsstring>
        <name>qglColor3s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="202" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ae8c0caee0d584612bcf0f5d765b9b4e2" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor3sv)(const GLshort *v)</definition>
        <argsstring>)(const GLshort *v)</argsstring>
        <name>qglColor3sv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="203" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a27131f2329f150d63cdbffe9e5e49f94" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor3ub)(GLubyte red, GLubyte green, GLubyte blue)</definition>
        <argsstring>)(GLubyte red, GLubyte green, GLubyte blue)</argsstring>
        <name>qglColor3ub</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="204" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aee167e8da89beabe5c59bce716bed447" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor3ubv)(const GLubyte *v)</definition>
        <argsstring>)(const GLubyte *v)</argsstring>
        <name>qglColor3ubv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="205" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aeb66548e80efdf0a31fc8e610993e9f2" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor3ui)(GLuint red, GLuint green, GLuint blue)</definition>
        <argsstring>)(GLuint red, GLuint green, GLuint blue)</argsstring>
        <name>qglColor3ui</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="206" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a27fd66b63a8a232e17a6aa15bc169ffd" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor3uiv)(const GLuint *v)</definition>
        <argsstring>)(const GLuint *v)</argsstring>
        <name>qglColor3uiv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="207" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a7bacab62791e9e9a3cefef07d03d895a" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor3us)(GLushort red, GLushort green, GLushort blue)</definition>
        <argsstring>)(GLushort red, GLushort green, GLushort blue)</argsstring>
        <name>qglColor3us</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="208" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a0aded4af790e0c1b66548ece7bf4ac34" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor3usv)(const GLushort *v)</definition>
        <argsstring>)(const GLushort *v)</argsstring>
        <name>qglColor3usv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="209" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1acb468e3e54154d68842ed9861f5db8ef" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor4b)(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha)</definition>
        <argsstring>)(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha)</argsstring>
        <name>qglColor4b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="210" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1abb9594bead61d20d7407d7bed254001c" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor4bv)(const GLbyte *v)</definition>
        <argsstring>)(const GLbyte *v)</argsstring>
        <name>qglColor4bv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="211" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a0e6bd679f3e8560e9fe4e9a40fa8fe7d" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor4d)(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha)</definition>
        <argsstring>)(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha)</argsstring>
        <name>qglColor4d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="212" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a130743bf62262ed4092d5fa138a7f6f3" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor4dv)(const GLdouble *v)</definition>
        <argsstring>)(const GLdouble *v)</argsstring>
        <name>qglColor4dv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="213" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a5a606aec14f66484f078ae461e7dda15" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor4f)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)</definition>
        <argsstring>)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)</argsstring>
        <name>qglColor4f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="214" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ac4ff652c10c73bb74880f1d1ffa5cb06" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor4fv)(const GLfloat *v)</definition>
        <argsstring>)(const GLfloat *v)</argsstring>
        <name>qglColor4fv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="215" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1afb6bd25fd2a43d85f8db04e5d292ac4e" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor4i)(GLint red, GLint green, GLint blue, GLint alpha)</definition>
        <argsstring>)(GLint red, GLint green, GLint blue, GLint alpha)</argsstring>
        <name>qglColor4i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="216" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a8644fe3c2fb8c9a7039d38f9d5faf528" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor4iv)(const GLint *v)</definition>
        <argsstring>)(const GLint *v)</argsstring>
        <name>qglColor4iv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="217" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a329726f7054f2eb2ac38b2795beda5ca" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor4s)(GLshort red, GLshort green, GLshort blue, GLshort alpha)</definition>
        <argsstring>)(GLshort red, GLshort green, GLshort blue, GLshort alpha)</argsstring>
        <name>qglColor4s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="218" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a0141dd6f093d5934d169a0f5e93bb3ed" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor4sv)(const GLshort *v)</definition>
        <argsstring>)(const GLshort *v)</argsstring>
        <name>qglColor4sv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="219" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ae9260de032a9dedf63c645d460e2e1a8" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor4ub)(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha)</definition>
        <argsstring>)(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha)</argsstring>
        <name>qglColor4ub</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="220" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1abfa3348e065085ad2df370de581273da" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor4ubv)(const GLubyte *v)</definition>
        <argsstring>)(const GLubyte *v)</argsstring>
        <name>qglColor4ubv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="221" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ad06996b3cf5cde2088cb350742974464" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor4ui)(GLuint red, GLuint green, GLuint blue, GLuint alpha)</definition>
        <argsstring>)(GLuint red, GLuint green, GLuint blue, GLuint alpha)</argsstring>
        <name>qglColor4ui</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="222" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1add9198d7f661fb33e6f63daa80a76817" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor4uiv)(const GLuint *v)</definition>
        <argsstring>)(const GLuint *v)</argsstring>
        <name>qglColor4uiv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="223" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1acac393e1c85ff0c68fce4a80de085ddf" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor4us)(GLushort red, GLushort green, GLushort blue, GLushort alpha)</definition>
        <argsstring>)(GLushort red, GLushort green, GLushort blue, GLushort alpha)</argsstring>
        <name>qglColor4us</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="224" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aff1a12b73908f66fe80c4807742e45e6" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColor4usv)(const GLushort *v)</definition>
        <argsstring>)(const GLushort *v)</argsstring>
        <name>qglColor4usv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="225" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a20d0fdaf7cfa2232e9bb027362b620f6" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColorMask)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)</definition>
        <argsstring>)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)</argsstring>
        <name>qglColorMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="226" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ad12cc56da78a28931c5d1471f59fa321" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColorMaterial)(GLenum face, GLenum mode)</definition>
        <argsstring>)(GLenum face, GLenum mode)</argsstring>
        <name>qglColorMaterial</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="227" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ab89e5abc3ebc77554c9b0618e9af7e37" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglColorPointer)(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)</definition>
        <argsstring>)(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)</argsstring>
        <name>qglColorPointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="228" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a4dfb953b8f2a5757bb33953b3ba3cdbd" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglCopyPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type)</definition>
        <argsstring>)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type)</argsstring>
        <name>qglCopyPixels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="229" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a07171297e08af0576aff6ec94f867a04" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglCopyTexImage1D)(GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border)</definition>
        <argsstring>)(GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border)</argsstring>
        <name>qglCopyTexImage1D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="230" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aa439c5ca9b82a5d21aee867715f57f2b" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglCopyTexImage2D)(GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)</definition>
        <argsstring>)(GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)</argsstring>
        <name>qglCopyTexImage2D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="231" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a401987c20381361c18bb0b24769eb8c9" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglCopyTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)</definition>
        <argsstring>)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)</argsstring>
        <name>qglCopyTexSubImage1D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="232" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a000285fee64c2e532ba58aeb6409189d" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglCopyTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)</definition>
        <argsstring>)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)</argsstring>
        <name>qglCopyTexSubImage2D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="233" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aa90402604aebcf77c8508cacf9af294b" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglCullFace)(GLenum mode)</definition>
        <argsstring>)(GLenum mode)</argsstring>
        <name>qglCullFace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="234" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ae260c78f357ff60128d31e27cc48ee0f" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglDeleteLists)(GLuint list, GLsizei range)</definition>
        <argsstring>)(GLuint list, GLsizei range)</argsstring>
        <name>qglDeleteLists</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="235" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1afda98259009d970a85f0822067432b70" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglDeleteTextures)(GLsizei n, const GLuint *textures)</definition>
        <argsstring>)(GLsizei n, const GLuint *textures)</argsstring>
        <name>qglDeleteTextures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="236" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aaf342115ca96ef723009879819aced60" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglDepthFunc)(GLenum func)</definition>
        <argsstring>)(GLenum func)</argsstring>
        <name>qglDepthFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="237" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a298a5b50c984fbfa7f2ebf2438ef995d" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglDepthMask)(GLboolean flag)</definition>
        <argsstring>)(GLboolean flag)</argsstring>
        <name>qglDepthMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="238" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a579964e5498f7aff798981a9987d4e35" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglDepthRange)(GLclampd zNear, GLclampd zFar)</definition>
        <argsstring>)(GLclampd zNear, GLclampd zFar)</argsstring>
        <name>qglDepthRange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="239" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a0a2a0f1a4cb87d3eef3672deb999d29b" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglDisable)(GLenum cap)</definition>
        <argsstring>)(GLenum cap)</argsstring>
        <name>qglDisable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="240" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1adc62c5ddba329570e0f956dd5b6c1363" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglDisableClientState)(GLenum array)</definition>
        <argsstring>)(GLenum array)</argsstring>
        <name>qglDisableClientState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="241" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a6e4778ca22ab4ff64d5b25ca0eb15955" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglDrawArrays)(GLenum mode, GLint first, GLsizei count)</definition>
        <argsstring>)(GLenum mode, GLint first, GLsizei count)</argsstring>
        <name>qglDrawArrays</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="242" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aa1ad4d7fddf773568a670028169c1e6f" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglDrawBuffer)(GLenum mode)</definition>
        <argsstring>)(GLenum mode)</argsstring>
        <name>qglDrawBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="243" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a9d086082950391ddff9672e7809683e4" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglDrawElements)(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices)</definition>
        <argsstring>)(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices)</argsstring>
        <name>qglDrawElements</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="244" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a116941889662904384d29b5ca9449094" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglDrawPixels)(GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)</definition>
        <argsstring>)(GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)</argsstring>
        <name>qglDrawPixels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="245" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aaff6335f1fb54b24ea2161d19a469a43" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglEdgeFlag)(GLboolean flag)</definition>
        <argsstring>)(GLboolean flag)</argsstring>
        <name>qglEdgeFlag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="246" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ade51709a910b93517c1a7acb04ff5755" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglEdgeFlagPointer)(GLsizei stride, const GLvoid *pointer)</definition>
        <argsstring>)(GLsizei stride, const GLvoid *pointer)</argsstring>
        <name>qglEdgeFlagPointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="247" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a8d2693270b95707ef89d7af942850171" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglEdgeFlagv)(const GLboolean *flag)</definition>
        <argsstring>)(const GLboolean *flag)</argsstring>
        <name>qglEdgeFlagv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="248" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a05e4a7fac7babd19007fac7521f8a062" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglEnable)(GLenum cap)</definition>
        <argsstring>)(GLenum cap)</argsstring>
        <name>qglEnable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="249" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1af2169d12e6ebffad4cb9c8612c9d77bf" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglEnableClientState)(GLenum array)</definition>
        <argsstring>)(GLenum array)</argsstring>
        <name>qglEnableClientState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="250" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a03b03a9115f31c3485d95fa00bbea771" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglEnd)(void)</definition>
        <argsstring>)(void)</argsstring>
        <name>qglEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="251" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1af01e2f17f6675ae93ef27fd3f0c4f981" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglEndList)(void)</definition>
        <argsstring>)(void)</argsstring>
        <name>qglEndList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="252" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a6c7e00702fa558d8a09590b88c0c867c" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglEvalCoord1d)(GLdouble u)</definition>
        <argsstring>)(GLdouble u)</argsstring>
        <name>qglEvalCoord1d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="253" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aaa80f4a2e8628fa5b2be620c134a82e1" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglEvalCoord1dv)(const GLdouble *u)</definition>
        <argsstring>)(const GLdouble *u)</argsstring>
        <name>qglEvalCoord1dv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="254" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a6e4e7e086e66f0b42e8c1265e5800d4c" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglEvalCoord1f)(GLfloat u)</definition>
        <argsstring>)(GLfloat u)</argsstring>
        <name>qglEvalCoord1f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="255" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a9ac4d7476e54eedb33c224dc7ac88dae" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglEvalCoord1fv)(const GLfloat *u)</definition>
        <argsstring>)(const GLfloat *u)</argsstring>
        <name>qglEvalCoord1fv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="256" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ac5a4ed50524cbb01fd4cbd23023f61da" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglEvalCoord2d)(GLdouble u, GLdouble v)</definition>
        <argsstring>)(GLdouble u, GLdouble v)</argsstring>
        <name>qglEvalCoord2d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="257" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a793acf22a79fa82026073ee0e4ab2210" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglEvalCoord2dv)(const GLdouble *u)</definition>
        <argsstring>)(const GLdouble *u)</argsstring>
        <name>qglEvalCoord2dv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="258" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a6a6a2f3cca1e68e31f4c13e3f80cd714" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglEvalCoord2f)(GLfloat u, GLfloat v)</definition>
        <argsstring>)(GLfloat u, GLfloat v)</argsstring>
        <name>qglEvalCoord2f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="259" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a416fd9be0049124b92fd203b3e8b092e" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglEvalCoord2fv)(const GLfloat *u)</definition>
        <argsstring>)(const GLfloat *u)</argsstring>
        <name>qglEvalCoord2fv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="260" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ab29f416bc7a070aa0c33ffd9f59e5b18" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglEvalMesh1)(GLenum mode, GLint i1, GLint i2)</definition>
        <argsstring>)(GLenum mode, GLint i1, GLint i2)</argsstring>
        <name>qglEvalMesh1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="261" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aeeea2ab40d56bb3028c52e6e1d23e6e6" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglEvalMesh2)(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2)</definition>
        <argsstring>)(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2)</argsstring>
        <name>qglEvalMesh2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="262" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a91939438f26a61bfcea1807b00ba3666" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglEvalPoint1)(GLint i)</definition>
        <argsstring>)(GLint i)</argsstring>
        <name>qglEvalPoint1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="263" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ab23db832b4db014d4161811ec93b05b2" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglEvalPoint2)(GLint i, GLint j)</definition>
        <argsstring>)(GLint i, GLint j)</argsstring>
        <name>qglEvalPoint2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="264" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ae8b7f286c1793e1cb21c32bc67a56cfc" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglFeedbackBuffer)(GLsizei size, GLenum type, GLfloat *buffer)</definition>
        <argsstring>)(GLsizei size, GLenum type, GLfloat *buffer)</argsstring>
        <name>qglFeedbackBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="265" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a734f9d1e519cc2ef40b4cb39900f47b7" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglFinish)(void)</definition>
        <argsstring>)(void)</argsstring>
        <name>qglFinish</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="266" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a1d055a0f9b38aaf8597a97c9a897e15c" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglFlush)(void)</definition>
        <argsstring>)(void)</argsstring>
        <name>qglFlush</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="267" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a6f9bd596442460e3129942f787c3ef34" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglFogf)(GLenum pname, GLfloat param)</definition>
        <argsstring>)(GLenum pname, GLfloat param)</argsstring>
        <name>qglFogf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="268" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a147637a1c32bb112a00f1e8e7f5d20fb" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglFogfv)(GLenum pname, const GLfloat *params)</definition>
        <argsstring>)(GLenum pname, const GLfloat *params)</argsstring>
        <name>qglFogfv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="269" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1af22f6dba9b7bebd294a900298c9129ec" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglFogi)(GLenum pname, GLint param)</definition>
        <argsstring>)(GLenum pname, GLint param)</argsstring>
        <name>qglFogi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="270" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a72e02dc46a15120f8c37ef04901bdbaa" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglFogiv)(GLenum pname, const GLint *params)</definition>
        <argsstring>)(GLenum pname, const GLint *params)</argsstring>
        <name>qglFogiv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="271" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a34480d6e5d6d594bd5657805ee4c58cf" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglFrontFace)(GLenum mode)</definition>
        <argsstring>)(GLenum mode)</argsstring>
        <name>qglFrontFace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="272" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a857e20ae212126e84093a976015531df" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglFrustum)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)</definition>
        <argsstring>)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)</argsstring>
        <name>qglFrustum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="273" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aa94e1d3d5cbbb55891c9908e2d35c36b" prot="public" static="no" mutable="no">
        <type>GLuint(*</type>
        <definition>GLuint( *  qglGenLists)(GLsizei range)</definition>
        <argsstring>)(GLsizei range)</argsstring>
        <name>qglGenLists</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="274" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ad426ce4f94fe0ac11a60b3afd2274634" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGenTextures)(GLsizei n, GLuint *textures)</definition>
        <argsstring>)(GLsizei n, GLuint *textures)</argsstring>
        <name>qglGenTextures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="275" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a21399c09600366d620e152f39c4489f0" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetBooleanv)(GLenum pname, GLboolean *params)</definition>
        <argsstring>)(GLenum pname, GLboolean *params)</argsstring>
        <name>qglGetBooleanv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="276" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aadc4e8c2a0ae2f31a01d7b0c10005a65" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetClipPlane)(GLenum plane, GLdouble *equation)</definition>
        <argsstring>)(GLenum plane, GLdouble *equation)</argsstring>
        <name>qglGetClipPlane</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="277" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a45f8b943fe56d30f9f55e6f8fdd8ea08" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetDoublev)(GLenum pname, GLdouble *params)</definition>
        <argsstring>)(GLenum pname, GLdouble *params)</argsstring>
        <name>qglGetDoublev</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="278" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a8b3af1141ce1eb818382630ef79a390b" prot="public" static="no" mutable="no">
        <type>GLenum(*</type>
        <definition>GLenum( *  qglGetError)(void)</definition>
        <argsstring>)(void)</argsstring>
        <name>qglGetError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="279" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1af673dbb2958151d5634ed1fe9806faf7" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetFloatv)(GLenum pname, GLfloat *params)</definition>
        <argsstring>)(GLenum pname, GLfloat *params)</argsstring>
        <name>qglGetFloatv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="280" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a93eca0b3a7c8b167e9b6dfc3f0d2cb04" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetIntegerv)(GLenum pname, GLint *params)</definition>
        <argsstring>)(GLenum pname, GLint *params)</argsstring>
        <name>qglGetIntegerv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="281" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1afe58ab62ae86aaab984927da03a921c7" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetLightfv)(GLenum light, GLenum pname, GLfloat *params)</definition>
        <argsstring>)(GLenum light, GLenum pname, GLfloat *params)</argsstring>
        <name>qglGetLightfv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="282" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a935737ee23a6c1bc8012b6a55c20d206" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetLightiv)(GLenum light, GLenum pname, GLint *params)</definition>
        <argsstring>)(GLenum light, GLenum pname, GLint *params)</argsstring>
        <name>qglGetLightiv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="283" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ac30158c4ef90ac72e422f8f3b836f659" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetMapdv)(GLenum target, GLenum query, GLdouble *v)</definition>
        <argsstring>)(GLenum target, GLenum query, GLdouble *v)</argsstring>
        <name>qglGetMapdv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="284" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a517b59d27bc65a6f7a7340d6a4bd9136" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetMapfv)(GLenum target, GLenum query, GLfloat *v)</definition>
        <argsstring>)(GLenum target, GLenum query, GLfloat *v)</argsstring>
        <name>qglGetMapfv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="285" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a0d9d7019c7b35fc54a8cf53598a049fe" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetMapiv)(GLenum target, GLenum query, GLint *v)</definition>
        <argsstring>)(GLenum target, GLenum query, GLint *v)</argsstring>
        <name>qglGetMapiv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="286" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aa8942602776b5ea69569e6dbd313daa2" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetMaterialfv)(GLenum face, GLenum pname, GLfloat *params)</definition>
        <argsstring>)(GLenum face, GLenum pname, GLfloat *params)</argsstring>
        <name>qglGetMaterialfv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="287" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a77dcb39315c1d74ee945fc47d7f65036" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetMaterialiv)(GLenum face, GLenum pname, GLint *params)</definition>
        <argsstring>)(GLenum face, GLenum pname, GLint *params)</argsstring>
        <name>qglGetMaterialiv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="288" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a93eeef8c70e40f3336da409e6ae95292" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetPixelMapfv)(GLenum map, GLfloat *values)</definition>
        <argsstring>)(GLenum map, GLfloat *values)</argsstring>
        <name>qglGetPixelMapfv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="289" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a062253c544ce56eebe3cad2bd0bffe43" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetPixelMapuiv)(GLenum map, GLuint *values)</definition>
        <argsstring>)(GLenum map, GLuint *values)</argsstring>
        <name>qglGetPixelMapuiv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="290" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a8189f15b1c0f395cee0c8e02afff1877" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetPixelMapusv)(GLenum map, GLushort *values)</definition>
        <argsstring>)(GLenum map, GLushort *values)</argsstring>
        <name>qglGetPixelMapusv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="291" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1afbe7ea04b061a7e8699e710e691be57b" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetPointerv)(GLenum pname, GLvoid **params)</definition>
        <argsstring>)(GLenum pname, GLvoid **params)</argsstring>
        <name>qglGetPointerv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="292" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ac9dac347e44baba88985ba654878ae9d" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetPolygonStipple)(GLubyte *mask)</definition>
        <argsstring>)(GLubyte *mask)</argsstring>
        <name>qglGetPolygonStipple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="293" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aea338d84b1a84ba30c6d9ce0b29688ce" prot="public" static="no" mutable="no">
        <type>const GLubyte *(*</type>
        <definition>const GLubyte*( *  qglGetString)(GLenum name)</definition>
        <argsstring>)(GLenum name)</argsstring>
        <name>qglGetString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="294" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a88e3872c59d61b25b22759a49a8b807e" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetTexEnvfv)(GLenum target, GLenum pname, GLfloat *params)</definition>
        <argsstring>)(GLenum target, GLenum pname, GLfloat *params)</argsstring>
        <name>qglGetTexEnvfv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="295" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a8785b3f8871d1de9d409943f2942f426" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetTexEnviv)(GLenum target, GLenum pname, GLint *params)</definition>
        <argsstring>)(GLenum target, GLenum pname, GLint *params)</argsstring>
        <name>qglGetTexEnviv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="296" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1af3e801c7139165155b9b02d73fb528f0" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetTexGendv)(GLenum coord, GLenum pname, GLdouble *params)</definition>
        <argsstring>)(GLenum coord, GLenum pname, GLdouble *params)</argsstring>
        <name>qglGetTexGendv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="297" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a8bdf1096571b4c10783c20c7e6bb4715" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetTexGenfv)(GLenum coord, GLenum pname, GLfloat *params)</definition>
        <argsstring>)(GLenum coord, GLenum pname, GLfloat *params)</argsstring>
        <name>qglGetTexGenfv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="298" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ab2fbab0ece71142c1fc89f43a6c602da" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetTexGeniv)(GLenum coord, GLenum pname, GLint *params)</definition>
        <argsstring>)(GLenum coord, GLenum pname, GLint *params)</argsstring>
        <name>qglGetTexGeniv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="299" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aaa8066c874451ceb5cbbd171e369aff8" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetTexImage)(GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels)</definition>
        <argsstring>)(GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels)</argsstring>
        <name>qglGetTexImage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="300" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a6fd6654a40b42a90054c82a70b03fa2f" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetTexLevelParameterfv)(GLenum target, GLint level, GLenum pname, GLfloat *params)</definition>
        <argsstring>)(GLenum target, GLint level, GLenum pname, GLfloat *params)</argsstring>
        <name>qglGetTexLevelParameterfv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="301" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1af37cc1ba84ec683550c268612f7ec0ba" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetTexLevelParameteriv)(GLenum target, GLint level, GLenum pname, GLint *params)</definition>
        <argsstring>)(GLenum target, GLint level, GLenum pname, GLint *params)</argsstring>
        <name>qglGetTexLevelParameteriv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="302" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ab05d903f272e9fcddb28fd8f13472764" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetTexParameterfv)(GLenum target, GLenum pname, GLfloat *params)</definition>
        <argsstring>)(GLenum target, GLenum pname, GLfloat *params)</argsstring>
        <name>qglGetTexParameterfv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="303" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a627148bfa2919ea88d7c5ffb27796d05" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglGetTexParameteriv)(GLenum target, GLenum pname, GLint *params)</definition>
        <argsstring>)(GLenum target, GLenum pname, GLint *params)</argsstring>
        <name>qglGetTexParameteriv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="304" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a02b0c2561861883571a6de25198a3097" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglHint)(GLenum target, GLenum mode)</definition>
        <argsstring>)(GLenum target, GLenum mode)</argsstring>
        <name>qglHint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="305" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1afb1247f42e4d8c311998786783f0b207" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglIndexMask)(GLuint mask)</definition>
        <argsstring>)(GLuint mask)</argsstring>
        <name>qglIndexMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="306" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a94fd7e131ae4b851b3cd5d98d5735c32" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglIndexPointer)(GLenum type, GLsizei stride, const GLvoid *pointer)</definition>
        <argsstring>)(GLenum type, GLsizei stride, const GLvoid *pointer)</argsstring>
        <name>qglIndexPointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="307" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a289d89838df2e97dcfe3a0f3daaed151" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglIndexd)(GLdouble c)</definition>
        <argsstring>)(GLdouble c)</argsstring>
        <name>qglIndexd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="308" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aa0fec51e9e357a21d3fbeaa7f45e971d" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglIndexdv)(const GLdouble *c)</definition>
        <argsstring>)(const GLdouble *c)</argsstring>
        <name>qglIndexdv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="309" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ab57cf6975f5926ca7030b18edfc336e8" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglIndexf)(GLfloat c)</definition>
        <argsstring>)(GLfloat c)</argsstring>
        <name>qglIndexf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="310" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ab38624af98c77b1e0d12efd3a46fe180" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglIndexfv)(const GLfloat *c)</definition>
        <argsstring>)(const GLfloat *c)</argsstring>
        <name>qglIndexfv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="311" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1af69336b905436d7d6646e977f7e60743" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglIndexi)(GLint c)</definition>
        <argsstring>)(GLint c)</argsstring>
        <name>qglIndexi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="312" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a07614a5689dc69707b530afaf8ddc389" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglIndexiv)(const GLint *c)</definition>
        <argsstring>)(const GLint *c)</argsstring>
        <name>qglIndexiv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="313" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a4767dbcb389a35416c81ff32f7e48904" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglIndexs)(GLshort c)</definition>
        <argsstring>)(GLshort c)</argsstring>
        <name>qglIndexs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="314" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a34fb1a5d625e10d52de359056780b74a" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglIndexsv)(const GLshort *c)</definition>
        <argsstring>)(const GLshort *c)</argsstring>
        <name>qglIndexsv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="315" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1af077f1a2bc615ffcbdc54e502bbbbf9a" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglIndexub)(GLubyte c)</definition>
        <argsstring>)(GLubyte c)</argsstring>
        <name>qglIndexub</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="316" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ab1336b70bfc745dd403195019d833b9a" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglIndexubv)(const GLubyte *c)</definition>
        <argsstring>)(const GLubyte *c)</argsstring>
        <name>qglIndexubv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="317" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1adf396002a1bfc0293196521b84b858a5" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglInitNames)(void)</definition>
        <argsstring>)(void)</argsstring>
        <name>qglInitNames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="318" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a534f40bfe6f5b8c3d19cd0df8e515ee1" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglInterleavedArrays)(GLenum format, GLsizei stride, const GLvoid *pointer)</definition>
        <argsstring>)(GLenum format, GLsizei stride, const GLvoid *pointer)</argsstring>
        <name>qglInterleavedArrays</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="319" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ae61e6193e518be7a081c6afb88be1937" prot="public" static="no" mutable="no">
        <type>GLboolean(*</type>
        <definition>GLboolean( *  qglIsEnabled)(GLenum cap)</definition>
        <argsstring>)(GLenum cap)</argsstring>
        <name>qglIsEnabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="320" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a91b2d4116b090ad2735f24741f2a3db3" prot="public" static="no" mutable="no">
        <type>GLboolean(*</type>
        <definition>GLboolean( *  qglIsList)(GLuint list)</definition>
        <argsstring>)(GLuint list)</argsstring>
        <name>qglIsList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="321" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a048a0c39e67d74c72f3e8c7097e23d0e" prot="public" static="no" mutable="no">
        <type>GLboolean(*</type>
        <definition>GLboolean( *  qglIsTexture)(GLuint texture)</definition>
        <argsstring>)(GLuint texture)</argsstring>
        <name>qglIsTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="322" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ac2e1876c692c39e58356422dd5b518b0" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglLightModelf)(GLenum pname, GLfloat param)</definition>
        <argsstring>)(GLenum pname, GLfloat param)</argsstring>
        <name>qglLightModelf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="323" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a7703663550b16cadc7ec397dda61a074" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglLightModelfv)(GLenum pname, const GLfloat *params)</definition>
        <argsstring>)(GLenum pname, const GLfloat *params)</argsstring>
        <name>qglLightModelfv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="324" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a326012673d38bc9f679312f01d168a4e" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglLightModeli)(GLenum pname, GLint param)</definition>
        <argsstring>)(GLenum pname, GLint param)</argsstring>
        <name>qglLightModeli</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="325" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aeea90960bb0bf8d4714f0f208f2baaaf" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglLightModeliv)(GLenum pname, const GLint *params)</definition>
        <argsstring>)(GLenum pname, const GLint *params)</argsstring>
        <name>qglLightModeliv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="326" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a51e94c62d76bbbdcf8b209519833fb70" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglLightf)(GLenum light, GLenum pname, GLfloat param)</definition>
        <argsstring>)(GLenum light, GLenum pname, GLfloat param)</argsstring>
        <name>qglLightf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="327" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a10fa6ac4c579b1e1368fd3460d59aec7" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglLightfv)(GLenum light, GLenum pname, const GLfloat *params)</definition>
        <argsstring>)(GLenum light, GLenum pname, const GLfloat *params)</argsstring>
        <name>qglLightfv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="328" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a0c7b1a00f79a3548a557d12afb557d8b" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglLighti)(GLenum light, GLenum pname, GLint param)</definition>
        <argsstring>)(GLenum light, GLenum pname, GLint param)</argsstring>
        <name>qglLighti</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="329" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a440d577ede2ba05c0bd0a8b62c7f1be3" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglLightiv)(GLenum light, GLenum pname, const GLint *params)</definition>
        <argsstring>)(GLenum light, GLenum pname, const GLint *params)</argsstring>
        <name>qglLightiv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="330" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a0a31d149c2ec9d3a2e49412f218b2812" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglLineStipple)(GLint factor, GLushort pattern)</definition>
        <argsstring>)(GLint factor, GLushort pattern)</argsstring>
        <name>qglLineStipple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="331" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a38d36323c91bbe015801ab27e49c3726" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglLineWidth)(GLfloat width)</definition>
        <argsstring>)(GLfloat width)</argsstring>
        <name>qglLineWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="332" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aa52821d5ed0af2b0d3f169ac54d0b3f9" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglListBase)(GLuint base)</definition>
        <argsstring>)(GLuint base)</argsstring>
        <name>qglListBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="333" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ad950f09e0914b7eb518e3540b439e467" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglLoadIdentity)(void)</definition>
        <argsstring>)(void)</argsstring>
        <name>qglLoadIdentity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="334" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a96238c94c8fe2f2327b7a3aa024763d4" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglLoadMatrixd)(const GLdouble *m)</definition>
        <argsstring>)(const GLdouble *m)</argsstring>
        <name>qglLoadMatrixd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="335" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a3c7f93ed9771a6bdebdb7a5c2eb1e437" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglLoadMatrixf)(const GLfloat *m)</definition>
        <argsstring>)(const GLfloat *m)</argsstring>
        <name>qglLoadMatrixf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="336" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aa3ee8b97d933a9b7c4173bacc64902a4" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglLoadName)(GLuint name)</definition>
        <argsstring>)(GLuint name)</argsstring>
        <name>qglLoadName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="337" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a6f8e2ea3fd2ade4399067970d3dce17d" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglLogicOp)(GLenum opcode)</definition>
        <argsstring>)(GLenum opcode)</argsstring>
        <name>qglLogicOp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="338" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a18b9868a55741bf92b3dd71c6037a3de" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglMap1d)(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points)</definition>
        <argsstring>)(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points)</argsstring>
        <name>qglMap1d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="339" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a5db9c8ec0c594ee8fe69438cdd4896b0" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglMap1f)(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points)</definition>
        <argsstring>)(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points)</argsstring>
        <name>qglMap1f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="340" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a1c98d10daf433fba4a730439eec343e1" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglMap2d)(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points)</definition>
        <argsstring>)(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points)</argsstring>
        <name>qglMap2d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="341" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ac310338e7269c1e0b953aa230926e8ae" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglMap2f)(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points)</definition>
        <argsstring>)(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points)</argsstring>
        <name>qglMap2f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="342" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a1bdac8979ffcc0877818d2b9d6ed8147" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglMapGrid1d)(GLint un, GLdouble u1, GLdouble u2)</definition>
        <argsstring>)(GLint un, GLdouble u1, GLdouble u2)</argsstring>
        <name>qglMapGrid1d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="343" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a23166bf9bca49d0f3362a4c01c5cf996" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglMapGrid1f)(GLint un, GLfloat u1, GLfloat u2)</definition>
        <argsstring>)(GLint un, GLfloat u1, GLfloat u2)</argsstring>
        <name>qglMapGrid1f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="344" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1af0638d550db7d718f15bef65557b4045" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglMapGrid2d)(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2)</definition>
        <argsstring>)(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2)</argsstring>
        <name>qglMapGrid2d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="345" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a9169f078419bcd2b2992e12ca46e89ce" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglMapGrid2f)(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2)</definition>
        <argsstring>)(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2)</argsstring>
        <name>qglMapGrid2f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="346" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a24a0b3c82b66d476d7984c56f307936d" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglMaterialf)(GLenum face, GLenum pname, GLfloat param)</definition>
        <argsstring>)(GLenum face, GLenum pname, GLfloat param)</argsstring>
        <name>qglMaterialf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="347" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1adeef0959d7e64d1fd929a3e2266bd3c3" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglMaterialfv)(GLenum face, GLenum pname, const GLfloat *params)</definition>
        <argsstring>)(GLenum face, GLenum pname, const GLfloat *params)</argsstring>
        <name>qglMaterialfv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="348" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a453da9f2c9e297c56e8d60113837f812" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglMateriali)(GLenum face, GLenum pname, GLint param)</definition>
        <argsstring>)(GLenum face, GLenum pname, GLint param)</argsstring>
        <name>qglMateriali</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="349" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aed653d2e9cc1b6078f0be342b3ec25c7" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglMaterialiv)(GLenum face, GLenum pname, const GLint *params)</definition>
        <argsstring>)(GLenum face, GLenum pname, const GLint *params)</argsstring>
        <name>qglMaterialiv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="350" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a86d594428649ef70ecd32cda045ddcbb" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglMatrixMode)(GLenum mode)</definition>
        <argsstring>)(GLenum mode)</argsstring>
        <name>qglMatrixMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="351" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a7fbbbe949f250cf3d5ddadaddc7c96ba" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglMultMatrixd)(const GLdouble *m)</definition>
        <argsstring>)(const GLdouble *m)</argsstring>
        <name>qglMultMatrixd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="352" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a5900edce72acb80ef2970e08dca9cf6b" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglMultMatrixf)(const GLfloat *m)</definition>
        <argsstring>)(const GLfloat *m)</argsstring>
        <name>qglMultMatrixf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="353" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1abb1cbf3668642cf2db6f55894944ca27" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglNewList)(GLuint list, GLenum mode)</definition>
        <argsstring>)(GLuint list, GLenum mode)</argsstring>
        <name>qglNewList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="354" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a8744d957f37b6b2c4232363ed6bfbd64" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglNormal3b)(GLbyte nx, GLbyte ny, GLbyte nz)</definition>
        <argsstring>)(GLbyte nx, GLbyte ny, GLbyte nz)</argsstring>
        <name>qglNormal3b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="355" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aaa8df9cf70c0717c01c0b65f2c0f1c10" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglNormal3bv)(const GLbyte *v)</definition>
        <argsstring>)(const GLbyte *v)</argsstring>
        <name>qglNormal3bv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="356" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aa1e20be746653cc8401a62988f7144da" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglNormal3d)(GLdouble nx, GLdouble ny, GLdouble nz)</definition>
        <argsstring>)(GLdouble nx, GLdouble ny, GLdouble nz)</argsstring>
        <name>qglNormal3d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="357" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aec8595be258e14a9431b656264202af4" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglNormal3dv)(const GLdouble *v)</definition>
        <argsstring>)(const GLdouble *v)</argsstring>
        <name>qglNormal3dv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="358" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ae847b38e6c79ed0de14346eb6efc6c23" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglNormal3f)(GLfloat nx, GLfloat ny, GLfloat nz)</definition>
        <argsstring>)(GLfloat nx, GLfloat ny, GLfloat nz)</argsstring>
        <name>qglNormal3f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="359" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a0d9c4ef6b797accff06c91ca106110d4" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglNormal3fv)(const GLfloat *v)</definition>
        <argsstring>)(const GLfloat *v)</argsstring>
        <name>qglNormal3fv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="360" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a410014625e7b588d051410b09e7726de" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglNormal3i)(GLint nx, GLint ny, GLint nz)</definition>
        <argsstring>)(GLint nx, GLint ny, GLint nz)</argsstring>
        <name>qglNormal3i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="361" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a02fd83b3c39d39d4e6df43c5821ab301" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglNormal3iv)(const GLint *v)</definition>
        <argsstring>)(const GLint *v)</argsstring>
        <name>qglNormal3iv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="362" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a5fa1e422c62155b28eeede9f4abd8bcc" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglNormal3s)(GLshort nx, GLshort ny, GLshort nz)</definition>
        <argsstring>)(GLshort nx, GLshort ny, GLshort nz)</argsstring>
        <name>qglNormal3s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="363" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ad37516a2b3564fcaa307f09c87c84df5" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglNormal3sv)(const GLshort *v)</definition>
        <argsstring>)(const GLshort *v)</argsstring>
        <name>qglNormal3sv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="364" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a43f76aaffc31bbcbb010c63fded03603" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglNormalPointer)(GLenum type, GLsizei stride, const GLvoid *pointer)</definition>
        <argsstring>)(GLenum type, GLsizei stride, const GLvoid *pointer)</argsstring>
        <name>qglNormalPointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="365" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a2645511e5e74a6a1852415303d3d94ed" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglOrtho)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)</definition>
        <argsstring>)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)</argsstring>
        <name>qglOrtho</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="366" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aaf9217129aa660111bbd13dc277af36d" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglPassThrough)(GLfloat token)</definition>
        <argsstring>)(GLfloat token)</argsstring>
        <name>qglPassThrough</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="367" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ae16c45df1683eab66066c8afe444d8ea" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglPixelMapfv)(GLenum map, GLsizei mapsize, const GLfloat *values)</definition>
        <argsstring>)(GLenum map, GLsizei mapsize, const GLfloat *values)</argsstring>
        <name>qglPixelMapfv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="368" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a388e1ed26bc97d7eb1fc1834925b61ea" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglPixelMapuiv)(GLenum map, GLsizei mapsize, const GLuint *values)</definition>
        <argsstring>)(GLenum map, GLsizei mapsize, const GLuint *values)</argsstring>
        <name>qglPixelMapuiv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="369" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a8702ceb0e0b61d70a6704ac8dc63d6aa" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglPixelMapusv)(GLenum map, GLsizei mapsize, const GLushort *values)</definition>
        <argsstring>)(GLenum map, GLsizei mapsize, const GLushort *values)</argsstring>
        <name>qglPixelMapusv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="370" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a7d5a15e753afec73fe0a7f93d76550b1" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglPixelStoref)(GLenum pname, GLfloat param)</definition>
        <argsstring>)(GLenum pname, GLfloat param)</argsstring>
        <name>qglPixelStoref</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="371" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aa4752f88aaa28a78394e0e88eda9c16c" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglPixelStorei)(GLenum pname, GLint param)</definition>
        <argsstring>)(GLenum pname, GLint param)</argsstring>
        <name>qglPixelStorei</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="372" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a6fcddacce6eff98133e890326d4815ef" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglPixelTransferf)(GLenum pname, GLfloat param)</definition>
        <argsstring>)(GLenum pname, GLfloat param)</argsstring>
        <name>qglPixelTransferf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="373" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a90ca8e649f68a172220463e15f37d26b" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglPixelTransferi)(GLenum pname, GLint param)</definition>
        <argsstring>)(GLenum pname, GLint param)</argsstring>
        <name>qglPixelTransferi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="374" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a8aa87a78a770d0d0da40120f8d3b3e0b" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglPixelZoom)(GLfloat xfactor, GLfloat yfactor)</definition>
        <argsstring>)(GLfloat xfactor, GLfloat yfactor)</argsstring>
        <name>qglPixelZoom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="375" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a9eac0d0696f7c1a37abc085d6e2de95f" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglPointSize)(GLfloat size)</definition>
        <argsstring>)(GLfloat size)</argsstring>
        <name>qglPointSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="376" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aee727137a8495f0c5b2acf31f6e329ee" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglPolygonMode)(GLenum face, GLenum mode)</definition>
        <argsstring>)(GLenum face, GLenum mode)</argsstring>
        <name>qglPolygonMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="377" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aab4805cf3b48a496ce843d278a4f5b9e" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglPolygonOffset)(GLfloat factor, GLfloat units)</definition>
        <argsstring>)(GLfloat factor, GLfloat units)</argsstring>
        <name>qglPolygonOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="378" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aaf1468be77b797f193a4e478b5b08af0" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglPolygonStipple)(const GLubyte *mask)</definition>
        <argsstring>)(const GLubyte *mask)</argsstring>
        <name>qglPolygonStipple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="379" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ad22127e69f485c67f15e7282d75650bb" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglPopAttrib)(void)</definition>
        <argsstring>)(void)</argsstring>
        <name>qglPopAttrib</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="380" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a40fe212f3699ee22eeada105290c5ec8" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglPopClientAttrib)(void)</definition>
        <argsstring>)(void)</argsstring>
        <name>qglPopClientAttrib</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="381" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a1e63909bc225660b6c63de0e2e582c81" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglPopMatrix)(void)</definition>
        <argsstring>)(void)</argsstring>
        <name>qglPopMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="382" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a87b34d60513f37e3b384675b755676c2" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglPopName)(void)</definition>
        <argsstring>)(void)</argsstring>
        <name>qglPopName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="383" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a6cd4b963ddd68eaf24b1912b5045ac7c" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglPrioritizeTextures)(GLsizei n, const GLuint *textures, const GLclampf *priorities)</definition>
        <argsstring>)(GLsizei n, const GLuint *textures, const GLclampf *priorities)</argsstring>
        <name>qglPrioritizeTextures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="384" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a56a6be1fa1d01ed7dc9ca5c097b87abb" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglPushAttrib)(GLbitfield mask)</definition>
        <argsstring>)(GLbitfield mask)</argsstring>
        <name>qglPushAttrib</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="385" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a9189588226ae152f5db47b2f66717691" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglPushClientAttrib)(GLbitfield mask)</definition>
        <argsstring>)(GLbitfield mask)</argsstring>
        <name>qglPushClientAttrib</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="386" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a1b940deaa6ea324e15dabcb053408a7c" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglPushMatrix)(void)</definition>
        <argsstring>)(void)</argsstring>
        <name>qglPushMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="387" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1af265d7266c94b20f150fd37091372f8e" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglPushName)(GLuint name)</definition>
        <argsstring>)(GLuint name)</argsstring>
        <name>qglPushName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="388" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a1124a95e5f8412f4c96eab87fa66cd4c" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRasterPos2d)(GLdouble x, GLdouble y)</definition>
        <argsstring>)(GLdouble x, GLdouble y)</argsstring>
        <name>qglRasterPos2d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="389" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a3462beb976926c51d16d04624c6e4135" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRasterPos2dv)(const GLdouble *v)</definition>
        <argsstring>)(const GLdouble *v)</argsstring>
        <name>qglRasterPos2dv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="390" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a6bf083f3273d2cbbc5ebfcb1cde8c97e" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRasterPos2f)(GLfloat x, GLfloat y)</definition>
        <argsstring>)(GLfloat x, GLfloat y)</argsstring>
        <name>qglRasterPos2f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="391" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a47dd0a0a3967e95914116b40c4d0cad6" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRasterPos2fv)(const GLfloat *v)</definition>
        <argsstring>)(const GLfloat *v)</argsstring>
        <name>qglRasterPos2fv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="392" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a0c31be0e631b07eec76aa79e68212f9c" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRasterPos2i)(GLint x, GLint y)</definition>
        <argsstring>)(GLint x, GLint y)</argsstring>
        <name>qglRasterPos2i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="393" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1af514b8ff7e04e14c25454ce10f9bc51c" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRasterPos2iv)(const GLint *v)</definition>
        <argsstring>)(const GLint *v)</argsstring>
        <name>qglRasterPos2iv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="394" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a51fa758026a6d228d6386159822c021d" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRasterPos2s)(GLshort x, GLshort y)</definition>
        <argsstring>)(GLshort x, GLshort y)</argsstring>
        <name>qglRasterPos2s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="395" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aee1096b195f1cdc9de39d7117f72008d" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRasterPos2sv)(const GLshort *v)</definition>
        <argsstring>)(const GLshort *v)</argsstring>
        <name>qglRasterPos2sv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="396" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a24ab116426083f5ed32539ead338c66d" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRasterPos3d)(GLdouble x, GLdouble y, GLdouble z)</definition>
        <argsstring>)(GLdouble x, GLdouble y, GLdouble z)</argsstring>
        <name>qglRasterPos3d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="397" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a1140c1f0c2408863e1929820a1b09b12" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRasterPos3dv)(const GLdouble *v)</definition>
        <argsstring>)(const GLdouble *v)</argsstring>
        <name>qglRasterPos3dv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="398" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1af58e17d5165a8f5ca4993e1b5a9190d3" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRasterPos3f)(GLfloat x, GLfloat y, GLfloat z)</definition>
        <argsstring>)(GLfloat x, GLfloat y, GLfloat z)</argsstring>
        <name>qglRasterPos3f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="399" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a775c09a340bdc76338ca66b5d277cdfe" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRasterPos3fv)(const GLfloat *v)</definition>
        <argsstring>)(const GLfloat *v)</argsstring>
        <name>qglRasterPos3fv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="400" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a6c93200bcecccdc0040cb2661b43d626" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRasterPos3i)(GLint x, GLint y, GLint z)</definition>
        <argsstring>)(GLint x, GLint y, GLint z)</argsstring>
        <name>qglRasterPos3i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="401" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ad792f7a97a9f06000003d23fa1b2804b" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRasterPos3iv)(const GLint *v)</definition>
        <argsstring>)(const GLint *v)</argsstring>
        <name>qglRasterPos3iv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="402" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a0fd79119b69053786eccd8d89d542de2" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRasterPos3s)(GLshort x, GLshort y, GLshort z)</definition>
        <argsstring>)(GLshort x, GLshort y, GLshort z)</argsstring>
        <name>qglRasterPos3s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="403" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a9636283ebe551886af3073acf10c7605" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRasterPos3sv)(const GLshort *v)</definition>
        <argsstring>)(const GLshort *v)</argsstring>
        <name>qglRasterPos3sv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="404" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ac37debade1ea63990c79cc12d785b649" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRasterPos4d)(GLdouble x, GLdouble y, GLdouble z, GLdouble w)</definition>
        <argsstring>)(GLdouble x, GLdouble y, GLdouble z, GLdouble w)</argsstring>
        <name>qglRasterPos4d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="405" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a19908d2067adaa4dec84815a0fa1f34c" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRasterPos4dv)(const GLdouble *v)</definition>
        <argsstring>)(const GLdouble *v)</argsstring>
        <name>qglRasterPos4dv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="406" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aaf043fa8ea2f4f0703b11f33ec037985" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRasterPos4f)(GLfloat x, GLfloat y, GLfloat z, GLfloat w)</definition>
        <argsstring>)(GLfloat x, GLfloat y, GLfloat z, GLfloat w)</argsstring>
        <name>qglRasterPos4f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="407" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a0cebe4c418f32b030dd3043cc3bd0d44" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRasterPos4fv)(const GLfloat *v)</definition>
        <argsstring>)(const GLfloat *v)</argsstring>
        <name>qglRasterPos4fv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="408" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a5b95172fdccfcb01e62c9031b3a84479" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRasterPos4i)(GLint x, GLint y, GLint z, GLint w)</definition>
        <argsstring>)(GLint x, GLint y, GLint z, GLint w)</argsstring>
        <name>qglRasterPos4i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="409" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ae92c1e27321a9730b317068d6b5052ba" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRasterPos4iv)(const GLint *v)</definition>
        <argsstring>)(const GLint *v)</argsstring>
        <name>qglRasterPos4iv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="410" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aa5ea8db8ef3ecd8b4a3e36aef3d389c6" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRasterPos4s)(GLshort x, GLshort y, GLshort z, GLshort w)</definition>
        <argsstring>)(GLshort x, GLshort y, GLshort z, GLshort w)</argsstring>
        <name>qglRasterPos4s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="411" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a82035587c9daf7f51add5d1869d19b50" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRasterPos4sv)(const GLshort *v)</definition>
        <argsstring>)(const GLshort *v)</argsstring>
        <name>qglRasterPos4sv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="412" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a4b2b761165ab5da06158a3fc3c5cb646" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglReadBuffer)(GLenum mode)</definition>
        <argsstring>)(GLenum mode)</argsstring>
        <name>qglReadBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="413" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a9867970e48f2416ae48d7628bd3ef80f" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglReadPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels)</definition>
        <argsstring>)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels)</argsstring>
        <name>qglReadPixels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="414" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a164b4075ff9b11c8cc080b5c7a978a61" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRectd)(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2)</definition>
        <argsstring>)(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2)</argsstring>
        <name>qglRectd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="415" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a21d16945785e50d74adc724088305bcb" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRectdv)(const GLdouble *v1, const GLdouble *v2)</definition>
        <argsstring>)(const GLdouble *v1, const GLdouble *v2)</argsstring>
        <name>qglRectdv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="416" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a3cad92d2ceb65b26ba618d728f56c061" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRectf)(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2)</definition>
        <argsstring>)(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2)</argsstring>
        <name>qglRectf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="417" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a4b8222b474a428d338d58b3d36f6224b" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRectfv)(const GLfloat *v1, const GLfloat *v2)</definition>
        <argsstring>)(const GLfloat *v1, const GLfloat *v2)</argsstring>
        <name>qglRectfv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="418" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aad953759c732895619417e5b3f5a88e7" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRecti)(GLint x1, GLint y1, GLint x2, GLint y2)</definition>
        <argsstring>)(GLint x1, GLint y1, GLint x2, GLint y2)</argsstring>
        <name>qglRecti</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="419" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a7781eb0369cdd2eff40c574d396bc52a" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRectiv)(const GLint *v1, const GLint *v2)</definition>
        <argsstring>)(const GLint *v1, const GLint *v2)</argsstring>
        <name>qglRectiv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="420" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a117965d588a9128379a8e80e9fab8eea" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRects)(GLshort x1, GLshort y1, GLshort x2, GLshort y2)</definition>
        <argsstring>)(GLshort x1, GLshort y1, GLshort x2, GLshort y2)</argsstring>
        <name>qglRects</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="421" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1af86fc49c9a0ee16193def012739ab85d" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRectsv)(const GLshort *v1, const GLshort *v2)</definition>
        <argsstring>)(const GLshort *v1, const GLshort *v2)</argsstring>
        <name>qglRectsv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="422" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ad744ca10c1c1631f7a846e78468e58cb" prot="public" static="no" mutable="no">
        <type>GLint(*</type>
        <definition>GLint( *  qglRenderMode)(GLenum mode)</definition>
        <argsstring>)(GLenum mode)</argsstring>
        <name>qglRenderMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="423" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a47c7bf49945895d55af666a08e325035" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRotated)(GLdouble angle, GLdouble x, GLdouble y, GLdouble z)</definition>
        <argsstring>)(GLdouble angle, GLdouble x, GLdouble y, GLdouble z)</argsstring>
        <name>qglRotated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="424" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ad920226018eb883997dbda2ac8b52352" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglRotatef)(GLfloat angle, GLfloat x, GLfloat y, GLfloat z)</definition>
        <argsstring>)(GLfloat angle, GLfloat x, GLfloat y, GLfloat z)</argsstring>
        <name>qglRotatef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="425" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ae7c50a42bd40aaabdc79094268ed9d31" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglScaled)(GLdouble x, GLdouble y, GLdouble z)</definition>
        <argsstring>)(GLdouble x, GLdouble y, GLdouble z)</argsstring>
        <name>qglScaled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="426" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1af0b69916ac0ed43af4a4ab54d543528a" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglScalef)(GLfloat x, GLfloat y, GLfloat z)</definition>
        <argsstring>)(GLfloat x, GLfloat y, GLfloat z)</argsstring>
        <name>qglScalef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="427" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aa5b57bebe9e408b9ccba9b1809d0d066" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglScissor)(GLint x, GLint y, GLsizei width, GLsizei height)</definition>
        <argsstring>)(GLint x, GLint y, GLsizei width, GLsizei height)</argsstring>
        <name>qglScissor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="428" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a364568e59596ad350bfe5c2e5082d0d0" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglSelectBuffer)(GLsizei size, GLuint *buffer)</definition>
        <argsstring>)(GLsizei size, GLuint *buffer)</argsstring>
        <name>qglSelectBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="429" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1af297ceba7e0194707fb5c5e374740cb2" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglShadeModel)(GLenum mode)</definition>
        <argsstring>)(GLenum mode)</argsstring>
        <name>qglShadeModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="430" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a33d0961b02f836c724dabe699da42af6" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglStencilFunc)(GLenum func, GLint ref, GLuint mask)</definition>
        <argsstring>)(GLenum func, GLint ref, GLuint mask)</argsstring>
        <name>qglStencilFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="431" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a0648e5a1b4e9f9d0e60d4a69776a7bc5" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglStencilMask)(GLuint mask)</definition>
        <argsstring>)(GLuint mask)</argsstring>
        <name>qglStencilMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="432" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a068fd52a3956e12d109ebc462a3b88ba" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglStencilOp)(GLenum fail, GLenum zfail, GLenum zpass)</definition>
        <argsstring>)(GLenum fail, GLenum zfail, GLenum zpass)</argsstring>
        <name>qglStencilOp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="433" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ac8516175d4dc5b3abe895ed81be329a5" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord1d)(GLdouble s)</definition>
        <argsstring>)(GLdouble s)</argsstring>
        <name>qglTexCoord1d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="434" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a362dbb5e8aaa9aaea38bccf716bf6d5a" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord1dv)(const GLdouble *v)</definition>
        <argsstring>)(const GLdouble *v)</argsstring>
        <name>qglTexCoord1dv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="435" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ac6078c3ffc09d7bac4906ecd2cc2de02" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord1f)(GLfloat s)</definition>
        <argsstring>)(GLfloat s)</argsstring>
        <name>qglTexCoord1f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="436" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ad49a0d5e07edb361138d815d1f52cdd9" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord1fv)(const GLfloat *v)</definition>
        <argsstring>)(const GLfloat *v)</argsstring>
        <name>qglTexCoord1fv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="437" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a10e25ff6b7312c7320191d0b5fb9c202" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord1i)(GLint s)</definition>
        <argsstring>)(GLint s)</argsstring>
        <name>qglTexCoord1i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="438" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1acc448bd55e87b83fd586dc25adb23572" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord1iv)(const GLint *v)</definition>
        <argsstring>)(const GLint *v)</argsstring>
        <name>qglTexCoord1iv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="439" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a8070bb0fae37ffeac0fcefebba9e0208" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord1s)(GLshort s)</definition>
        <argsstring>)(GLshort s)</argsstring>
        <name>qglTexCoord1s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="440" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a5aa25dae1fc641081decbf78d71161e3" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord1sv)(const GLshort *v)</definition>
        <argsstring>)(const GLshort *v)</argsstring>
        <name>qglTexCoord1sv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="441" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ac7cd16ca7bdf1a5e6a13c3f7ead8676a" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord2d)(GLdouble s, GLdouble t)</definition>
        <argsstring>)(GLdouble s, GLdouble t)</argsstring>
        <name>qglTexCoord2d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="442" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a85fcba3257cac7d759f45e951eb6b57e" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord2dv)(const GLdouble *v)</definition>
        <argsstring>)(const GLdouble *v)</argsstring>
        <name>qglTexCoord2dv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="443" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a330d04347fddd45509c830873611fbc0" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord2f)(GLfloat s, GLfloat t)</definition>
        <argsstring>)(GLfloat s, GLfloat t)</argsstring>
        <name>qglTexCoord2f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="444" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a46cce62617e7e7148e551f380aa4936f" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord2fv)(const GLfloat *v)</definition>
        <argsstring>)(const GLfloat *v)</argsstring>
        <name>qglTexCoord2fv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="445" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a5351bbf9b4cacf1fbe10185e078ff8a1" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord2i)(GLint s, GLint t)</definition>
        <argsstring>)(GLint s, GLint t)</argsstring>
        <name>qglTexCoord2i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="446" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ab3c5861c89a36670eb3d78dfab99b389" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord2iv)(const GLint *v)</definition>
        <argsstring>)(const GLint *v)</argsstring>
        <name>qglTexCoord2iv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="447" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a868cf4bf526a1d9747dc36cef7218c8a" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord2s)(GLshort s, GLshort t)</definition>
        <argsstring>)(GLshort s, GLshort t)</argsstring>
        <name>qglTexCoord2s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="448" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a1e2bd7c24d7317a1f1fed023df598c84" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord2sv)(const GLshort *v)</definition>
        <argsstring>)(const GLshort *v)</argsstring>
        <name>qglTexCoord2sv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="449" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ad60cfb1c8e199ff2392c7fd0a2d7ea1b" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord3d)(GLdouble s, GLdouble t, GLdouble r)</definition>
        <argsstring>)(GLdouble s, GLdouble t, GLdouble r)</argsstring>
        <name>qglTexCoord3d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="450" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a7aabeae71832c7ef31e59125ce0ce4d2" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord3dv)(const GLdouble *v)</definition>
        <argsstring>)(const GLdouble *v)</argsstring>
        <name>qglTexCoord3dv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="451" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a50d5871af6acf3d7f8632b1d79342a2c" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord3f)(GLfloat s, GLfloat t, GLfloat r)</definition>
        <argsstring>)(GLfloat s, GLfloat t, GLfloat r)</argsstring>
        <name>qglTexCoord3f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="452" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a6db64c60ad518a1753525391c72e6c90" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord3fv)(const GLfloat *v)</definition>
        <argsstring>)(const GLfloat *v)</argsstring>
        <name>qglTexCoord3fv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="453" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aaac829befbfec70db94a5a19cb128d9e" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord3i)(GLint s, GLint t, GLint r)</definition>
        <argsstring>)(GLint s, GLint t, GLint r)</argsstring>
        <name>qglTexCoord3i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="454" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aeb301de831f9cc000b14931bbdf46598" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord3iv)(const GLint *v)</definition>
        <argsstring>)(const GLint *v)</argsstring>
        <name>qglTexCoord3iv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="455" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a2c36d2c239f991bb80749e7fb8197a72" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord3s)(GLshort s, GLshort t, GLshort r)</definition>
        <argsstring>)(GLshort s, GLshort t, GLshort r)</argsstring>
        <name>qglTexCoord3s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="456" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1afaaccb0b4ab609e16a2f2a405ffc3bf5" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord3sv)(const GLshort *v)</definition>
        <argsstring>)(const GLshort *v)</argsstring>
        <name>qglTexCoord3sv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="457" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a2f94dee0bee49f8deca0948361c05075" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord4d)(GLdouble s, GLdouble t, GLdouble r, GLdouble q)</definition>
        <argsstring>)(GLdouble s, GLdouble t, GLdouble r, GLdouble q)</argsstring>
        <name>qglTexCoord4d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="458" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ad75c22b0b223b4551b11d93630f0b6b8" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord4dv)(const GLdouble *v)</definition>
        <argsstring>)(const GLdouble *v)</argsstring>
        <name>qglTexCoord4dv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="459" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ab530dc56c640821cc20741aeb73e4ed9" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord4f)(GLfloat s, GLfloat t, GLfloat r, GLfloat q)</definition>
        <argsstring>)(GLfloat s, GLfloat t, GLfloat r, GLfloat q)</argsstring>
        <name>qglTexCoord4f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="460" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a2e4a83f9ae3ea00884a1de6ee28dc83a" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord4fv)(const GLfloat *v)</definition>
        <argsstring>)(const GLfloat *v)</argsstring>
        <name>qglTexCoord4fv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="461" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a87448fd034b45c7d660aa5736501b329" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord4i)(GLint s, GLint t, GLint r, GLint q)</definition>
        <argsstring>)(GLint s, GLint t, GLint r, GLint q)</argsstring>
        <name>qglTexCoord4i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="462" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ab130c9f22460d613dd7e16c102e3f57c" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord4iv)(const GLint *v)</definition>
        <argsstring>)(const GLint *v)</argsstring>
        <name>qglTexCoord4iv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="463" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a76bcc3c15574ad976cf069cea61a6626" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord4s)(GLshort s, GLshort t, GLshort r, GLshort q)</definition>
        <argsstring>)(GLshort s, GLshort t, GLshort r, GLshort q)</argsstring>
        <name>qglTexCoord4s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="464" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ac2b31f1b677ccc35ed265127402a3ccc" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoord4sv)(const GLshort *v)</definition>
        <argsstring>)(const GLshort *v)</argsstring>
        <name>qglTexCoord4sv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="465" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a9b59860a02f3fc4aa9926c8d741567cd" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexCoordPointer)(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)</definition>
        <argsstring>)(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)</argsstring>
        <name>qglTexCoordPointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="466" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a3844939bad03a052fe302081706a108e" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexEnvf)(GLenum target, GLenum pname, GLfloat param)</definition>
        <argsstring>)(GLenum target, GLenum pname, GLfloat param)</argsstring>
        <name>qglTexEnvf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="467" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1af813baed32edcd1d98afcaeac66a94c1" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexEnvfv)(GLenum target, GLenum pname, const GLfloat *params)</definition>
        <argsstring>)(GLenum target, GLenum pname, const GLfloat *params)</argsstring>
        <name>qglTexEnvfv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="468" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ab409cd15d6b576673a0945c7d26d2236" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexEnvi)(GLenum target, GLenum pname, GLint param)</definition>
        <argsstring>)(GLenum target, GLenum pname, GLint param)</argsstring>
        <name>qglTexEnvi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="469" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1af9a3c32888416a81564b0e9b9fddb125" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexEnviv)(GLenum target, GLenum pname, const GLint *params)</definition>
        <argsstring>)(GLenum target, GLenum pname, const GLint *params)</argsstring>
        <name>qglTexEnviv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="470" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a30b0daa6b31acb0c6b0820faa3386d5a" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexGend)(GLenum coord, GLenum pname, GLdouble param)</definition>
        <argsstring>)(GLenum coord, GLenum pname, GLdouble param)</argsstring>
        <name>qglTexGend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="471" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a79759f91a8978d28679b737d2273f859" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexGendv)(GLenum coord, GLenum pname, const GLdouble *params)</definition>
        <argsstring>)(GLenum coord, GLenum pname, const GLdouble *params)</argsstring>
        <name>qglTexGendv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="472" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a4675c1550e82ab732f9013bbc0c09660" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexGenf)(GLenum coord, GLenum pname, GLfloat param)</definition>
        <argsstring>)(GLenum coord, GLenum pname, GLfloat param)</argsstring>
        <name>qglTexGenf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="473" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aa75c2898e244eda67d61557e96b23fc1" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexGenfv)(GLenum coord, GLenum pname, const GLfloat *params)</definition>
        <argsstring>)(GLenum coord, GLenum pname, const GLfloat *params)</argsstring>
        <name>qglTexGenfv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="474" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aaf88232b63680f98dc0ce92f332f9ef0" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexGeni)(GLenum coord, GLenum pname, GLint param)</definition>
        <argsstring>)(GLenum coord, GLenum pname, GLint param)</argsstring>
        <name>qglTexGeni</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="475" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a3240d437746070d06b056c6721a544e9" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexGeniv)(GLenum coord, GLenum pname, const GLint *params)</definition>
        <argsstring>)(GLenum coord, GLenum pname, const GLint *params)</argsstring>
        <name>qglTexGeniv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="476" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a085c6743bbbe3c7c459a7eda4b724474" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexImage1D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels)</definition>
        <argsstring>)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels)</argsstring>
        <name>qglTexImage1D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="477" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a38f778385ace60c7947df7f989ab2fb7" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexImage2D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)</definition>
        <argsstring>)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)</argsstring>
        <name>qglTexImage2D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="478" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aa97815c8847d231b5d7b2463dcad1da6" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexParameterf)(GLenum target, GLenum pname, GLfloat param)</definition>
        <argsstring>)(GLenum target, GLenum pname, GLfloat param)</argsstring>
        <name>qglTexParameterf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="479" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a2c963ebe7b32db6fbf681fb7b3f28787" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexParameterfv)(GLenum target, GLenum pname, const GLfloat *params)</definition>
        <argsstring>)(GLenum target, GLenum pname, const GLfloat *params)</argsstring>
        <name>qglTexParameterfv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="480" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aec71c891bcace8b978fd47526dbc7bf4" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexParameteri)(GLenum target, GLenum pname, GLint param)</definition>
        <argsstring>)(GLenum target, GLenum pname, GLint param)</argsstring>
        <name>qglTexParameteri</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="481" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a44943d1ff24932a86ddb7dfbc7bcceb0" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexParameteriv)(GLenum target, GLenum pname, const GLint *params)</definition>
        <argsstring>)(GLenum target, GLenum pname, const GLint *params)</argsstring>
        <name>qglTexParameteriv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="482" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a48d451f14410c867b2df2b28d1f819b5" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels)</definition>
        <argsstring>)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels)</argsstring>
        <name>qglTexSubImage1D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="483" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ae0254cffce9199ab1c9e87cb7cc1cd20" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)</definition>
        <argsstring>)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)</argsstring>
        <name>qglTexSubImage2D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="484" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a85be8ddf48965eecd9c1a41478f14c13" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTranslated)(GLdouble x, GLdouble y, GLdouble z)</definition>
        <argsstring>)(GLdouble x, GLdouble y, GLdouble z)</argsstring>
        <name>qglTranslated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="485" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a87bc6a1687b8108fc0c00a6c63704a08" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglTranslatef)(GLfloat x, GLfloat y, GLfloat z)</definition>
        <argsstring>)(GLfloat x, GLfloat y, GLfloat z)</argsstring>
        <name>qglTranslatef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="486" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a8da7ba4495929327fe2813232079e4c3" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglVertex2d)(GLdouble x, GLdouble y)</definition>
        <argsstring>)(GLdouble x, GLdouble y)</argsstring>
        <name>qglVertex2d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="487" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a25e278638fed60a07673cec180b9e5d5" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglVertex2dv)(const GLdouble *v)</definition>
        <argsstring>)(const GLdouble *v)</argsstring>
        <name>qglVertex2dv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="488" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ae0b3e91fef734e8dba39719c7df35ad1" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglVertex2f)(GLfloat x, GLfloat y)</definition>
        <argsstring>)(GLfloat x, GLfloat y)</argsstring>
        <name>qglVertex2f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="489" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ae2124f5a6819e0f80d0c7b7ccfcfac3e" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglVertex2fv)(const GLfloat *v)</definition>
        <argsstring>)(const GLfloat *v)</argsstring>
        <name>qglVertex2fv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="490" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a3e4f39f61af63bc55ff55902b395e2ae" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglVertex2i)(GLint x, GLint y)</definition>
        <argsstring>)(GLint x, GLint y)</argsstring>
        <name>qglVertex2i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="491" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aa3792f4930cb385e5a192348c63ed0de" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglVertex2iv)(const GLint *v)</definition>
        <argsstring>)(const GLint *v)</argsstring>
        <name>qglVertex2iv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="492" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1acca9ab06de590ac54a44383c7b62fc91" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglVertex2s)(GLshort x, GLshort y)</definition>
        <argsstring>)(GLshort x, GLshort y)</argsstring>
        <name>qglVertex2s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="493" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ab3bdd68973cbb3c959a15a37c5912fcf" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglVertex2sv)(const GLshort *v)</definition>
        <argsstring>)(const GLshort *v)</argsstring>
        <name>qglVertex2sv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="494" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a824fa45153e426f5b6e9314bdf4a7f7b" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglVertex3d)(GLdouble x, GLdouble y, GLdouble z)</definition>
        <argsstring>)(GLdouble x, GLdouble y, GLdouble z)</argsstring>
        <name>qglVertex3d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="495" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a2acd647be7f8143d9a3ff017fdbf4f47" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglVertex3dv)(const GLdouble *v)</definition>
        <argsstring>)(const GLdouble *v)</argsstring>
        <name>qglVertex3dv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="496" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a969a0acaf9325cf5a56a0b2f7f352154" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglVertex3f)(GLfloat x, GLfloat y, GLfloat z)</definition>
        <argsstring>)(GLfloat x, GLfloat y, GLfloat z)</argsstring>
        <name>qglVertex3f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="497" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a41c3e2910808339900e7298be7358006" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglVertex3fv)(const GLfloat *v)</definition>
        <argsstring>)(const GLfloat *v)</argsstring>
        <name>qglVertex3fv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="498" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ab5440cf4b33c4403d6bb2d4d66d1eaa5" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglVertex3i)(GLint x, GLint y, GLint z)</definition>
        <argsstring>)(GLint x, GLint y, GLint z)</argsstring>
        <name>qglVertex3i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="499" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ab2f5b65f2d317a156a8ac81219ca0fff" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglVertex3iv)(const GLint *v)</definition>
        <argsstring>)(const GLint *v)</argsstring>
        <name>qglVertex3iv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="500" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1affd1fd730c81cc6d8484f8c437440bce" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglVertex3s)(GLshort x, GLshort y, GLshort z)</definition>
        <argsstring>)(GLshort x, GLshort y, GLshort z)</argsstring>
        <name>qglVertex3s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="501" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a8615a3a1a1894d222b9ce7eb3c5ebfc4" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglVertex3sv)(const GLshort *v)</definition>
        <argsstring>)(const GLshort *v)</argsstring>
        <name>qglVertex3sv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="502" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ae6085fc99776abd69b8387eaee3c7134" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglVertex4d)(GLdouble x, GLdouble y, GLdouble z, GLdouble w)</definition>
        <argsstring>)(GLdouble x, GLdouble y, GLdouble z, GLdouble w)</argsstring>
        <name>qglVertex4d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="503" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a4fed81970e001c75a6fee2a57b0bd9f5" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglVertex4dv)(const GLdouble *v)</definition>
        <argsstring>)(const GLdouble *v)</argsstring>
        <name>qglVertex4dv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="504" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a29963ab8e5315ea96ee92452cc4f8263" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglVertex4f)(GLfloat x, GLfloat y, GLfloat z, GLfloat w)</definition>
        <argsstring>)(GLfloat x, GLfloat y, GLfloat z, GLfloat w)</argsstring>
        <name>qglVertex4f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="505" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a6da53ad4f3077f7e23fb24f01e4e688a" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglVertex4fv)(const GLfloat *v)</definition>
        <argsstring>)(const GLfloat *v)</argsstring>
        <name>qglVertex4fv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="506" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1aa80b39210f34ca028cdcb59a4074b36d" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglVertex4i)(GLint x, GLint y, GLint z, GLint w)</definition>
        <argsstring>)(GLint x, GLint y, GLint z, GLint w)</argsstring>
        <name>qglVertex4i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="507" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ad488ba31a5e8207c25a49fae3c0801ec" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglVertex4iv)(const GLint *v)</definition>
        <argsstring>)(const GLint *v)</argsstring>
        <name>qglVertex4iv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="508" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a8b38de590a07cc98646bf0d7efbb8487" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglVertex4s)(GLshort x, GLshort y, GLshort z, GLshort w)</definition>
        <argsstring>)(GLshort x, GLshort y, GLshort z, GLshort w)</argsstring>
        <name>qglVertex4s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="509" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a3ce33674a9c02231731bd51dd7e50dda" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglVertex4sv)(const GLshort *v)</definition>
        <argsstring>)(const GLshort *v)</argsstring>
        <name>qglVertex4sv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="510" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1ac66be9586da8f5b6c87c8a66eb72c71c" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglVertexPointer)(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)</definition>
        <argsstring>)(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)</argsstring>
        <name>qglVertexPointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="511" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qgl_8h_1a0836fbff5d4f741cbfcd33412f3e4715" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void( *  qglViewport)(GLint x, GLint y, GLsizei width, GLsizei height)</definition>
        <argsstring>)(GLint x, GLint y, GLsizei width, GLsizei height)</argsstring>
        <name>qglViewport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="512" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="410" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="qgl_8h_1a38c414a96bb1ac4a8c8c56a3e97889d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLExtension_t</type>
        <definition>GLExtension_t GLimp_ExtensionPointer</definition>
        <argsstring>(const char *name)</argsstring>
        <name>GLimp_ExtensionPointer</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h" line="81" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_glimp.mm" bodystart="1182" bodyend="1246"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment">**<sp/>QGL.H</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__QGL_H__</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__QGL_H__</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(<sp/>_WIN32<sp/>)</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gl/gl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(<sp/>MACOS_X<sp/>)</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>magic<sp/>flag<sp/>to<sp/>keep<sp/>tiger<sp/>gl.h<sp/>from<sp/>loading<sp/>glext.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GL_GLEXT_LEGACY</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;OpenGL/gl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(<sp/>__linux__<sp/>)</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>using<sp/>our<sp/>local<sp/>glext.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://oss.sgi.com/projects/ogl-sample/ABI/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GL_GLEXT_LEGACY</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GLX_GLXEXT_LEGACY</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;GL/gl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;GL/glx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>APIENTRY</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>APIENTRY</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifndef<sp/>WINAPI</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WINAPI</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>only<sp/>use<sp/>local<sp/>glext.h<sp/>if<sp/>we<sp/>are<sp/>not<sp/>using<sp/>the<sp/>system<sp/>one<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://oss.sgi.com/projects/ogl-sample/ABI/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GL_GLEXT_VERSION</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;glext.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*GLExtension_t)(void);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">GLExtension_t<sp/>GLimp_ExtensionPointer(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name<sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>multitexture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglMultiTexCoord2fARB<sp/>)(<sp/>GLenum<sp/>texture,<sp/>GLfloat<sp/>s,<sp/>GLfloat<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglMultiTexCoord2fvARB<sp/>)(<sp/>GLenum<sp/>texture,<sp/>GLfloat<sp/>*st<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglActiveTextureARB<sp/>)(<sp/>GLenum<sp/>texture<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglClientActiveTextureARB<sp/>)(<sp/>GLenum<sp/>texture<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARB_vertex_buffer_object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>PFNGLBINDBUFFERARBPROC<sp/>qglBindBufferARB;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>PFNGLDELETEBUFFERSARBPROC<sp/>qglDeleteBuffersARB;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>PFNGLGENBUFFERSARBPROC<sp/>qglGenBuffersARB;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>PFNGLISBUFFERARBPROC<sp/>qglIsBufferARB;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>PFNGLBUFFERDATAARBPROC<sp/>qglBufferDataARB;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>PFNGLBUFFERSUBDATAARBPROC<sp/>qglBufferSubDataARB;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>PFNGLGETBUFFERSUBDATAARBPROC<sp/>qglGetBufferSubDataARB;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>PFNGLMAPBUFFERARBPROC<sp/>qglMapBufferARB;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>PFNGLUNMAPBUFFERARBPROC<sp/>qglUnmapBufferARB;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>PFNGLGETBUFFERPARAMETERIVARBPROC<sp/>qglGetBufferParameterivARB;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>PFNGLGETBUFFERPOINTERVARBPROC<sp/>qglGetBufferPointervARB;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NV_register_combiners</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*qglCombinerParameterfvNV<sp/>)(<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*params<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*qglCombinerParameterivNV<sp/>)(<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*params<sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*qglCombinerParameterfNV<sp/>)(<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*qglCombinerParameteriNV<sp/>)(<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*qglCombinerInputNV<sp/>)(<sp/>GLenum<sp/>stage,<sp/>GLenum<sp/>portion,<sp/>GLenum<sp/><ref refid="structvariable" kindref="compound">variable</ref>,<sp/>GLenum<sp/>input,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLenum<sp/>mapping,<sp/>GLenum<sp/>componentUsage<sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*qglCombinerOutputNV<sp/>)(<sp/>GLenum<sp/>stage,<sp/>GLenum<sp/>portion,<sp/>GLenum<sp/>abOutput,<sp/>GLenum<sp/>cdOutput,<sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLenum<sp/>sumOutput,<sp/>GLenum<sp/>scale,<sp/>GLenum<sp/>bias,<sp/>GLboolean<sp/>abDotProduct,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLboolean<sp/>cdDotProduct,<sp/>GLboolean<sp/>muxSum<sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*qglFinalCombinerInputNV<sp/>)(<sp/>GLenum<sp/><ref refid="structvariable" kindref="compound">variable</ref>,<sp/>GLenum<sp/>input,<sp/>GLenum<sp/>mapping,<sp/>GLenum<sp/>componentUsage<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>3D<sp/>textures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(<sp/>APIENTRY<sp/>*qglTexImage3D)(GLenum,<sp/>GLint,<sp/>GLint,<sp/>GLsizei,<sp/>GLsizei,<sp/>GLsizei,<sp/>GLint,<sp/>GLenum,<sp/>GLenum,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>shared<sp/>texture<sp/>palette</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*qglColorTableEXT)(<sp/>int,<sp/>int,<sp/>int,<sp/>int,<sp/>int,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ATI_fragment_shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>PFNGLGENFRAGMENTSHADERSATIPROC<sp/><sp/>qglGenFragmentShadersATI;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>PFNGLBINDFRAGMENTSHADERATIPROC<sp/><sp/>qglBindFragmentShaderATI;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>PFNGLDELETEFRAGMENTSHADERATIPROC<sp/>qglDeleteFragmentShaderATI;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>PFNGLBEGINFRAGMENTSHADERATIPROC<sp/>qglBeginFragmentShaderATI;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>PFNGLENDFRAGMENTSHADERATIPROC<sp/><sp/><sp/>qglEndFragmentShaderATI;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>PFNGLPASSTEXCOORDATIPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglPassTexCoordATI;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>PFNGLSAMPLEMAPATIPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglSampleMapATI;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>PFNGLCOLORFRAGMENTOP1ATIPROC<sp/><sp/><sp/><sp/>qglColorFragmentOp1ATI;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>PFNGLCOLORFRAGMENTOP2ATIPROC<sp/><sp/><sp/><sp/>qglColorFragmentOp2ATI;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>PFNGLCOLORFRAGMENTOP3ATIPROC<sp/><sp/><sp/><sp/>qglColorFragmentOp3ATI;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>PFNGLALPHAFRAGMENTOP1ATIPROC<sp/><sp/><sp/><sp/>qglAlphaFragmentOp1ATI;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>PFNGLALPHAFRAGMENTOP2ATIPROC<sp/><sp/><sp/><sp/>qglAlphaFragmentOp2ATI;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>PFNGLALPHAFRAGMENTOP3ATIPROC<sp/><sp/><sp/><sp/>qglAlphaFragmentOp3ATI;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>PFNGLSETFRAGMENTSHADERCONSTANTATIPROC<sp/><sp/><sp/>qglSetFragmentShaderConstantATI;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EXT_stencil_two_side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>PFNGLACTIVESTENCILFACEEXTPROC<sp/><sp/><sp/>qglActiveStencilFaceEXT;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ATI_separate_stencil</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>PFNGLSTENCILOPSEPARATEATIPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglStencilOpSeparateATI;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>PFNGLSTENCILFUNCSEPARATEATIPROC<sp/><sp/><sp/><sp/><sp/>qglStencilFuncSeparateATI;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARB_texture_compression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>PFNGLCOMPRESSEDTEXIMAGE2DARBPROC<sp/><sp/><sp/><sp/>qglCompressedTexImage2DARB;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>PFNGLGETCOMPRESSEDTEXIMAGEARBPROC<sp/><sp/><sp/>qglGetCompressedTexImageARB;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARB_vertex_program<sp/>/<sp/>ARB_fragment_program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>PFNGLVERTEXATTRIBPOINTERARBPROC<sp/><sp/><sp/><sp/><sp/><sp/>qglVertexAttribPointerARB;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>PFNGLENABLEVERTEXATTRIBARRAYARBPROC<sp/><sp/>qglEnableVertexAttribArrayARB;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>PFNGLDISABLEVERTEXATTRIBARRAYARBPROC<sp/>qglDisableVertexAttribArrayARB;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>PFNGLPROGRAMSTRINGARBPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglProgramStringARB;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>PFNGLBINDPROGRAMARBPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglBindProgramARB;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>PFNGLGENPROGRAMSARBPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglGenProgramsARB;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>PFNGLPROGRAMENVPARAMETER4FVARBPROC<sp/><sp/><sp/>qglProgramEnvParameter4fvARB;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>PFNGLPROGRAMLOCALPARAMETER4FVARBPROC<sp/>qglProgramLocalParameter4fvARB;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GL_EXT_depth_bounds_test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>PFNGLDEPTHBOUNDSEXTPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qglDepthBoundsEXT;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//===========================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/>non-windows<sp/>systems<sp/>will<sp/>just<sp/>redefine<sp/>qgl*<sp/>to<sp/>gl*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(<sp/>__APPLE__<sp/>)<sp/>||<sp/>defined(<sp/>ID_GL_HARDLINK<sp/>)</highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qgl_linked.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/>windows<sp/>systems<sp/>use<sp/>a<sp/>function<sp/>pointer<sp/>for<sp/>each<sp/>call<sp/>so<sp/>we<sp/>can<sp/>do<sp/>our<sp/>log<sp/>file<sp/>intercepts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglAccum<sp/>)(GLenum<sp/>op,<sp/>GLfloat<sp/>value);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglAlphaFunc<sp/>)(GLenum<sp/>func,<sp/>GLclampf<sp/>ref);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>GLboolean<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglAreTexturesResident<sp/>)(GLsizei<sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLuint<sp/>*textures,<sp/>GLboolean<sp/>*residences);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglArrayElement<sp/>)(GLint<sp/>i);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglBegin<sp/>)(GLenum<sp/>mode);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglBindTexture<sp/>)(GLenum<sp/>target,<sp/>GLuint<sp/>texture);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglBitmap<sp/>)(GLsizei<sp/>width,<sp/>GLsizei<sp/>height,<sp/>GLfloat<sp/>xorig,<sp/>GLfloat<sp/>yorig,<sp/>GLfloat<sp/>xmove,<sp/>GLfloat<sp/>ymove,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte<sp/>*bitmap);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglBlendFunc<sp/>)(GLenum<sp/>sfactor,<sp/>GLenum<sp/>dfactor);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglCallList<sp/>)(GLuint<sp/>list);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglCallLists<sp/>)(GLsizei<sp/>n,<sp/>GLenum<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*lists);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglClear<sp/>)(GLbitfield<sp/>mask);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglClearAccum<sp/>)(GLfloat<sp/>red,<sp/>GLfloat<sp/>green,<sp/>GLfloat<sp/>blue,<sp/>GLfloat<sp/>alpha);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglClearColor<sp/>)(GLclampf<sp/>red,<sp/>GLclampf<sp/>green,<sp/>GLclampf<sp/>blue,<sp/>GLclampf<sp/>alpha);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglClearDepth<sp/>)(GLclampd<sp/>depth);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglClearIndex<sp/>)(GLfloat<sp/>c);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglClearStencil<sp/>)(GLint<sp/>s);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglClipPlane<sp/>)(GLenum<sp/>plane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*equation);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor3b<sp/>)(GLbyte<sp/>red,<sp/>GLbyte<sp/>green,<sp/>GLbyte<sp/>blue);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor3bv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLbyte<sp/>*v);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor3d<sp/>)(GLdouble<sp/>red,<sp/>GLdouble<sp/>green,<sp/>GLdouble<sp/>blue);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor3dv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor3f<sp/>)(GLfloat<sp/>red,<sp/>GLfloat<sp/>green,<sp/>GLfloat<sp/>blue);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor3fv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor3i<sp/>)(GLint<sp/>red,<sp/>GLint<sp/>green,<sp/>GLint<sp/>blue);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor3iv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor3s<sp/>)(GLshort<sp/>red,<sp/>GLshort<sp/>green,<sp/>GLshort<sp/>blue);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor3sv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor3ub<sp/>)(GLubyte<sp/>red,<sp/>GLubyte<sp/>green,<sp/>GLubyte<sp/>blue);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor3ubv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte<sp/>*v);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor3ui<sp/>)(GLuint<sp/>red,<sp/>GLuint<sp/>green,<sp/>GLuint<sp/>blue);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor3uiv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLuint<sp/>*v);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor3us<sp/>)(GLushort<sp/>red,<sp/>GLushort<sp/>green,<sp/>GLushort<sp/>blue);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor3usv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLushort<sp/>*v);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor4b<sp/>)(GLbyte<sp/>red,<sp/>GLbyte<sp/>green,<sp/>GLbyte<sp/>blue,<sp/>GLbyte<sp/>alpha);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor4bv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLbyte<sp/>*v);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor4d<sp/>)(GLdouble<sp/>red,<sp/>GLdouble<sp/>green,<sp/>GLdouble<sp/>blue,<sp/>GLdouble<sp/>alpha);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor4dv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor4f<sp/>)(GLfloat<sp/>red,<sp/>GLfloat<sp/>green,<sp/>GLfloat<sp/>blue,<sp/>GLfloat<sp/>alpha);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor4fv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor4i<sp/>)(GLint<sp/>red,<sp/>GLint<sp/>green,<sp/>GLint<sp/>blue,<sp/>GLint<sp/>alpha);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor4iv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor4s<sp/>)(GLshort<sp/>red,<sp/>GLshort<sp/>green,<sp/>GLshort<sp/>blue,<sp/>GLshort<sp/>alpha);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor4sv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor4ub<sp/>)(GLubyte<sp/>red,<sp/>GLubyte<sp/>green,<sp/>GLubyte<sp/>blue,<sp/>GLubyte<sp/>alpha);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor4ubv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte<sp/>*v);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor4ui<sp/>)(GLuint<sp/>red,<sp/>GLuint<sp/>green,<sp/>GLuint<sp/>blue,<sp/>GLuint<sp/>alpha);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor4uiv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLuint<sp/>*v);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor4us<sp/>)(GLushort<sp/>red,<sp/>GLushort<sp/>green,<sp/>GLushort<sp/>blue,<sp/>GLushort<sp/>alpha);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColor4usv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLushort<sp/>*v);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColorMask<sp/>)(GLboolean<sp/>red,<sp/>GLboolean<sp/>green,<sp/>GLboolean<sp/>blue,<sp/>GLboolean<sp/>alpha);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColorMaterial<sp/>)(GLenum<sp/>face,<sp/>GLenum<sp/>mode);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglColorPointer<sp/>)(GLint<sp/>size,<sp/>GLenum<sp/>type,<sp/>GLsizei<sp/>stride,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pointer);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglCopyPixels<sp/>)(GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLsizei<sp/>width,<sp/>GLsizei<sp/>height,<sp/>GLenum<sp/>type);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglCopyTexImage1D<sp/>)(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLenum<sp/>internalFormat,<sp/>GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLsizei<sp/>width,<sp/>GLint<sp/>border);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglCopyTexImage2D<sp/>)(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLenum<sp/>internalFormat,<sp/>GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLsizei<sp/>width,<sp/>GLsizei<sp/>height,<sp/>GLint<sp/>border);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglCopyTexSubImage1D<sp/>)(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLint<sp/>xoffset,<sp/>GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLsizei<sp/>width);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglCopyTexSubImage2D<sp/>)(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLint<sp/>xoffset,<sp/>GLint<sp/>yoffset,<sp/>GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLsizei<sp/>width,<sp/>GLsizei<sp/>height);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglCullFace<sp/>)(GLenum<sp/>mode);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglDeleteLists<sp/>)(GLuint<sp/>list,<sp/>GLsizei<sp/>range);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglDeleteTextures<sp/>)(GLsizei<sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLuint<sp/>*textures);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglDepthFunc<sp/>)(GLenum<sp/>func);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglDepthMask<sp/>)(GLboolean<sp/>flag);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglDepthRange<sp/>)(GLclampd<sp/>zNear,<sp/>GLclampd<sp/>zFar);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglDisable<sp/>)(GLenum<sp/>cap);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglDisableClientState<sp/>)(GLenum<sp/>array);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglDrawArrays<sp/>)(GLenum<sp/>mode,<sp/>GLint<sp/>first,<sp/>GLsizei<sp/>count);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglDrawBuffer<sp/>)(GLenum<sp/>mode);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglDrawElements<sp/>)(GLenum<sp/>mode,<sp/>GLsizei<sp/>count,<sp/>GLenum<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*indices);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglDrawPixels<sp/>)(GLsizei<sp/>width,<sp/>GLsizei<sp/>height,<sp/>GLenum<sp/>format,<sp/>GLenum<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pixels);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglEdgeFlag<sp/>)(GLboolean<sp/>flag);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglEdgeFlagPointer<sp/>)(GLsizei<sp/>stride,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pointer);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglEdgeFlagv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLboolean<sp/>*flag);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglEnable<sp/>)(GLenum<sp/>cap);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglEnableClientState<sp/>)(GLenum<sp/>array);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglEnd<sp/>)(void);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglEndList<sp/>)(void);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglEvalCoord1d<sp/>)(GLdouble<sp/>u);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglEvalCoord1dv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*u);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglEvalCoord1f<sp/>)(GLfloat<sp/>u);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglEvalCoord1fv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*u);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglEvalCoord2d<sp/>)(GLdouble<sp/>u,<sp/>GLdouble<sp/>v);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglEvalCoord2dv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*u);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglEvalCoord2f<sp/>)(GLfloat<sp/>u,<sp/>GLfloat<sp/>v);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglEvalCoord2fv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*u);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglEvalMesh1<sp/>)(GLenum<sp/>mode,<sp/>GLint<sp/>i1,<sp/>GLint<sp/>i2);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglEvalMesh2<sp/>)(GLenum<sp/>mode,<sp/>GLint<sp/>i1,<sp/>GLint<sp/>i2,<sp/>GLint<sp/>j1,<sp/>GLint<sp/>j2);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglEvalPoint1<sp/>)(GLint<sp/>i);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglEvalPoint2<sp/>)(GLint<sp/>i,<sp/>GLint<sp/>j);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglFeedbackBuffer<sp/>)(GLsizei<sp/>size,<sp/>GLenum<sp/>type,<sp/>GLfloat<sp/>*buffer);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglFinish<sp/>)(void);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglFlush<sp/>)(void);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglFogf<sp/>)(GLenum<sp/>pname,<sp/>GLfloat<sp/>param);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglFogfv<sp/>)(GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*params);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglFogi<sp/>)(GLenum<sp/>pname,<sp/>GLint<sp/>param);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglFogiv<sp/>)(GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*params);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglFrontFace<sp/>)(GLenum<sp/>mode);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglFrustum<sp/>)(GLdouble<sp/>left,<sp/>GLdouble<sp/>right,<sp/>GLdouble<sp/>bottom,<sp/>GLdouble<sp/>top,<sp/>GLdouble<sp/>zNear,<sp/>GLdouble<sp/>zFar);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>GLuint<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGenLists<sp/>)(GLsizei<sp/>range);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGenTextures<sp/>)(GLsizei<sp/>n,<sp/>GLuint<sp/>*textures);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetBooleanv<sp/>)(GLenum<sp/>pname,<sp/>GLboolean<sp/>*params);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetClipPlane<sp/>)(GLenum<sp/>plane,<sp/>GLdouble<sp/>*equation);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetDoublev<sp/>)(GLenum<sp/>pname,<sp/>GLdouble<sp/>*params);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>GLenum<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetError<sp/>)(void);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetFloatv<sp/>)(GLenum<sp/>pname,<sp/>GLfloat<sp/>*params);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetIntegerv<sp/>)(GLenum<sp/>pname,<sp/>GLint<sp/>*params);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetLightfv<sp/>)(GLenum<sp/>light,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>*params);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetLightiv<sp/>)(GLenum<sp/>light,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>*params);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetMapdv<sp/>)(GLenum<sp/>target,<sp/>GLenum<sp/>query,<sp/>GLdouble<sp/>*v);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetMapfv<sp/>)(GLenum<sp/>target,<sp/>GLenum<sp/>query,<sp/>GLfloat<sp/>*v);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetMapiv<sp/>)(GLenum<sp/>target,<sp/>GLenum<sp/>query,<sp/>GLint<sp/>*v);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetMaterialfv<sp/>)(GLenum<sp/>face,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>*params);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetMaterialiv<sp/>)(GLenum<sp/>face,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>*params);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetPixelMapfv<sp/>)(GLenum<sp/>map,<sp/>GLfloat<sp/>*values);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetPixelMapuiv<sp/>)(GLenum<sp/>map,<sp/>GLuint<sp/>*values);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetPixelMapusv<sp/>)(GLenum<sp/>map,<sp/>GLushort<sp/>*values);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetPointerv<sp/>)(GLenum<sp/>pname,<sp/>GLvoid*<sp/>*params);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetPolygonStipple<sp/>)(GLubyte<sp/>*mask);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte<sp/>*<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetString<sp/>)(GLenum<sp/>name);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetTexEnvfv<sp/>)(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>*params);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetTexEnviv<sp/>)(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>*params);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetTexGendv<sp/>)(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/>GLdouble<sp/>*params);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetTexGenfv<sp/>)(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>*params);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetTexGeniv<sp/>)(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>*params);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetTexImage<sp/>)(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLenum<sp/>format,<sp/>GLenum<sp/>type,<sp/>GLvoid<sp/>*pixels);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetTexLevelParameterfv<sp/>)(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>*params);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetTexLevelParameteriv<sp/>)(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>*params);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetTexParameterfv<sp/>)(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>*params);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglGetTexParameteriv<sp/>)(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>*params);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglHint<sp/>)(GLenum<sp/>target,<sp/>GLenum<sp/>mode);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglIndexMask<sp/>)(GLuint<sp/>mask);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglIndexPointer<sp/>)(GLenum<sp/>type,<sp/>GLsizei<sp/>stride,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pointer);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglIndexd<sp/>)(GLdouble<sp/>c);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglIndexdv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*c);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglIndexf<sp/>)(GLfloat<sp/>c);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglIndexfv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*c);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglIndexi<sp/>)(GLint<sp/>c);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglIndexiv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*c);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglIndexs<sp/>)(GLshort<sp/>c);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglIndexsv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*c);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglIndexub<sp/>)(GLubyte<sp/>c);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglIndexubv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte<sp/>*c);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglInitNames<sp/>)(void);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglInterleavedArrays<sp/>)(GLenum<sp/>format,<sp/>GLsizei<sp/>stride,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pointer);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>GLboolean<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglIsEnabled<sp/>)(GLenum<sp/>cap);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>GLboolean<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglIsList<sp/>)(GLuint<sp/>list);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>GLboolean<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglIsTexture<sp/>)(GLuint<sp/>texture);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglLightModelf<sp/>)(GLenum<sp/>pname,<sp/>GLfloat<sp/>param);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglLightModelfv<sp/>)(GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*params);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglLightModeli<sp/>)(GLenum<sp/>pname,<sp/>GLint<sp/>param);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglLightModeliv<sp/>)(GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*params);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglLightf<sp/>)(GLenum<sp/>light,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>param);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglLightfv<sp/>)(GLenum<sp/>light,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*params);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglLighti<sp/>)(GLenum<sp/>light,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>param);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglLightiv<sp/>)(GLenum<sp/>light,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*params);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglLineStipple<sp/>)(GLint<sp/>factor,<sp/>GLushort<sp/>pattern);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglLineWidth<sp/>)(GLfloat<sp/>width);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglListBase<sp/>)(GLuint<sp/>base);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglLoadIdentity<sp/>)(void);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglLoadMatrixd<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*m);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglLoadMatrixf<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*m);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglLoadName<sp/>)(GLuint<sp/>name);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglLogicOp<sp/>)(GLenum<sp/>opcode);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglMap1d<sp/>)(GLenum<sp/>target,<sp/>GLdouble<sp/>u1,<sp/>GLdouble<sp/>u2,<sp/>GLint<sp/>stride,<sp/>GLint<sp/>order,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*points);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglMap1f<sp/>)(GLenum<sp/>target,<sp/>GLfloat<sp/>u1,<sp/>GLfloat<sp/>u2,<sp/>GLint<sp/>stride,<sp/>GLint<sp/>order,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*points);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglMap2d<sp/>)(GLenum<sp/>target,<sp/>GLdouble<sp/>u1,<sp/>GLdouble<sp/>u2,<sp/>GLint<sp/>ustride,<sp/>GLint<sp/>uorder,<sp/>GLdouble<sp/>v1,<sp/>GLdouble<sp/>v2,<sp/>GLint<sp/>vstride,<sp/>GLint<sp/>vorder,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*points);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglMap2f<sp/>)(GLenum<sp/>target,<sp/>GLfloat<sp/>u1,<sp/>GLfloat<sp/>u2,<sp/>GLint<sp/>ustride,<sp/>GLint<sp/>uorder,<sp/>GLfloat<sp/>v1,<sp/>GLfloat<sp/>v2,<sp/>GLint<sp/>vstride,<sp/>GLint<sp/>vorder,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*points);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglMapGrid1d<sp/>)(GLint<sp/>un,<sp/>GLdouble<sp/>u1,<sp/>GLdouble<sp/>u2);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglMapGrid1f<sp/>)(GLint<sp/>un,<sp/>GLfloat<sp/>u1,<sp/>GLfloat<sp/>u2);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglMapGrid2d<sp/>)(GLint<sp/>un,<sp/>GLdouble<sp/>u1,<sp/>GLdouble<sp/>u2,<sp/>GLint<sp/>vn,<sp/>GLdouble<sp/>v1,<sp/>GLdouble<sp/>v2);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglMapGrid2f<sp/>)(GLint<sp/>un,<sp/>GLfloat<sp/>u1,<sp/>GLfloat<sp/>u2,<sp/>GLint<sp/>vn,<sp/>GLfloat<sp/>v1,<sp/>GLfloat<sp/>v2);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglMaterialf<sp/>)(GLenum<sp/>face,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>param);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglMaterialfv<sp/>)(GLenum<sp/>face,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*params);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglMateriali<sp/>)(GLenum<sp/>face,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>param);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglMaterialiv<sp/>)(GLenum<sp/>face,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*params);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglMatrixMode<sp/>)(GLenum<sp/>mode);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglMultMatrixd<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*m);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglMultMatrixf<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*m);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglNewList<sp/>)(GLuint<sp/>list,<sp/>GLenum<sp/>mode);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglNormal3b<sp/>)(GLbyte<sp/>nx,<sp/>GLbyte<sp/>ny,<sp/>GLbyte<sp/>nz);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglNormal3bv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLbyte<sp/>*v);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglNormal3d<sp/>)(GLdouble<sp/>nx,<sp/>GLdouble<sp/>ny,<sp/>GLdouble<sp/>nz);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglNormal3dv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglNormal3f<sp/>)(GLfloat<sp/>nx,<sp/>GLfloat<sp/>ny,<sp/>GLfloat<sp/>nz);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglNormal3fv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglNormal3i<sp/>)(GLint<sp/>nx,<sp/>GLint<sp/>ny,<sp/>GLint<sp/>nz);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglNormal3iv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglNormal3s<sp/>)(GLshort<sp/>nx,<sp/>GLshort<sp/>ny,<sp/>GLshort<sp/>nz);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglNormal3sv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglNormalPointer<sp/>)(GLenum<sp/>type,<sp/>GLsizei<sp/>stride,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pointer);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglOrtho<sp/>)(GLdouble<sp/>left,<sp/>GLdouble<sp/>right,<sp/>GLdouble<sp/>bottom,<sp/>GLdouble<sp/>top,<sp/>GLdouble<sp/>zNear,<sp/>GLdouble<sp/>zFar);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglPassThrough<sp/>)(GLfloat<sp/>token);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglPixelMapfv<sp/>)(GLenum<sp/>map,<sp/>GLsizei<sp/>mapsize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*values);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglPixelMapuiv<sp/>)(GLenum<sp/>map,<sp/>GLsizei<sp/>mapsize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLuint<sp/>*values);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglPixelMapusv<sp/>)(GLenum<sp/>map,<sp/>GLsizei<sp/>mapsize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLushort<sp/>*values);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglPixelStoref<sp/>)(GLenum<sp/>pname,<sp/>GLfloat<sp/>param);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglPixelStorei<sp/>)(GLenum<sp/>pname,<sp/>GLint<sp/>param);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglPixelTransferf<sp/>)(GLenum<sp/>pname,<sp/>GLfloat<sp/>param);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglPixelTransferi<sp/>)(GLenum<sp/>pname,<sp/>GLint<sp/>param);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglPixelZoom<sp/>)(GLfloat<sp/>xfactor,<sp/>GLfloat<sp/>yfactor);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglPointSize<sp/>)(GLfloat<sp/>size);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglPolygonMode<sp/>)(GLenum<sp/>face,<sp/>GLenum<sp/>mode);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglPolygonOffset<sp/>)(GLfloat<sp/>factor,<sp/>GLfloat<sp/>units);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglPolygonStipple<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte<sp/>*mask);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglPopAttrib<sp/>)(void);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglPopClientAttrib<sp/>)(void);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglPopMatrix<sp/>)(void);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglPopName<sp/>)(void);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglPrioritizeTextures<sp/>)(GLsizei<sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLuint<sp/>*textures,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLclampf<sp/>*priorities);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglPushAttrib<sp/>)(GLbitfield<sp/>mask);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglPushClientAttrib<sp/>)(GLbitfield<sp/>mask);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglPushMatrix<sp/>)(void);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglPushName<sp/>)(GLuint<sp/>name);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRasterPos2d<sp/>)(GLdouble<sp/>x,<sp/>GLdouble<sp/>y);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRasterPos2dv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRasterPos2f<sp/>)(GLfloat<sp/>x,<sp/>GLfloat<sp/>y);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRasterPos2fv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRasterPos2i<sp/>)(GLint<sp/>x,<sp/>GLint<sp/>y);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRasterPos2iv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRasterPos2s<sp/>)(GLshort<sp/>x,<sp/>GLshort<sp/>y);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRasterPos2sv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRasterPos3d<sp/>)(GLdouble<sp/>x,<sp/>GLdouble<sp/>y,<sp/>GLdouble<sp/>z);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRasterPos3dv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRasterPos3f<sp/>)(GLfloat<sp/>x,<sp/>GLfloat<sp/>y,<sp/>GLfloat<sp/>z);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRasterPos3fv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRasterPos3i<sp/>)(GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLint<sp/>z);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRasterPos3iv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRasterPos3s<sp/>)(GLshort<sp/>x,<sp/>GLshort<sp/>y,<sp/>GLshort<sp/>z);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRasterPos3sv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRasterPos4d<sp/>)(GLdouble<sp/>x,<sp/>GLdouble<sp/>y,<sp/>GLdouble<sp/>z,<sp/>GLdouble<sp/>w);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRasterPos4dv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRasterPos4f<sp/>)(GLfloat<sp/>x,<sp/>GLfloat<sp/>y,<sp/>GLfloat<sp/>z,<sp/>GLfloat<sp/>w);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRasterPos4fv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRasterPos4i<sp/>)(GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLint<sp/>z,<sp/>GLint<sp/>w);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRasterPos4iv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRasterPos4s<sp/>)(GLshort<sp/>x,<sp/>GLshort<sp/>y,<sp/>GLshort<sp/>z,<sp/>GLshort<sp/>w);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRasterPos4sv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglReadBuffer<sp/>)(GLenum<sp/>mode);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglReadPixels<sp/>)(GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLsizei<sp/>width,<sp/>GLsizei<sp/>height,<sp/>GLenum<sp/>format,<sp/>GLenum<sp/>type,<sp/>GLvoid<sp/>*pixels);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRectd<sp/>)(GLdouble<sp/>x1,<sp/>GLdouble<sp/>y1,<sp/>GLdouble<sp/>x2,<sp/>GLdouble<sp/>y2);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRectdv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v2);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRectf<sp/>)(GLfloat<sp/>x1,<sp/>GLfloat<sp/>y1,<sp/>GLfloat<sp/>x2,<sp/>GLfloat<sp/>y2);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRectfv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v2);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRecti<sp/>)(GLint<sp/>x1,<sp/>GLint<sp/>y1,<sp/>GLint<sp/>x2,<sp/>GLint<sp/>y2);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRectiv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v2);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRects<sp/>)(GLshort<sp/>x1,<sp/>GLshort<sp/>y1,<sp/>GLshort<sp/>x2,<sp/>GLshort<sp/>y2);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRectsv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v2);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>GLint<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRenderMode<sp/>)(GLenum<sp/>mode);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRotated<sp/>)(GLdouble<sp/>angle,<sp/>GLdouble<sp/>x,<sp/>GLdouble<sp/>y,<sp/>GLdouble<sp/>z);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglRotatef<sp/>)(GLfloat<sp/>angle,<sp/>GLfloat<sp/>x,<sp/>GLfloat<sp/>y,<sp/>GLfloat<sp/>z);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglScaled<sp/>)(GLdouble<sp/>x,<sp/>GLdouble<sp/>y,<sp/>GLdouble<sp/>z);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglScalef<sp/>)(GLfloat<sp/>x,<sp/>GLfloat<sp/>y,<sp/>GLfloat<sp/>z);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglScissor<sp/>)(GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLsizei<sp/>width,<sp/>GLsizei<sp/>height);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglSelectBuffer<sp/>)(GLsizei<sp/>size,<sp/>GLuint<sp/>*buffer);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglShadeModel<sp/>)(GLenum<sp/>mode);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglStencilFunc<sp/>)(GLenum<sp/>func,<sp/>GLint<sp/>ref,<sp/>GLuint<sp/>mask);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglStencilMask<sp/>)(GLuint<sp/>mask);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglStencilOp<sp/>)(GLenum<sp/>fail,<sp/>GLenum<sp/>zfail,<sp/>GLenum<sp/>zpass);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord1d<sp/>)(GLdouble<sp/>s);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord1dv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord1f<sp/>)(GLfloat<sp/>s);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord1fv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord1i<sp/>)(GLint<sp/>s);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord1iv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord1s<sp/>)(GLshort<sp/>s);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord1sv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord2d<sp/>)(GLdouble<sp/>s,<sp/>GLdouble<sp/>t);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord2dv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord2f<sp/>)(GLfloat<sp/>s,<sp/>GLfloat<sp/>t);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord2fv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord2i<sp/>)(GLint<sp/>s,<sp/>GLint<sp/>t);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord2iv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord2s<sp/>)(GLshort<sp/>s,<sp/>GLshort<sp/>t);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord2sv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord3d<sp/>)(GLdouble<sp/>s,<sp/>GLdouble<sp/>t,<sp/>GLdouble<sp/>r);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord3dv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord3f<sp/>)(GLfloat<sp/>s,<sp/>GLfloat<sp/>t,<sp/>GLfloat<sp/>r);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord3fv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord3i<sp/>)(GLint<sp/>s,<sp/>GLint<sp/>t,<sp/>GLint<sp/>r);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord3iv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord3s<sp/>)(GLshort<sp/>s,<sp/>GLshort<sp/>t,<sp/>GLshort<sp/>r);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord3sv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord4d<sp/>)(GLdouble<sp/>s,<sp/>GLdouble<sp/>t,<sp/>GLdouble<sp/>r,<sp/>GLdouble<sp/>q);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord4dv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord4f<sp/>)(GLfloat<sp/>s,<sp/>GLfloat<sp/>t,<sp/>GLfloat<sp/>r,<sp/>GLfloat<sp/>q);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord4fv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord4i<sp/>)(GLint<sp/>s,<sp/>GLint<sp/>t,<sp/>GLint<sp/>r,<sp/>GLint<sp/>q);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord4iv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord4s<sp/>)(GLshort<sp/>s,<sp/>GLshort<sp/>t,<sp/>GLshort<sp/>r,<sp/>GLshort<sp/>q);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoord4sv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexCoordPointer<sp/>)(GLint<sp/>size,<sp/>GLenum<sp/>type,<sp/>GLsizei<sp/>stride,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pointer);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexEnvf<sp/>)(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>param);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexEnvfv<sp/>)(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*params);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexEnvi<sp/>)(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>param);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexEnviv<sp/>)(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*params);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexGend<sp/>)(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/>GLdouble<sp/>param);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexGendv<sp/>)(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*params);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexGenf<sp/>)(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>param);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexGenfv<sp/>)(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*params);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexGeni<sp/>)(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>param);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexGeniv<sp/>)(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*params);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexImage1D<sp/>)(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLint<sp/>internalformat,<sp/>GLsizei<sp/>width,<sp/>GLint<sp/>border,<sp/>GLenum<sp/>format,<sp/>GLenum<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pixels);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexImage2D<sp/>)(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLint<sp/>internalformat,<sp/>GLsizei<sp/>width,<sp/>GLsizei<sp/>height,<sp/>GLint<sp/>border,<sp/>GLenum<sp/>format,<sp/>GLenum<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pixels);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexParameterf<sp/>)(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>param);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexParameterfv<sp/>)(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*params);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexParameteri<sp/>)(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>param);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexParameteriv<sp/>)(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*params);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexSubImage1D<sp/>)(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLint<sp/>xoffset,<sp/>GLsizei<sp/>width,<sp/>GLenum<sp/>format,<sp/>GLenum<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pixels);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTexSubImage2D<sp/>)(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLint<sp/>xoffset,<sp/>GLint<sp/>yoffset,<sp/>GLsizei<sp/>width,<sp/>GLsizei<sp/>height,<sp/>GLenum<sp/>format,<sp/>GLenum<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pixels);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTranslated<sp/>)(GLdouble<sp/>x,<sp/>GLdouble<sp/>y,<sp/>GLdouble<sp/>z);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglTranslatef<sp/>)(GLfloat<sp/>x,<sp/>GLfloat<sp/>y,<sp/>GLfloat<sp/>z);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglVertex2d<sp/>)(GLdouble<sp/>x,<sp/>GLdouble<sp/>y);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglVertex2dv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglVertex2f<sp/>)(GLfloat<sp/>x,<sp/>GLfloat<sp/>y);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglVertex2fv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglVertex2i<sp/>)(GLint<sp/>x,<sp/>GLint<sp/>y);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglVertex2iv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglVertex2s<sp/>)(GLshort<sp/>x,<sp/>GLshort<sp/>y);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglVertex2sv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglVertex3d<sp/>)(GLdouble<sp/>x,<sp/>GLdouble<sp/>y,<sp/>GLdouble<sp/>z);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglVertex3dv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglVertex3f<sp/>)(GLfloat<sp/>x,<sp/>GLfloat<sp/>y,<sp/>GLfloat<sp/>z);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglVertex3fv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglVertex3i<sp/>)(GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLint<sp/>z);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglVertex3iv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglVertex3s<sp/>)(GLshort<sp/>x,<sp/>GLshort<sp/>y,<sp/>GLshort<sp/>z);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglVertex3sv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglVertex4d<sp/>)(GLdouble<sp/>x,<sp/>GLdouble<sp/>y,<sp/>GLdouble<sp/>z,<sp/>GLdouble<sp/>w);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglVertex4dv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglVertex4f<sp/>)(GLfloat<sp/>x,<sp/>GLfloat<sp/>y,<sp/>GLfloat<sp/>z,<sp/>GLfloat<sp/>w);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglVertex4fv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglVertex4i<sp/>)(GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLint<sp/>z,<sp/>GLint<sp/>w);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglVertex4iv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglVertex4s<sp/>)(GLshort<sp/>x,<sp/>GLshort<sp/>y,<sp/>GLshort<sp/>z,<sp/>GLshort<sp/>w);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglVertex4sv<sp/>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglVertexPointer<sp/>)(GLint<sp/>size,<sp/>GLenum<sp/>type,<sp/>GLsizei<sp/>stride,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pointer);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>void<sp/>(<sp/>APIENTRY<sp/>*<sp/>qglViewport<sp/>)(GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLsizei<sp/>width,<sp/>GLsizei<sp/>height);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(<sp/>_WIN32<sp/>)</highlight></codeline>
<codeline lineno="515"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>int<sp/><sp/><sp/>(<sp/>WINAPI<sp/>*<sp/>qwglChoosePixelFormat<sp/>)(HDC,<sp/>CONST<sp/>PIXELFORMATDESCRIPTOR<sp/>*);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>int<sp/><sp/><sp/>(<sp/>WINAPI<sp/>*<sp/>qwglDescribePixelFormat)<sp/>(HDC,<sp/>int,<sp/>UINT,<sp/>LPPIXELFORMATDESCRIPTOR);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>int<sp/><sp/><sp/>(<sp/>WINAPI<sp/>*<sp/>qwglGetPixelFormat)(HDC);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>BOOL<sp/><sp/>(<sp/>WINAPI<sp/>*<sp/>qwglSetPixelFormat)(HDC,<sp/>int,<sp/>CONST<sp/>PIXELFORMATDESCRIPTOR<sp/>*);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/>BOOL<sp/><sp/>(<sp/>WINAPI<sp/>*<sp/>qwglSwapBuffers)(HDC);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>BOOL<sp/><sp/>(<sp/>WINAPI<sp/>*<sp/>qwglCopyContext)(HGLRC,<sp/>HGLRC,<sp/>UINT);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>HGLRC<sp/>(<sp/>WINAPI<sp/>*<sp/>qwglCreateContext)(HDC);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>HGLRC<sp/>(<sp/>WINAPI<sp/>*<sp/>qwglCreateLayerContext)(HDC,<sp/>int);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>BOOL<sp/><sp/>(<sp/>WINAPI<sp/>*<sp/>qwglDeleteContext)(HGLRC);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>HGLRC<sp/>(<sp/>WINAPI<sp/>*<sp/>qwglGetCurrentContext)(VOID);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>HDC<sp/><sp/><sp/>(<sp/>WINAPI<sp/>*<sp/>qwglGetCurrentDC)(VOID);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>PROC<sp/><sp/>(<sp/>WINAPI<sp/>*<sp/>qwglGetProcAddress)(LPCSTR);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>BOOL<sp/><sp/>(<sp/>WINAPI<sp/>*<sp/>qwglMakeCurrent)(HDC,<sp/>HGLRC);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>BOOL<sp/><sp/>(<sp/>WINAPI<sp/>*<sp/>qwglShareLists)(HGLRC,<sp/>HGLRC);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>BOOL<sp/><sp/>(<sp/>WINAPI<sp/>*<sp/>qwglUseFontBitmaps)(HDC,<sp/>DWORD,<sp/>DWORD,<sp/>DWORD);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>BOOL<sp/><sp/>(<sp/>WINAPI<sp/>*<sp/>qwglUseFontOutlines)(HDC,<sp/>DWORD,<sp/>DWORD,<sp/>DWORD,<sp/>FLOAT,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLOAT,<sp/>int,<sp/>LPGLYPHMETRICSFLOAT);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>BOOL<sp/>(<sp/>WINAPI<sp/>*<sp/>qwglDescribeLayerPlane)(HDC,<sp/>int,<sp/>int,<sp/>UINT,</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LPLAYERPLANEDESCRIPTOR);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int<sp/><sp/>(<sp/>WINAPI<sp/>*<sp/>qwglSetLayerPaletteEntries)(HDC,<sp/>int,<sp/>int,<sp/>int,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONST<sp/>COLORREF<sp/>*);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int<sp/><sp/>(<sp/>WINAPI<sp/>*<sp/>qwglGetLayerPaletteEntries)(HDC,<sp/>int,<sp/>int,<sp/>int,</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COLORREF<sp/>*);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>BOOL<sp/>(<sp/>WINAPI<sp/>*<sp/>qwglRealizeLayerPalette)(HDC,<sp/>int,<sp/>BOOL);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>BOOL<sp/>(<sp/>WINAPI<sp/>*<sp/>qwglSwapLayerBuffers)(HDC,<sp/>UINT);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>_WIN32</highlight></codeline>
<codeline lineno="546"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(<sp/>__linux__<sp/>)</highlight></codeline>
<codeline lineno="548"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="comment">//GLX<sp/>Functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>XVisualInfo<sp/>*<sp/>(*qglXChooseVisual)(<sp/>Display<sp/>*dpy,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>screen,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*attribList<sp/>);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>GLXContext<sp/>(*qglXCreateContext)(<sp/>Display<sp/>*dpy,<sp/>XVisualInfo<sp/>*vis,<sp/>GLXContext<sp/>shareList,<sp/>Bool<sp/>direct<sp/>);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*qglXDestroyContext)(<sp/>Display<sp/>*dpy,<sp/>GLXContext<sp/>ctx<sp/>);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>Bool<sp/>(*qglXMakeCurrent)(<sp/>Display<sp/>*dpy,<sp/>GLXDrawable<sp/>drawable,<sp/>GLXContext<sp/>ctx);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*qglXSwapBuffers)(<sp/>Display<sp/>*dpy,<sp/>GLXDrawable<sp/>drawable<sp/>);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>GLExtension_t<sp/>(*qglXGetProcAddressARB)(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte<sp/>*procname<sp/>);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>the<sp/>code<sp/>is<sp/>correctly<sp/>using<sp/>qgl<sp/>everywhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>enable<sp/>that<sp/>when<sp/>building<sp/>glimp<sp/>itself<sp/>obviously..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(<sp/>GLIMP<sp/>)</highlight></codeline>
<codeline lineno="560"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&quot;../sys/linux/qgl_enforce.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="562"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>__linux__</highlight></codeline>
<codeline lineno="564"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>hardlinlk<sp/>vs<sp/>dlopen</highlight></codeline>
<codeline lineno="566"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/renderer/qgl.h"/>
  </compounddef>
</doxygen>
