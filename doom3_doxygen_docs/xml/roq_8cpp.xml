<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="roq_8cpp" kind="file">
    <compoundname>roq.cpp</compoundname>
    <includes refid="precompiled_8h" local="yes">../../../idlib/precompiled.h</includes>
    <includes refid="roq_8h" local="yes">roq.h</includes>
    <includes refid="tools_2compilers_2roqvq_2codec_8h" local="yes">codec.h</includes>
    <innerclass refid="structmy__destination__mgr" prot="public">my_destination_mgr</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="roq_8cpp_1aaa572679b68ce44ebdaf8e21772ce9a7" prot="public" static="no">
        <type><ref refid="structmy__destination__mgr" kindref="compound">my_destination_mgr</ref> *</type>
        <definition>typedef my_destination_mgr* my_dest_ptr</definition>
        <argsstring></argsstring>
        <name>my_dest_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/compilers/roqvq/roq.cpp" line="219" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/compilers/roqvq/roq.cpp" bodystart="219" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="roq_8cpp_1aae1c3da604d30a330a06d9b167b6f849" prot="public" static="no" mutable="no">
        <type><ref refid="classroq" kindref="compound">roq</ref> *</type>
        <definition>roq* theRoQ</definition>
        <argsstring></argsstring>
        <name>theRoQ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/compilers/roqvq/roq.cpp" line="34" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/compilers/roqvq/roq.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="roq_8cpp_1af2cf277712f0c99076d612450f2e663a" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int hackSize</definition>
        <argsstring></argsstring>
        <name>hackSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/compilers/roqvq/roq.cpp" line="358" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/compilers/roqvq/roq.cpp" bodystart="358" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="roq_8cpp_1ac58de86b939b5d122c37ed1c707c860b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RoQFileEncode_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>RoQFileEncode_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/tools/compilers/roqvq/roq.cpp" line="844" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/compilers/roqvq/roq.cpp" bodystart="844" bodyend="855"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../../idlib/precompiled.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>hdrstop</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;roq.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;codec.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="classroq" kindref="compound">roq</ref><sp/><sp/><sp/><sp/><sp/>*theRoQ;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>roq<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">roq::roq(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>image<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>quietMode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>encoder<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>previousSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>lastFrame<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>dataStuff=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">roq::~roq(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>image;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(encoder)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>encoder;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>roq::EncodeQuietly(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>which<sp/>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>quietMode<sp/>=<sp/>which;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>roq::IsQuiet(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>quietMode;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>roq::IsLastFrame(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lastFrame;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>roq::Scaleable(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>paramFile-&gt;IsScaleable();</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>roq::ParamNoAlpha(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>paramFile-&gt;NoAlpha();</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>roq::MakingVideo(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//paramFile-&gt;timecode];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>roq::SearchType(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>paramFile-&gt;SearchType();</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>roq::HasSound(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>paramFile-&gt;HasSound();</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>roq::PreviousFrameSize(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>previousSize;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>roq::FirstFrameSize(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>paramFile-&gt;FirstFrameSize();</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>roq::NormalFrameSize(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>paramFile-&gt;NormalFrameSize();</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>roq::CurrentFilename(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>currentFile.c_str();</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>roq::EncodeStream(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*paramInputFile<sp/>)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>onFrame;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_str" kindref="compound">idStr</ref><sp/><sp/><sp/>f0,<sp/>f1,<sp/>f2;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>morestuff;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>onFrame<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>encoder<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcodec" kindref="compound">codec</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>paramFile<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classroq_param" kindref="compound">roqParam</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>paramFile-&gt;numInputFiles<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>paramFile-&gt;InitFromFile(<sp/>paramInputFile<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!paramFile-&gt;NumberOfFrames())<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>InitRoQFile(<sp/>paramFile-&gt;outputFilename);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>numberOfFrames<sp/>=<sp/>paramFile-&gt;NumberOfFrames();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(paramFile-&gt;NoAlpha()==</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>common-&gt;Printf(</highlight><highlight class="stringliteral">&quot;encodeStream:<sp/>eluding<sp/>alpha\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>f0<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>f1<sp/>=<sp/>paramFile-&gt;GetNextImageFilename();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>paramFile-&gt;MoreFrames()<sp/>==<sp/>true<sp/>))<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f2<sp/>=<sp/>paramFile-&gt;GetNextImageFilename();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>morestuff<sp/>=<sp/>numberOfFrames;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>morestuff<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LoadAndDisplayImage(<sp/>f1<sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(onFrame==1)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoder-&gt;SparseEncode();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WriteLossless();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(<sp/>f0,<sp/>f1<sp/>)<sp/>&amp;&amp;<sp/>strcmp(<sp/>f1,<sp/>f2)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WriteHangFrame();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoder-&gt;SparseEncode();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>onFrame++;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f0<sp/>=<sp/>f1;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f1<sp/>=<sp/>f2;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(paramFile-&gt;MoreFrames()<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f2<sp/>=<sp/>paramFile-&gt;GetNextImageFilename();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>morestuff--;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>session-&gt;UpdateScreen();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(numberOfFrames<sp/>!=<sp/>1)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(image-&gt;hasAlpha()<sp/>&amp;&amp;<sp/>paramFile-&gt;NoAlpha()==false)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastFrame<sp/>=<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoder-&gt;SparseEncode();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WriteLossless();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>CloseRoQFile();</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>roq::Write16Word(<sp/>word<sp/>*aWord,<sp/><ref refid="classid_file" kindref="compound">idFile</ref><sp/>*stream<sp/>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/><sp/>a,<sp/>b;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>*aWord<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>*aWord<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;Write(<sp/>&amp;a,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;Write(<sp/>&amp;b,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>roq::Write32Word(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*aWord,<sp/><ref refid="classid_file" kindref="compound">idFile</ref><sp/>*stream<sp/>)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/><sp/>a,<sp/>b,<sp/>c,<sp/>d;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>*aWord<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>(*aWord<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>(*aWord<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>(*aWord<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;Write(<sp/>&amp;a,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;Write(<sp/>&amp;b,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;Write(<sp/>&amp;c,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>stream-&gt;Write(<sp/>&amp;d,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>roq::SizeFile(<sp/><ref refid="classid_file" kindref="compound">idFile</ref><sp/>*ftosize<sp/>)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ftosize-&gt;Length();</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Expanded<sp/>data<sp/>destination<sp/>object<sp/>for<sp/>stdio<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__destination__mgr" kindref="compound">jpeg_destination_mgr</ref><sp/>pub;<sp/></highlight><highlight class="comment">/*<sp/>public<sp/>fields<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>byte*<sp/>outfile;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>target<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>size;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}<sp/><ref refid="structmy__destination__mgr" kindref="compound">my_destination_mgr</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structmy__destination__mgr" kindref="compound">my_destination_mgr</ref><sp/>*<sp/><ref refid="structmy__destination__mgr" kindref="compound">my_dest_ptr</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*<sp/>Initialize<sp/>destination<sp/>---<sp/>called<sp/>by<sp/>jpeg_start_compress</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*<sp/>before<sp/>any<sp/>data<sp/>is<sp/>actually<sp/>written.</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>roq::JPEGInitDestination<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>my_dest_ptr<sp/>dest<sp/>=<sp/>(my_dest_ptr)<sp/>cinfo-&gt;dest;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>dest-&gt;pub.next_output_byte<sp/>=<sp/>dest-&gt;outfile;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>dest-&gt;pub.free_in_buffer<sp/>=<sp/>dest-&gt;size;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*<sp/>Empty<sp/>the<sp/>output<sp/>buffer<sp/>---<sp/>called<sp/>whenever<sp/>buffer<sp/>fills<sp/>up.</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*<sp/>In<sp/>typical<sp/>applications,<sp/>this<sp/>should<sp/>write<sp/>the<sp/>entire<sp/>output<sp/>buffer</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*<sp/>(ignoring<sp/>the<sp/>current<sp/>state<sp/>of<sp/>next_output_byte<sp/>&amp;<sp/>free_in_buffer),</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*<sp/>reset<sp/>the<sp/>pointer<sp/>&amp;<sp/>count<sp/>to<sp/>the<sp/>start<sp/>of<sp/>the<sp/>buffer,<sp/>and<sp/>return<sp/>true</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*<sp/>indicating<sp/>that<sp/>the<sp/>buffer<sp/>has<sp/>been<sp/>dumped.</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/>In<sp/>applications<sp/>that<sp/>need<sp/>to<sp/>be<sp/>able<sp/>to<sp/>suspend<sp/>compression<sp/>due<sp/>to<sp/>output</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/>overrun,<sp/>a<sp/>FALSE<sp/>return<sp/>indicates<sp/>that<sp/>the<sp/>buffer<sp/>cannot<sp/>be<sp/>emptied<sp/>now.</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*<sp/>In<sp/>this<sp/>situation,<sp/>the<sp/>compressor<sp/>will<sp/>return<sp/>to<sp/>its<sp/>caller<sp/>(possibly<sp/>with</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*<sp/>an<sp/>indication<sp/>that<sp/>it<sp/>has<sp/>not<sp/>accepted<sp/>all<sp/>the<sp/>supplied<sp/>scanlines).<sp/><sp/>The</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*<sp/>application<sp/>should<sp/>resume<sp/>compression<sp/>after<sp/>it<sp/>has<sp/>made<sp/>more<sp/>room<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/>*<sp/>output<sp/>buffer.<sp/><sp/>Note<sp/>that<sp/>there<sp/>are<sp/>substantial<sp/>restrictions<sp/>on<sp/>the<sp/>use<sp/>of</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/>*<sp/>suspension<sp/>---<sp/>see<sp/>the<sp/>documentation.</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*<sp/>When<sp/>suspending,<sp/>the<sp/>compressor<sp/>will<sp/>back<sp/>up<sp/>to<sp/>a<sp/>convenient<sp/>restart<sp/>point</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/>*<sp/>(typically<sp/>the<sp/>start<sp/>of<sp/>the<sp/>current<sp/>MCU).<sp/>next_output_byte<sp/>&amp;<sp/>free_in_buffer</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/>*<sp/>indicate<sp/>where<sp/>the<sp/>restart<sp/>point<sp/>will<sp/>be<sp/>if<sp/>the<sp/>current<sp/>call<sp/>returns<sp/>FALSE.</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/>*<sp/>Data<sp/>beyond<sp/>this<sp/>point<sp/>will<sp/>be<sp/>regenerated<sp/>after<sp/>resumption,<sp/>so<sp/>do<sp/>not</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/>*<sp/>write<sp/>it<sp/>out<sp/>when<sp/>emptying<sp/>the<sp/>buffer<sp/>externally.</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>roq::JPEGEmptyOutputBuffer<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/>Compression<sp/>initialization.</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/>Before<sp/>calling<sp/>this,<sp/>all<sp/>parameters<sp/>and<sp/>a<sp/>data<sp/>destination<sp/>must<sp/>be<sp/>set<sp/>up.</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*<sp/>We<sp/>require<sp/>a<sp/>write_all_tables<sp/>parameter<sp/>as<sp/>a<sp/>failsafe<sp/>check<sp/>when<sp/>writing</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/>multiple<sp/>datastreams<sp/>from<sp/>the<sp/>same<sp/>compression<sp/>object.<sp/><sp/>Since<sp/>prior<sp/>runs</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/>will<sp/>have<sp/>left<sp/>all<sp/>the<sp/>tables<sp/>marked<sp/>sent_table=true,<sp/>a<sp/>subsequent<sp/>run</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*<sp/>would<sp/>emit<sp/>an<sp/>abbreviated<sp/>stream<sp/>(no<sp/>tables)<sp/>by<sp/>default.<sp/><sp/>This<sp/>may<sp/>be<sp/>what</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/>is<sp/>wanted,<sp/>but<sp/>for<sp/>safety&apos;s<sp/>sake<sp/>it<sp/>should<sp/>not<sp/>be<sp/>the<sp/>default<sp/>behavior:</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*<sp/>programmers<sp/>should<sp/>have<sp/>to<sp/>make<sp/>a<sp/>deliberate<sp/>choice<sp/>to<sp/>emit<sp/>abbreviated</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*<sp/>images.<sp/><sp/>Therefore<sp/>the<sp/>documentation<sp/>and<sp/>examples<sp/>should<sp/>encourage<sp/>people</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*<sp/>to<sp/>pass<sp/>write_all_tables=true;<sp/>then<sp/>it<sp/>will<sp/>take<sp/>active<sp/>thought<sp/>to<sp/>do<sp/>the</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*<sp/>wrong<sp/>thing.</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>roq::JPEGStartCompress<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>write_all_tables)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;global_state<sp/>!=<sp/>CSTATE_START)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_BAD_STATE,<sp/>cinfo-&gt;global_state);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(write_all_tables)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_suppress_tables(cinfo,<sp/>FALSE);<sp/></highlight><highlight class="comment">/*<sp/>mark<sp/>all<sp/>tables<sp/>to<sp/>be<sp/>written<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>(Re)initialize<sp/>error<sp/>mgr<sp/>and<sp/>destination<sp/>modules<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>(*cinfo-&gt;err-&gt;reset_error_mgr)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>(*cinfo-&gt;dest-&gt;init_destination)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Perform<sp/>master<sp/>selection<sp/>of<sp/>active<sp/>modules<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>jinit_compress_master(cinfo);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>for<sp/>the<sp/>first<sp/>pass<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>(*cinfo-&gt;master-&gt;prepare_for_pass)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ready<sp/>for<sp/>application<sp/>to<sp/>drive<sp/>first<sp/>pass<sp/>through<sp/>jpeg_write_scanlines</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/><sp/><sp/>*<sp/>or<sp/>jpeg_write_raw_data.</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>cinfo-&gt;next_scanline<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>cinfo-&gt;global_state<sp/>=<sp/>(cinfo-&gt;raw_data_in<sp/>?<sp/>CSTATE_RAW_OK<sp/>:<sp/>CSTATE_SCANNING);</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*<sp/>Write<sp/>some<sp/>scanlines<sp/>of<sp/>data<sp/>to<sp/>the<sp/>JPEG<sp/>compressor.</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*<sp/>The<sp/>return<sp/>value<sp/>will<sp/>be<sp/>the<sp/>number<sp/>of<sp/>lines<sp/>actually<sp/>written.</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*<sp/>This<sp/>should<sp/>be<sp/>less<sp/>than<sp/>the<sp/>supplied<sp/>num_lines<sp/>only<sp/>in<sp/>case<sp/>that</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*<sp/>the<sp/>data<sp/>destination<sp/>module<sp/>has<sp/>requested<sp/>suspension<sp/>of<sp/>the<sp/>compressor,</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*<sp/>or<sp/>if<sp/>more<sp/>than<sp/>image_height<sp/>scanlines<sp/>are<sp/>passed<sp/>in.</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/>*<sp/>Note:<sp/>we<sp/>warn<sp/>about<sp/>excess<sp/>calls<sp/>to<sp/>jpeg_write_scanlines()<sp/>since</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/>*<sp/>this<sp/>likely<sp/>signals<sp/>an<sp/>application<sp/>programmer<sp/>error.<sp/><sp/>However,</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*<sp/>excess<sp/>scanlines<sp/>passed<sp/>in<sp/>the<sp/>last<sp/>valid<sp/>call<sp/>are<sp/>*silently*<sp/>ignored,</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*<sp/>so<sp/>that<sp/>the<sp/>application<sp/>need<sp/>not<sp/>adjust<sp/>num_lines<sp/>for<sp/>end-of-image</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*<sp/>when<sp/>using<sp/>a<sp/>multiple-scanline<sp/>buffer.</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal">JDIMENSION<sp/>roq::JPEGWriteScanlines<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,<sp/>JSAMPARRAY<sp/>scanlines,<sp/>JDIMENSION<sp/>num_lines)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>JDIMENSION<sp/>row_ctr,<sp/>rows_left;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;global_state<sp/>!=<sp/>CSTATE_SCANNING)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>ERREXIT1(cinfo,<sp/>JERR_BAD_STATE,<sp/>cinfo-&gt;global_state);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;next_scanline<sp/>&gt;=<sp/>cinfo-&gt;image_height)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>WARNMS(cinfo,<sp/>JWRN_TOO_MUCH_DATA);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>progress<sp/>monitor<sp/>hook<sp/>if<sp/>present<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;progress<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;progress-&gt;pass_counter<sp/>=<sp/>(long)<sp/>cinfo-&gt;next_scanline;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;progress-&gt;pass_limit<sp/>=<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>cinfo-&gt;image_height;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;progress-&gt;progress_monitor)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Give<sp/>master<sp/>control<sp/>module<sp/>another<sp/>chance<sp/>if<sp/>this<sp/>is<sp/>first<sp/>call<sp/>to</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/><sp/><sp/>*<sp/>jpeg_write_scanlines.<sp/><sp/>This<sp/>lets<sp/>output<sp/>of<sp/>the<sp/>frame/scan<sp/>headers<sp/>be</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/><sp/><sp/>*<sp/>delayed<sp/>so<sp/>that<sp/>application<sp/>can<sp/>write<sp/>COM,<sp/>etc,<sp/>markers<sp/>between</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/><sp/>*<sp/>jpeg_start_compress<sp/>and<sp/>jpeg_write_scanlines.</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;master-&gt;call_pass_startup)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cinfo-&gt;master-&gt;pass_startup)<sp/>(cinfo);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ignore<sp/>any<sp/>extra<sp/>scanlines<sp/>at<sp/>bottom<sp/>of<sp/>image.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>rows_left<sp/>=<sp/>cinfo-&gt;image_height<sp/>-<sp/>cinfo-&gt;next_scanline;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_lines<sp/>&gt;<sp/>rows_left)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>num_lines<sp/>=<sp/>rows_left;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>row_ctr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>(*cinfo-&gt;main-&gt;process_data)<sp/>(cinfo,<sp/>scanlines,<sp/>&amp;row_ctr,<sp/>num_lines);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>cinfo-&gt;next_scanline<sp/>+=<sp/>row_ctr;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>row_ctr;</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>*<sp/>Terminate<sp/>destination<sp/>---<sp/>called<sp/>by<sp/>jpeg_finish_compress</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*<sp/>after<sp/>all<sp/>data<sp/>has<sp/>been<sp/>written.<sp/><sp/>Usually<sp/>needs<sp/>to<sp/>flush<sp/>buffer.</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/>*<sp/>NB:<sp/>*not*<sp/>called<sp/>by<sp/>jpeg_abort<sp/>or<sp/>jpeg_destroy;<sp/>surrounding</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/>*<sp/>application<sp/>must<sp/>deal<sp/>with<sp/>any<sp/>cleanup<sp/>that<sp/>should<sp/>happen<sp/>even</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/>*<sp/>for<sp/>error<sp/>exit.</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hackSize;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>roq::JPEGTermDestination<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>my_dest_ptr<sp/>dest<sp/>=<sp/>(my_dest_ptr)<sp/>cinfo-&gt;dest;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>datacount<sp/>=<sp/>dest-&gt;size<sp/>-<sp/>dest-&gt;pub.free_in_buffer;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>hackSize<sp/>=<sp/>datacount;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*<sp/>Prepare<sp/>for<sp/>output<sp/>to<sp/>a<sp/>stdio<sp/>stream.</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>*<sp/>The<sp/>caller<sp/>must<sp/>have<sp/>already<sp/>opened<sp/>the<sp/>stream,<sp/>and<sp/>is<sp/>responsible</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>*<sp/>for<sp/>closing<sp/>it<sp/>after<sp/>finishing<sp/>compression.</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>roq::JPEGDest<sp/>(<ref refid="structjpeg__compress__struct" kindref="compound">j_compress_ptr</ref><sp/>cinfo,<sp/>byte*<sp/>outfile,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>my_dest_ptr<sp/>dest;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>destination<sp/>object<sp/>is<sp/>made<sp/>permanent<sp/>so<sp/>that<sp/>multiple<sp/>JPEG<sp/>images</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/>*<sp/>can<sp/>be<sp/>written<sp/>to<sp/>the<sp/>same<sp/>file<sp/>without<sp/>re-executing<sp/>jpeg_stdio_dest.</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/><sp/><sp/>*<sp/>This<sp/>makes<sp/>it<sp/>dangerous<sp/>to<sp/>use<sp/>this<sp/>manager<sp/>and<sp/>a<sp/>different<sp/>destination</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/><sp/><sp/>*<sp/>manager<sp/>serially<sp/>with<sp/>the<sp/>same<sp/>JPEG<sp/>object,<sp/>because<sp/>their<sp/>private<sp/>object</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/><sp/><sp/>*<sp/>sizes<sp/>may<sp/>be<sp/>different.<sp/><sp/>Caveat<sp/>programmer.</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cinfo-&gt;dest<sp/>==<sp/>NULL)<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>time<sp/>for<sp/>this<sp/>JPEG<sp/>object?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo-&gt;dest<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__destination__mgr" kindref="compound">jpeg_destination_mgr</ref><sp/>*)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*cinfo-&gt;mem-&gt;alloc_small)<sp/>((<ref refid="structjpeg__common__struct" kindref="compound">j_common_ptr</ref>)<sp/>cinfo,<sp/>JPOOL_PERMANENT,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmy__destination__mgr" kindref="compound">my_destination_mgr</ref>));</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>dest<sp/>=<sp/>(my_dest_ptr)<sp/>cinfo-&gt;dest;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>dest-&gt;pub.init_destination<sp/>=<sp/>JPEGInitDestination;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>dest-&gt;pub.empty_output_buffer<sp/>=<sp/>JPEGEmptyOutputBuffer;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>dest-&gt;pub.term_destination<sp/>=<sp/>JPEGTermDestination;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>dest-&gt;outfile<sp/>=<sp/>outfile;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>dest-&gt;size<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>roq::WriteLossless(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>word<sp/>direct;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>directdw;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dataStuff)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitRoQPatterns();</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataStuff=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>direct<sp/>=<sp/>RoQ_QUAD_JPEG;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>Write16Word(<sp/>&amp;direct,<sp/>RoQFile);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>struct<sp/>contains<sp/>the<sp/>JPEG<sp/>compression<sp/>parameters<sp/>and<sp/>pointers<sp/>to</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>working<sp/>space<sp/>(which<sp/>is<sp/>allocated<sp/>as<sp/>needed<sp/>by<sp/>the<sp/>JPEG<sp/>library).</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>It<sp/>is<sp/>possible<sp/>to<sp/>have<sp/>several<sp/>such<sp/>structures,<sp/>representing<sp/>multiple</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>compression/decompression<sp/>processes,<sp/>in<sp/>existence<sp/>at<sp/>once.<sp/><sp/>We<sp/>refer</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>to<sp/>any<sp/>one<sp/>struct<sp/>(and<sp/>its<sp/>associated<sp/>working<sp/>data)<sp/>as<sp/>a<sp/>&quot;JPEG<sp/>object&quot;.</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__compress__struct" kindref="compound">jpeg_compress_struct</ref><sp/>cinfo;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>struct<sp/>represents<sp/>a<sp/>JPEG<sp/>error<sp/>handler.<sp/><sp/>It<sp/>is<sp/>declared<sp/>separately</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>because<sp/>applications<sp/>often<sp/>want<sp/>to<sp/>supply<sp/>a<sp/>specialized<sp/>error<sp/>handler</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>(see<sp/>the<sp/>second<sp/>half<sp/>of<sp/>this<sp/>file<sp/>for<sp/>an<sp/>example).<sp/><sp/>But<sp/>here<sp/>we<sp/>just</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>take<sp/>the<sp/>easy<sp/>way<sp/>out<sp/>and<sp/>use<sp/>the<sp/>standard<sp/>error<sp/>handler,<sp/>which<sp/>will</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>print<sp/>a<sp/>message<sp/>on<sp/>stderr<sp/>and<sp/>call<sp/>exit()<sp/>if<sp/>compression<sp/>fails.</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Note<sp/>that<sp/>this<sp/>struct<sp/>must<sp/>live<sp/>as<sp/>long<sp/>as<sp/>the<sp/>main<sp/>JPEG<sp/>parameter</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>struct,<sp/>to<sp/>avoid<sp/>dangling-pointer<sp/>problems.</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structjpeg__error__mgr" kindref="compound">jpeg_error_mgr</ref><sp/>jerr;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>More<sp/>stuff<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>JSAMPROW<sp/>row_pointer[1];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>to<sp/>JSAMPLE<sp/>row[s]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row_stride;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>physical<sp/>row<sp/>width<sp/>in<sp/>image<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>*out;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Step<sp/>1:<sp/>allocate<sp/>and<sp/>initialize<sp/>JPEG<sp/>compression<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>have<sp/>to<sp/>set<sp/>up<sp/>the<sp/>error<sp/>handler<sp/>first,<sp/>in<sp/>case<sp/>the<sp/>initialization</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>step<sp/>fails.<sp/><sp/>(Unlikely,<sp/>but<sp/>it<sp/>could<sp/>happen<sp/>if<sp/>you<sp/>are<sp/>out<sp/>of<sp/>memory.)</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>This<sp/>routine<sp/>fills<sp/>in<sp/>the<sp/>contents<sp/>of<sp/>struct<sp/>jerr,<sp/>and<sp/>returns<sp/>jerr&apos;s</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>address<sp/>which<sp/>we<sp/>place<sp/>into<sp/>the<sp/>link<sp/>field<sp/>in<sp/>cinfo.</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo.err<sp/>=<sp/>jpeg_std_error(&amp;jerr);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>we<sp/>can<sp/>initialize<sp/>the<sp/>JPEG<sp/>compression<sp/>object.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_create_compress(&amp;cinfo);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Step<sp/>2:<sp/>specify<sp/>data<sp/>destination<sp/>(eg,<sp/>a<sp/>file)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note:<sp/>steps<sp/>2<sp/>and<sp/>3<sp/>can<sp/>be<sp/>done<sp/>in<sp/>either<sp/>order.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Here<sp/>we<sp/>use<sp/>the<sp/>library-supplied<sp/>code<sp/>to<sp/>send<sp/>compressed<sp/>data<sp/>to<sp/>a</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>stdio<sp/>stream.<sp/><sp/>You<sp/>can<sp/>also<sp/>write<sp/>your<sp/>own<sp/>code<sp/>to<sp/>do<sp/>something<sp/>else.</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>VERY<sp/>IMPORTANT:<sp/>use<sp/>&quot;b&quot;<sp/>option<sp/>to<sp/>fopen()<sp/>if<sp/>you<sp/>are<sp/>on<sp/>a<sp/>machine<sp/>that</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>requires<sp/>it<sp/>in<sp/>order<sp/>to<sp/>write<sp/>binary<sp/>files.</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>(byte<sp/>*)Mem_Alloc(image-&gt;pixelsWide()*image-&gt;pixelsHigh()*4);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>JPEGDest(&amp;cinfo,<sp/>out,<sp/>image-&gt;pixelsWide()*image-&gt;pixelsHigh()*4);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Step<sp/>3:<sp/>set<sp/>parameters<sp/>for<sp/>compression<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>we<sp/>supply<sp/>a<sp/>description<sp/>of<sp/>the<sp/>input<sp/>image.</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Four<sp/>fields<sp/>of<sp/>the<sp/>cinfo<sp/>struct<sp/>must<sp/>be<sp/>filled<sp/>in:</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo.image_width<sp/>=<sp/>image-&gt;pixelsWide();<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>image<sp/>width<sp/>and<sp/>height,<sp/>in<sp/>pixels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo.image_height<sp/>=<sp/>image-&gt;pixelsHigh();</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo.input_components<sp/>=<sp/>4;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>#<sp/>of<sp/>color<sp/>components<sp/>per<sp/>pixel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>cinfo.in_color_space<sp/>=<sp/>JCS_RGB;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>colorspace<sp/>of<sp/>input<sp/>image<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>use<sp/>the<sp/>library&apos;s<sp/>routine<sp/>to<sp/>set<sp/>default<sp/>compression<sp/>parameters.</highlight></codeline>
<codeline lineno="461"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>(You<sp/>must<sp/>set<sp/>at<sp/>least<sp/>cinfo.in_color_space<sp/>before<sp/>calling<sp/>this,</highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>since<sp/>the<sp/>defaults<sp/>depend<sp/>on<sp/>the<sp/>source<sp/>color<sp/>space.)</highlight></codeline>
<codeline lineno="463"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_set_defaults(&amp;cinfo);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>you<sp/>can<sp/>set<sp/>any<sp/>non-default<sp/>parameters<sp/>you<sp/>wish<sp/>to.</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Here<sp/>we<sp/>just<sp/>illustrate<sp/>the<sp/>use<sp/>of<sp/>quality<sp/>(quantization<sp/>table)<sp/>scaling:</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_set_quality(&amp;cinfo,<sp/>paramFile-&gt;JpegQuality(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>limit<sp/>to<sp/>baseline-JPEG<sp/>values<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Step<sp/>4:<sp/>Start<sp/>compressor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>true<sp/>ensures<sp/>that<sp/>we<sp/>will<sp/>write<sp/>a<sp/>complete<sp/>interchange-JPEG<sp/>file.</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Pass<sp/>true<sp/>unless<sp/>you<sp/>are<sp/>very<sp/>sure<sp/>of<sp/>what<sp/>you&apos;re<sp/>doing.</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>JPEGStartCompress(&amp;cinfo,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Step<sp/>5:<sp/>while<sp/>(scan<sp/>lines<sp/>remain<sp/>to<sp/>be<sp/>written)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jpeg_write_scanlines(...);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Here<sp/>we<sp/>use<sp/>the<sp/>library&apos;s<sp/>state<sp/>variable<sp/>cinfo.next_scanline<sp/>as<sp/>the</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>loop<sp/>counter,<sp/>so<sp/>that<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>keep<sp/>track<sp/>ourselves.</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>To<sp/>keep<sp/>things<sp/>simple,<sp/>we<sp/>pass<sp/>one<sp/>scanline<sp/>per<sp/>call;<sp/>you<sp/>can<sp/>pass</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>more<sp/>if<sp/>you<sp/>wish,<sp/>though.</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>row_stride<sp/>=<sp/>image-&gt;pixelsWide()<sp/>*<sp/>4;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>JSAMPLEs<sp/>per<sp/>row<sp/>in<sp/>image_buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>*pixbuf<sp/>=<sp/>image-&gt;bitmapData();</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cinfo.next_scanline<sp/>&lt;<sp/>cinfo.image_height)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>jpeg_write_scanlines<sp/>expects<sp/>an<sp/>array<sp/>of<sp/>pointers<sp/>to<sp/>scanlines.</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Here<sp/>the<sp/>array<sp/>is<sp/>only<sp/>one<sp/>element<sp/>long,<sp/>but<sp/>you<sp/>could<sp/>pass</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>more<sp/>than<sp/>one<sp/>scanline<sp/>at<sp/>a<sp/>time<sp/>if<sp/>that&apos;s<sp/>more<sp/>convenient.</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_pointer[0]<sp/>=<sp/>&amp;pixbuf[((cinfo.image_height-1)*row_stride)-cinfo.next_scanline<sp/>*<sp/>row_stride];</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>JPEGWriteScanlines(&amp;cinfo,<sp/>row_pointer,<sp/>1);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Step<sp/>6:<sp/>Finish<sp/>compression<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_finish_compress(&amp;cinfo);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>After<sp/>finish_compress,<sp/>we<sp/>can<sp/>close<sp/>the<sp/>output<sp/>file.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>directdw<sp/>=<sp/>hackSize;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(</highlight><highlight class="stringliteral">&quot;writeLossless:<sp/>writing<sp/>%d<sp/>bytes<sp/>to<sp/>RoQ_QUAD_JPEG\n&quot;</highlight><highlight class="normal">,<sp/>hackSize);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>Write32Word(<sp/>&amp;directdw,<sp/>RoQFile<sp/>);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>direct<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>Write16Word(<sp/>&amp;direct,<sp/>RoQFile<sp/>);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>RoQFile-&gt;Write(<sp/>out,<sp/>hackSize<sp/>);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>Mem_Free(out);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Step<sp/>7:<sp/>release<sp/>JPEG<sp/>compression<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>an<sp/>important<sp/>step<sp/>since<sp/>it<sp/>will<sp/>release<sp/>a<sp/>good<sp/>deal<sp/>of<sp/>memory.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>jpeg_destroy_compress(&amp;cinfo);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>And<sp/>we&apos;re<sp/>done!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>encoder-&gt;SetPreviousImage(<sp/></highlight><highlight class="stringliteral">&quot;first<sp/>frame&quot;</highlight><highlight class="normal">,<sp/>image<sp/>);</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>roq::InitRoQFile(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*RoQFilename<sp/>)</highlight></codeline>
<codeline lineno="521"><highlight class="normal">{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>word<sp/>i;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>finit<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!finit)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finit++;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(</highlight><highlight class="stringliteral">&quot;initRoQFile:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>RoQFilename);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RoQFile<sp/>=<sp/>fileSystem-&gt;OpenFileWrite(<sp/>RoQFilename<sp/>);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>chmod(RoQFilename,<sp/>S_IREAD|S_IWRITE|S_ISUID|S_ISGID|0070|0007<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!RoQFile<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Error(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>open<sp/>output<sp/>file<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>RoQFilename);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>RoQ_ID;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Write16Word(<sp/>&amp;i,<sp/>RoQFile<sp/>);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0xffff;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Write16Word(<sp/>&amp;i,<sp/>RoQFile<sp/>);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Write16Word(<sp/>&amp;i,<sp/>RoQFile<sp/>);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>retain<sp/>exact<sp/>file<sp/>format<sp/>write<sp/>out<sp/>32<sp/>for<sp/>new<sp/>roq&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>loading<sp/>this<sp/>will<sp/>be<sp/>noted<sp/>and<sp/>converted<sp/>to<sp/>1000<sp/>/<sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>with<sp/>any<sp/>new<sp/>sound<sp/>dump<sp/>avi<sp/>demos<sp/>we<sp/>need<sp/>to<sp/>playback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>the<sp/>speed<sp/>the<sp/>sound<sp/>engine<sp/>dumps<sp/>the<sp/>audio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>30;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>framerate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Write16Word(<sp/>&amp;i,<sp/>RoQFile<sp/>);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>roqOutfile<sp/>=<sp/>RoQFilename;</highlight></codeline>
<codeline lineno="549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>roq::InitRoQPatterns(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="553"><highlight class="normal">uint<sp/>j;</highlight></codeline>
<codeline lineno="554"><highlight class="normal">word<sp/>direct;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>direct<sp/>=<sp/>RoQ_QUAD_INFO;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>Write16Word(<sp/>&amp;direct,<sp/>RoQFile<sp/>);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>Write32Word(<sp/>&amp;j,<sp/>RoQFile<sp/>);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(</highlight><highlight class="stringliteral">&quot;initRoQPatterns:<sp/>outputting<sp/>%d<sp/>bytes<sp/>to<sp/>RoQ_INFO\n&quot;</highlight><highlight class="normal">,<sp/>j);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>direct<sp/>=<sp/>image-&gt;hasAlpha();</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ParamNoAlpha()<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>direct<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>Write16Word(<sp/>&amp;direct,<sp/>RoQFile<sp/>);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>direct<sp/>=<sp/>image-&gt;pixelsWide();</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>Write16Word(<sp/>&amp;direct,<sp/>RoQFile<sp/>);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>direct<sp/>=<sp/>image-&gt;pixelsHigh();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>Write16Word(<sp/>&amp;direct,<sp/>RoQFile<sp/>);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>direct<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>Write16Word(<sp/>&amp;direct,<sp/>RoQFile<sp/>);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>direct<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>Write16Word(<sp/>&amp;direct,<sp/>RoQFile<sp/>);</highlight></codeline>
<codeline lineno="576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>roq::CloseRoQFile(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="579"><highlight class="normal">{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(</highlight><highlight class="stringliteral">&quot;closeRoQFile:<sp/>closing<sp/>RoQ<sp/>file\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>fileSystem-&gt;CloseFile(<sp/>RoQFile<sp/>);</highlight></codeline>
<codeline lineno="582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>roq::WriteHangFrame(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="585"><highlight class="normal">{</highlight></codeline>
<codeline lineno="586"><highlight class="normal">uint<sp/>j;</highlight></codeline>
<codeline lineno="587"><highlight class="normal">word<sp/>direct;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(</highlight><highlight class="stringliteral">&quot;*******************************************************************\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>direct<sp/>=<sp/>RoQ_QUAD_HANG;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>Write16Word(<sp/>&amp;direct,<sp/>RoQFile);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>Write32Word(<sp/>&amp;j,<sp/>RoQFile);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>direct<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>Write16Word(<sp/>&amp;direct,<sp/>RoQFile);</highlight></codeline>
<codeline lineno="595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>roq::WriteCodeBookToStream(<sp/>byte<sp/>*<ref refid="structcodebook" kindref="compound">codebook</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>csize,<sp/>word<sp/>cflags<sp/>)</highlight></codeline>
<codeline lineno="598"><highlight class="normal">{</highlight></codeline>
<codeline lineno="599"><highlight class="normal">uint<sp/>j;</highlight></codeline>
<codeline lineno="600"><highlight class="normal">word<sp/>direct;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!csize)<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(</highlight><highlight class="stringliteral">&quot;writeCodeBook:<sp/>false<sp/>VQ<sp/>DATA!!!!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>direct<sp/>=<sp/>RoQ_QUAD_CODEBOOK;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>Write16Word(<sp/>&amp;direct,<sp/>RoQFile);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>csize;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>Write32Word(<sp/>&amp;j,<sp/>RoQFile);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(</highlight><highlight class="stringliteral">&quot;writeCodeBook:<sp/>outputting<sp/>%d<sp/>bytes<sp/>to<sp/>RoQ_QUAD_CODEBOOK\n&quot;</highlight><highlight class="normal">,<sp/>j);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>direct<sp/>=<sp/>cflags;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>Write16Word(<sp/>&amp;direct,<sp/>RoQFile);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>RoQFile-&gt;Write(<sp/>codebook,<sp/>j<sp/>);</highlight></codeline>
<codeline lineno="620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>roq::WriteCodeBook(<sp/>byte<sp/>*codebook<sp/>)</highlight></codeline>
<codeline lineno="623"><highlight class="normal">{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(<sp/>codes,<sp/>codebook,<sp/>4096<sp/>);</highlight></codeline>
<codeline lineno="625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>roq::WriteFrame(<sp/><ref refid="structquadcel" kindref="compound">quadcel</ref><sp/>*pquad<sp/>)</highlight></codeline>
<codeline lineno="628"><highlight class="normal">{</highlight></codeline>
<codeline lineno="629"><highlight class="normal">word<sp/>action,<sp/>direct;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>onCCC,<sp/>onAction,<sp/>i,<sp/>code;</highlight></codeline>
<codeline lineno="631"><highlight class="normal">uint<sp/>j;</highlight></codeline>
<codeline lineno="632"><highlight class="normal">byte<sp/>*cccList;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*use2,<sp/>*use4;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dx,dy,dxMean,dyMean,index2[256],index4[256],<sp/>dimension;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>cccList<sp/>=<sp/>(byte<sp/>*)Mem_Alloc(<sp/>numQuadCels<sp/>*<sp/>8);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maximum<sp/>length<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>use2<sp/>=<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*)Mem_Alloc(256*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>use4<sp/>=<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*)Mem_Alloc(256*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;256;i++)<sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use2[i]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use4[i]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>action<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>onAction<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>onCCC<sp/>=<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>onAction<sp/>going<sp/>to<sp/>go<sp/>at<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>dxMean<sp/>=<sp/>encoder-&gt;MotMeanX();</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>dyMean<sp/>=<sp/>encoder-&gt;MotMeanY();</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image-&gt;hasAlpha())<sp/>dimension<sp/>=<sp/>10;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>dimension<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;numQuadCels;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pquad[i].size<sp/>&amp;&amp;<sp/>pquad[i].size<sp/>&lt;<sp/>16<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>pquad[i].status<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>SLD:</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use4[pquad[i].patten[0]]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use2[codes[dimension*256+(pquad[i].patten[0]*4)+0]]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use2[codes[dimension*256+(pquad[i].patten[0]*4)+1]]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use2[codes[dimension*256+(pquad[i].patten[0]*4)+2]]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use2[codes[dimension*256+(pquad[i].patten[0]*4)+3]]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>PAT:</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use4[pquad[i].patten[0]]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use2[codes[dimension*256+(pquad[i].patten[0]*4)+0]]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use2[codes[dimension*256+(pquad[i].patten[0]*4)+1]]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use2[codes[dimension*256+(pquad[i].patten[0]*4)+2]]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use2[codes[dimension*256+(pquad[i].patten[0]*4)+3]]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>CCC:</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use2[pquad[i].patten[1]]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use2[pquad[i].patten[2]]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use2[pquad[i].patten[3]]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use2[pquad[i].patten[4]]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dataStuff)<sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataStuff=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitRoQPatterns();</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image-&gt;hasAlpha())<sp/>i<sp/>=<sp/>3584;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>2560;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WriteCodeBookToStream(<sp/>codes,<sp/>i,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;256;i++)<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index2[i]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index4[i]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;256;i++)<sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use2[i])<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index2[i]<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(dx=0;dx&lt;dimension;dx++)<sp/>cccList[j*dimension+dx]<sp/>=<sp/>codes[i*dimension+dx];</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>j*dimension;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>direct<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(</highlight><highlight class="stringliteral">&quot;writeFrame:<sp/>really<sp/>used<sp/>%d<sp/>2x2<sp/>cels\n&quot;</highlight><highlight class="normal">,<sp/>j);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;256;i++)<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use4[i])<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index4[i]<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(dx=0;dx&lt;4;dx++)<sp/>cccList[j*4+code+dx]<sp/>=<sp/>index2[codes[i*4+(dimension*256)+dx]];</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>+=<sp/>j*4;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>direct<sp/>=<sp/>(direct&lt;&lt;8)<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(</highlight><highlight class="stringliteral">&quot;writeFrame:<sp/>really<sp/>used<sp/>%d<sp/>4x4<sp/>cels\n&quot;</highlight><highlight class="normal">,<sp/>j);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image-&gt;hasAlpha())<sp/>i<sp/>=<sp/>3584;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>2560;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>code<sp/>==<sp/>i<sp/>||<sp/>j<sp/>==<sp/>256)<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WriteCodeBookToStream(<sp/>codes,<sp/>i,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WriteCodeBookToStream(<sp/>cccList,<sp/>code,<sp/>direct<sp/>);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>action<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>onAction<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;numQuadCels;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pquad[i].size<sp/>&amp;&amp;<sp/>pquad[i].size<sp/>&lt;<sp/>16<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>pquad[i].status<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>DEP:</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>SLD:</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cccList[onCCC++]<sp/>=<sp/>index4[pquad[i].patten[0]];</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>MOT:</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>FCC:</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>((pquad[i].domain<sp/>&gt;&gt;<sp/>8<sp/><sp/>))<sp/>-<sp/>128<sp/>-<sp/>dxMean<sp/>+<sp/>8;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>((pquad[i].domain<sp/>&amp;<sp/>0xff))<sp/>-<sp/>128<sp/>-<sp/>dyMean<sp/>+<sp/>8;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dx&gt;15<sp/>||<sp/>dx&lt;0<sp/>||<sp/>dy&gt;15<sp/>||<sp/>dy&lt;0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Error(</highlight><highlight class="stringliteral">&quot;writeFrame:<sp/>FCC<sp/>error<sp/>%d,%d<sp/>mean<sp/>%d,%d<sp/>at<sp/>%d,%d,%d<sp/>rmse<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>dx,dy,<sp/>dxMean,<sp/>dyMean,pquad[i].xat,pquad[i].yat,pquad[i].size,<sp/>pquad[i].snr[FCC]<sp/>);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cccList[onCCC++]<sp/>=<sp/>(dx&lt;&lt;4)+dy;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>PAT:</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cccList[onCCC++]<sp/>=<sp/>index4[pquad[i].patten[0]];</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>CCC:</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cccList[onCCC++]<sp/>=<sp/>index2[pquad[i].patten[1]];</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cccList[onCCC++]<sp/>=<sp/>index2[pquad[i].patten[2]];</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cccList[onCCC++]<sp/>=<sp/>index2[pquad[i].patten[3]];</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cccList[onCCC++]<sp/>=<sp/>index2[pquad[i].patten[4]];</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>DEAD:</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Error(</highlight><highlight class="stringliteral">&quot;dead<sp/>cels<sp/>in<sp/>picture\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Error(<sp/></highlight><highlight class="stringliteral">&quot;writeFrame:<sp/>an<sp/>error<sp/>occurred<sp/>writing<sp/>the<sp/>frame\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action<sp/>=<sp/>(action&lt;&lt;2)|code;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cccList[onAction+0]<sp/>=<sp/>(action<sp/>&amp;<sp/>0xff);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cccList[onAction+1]<sp/>=<sp/>((action<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xff);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>onAction<sp/>=<sp/>onCCC;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>onCCC<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j)<sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action<sp/>&lt;&lt;=<sp/>((8-j)*2);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cccList[onAction+0]<sp/>=<sp/>(action<sp/>&amp;<sp/>0xff);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cccList[onAction+1]<sp/>=<sp/>((action<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xff);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>direct<sp/>=<sp/>RoQ_QUAD_VQ;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>Write16Word(<sp/>&amp;direct,<sp/>RoQFile);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>onCCC;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>Write32Word(<sp/>&amp;j,<sp/>RoQFile);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>direct<sp/><sp/>=<sp/>dyMean;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>direct<sp/>&amp;=<sp/>0xff;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>direct<sp/>+=<sp/>(dxMean&lt;&lt;8);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>Write16Word(<sp/>&amp;direct,<sp/>RoQFile);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(</highlight><highlight class="stringliteral">&quot;writeFrame:<sp/>outputting<sp/>%d<sp/>bytes<sp/>to<sp/>RoQ_QUAD_VQ\n&quot;</highlight><highlight class="normal">,<sp/>j);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>previousSize<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>RoQFile-&gt;Write(<sp/>cccList,<sp/>onCCC<sp/>);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>Mem_Free(<sp/>cccList<sp/>);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>Mem_Free(<sp/>use2<sp/>);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>Mem_Free(<sp/>use4<sp/>);</highlight></codeline>
<codeline lineno="805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="comment">//<sp/>load<sp/>a<sp/>frame,<sp/>create<sp/>a<sp/>window<sp/>(if<sp/>neccesary)<sp/>and<sp/>display<sp/>the<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>roq::LoadAndDisplayImage(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>filename<sp/>)</highlight></codeline>
<codeline lineno="811"><highlight class="normal">{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>image;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(</highlight><highlight class="stringliteral">&quot;loadAndDisplayImage:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>filename);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>currentFile<sp/>=<sp/>filename;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>image<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_n_s_bitmap_image_rep" kindref="compound">NSBitmapImageRep</ref>(<sp/>filename<sp/>);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>numQuadCels<sp/><sp/>=<sp/>((image-&gt;pixelsWide()<sp/>&amp;<sp/>0xfff0)*(image-&gt;pixelsHigh()<sp/>&amp;<sp/>0xfff0))/(MINSIZE*MINSIZE);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>numQuadCels<sp/>+=<sp/>numQuadCels/4<sp/>+<sp/>numQuadCels/16;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(paramFile-&gt;deltaFrames]<sp/>==<sp/>true<sp/>&amp;&amp;<sp/>cleared<sp/>==<sp/>false<sp/>&amp;&amp;<sp/>[image<sp/>isPlanar]<sp/>==<sp/>false)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>cleared<sp/>=<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>imageData<sp/>=<sp/>[image<sp/>data];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>memset(<sp/>imageData,<sp/>0,<sp/>image-&gt;pixelsWide()*image-&gt;pixelsHigh()*[image<sp/>samplesPerPixel]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!quietMode)<sp/>common-&gt;Printf(</highlight><highlight class="stringliteral">&quot;loadAndDisplayImage:<sp/>%dx%d\n&quot;</highlight><highlight class="normal">,<sp/>image-&gt;pixelsWide(),<sp/>image-&gt;pixelsHigh());</highlight></codeline>
<codeline lineno="830"><highlight class="normal">}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>roq::MarkQuadx(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cerror,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>choice<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal">}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><ref refid="class_n_s_bitmap_image_rep" kindref="compound">NSBitmapImageRep</ref>*<sp/>roq::CurrentImage(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="836"><highlight class="normal">{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>image;</highlight></codeline>
<codeline lineno="838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>roq::NumberOfFrames(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numberOfFrames;</highlight></codeline>
<codeline lineno="842"><highlight class="normal">}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RoQFileEncode_f(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref><sp/>&amp;args<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>args.Argc()<sp/>!=<sp/>2<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;Usage:<sp/>roq<sp/>&lt;paramfile&gt;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>theRoQ<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classroq" kindref="compound">roq</ref>;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>startMsec<sp/>=<sp/>Sys_Milliseconds();</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>theRoQ-&gt;EncodeStream(<sp/>args.Argv(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stopMsec<sp/>=<sp/>Sys_Milliseconds();</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;total<sp/>encoding<sp/>time:<sp/>%i<sp/>second\n&quot;</highlight><highlight class="normal">,<sp/>(<sp/>stopMsec<sp/>-<sp/>startMsec<sp/>)<sp/>/<sp/>1000<sp/>);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/tools/compilers/roqvq/roq.cpp"/>
  </compounddef>
</doxygen>
