<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="runner__lib_8py" kind="file">
    <compoundname>runner_lib.py</compoundname>
    <innerclass refid="classrunner__lib_1_1doom_client_protocol" prot="public">runner_lib::doomClientProtocol</innerclass>
    <innerclass refid="classrunner__lib_1_1doom_service" prot="public">runner_lib::doomService</innerclass>
    <innernamespace refid="namespacerunner__lib">runner_lib</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#<sp/>run<sp/>doom<sp/>process<sp/>on<sp/>a<sp/>series<sp/>of<sp/>maps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>can<sp/>be<sp/>used<sp/>for<sp/>regression<sp/>testing,<sp/>or<sp/>to<sp/>fetch<sp/>media</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>keeps<sp/>a<sp/>log<sp/>of<sp/>each<sp/>run<sp/>(<sp/>see<sp/>getLogfile<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>currently<sp/>uses<sp/>a<sp/>basic<sp/>stdout<sp/>activity<sp/>timeout<sp/>to<sp/>decide<sp/>when<sp/>to<sp/>move<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>using<sp/>a<sp/>periodic<sp/>check<sp/>of<sp/>/proc/&lt;pid&gt;/status<sp/>SleepAVG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>when<sp/>the<sp/>sleep<sp/>average<sp/>is<sp/>reaching<sp/>0,<sp/>issue<sp/>a<sp/>&apos;quit&apos;<sp/>to<sp/>stdout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>keeps<sp/>serialized<sp/>run<sp/>status<sp/>in<sp/>runner.pickle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>NOTE:<sp/>can<sp/>be<sp/>used<sp/>to<sp/>initiate<sp/>runs<sp/>on<sp/>failed<sp/>maps<sp/>only<sp/>for<sp/>instance<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>TODO:<sp/>use<sp/>the<sp/>serialized<sp/>and<sp/>not<sp/>the<sp/>logs<sp/>to<sp/>sort<sp/>the<sp/>run<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>TODO:<sp/>better<sp/>logging.<sp/>Use<sp/>idLogger?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>TODO:<sp/>configurable<sp/>event<sp/>when<sp/>the<sp/>process<sp/>is<sp/>found<sp/>interactive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/>instead<sp/>of<sp/>emitting<sp/>a<sp/>quit,<sp/>perform<sp/>some<sp/>warning<sp/>action?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys,<sp/>os,<sp/>commands,<sp/>string,<sp/>time,<sp/>traceback,<sp/>pickle</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>twisted.application<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>internet,<sp/>service</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>twisted.internet<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>protocol,<sp/>reactor,<sp/>utils,<sp/>defer</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>twisted.internet.task<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>LoopingCall</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classrunner__lib_1_1doom_client_protocol" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrunner__lib_1_1doom_client_protocol" kindref="compound">doomClientProtocol</ref>(<sp/>protocol.ProcessProtocol<sp/>):</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>ProcessProtocol<sp/>API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">connectionMade(<sp/>self<sp/>):</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logfile.write(<sp/></highlight><highlight class="stringliteral">&apos;connectionMade\n&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">outReceived(<sp/>self,<sp/>data<sp/>):</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>data</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logfile.write(<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">errReceived(<sp/>self,<sp/>data<sp/>):</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;stderr:<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>data</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logfile.write(<sp/></highlight><highlight class="stringliteral">&apos;stderr:<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">inConnectionLost(<sp/>self<sp/>):</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logfile.write(<sp/></highlight><highlight class="stringliteral">&apos;inConnectionLost\n&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">outConnectionLost(<sp/>self<sp/>):</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logfile.write(<sp/></highlight><highlight class="stringliteral">&apos;outConnectionLost\n&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">errConnectionLost(<sp/>self<sp/>):</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logfile.write(<sp/></highlight><highlight class="stringliteral">&apos;errConnectionLost\n&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">processEnded(<sp/>self,<sp/>status_object<sp/>):</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logfile.write(<sp/></highlight><highlight class="stringliteral">&apos;processEnded<sp/>%s\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>repr(<sp/>status_object<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logfile.write(<sp/>time.strftime(<sp/></highlight><highlight class="stringliteral">&apos;%H:%M:%S&apos;</highlight><highlight class="normal">,<sp/>time.localtime(<sp/>time.time()<sp/>)<sp/>)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logfile.close()</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.deferred.callback(<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>mac<sp/>management</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(<sp/>self,<sp/>logfilename,<sp/>deferred<sp/>):</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner__lib_1_1doom_client_protocol_1a4e65d5f846c639f4fe12b1afcdb3470b" kindref="member">logfilename</ref><sp/>=<sp/>logfilename</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner__lib_1_1doom_client_protocol_1aad74e84c83ae7fdf744d37415bfdaa4a" kindref="member">logfile</ref><sp/>=<sp/>open(<sp/>logfilename,<sp/></highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logfile.write(<sp/>time.strftime(<sp/></highlight><highlight class="stringliteral">&apos;%H:%M:%S&apos;</highlight><highlight class="normal">,<sp/>time.localtime(<sp/>time.time()<sp/>)<sp/>)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner__lib_1_1doom_client_protocol_1af4dd8a57d8c6b4d05d28804cff34ef41" kindref="member">deferred</ref><sp/>=<sp/>deferred</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classrunner__lib_1_1doom_service" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrunner__lib_1_1doom_service" kindref="compound">doomService</ref>(<sp/>service.Service<sp/>):</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>current<sp/>monitoring<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>0:<sp/>nothing<sp/>running</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>1:<sp/>we<sp/>have<sp/>a<sp/>process<sp/>running,<sp/>we&apos;re<sp/>monitoring<sp/>it&apos;s<sp/>CPU<sp/>usage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>2:<sp/>we<sp/>issued<sp/>a<sp/>&apos;quit&apos;<sp/>to<sp/>the<sp/>process&apos;s<sp/>stdin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>either<sp/>going<sp/>to<sp/>get<sp/>a<sp/>processEnded,<sp/>or<sp/>a<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>3:<sp/>we<sp/>forced<sp/>a<sp/>kill<sp/>because<sp/>of<sp/>error,<sp/>timeout<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>load<sp/>check<sp/>period</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>check_period<sp/>=<sp/>10</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pickled<sp/>status<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>pickle_file<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;runner.pickle&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>stores<sp/>status<sp/>indexed<sp/>by<sp/>filename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>{<sp/>&apos;mapname&apos;<sp/>:<sp/>(<sp/>state,<sp/>last_update<sp/>),<sp/>..<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>start<sp/>the<sp/>maps<sp/>as<sp/>multiplayer<sp/>server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>multiplayer<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(<sp/>self,<sp/>bin,<sp/>cmdline,<sp/>maps,<sp/>sort<sp/>=<sp/>0,<sp/>multiplayer<sp/>=<sp/>0,<sp/>blank_run<sp/>=<sp/>0<sp/>):</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner__lib_1_1doom_service_1ae8a556814955fbc16fc0029bd92b7da2" kindref="member">p_transport</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner__lib_1_1doom_service_1ae289ac40d3244839b19f8cd19adc05a8" kindref="member">multiplayer</ref><sp/>=<sp/>multiplayer</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner__lib_1_1doom_service_1ab67511a7c7349d70d8a1a25e04903ae5" kindref="member">blank_run</ref><sp/>=<sp/>blank_run</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1ae289ac40d3244839b19f8cd19adc05a8" kindref="member">multiplayer</ref><sp/>):</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;Operate<sp/>in<sp/>multiplayer<sp/>mode&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner__lib_1_1doom_service_1af4cbed0e6854f42c6d4733cfbf0500c9" kindref="member">bin</ref><sp/>=<sp/>os.path.abspath(<sp/>bin<sp/>)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>type(<sp/>cmdline<sp/>)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>type(<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"><sp/>)<sp/>):</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a99d0ddb90d8a691db55ae3b44f9c3ab5" kindref="member">cmdline</ref><sp/>=<sp/>string.split(<sp/>cmdline,<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a99d0ddb90d8a691db55ae3b44f9c3ab5" kindref="member">cmdline</ref><sp/>=<sp/>cmdline</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a92d59ecbf76f7eb5052a88d74bc7f519" kindref="member">maps</ref><sp/>=<sp/>maps</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>os.path.exists(<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a6b473edebd0ba4790114a95eaf93f662" kindref="member">pickle_file</ref><sp/>)<sp/>):</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;Loading<sp/>pickled<sp/>status<sp/>%s&apos;</highlight><highlight class="normal"><sp/>%<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a6b473edebd0ba4790114a95eaf93f662" kindref="member">pickle_file</ref></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle<sp/>=<sp/>open(<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a6b473edebd0ba4790114a95eaf93f662" kindref="member">pickle_file</ref>,<sp/></highlight><highlight class="stringliteral">&apos;</highlight><highlight class="stringliteral">r&apos;<sp/>)</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner__lib_1_1doom_service_1af06aef7227f12a222b5ae3677b105b32" kindref="member">status</ref><sp/>=<sp/>pickle.load(<sp/>handle<sp/>)</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle.close()</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sort<sp/>):</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;Sorting<sp/>maps<sp/>oldest<sp/>runs<sp/>first&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maps_sorted<sp/>=<sp/>[<sp/>]</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a92d59ecbf76f7eb5052a88d74bc7f519" kindref="member">maps</ref>:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i_log<sp/>=<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1ac32d43204f4e96ea01b9a0b84bf10fc7" kindref="member">getLogfile</ref>(<sp/>i<sp/>)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>os.path.exists(<sp/>i_log<sp/>)<sp/>):</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maps_sorted.append(<sp/>(<sp/>i,<sp/>os.path.getmtime(<sp/>i_log<sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maps_sorted.append(<sp/>(<sp/>i,<sp/>0<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maps_sorted.sort(<sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x,y<sp/>:<sp/>cmp(<sp/>x[1],<sp/>y[1]<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a92d59ecbf76f7eb5052a88d74bc7f519" kindref="member">maps</ref><sp/>=<sp/>[<sp/>]</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>blank_run<sp/>):</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.maps.append(<sp/></highlight><highlight class="stringliteral">&apos;blankrun&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>maps_sorted:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.maps.append(<sp/>i[<sp/>0<sp/>]<sp/>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;Sorted<sp/>as:<sp/>%s\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>repr(<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a92d59ecbf76f7eb5052a88d74bc7f519" kindref="member">maps</ref><sp/>)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">getLogfile(<sp/>self,<sp/>name<sp/>):</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;logs/&apos;</highlight><highlight class="normal"><sp/>+<sp/>string.translate(<sp/>name,<sp/>string.maketrans(<sp/></highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;-&apos;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;.log&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>deferred<sp/>call<sp/>when<sp/>child<sp/>process<sp/>dies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">processEnded(<sp/>self,<sp/>val<sp/>):</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;child<sp/>has<sp/>died<sp/>-<sp/>state<sp/>%d&apos;</highlight><highlight class="normal"><sp/>%<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a94f097d68979bb02f6652b4e7b9c61fd" kindref="member">state</ref></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner__lib_1_1doom_service_1af06aef7227f12a222b5ae3677b105b32" kindref="member">status</ref>[<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a92d59ecbf76f7eb5052a88d74bc7f519" kindref="member">maps</ref>[<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a7facb35108a1baf1fcac95bc9b8b5beb" kindref="member">i_map</ref><sp/>]<sp/>]<sp/>=<sp/>(<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a94f097d68979bb02f6652b4e7b9c61fd" kindref="member">state</ref>,<sp/>time.time()<sp/>)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a7facb35108a1baf1fcac95bc9b8b5beb" kindref="member">i_map</ref><sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a7facb35108a1baf1fcac95bc9b8b5beb" kindref="member">i_map</ref><sp/>&gt;=<sp/>len(<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a92d59ecbf76f7eb5052a88d74bc7f519" kindref="member">maps</ref><sp/>)<sp/>):</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reactor.stop()</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner__lib_1_1doom_service_1ad48670242cbd93a7da36827e854ae114" kindref="member">nextMap</ref>()</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">processTimeout(<sp/>self<sp/>):</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.p_transport.signalProcess(<sp/></highlight><highlight class="stringliteral">&quot;KILL&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">sleepAVGReply(<sp/>self,<sp/>val<sp/>):</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>val[10:][:-2]</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;sleepAVGReply<sp/>%s%%&apos;</highlight><highlight class="normal"><sp/>%<sp/>s</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>s<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>):</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>need<sp/>twice<sp/>in<sp/>a<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a94f097d68979bb02f6652b4e7b9c61fd" kindref="member">state</ref><sp/>==<sp/>2<sp/>):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;child<sp/>process<sp/>is<sp/>interactive&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.p_transport.write(<sp/></highlight><highlight class="stringliteral">&apos;quit\n&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a94f097d68979bb02f6652b4e7b9c61fd" kindref="member">state</ref><sp/>=<sp/>2</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a94f097d68979bb02f6652b4e7b9c61fd" kindref="member">state</ref><sp/>=<sp/>1</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reactor.callLater(<sp/>self.check_period,<sp/>self.checkCPU<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>traceback.format_tb(<sp/>sys.exc_info()[2]<sp/>)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>sys.exc_info()[0]</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;exception<sp/>raised<sp/>in<sp/>sleepAVGReply<sp/>-<sp/>killing<sp/>process&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a94f097d68979bb02f6652b4e7b9c61fd" kindref="member">state</ref><sp/>=<sp/>3</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.p_transport.signalProcess(<sp/></highlight><highlight class="stringliteral">&apos;KILL&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">sleepAVGTimeout(<sp/>self<sp/>):</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;sleepAVGTimeout<sp/>-<sp/>killing<sp/>process&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a94f097d68979bb02f6652b4e7b9c61fd" kindref="member">state</ref><sp/>=<sp/>3</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.p_transport.signalProcess(<sp/></highlight><highlight class="stringliteral">&apos;KILL&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>called<sp/>at<sp/>regular<sp/>intervals<sp/>to<sp/>monitor<sp/>the<sp/>sleep<sp/>average<sp/>of<sp/>the<sp/>child<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>when<sp/>sleep<sp/>reaches<sp/>0,<sp/>it<sp/>means<sp/>the<sp/>map<sp/>is<sp/>loaded<sp/>and<sp/>interactive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">checkCPU(<sp/>self<sp/>):</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a94f097d68979bb02f6652b4e7b9c61fd" kindref="member">state</ref><sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>self.<ref refid="classrunner__lib_1_1doom_service_1ae8a556814955fbc16fc0029bd92b7da2" kindref="member">p_transport</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>self.p_transport.pid<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/>):</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;checkCPU:<sp/>no<sp/>child<sp/>process<sp/>atm&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defer<sp/>=<sp/>utils.getProcessOutput(<sp/></highlight><highlight class="stringliteral">&apos;/bin/bash&apos;</highlight><highlight class="normal">,<sp/>[<sp/></highlight><highlight class="stringliteral">&apos;-c&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;cat<sp/>/proc/%d/status<sp/>|<sp/>grep<sp/>SleepAVG&apos;</highlight><highlight class="normal"><sp/>%<sp/>self.p_transport.pid<sp/>]<sp/>)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defer.addCallback(<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1ad79c812316e4cf2aa924123797a385a7" kindref="member">sleepAVGReply</ref><sp/>)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defer.setTimeout(<sp/>2,<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1ae1e33c4dab9c1f2580286a38ae153a84" kindref="member">sleepAVGTimeout</ref><sp/>)<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">nextMap(<sp/>self<sp/>):</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a94f097d68979bb02f6652b4e7b9c61fd" kindref="member">state</ref><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a92d59ecbf76f7eb5052a88d74bc7f519" kindref="member">maps</ref>[<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a7facb35108a1baf1fcac95bc9b8b5beb" kindref="member">i_map</ref><sp/>]</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;Starting<sp/>map:<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>name</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logfile<sp/>=<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1ac32d43204f4e96ea01b9a0b84bf10fc7" kindref="member">getLogfile</ref>(<sp/>name<sp/>)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;Logging<sp/>to:<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>logfile</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1ae289ac40d3244839b19f8cd19adc05a8" kindref="member">multiplayer</ref><sp/>):</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmdline<sp/>=<sp/>[<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1af4cbed0e6854f42c6d4733cfbf0500c9" kindref="member">bin</ref><sp/>]<sp/>+<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a99d0ddb90d8a691db55ae3b44f9c3ab5" kindref="member">cmdline</ref><sp/>+<sp/>[<sp/></highlight><highlight class="stringliteral">&apos;+set&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;si_map&apos;</highlight><highlight class="normal">,<sp/>name<sp/>]</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>name<sp/>!=<sp/></highlight><highlight class="stringliteral">&apos;blankrun&apos;</highlight><highlight class="normal"><sp/>):</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmdline.append(<sp/></highlight><highlight class="stringliteral">&apos;+spawnServer&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmdline<sp/>=<sp/>[<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1af4cbed0e6854f42c6d4733cfbf0500c9" kindref="member">bin</ref><sp/>]<sp/>+<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a99d0ddb90d8a691db55ae3b44f9c3ab5" kindref="member">cmdline</ref></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>name<sp/>!=<sp/></highlight><highlight class="stringliteral">&apos;blankrun&apos;</highlight><highlight class="normal"><sp/>):</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmdline<sp/>+=<sp/>[<sp/></highlight><highlight class="stringliteral">&apos;+devmap&apos;</highlight><highlight class="normal">,<sp/>name<sp/>]</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;Command<sp/>line:<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>repr(<sp/>cmdline<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner__lib_1_1doom_service_1ab223a7056625a6009b02c9f5f66e76be" kindref="member">deferred</ref><sp/>=<sp/>defer.Deferred()</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.deferred.addCallback(<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a82ad8e88efc261ee056e7b32b3465b31" kindref="member">processEnded</ref><sp/>)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner__lib_1_1doom_service_1ae8a556814955fbc16fc0029bd92b7da2" kindref="member">p_transport</ref><sp/>=<sp/>reactor.spawnProcess(<sp/><ref refid="classrunner__lib_1_1doom_client_protocol" kindref="compound">doomClientProtocol</ref>(<sp/>logfile,<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1ab223a7056625a6009b02c9f5f66e76be" kindref="member">deferred</ref><sp/>),<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1af4cbed0e6854f42c6d4733cfbf0500c9" kindref="member">bin</ref>,<sp/>cmdline<sp/>,<sp/>path<sp/>=<sp/>os.path.dirname(<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1af4cbed0e6854f42c6d4733cfbf0500c9" kindref="member">bin</ref><sp/>),<sp/>env<sp/>=<sp/>os.environ<sp/>)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a94f097d68979bb02f6652b4e7b9c61fd" kindref="member">state</ref><sp/>=<sp/>1</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>setup<sp/>the<sp/>CPU<sp/>usage<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>reactor.callLater(<sp/>self.check_period,<sp/>self.checkCPU<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">startService(<sp/>self<sp/>):</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;doomService<sp/>startService&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop<sp/>=<sp/>LoopingCall(<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1aa0cbc561ffd7b7a3f14b0e722b38d92b" kindref="member">checkCPU</ref><sp/>)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop.start(<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1ac4164d7b829bc1c3fb2a6f1078091662" kindref="member">check_period</ref><sp/>)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a7facb35108a1baf1fcac95bc9b8b5beb" kindref="member">i_map</ref><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner__lib_1_1doom_service_1ad48670242cbd93a7da36827e854ae114" kindref="member">nextMap</ref>()</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">stopService(<sp/>self<sp/>):</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;doomService<sp/>stopService&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.p_transport.pid<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/>):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.p_transport.signalProcess(<sp/></highlight><highlight class="stringliteral">&apos;KILL&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>serialize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;saving<sp/>status<sp/>to<sp/>%s&apos;</highlight><highlight class="normal"><sp/>%<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a6b473edebd0ba4790114a95eaf93f662" kindref="member">pickle_file</ref></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle<sp/>=<sp/>open(<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1a6b473edebd0ba4790114a95eaf93f662" kindref="member">pickle_file</ref>,<sp/></highlight><highlight class="stringliteral">&apos;w+&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pickle.dump(<sp/>self.<ref refid="classrunner__lib_1_1doom_service_1af06aef7227f12a222b5ae3677b105b32" kindref="member">status</ref>,<sp/>handle<sp/>)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle.close()</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/sys/linux/runner/runner_lib.py"/>
  </compounddef>
</doxygen>
