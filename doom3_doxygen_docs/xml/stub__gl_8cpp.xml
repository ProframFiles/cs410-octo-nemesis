<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="stub__gl_8cpp" kind="file">
    <compoundname>stub_gl.cpp</compoundname>
    <includes refid="precompiled_8h" local="yes">../../idlib/precompiled.h</includes>
    <includes refid="tr__local_8h" local="yes">../../renderer/tr_local.h</includes>
      <sectiondef kind="func">
      <memberdef kind="function" id="stub__gl_8cpp_1a427f6a455e4c423f18b87bd211c40c8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glAccum</definition>
        <argsstring>(GLenum op, GLfloat value)</argsstring>
        <name>glAccum</name>
        <param>
          <type>GLenum</type>
          <declname>op</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="33" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a70eff1b1ba506adb32f41ca6474f0df3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glAlphaFunc</definition>
        <argsstring>(GLenum func, GLclampf ref)</argsstring>
        <name>glAlphaFunc</name>
        <param>
          <type>GLenum</type>
          <declname>func</declname>
        </param>
        <param>
          <type>GLclampf</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="34" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1add321633c9a9619a2c97180c08be575e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLboolean</type>
        <definition>GLboolean glAreTexturesResident</definition>
        <argsstring>(GLsizei n, const GLuint *textures, GLboolean *residences)</argsstring>
        <name>glAreTexturesResident</name>
        <param>
          <type>GLsizei</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const GLuint *</type>
          <declname>textures</declname>
        </param>
        <param>
          <type>GLboolean *</type>
          <declname>residences</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="35" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a508a529a8991f9f56bdc8cff2b2186c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glArrayElement</definition>
        <argsstring>(GLint i)</argsstring>
        <name>glArrayElement</name>
        <param>
          <type>GLint</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="36" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a78d1cc551d8585ab6aee14f75cd6671f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glBegin</definition>
        <argsstring>(GLenum mode)</argsstring>
        <name>glBegin</name>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="37" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1afe003e6230fca703d59ec52260f7bdd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glBindTexture</definition>
        <argsstring>(GLenum target, GLuint texture)</argsstring>
        <name>glBindTexture</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLuint</type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="38" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a90de684cd7b8e477296adbc0934cfb20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glBitmap</definition>
        <argsstring>(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap)</argsstring>
        <name>glBitmap</name>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>height</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>xorig</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>yorig</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>xmove</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>ymove</declname>
        </param>
        <param>
          <type>const GLubyte *</type>
          <declname>bitmap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="39" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a76def7a7878f0be565a41a2117976737" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glBlendFunc</definition>
        <argsstring>(GLenum sfactor, GLenum dfactor)</argsstring>
        <name>glBlendFunc</name>
        <param>
          <type>GLenum</type>
          <declname>sfactor</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>dfactor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="40" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a3771f23bd3ed444b283cd695b6e71fc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glCallList</definition>
        <argsstring>(GLuint list)</argsstring>
        <name>glCallList</name>
        <param>
          <type>GLuint</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="41" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ab9b8aa08410f634584fd337fcb29debe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glCallLists</definition>
        <argsstring>(GLsizei n, GLenum type, const GLvoid *lists)</argsstring>
        <name>glCallLists</name>
        <param>
          <type>GLsizei</type>
          <declname>n</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>lists</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="42" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a17b651906e2eed37f6615b50ebb97b98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glClear</definition>
        <argsstring>(GLbitfield mask)</argsstring>
        <name>glClear</name>
        <param>
          <type>GLbitfield</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="43" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a1de7cc1a4aefa8d143b37f893007e973" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glClearAccum</definition>
        <argsstring>(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)</argsstring>
        <name>glClearAccum</name>
        <param>
          <type>GLfloat</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="44" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a010231739bd67ff45cf803ea81631a47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glClearColor</definition>
        <argsstring>(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)</argsstring>
        <name>glClearColor</name>
        <param>
          <type>GLclampf</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLclampf</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLclampf</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>GLclampf</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="45" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aa4f888c5393c9c991125307e905e3ff7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glClearDepth</definition>
        <argsstring>(GLclampd depth)</argsstring>
        <name>glClearDepth</name>
        <param>
          <type>GLclampd</type>
          <declname>depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="46" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1af60cd8b17f853a8cee87836c8170434b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glClearIndex</definition>
        <argsstring>(GLfloat c)</argsstring>
        <name>glClearIndex</name>
        <param>
          <type>GLfloat</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="47" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a13e6993e07fb223bef5ea332f7ea8098" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glClearStencil</definition>
        <argsstring>(GLint s)</argsstring>
        <name>glClearStencil</name>
        <param>
          <type>GLint</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="48" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1af757941e80fa6f07f9a05d69ae129c19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glClipPlane</definition>
        <argsstring>(GLenum plane, const GLdouble *equation)</argsstring>
        <name>glClipPlane</name>
        <param>
          <type>GLenum</type>
          <declname>plane</declname>
        </param>
        <param>
          <type>const GLdouble *</type>
          <declname>equation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="49" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ae32cce235255d84449f2ea79d4f187f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor3b</definition>
        <argsstring>(GLbyte red, GLbyte green, GLbyte blue)</argsstring>
        <name>glColor3b</name>
        <param>
          <type>GLbyte</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLbyte</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLbyte</type>
          <declname>blue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="50" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a67d9d2fdb41ad9af8ad94481590e083e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor3bv</definition>
        <argsstring>(const GLbyte *v)</argsstring>
        <name>glColor3bv</name>
        <param>
          <type>const GLbyte *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="51" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a30280e9fcdbc0d30745e69a96d00b715" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor3d</definition>
        <argsstring>(GLdouble red, GLdouble green, GLdouble blue)</argsstring>
        <name>glColor3d</name>
        <param>
          <type>GLdouble</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>blue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="52" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1afe4640c499949cdeca20c3a018cb8f51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor3dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>glColor3dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="53" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a7d4847e12fa96f6adc94d4c3c2237bb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor3f</definition>
        <argsstring>(GLfloat red, GLfloat green, GLfloat blue)</argsstring>
        <name>glColor3f</name>
        <param>
          <type>GLfloat</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>blue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="54" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a205a3dc03efdb2e7538814da14e00ca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor3fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>glColor3fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="55" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a6ef171bc864a2bc0f0fa79d39fe1f81d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor3i</definition>
        <argsstring>(GLint red, GLint green, GLint blue)</argsstring>
        <name>glColor3i</name>
        <param>
          <type>GLint</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>blue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="56" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a695b5d662690c1a0acbea7e8c3e171c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor3iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>glColor3iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="57" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a3c141ae735ec002390fe0b0780cc3113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor3s</definition>
        <argsstring>(GLshort red, GLshort green, GLshort blue)</argsstring>
        <name>glColor3s</name>
        <param>
          <type>GLshort</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>blue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="58" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a6bc658045ec8cb7c1f44481baef8d229" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor3sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>glColor3sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="59" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ad2c73fe55a38e68e6bfeca56df9482bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor3ub</definition>
        <argsstring>(GLubyte red, GLubyte green, GLubyte blue)</argsstring>
        <name>glColor3ub</name>
        <param>
          <type>GLubyte</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLubyte</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLubyte</type>
          <declname>blue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="60" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a206c2b8872b798cf29102f1e861d8a1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor3ubv</definition>
        <argsstring>(const GLubyte *v)</argsstring>
        <name>glColor3ubv</name>
        <param>
          <type>const GLubyte *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="61" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ad31ff19e7ee2d1686571c59459182da7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor3ui</definition>
        <argsstring>(GLuint red, GLuint green, GLuint blue)</argsstring>
        <name>glColor3ui</name>
        <param>
          <type>GLuint</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLuint</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLuint</type>
          <declname>blue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="62" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a7351af3ea90c3e91e8beaed8ccd5aaaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor3uiv</definition>
        <argsstring>(const GLuint *v)</argsstring>
        <name>glColor3uiv</name>
        <param>
          <type>const GLuint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="63" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ad71b602d53184f1744b0fc8cc75c3925" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor3us</definition>
        <argsstring>(GLushort red, GLushort green, GLushort blue)</argsstring>
        <name>glColor3us</name>
        <param>
          <type>GLushort</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLushort</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLushort</type>
          <declname>blue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="64" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ad6276b58fd10ca42d92fb0c54eeae42e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor3usv</definition>
        <argsstring>(const GLushort *v)</argsstring>
        <name>glColor3usv</name>
        <param>
          <type>const GLushort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="65" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ae2b5caf05d25bdb93c737989f7836d47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor4b</definition>
        <argsstring>(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha)</argsstring>
        <name>glColor4b</name>
        <param>
          <type>GLbyte</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLbyte</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLbyte</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>GLbyte</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="66" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a9fc561f7fe09b410dccbc15413abf05f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor4bv</definition>
        <argsstring>(const GLbyte *v)</argsstring>
        <name>glColor4bv</name>
        <param>
          <type>const GLbyte *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="67" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ad24b6d70e52cd5b0cb02a4cb77413c4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor4d</definition>
        <argsstring>(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha)</argsstring>
        <name>glColor4d</name>
        <param>
          <type>GLdouble</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="68" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1adffa0c1649fcf98d11cea783be9b6877" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor4dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>glColor4dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="69" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a42b7a0d3409fd312dd29f6a706c15aaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor4f</definition>
        <argsstring>(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)</argsstring>
        <name>glColor4f</name>
        <param>
          <type>GLfloat</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="70" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ac3444275f7c9d3e4204503dd6643183e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor4fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>glColor4fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="71" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aa92ef0fdbab653b3f53ad632e31e6584" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor4i</definition>
        <argsstring>(GLint red, GLint green, GLint blue, GLint alpha)</argsstring>
        <name>glColor4i</name>
        <param>
          <type>GLint</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="72" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ae8e43f128668ed45e68510c917ec6d38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor4iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>glColor4iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="73" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1af81178750dabed46c0099169c3eec87f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor4s</definition>
        <argsstring>(GLshort red, GLshort green, GLshort blue, GLshort alpha)</argsstring>
        <name>glColor4s</name>
        <param>
          <type>GLshort</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="74" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1af581979fe884dec3e93d6b593cc80605" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor4sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>glColor4sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="75" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a5d1484df866c6fc5bfcb519c452f1a7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor4ub</definition>
        <argsstring>(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha)</argsstring>
        <name>glColor4ub</name>
        <param>
          <type>GLubyte</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLubyte</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLubyte</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>GLubyte</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="76" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a83563a95fd9691e96cada7ef16bd1932" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor4ubv</definition>
        <argsstring>(const GLubyte *v)</argsstring>
        <name>glColor4ubv</name>
        <param>
          <type>const GLubyte *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="77" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ad2d982a61e6444e1cdbe1a15f9d2bbbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor4ui</definition>
        <argsstring>(GLuint red, GLuint green, GLuint blue, GLuint alpha)</argsstring>
        <name>glColor4ui</name>
        <param>
          <type>GLuint</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLuint</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLuint</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>GLuint</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="78" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a64a4b50971abbbd0fdbc20ef85d86e10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor4uiv</definition>
        <argsstring>(const GLuint *v)</argsstring>
        <name>glColor4uiv</name>
        <param>
          <type>const GLuint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="79" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a0a382dd46694155cb619e0f443645c4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor4us</definition>
        <argsstring>(GLushort red, GLushort green, GLushort blue, GLushort alpha)</argsstring>
        <name>glColor4us</name>
        <param>
          <type>GLushort</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLushort</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLushort</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>GLushort</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="80" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a96106c70be1be8543d88908da293446e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColor4usv</definition>
        <argsstring>(const GLushort *v)</argsstring>
        <name>glColor4usv</name>
        <param>
          <type>const GLushort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="81" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a2736771f59f7e05f5e4e0c9b2e2d65e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColorMask</definition>
        <argsstring>(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)</argsstring>
        <name>glColorMask</name>
        <param>
          <type>GLboolean</type>
          <declname>red</declname>
        </param>
        <param>
          <type>GLboolean</type>
          <declname>green</declname>
        </param>
        <param>
          <type>GLboolean</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>GLboolean</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="82" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a723b882db629c1071fc85e656dbba3f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColorMaterial</definition>
        <argsstring>(GLenum face, GLenum mode)</argsstring>
        <name>glColorMaterial</name>
        <param>
          <type>GLenum</type>
          <declname>face</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="83" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a3ebf30786df755aa03a59ba2630b60aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glColorPointer</definition>
        <argsstring>(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)</argsstring>
        <name>glColorPointer</name>
        <param>
          <type>GLint</type>
          <declname>size</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="84" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a16a5f368bb17517357a22ee62dbdcd57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glCopyPixels</definition>
        <argsstring>(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type)</argsstring>
        <name>glCopyPixels</name>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>height</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="85" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1af970fc318ee431d6b22cee6eebc16aa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glCopyTexImage1D</definition>
        <argsstring>(GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border)</argsstring>
        <name>glCopyTexImage1D</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>level</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>internalFormat</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>border</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="86" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1afdb51b3e44dc960e7d3330345425339d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glCopyTexImage2D</definition>
        <argsstring>(GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)</argsstring>
        <name>glCopyTexImage2D</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>level</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>internalFormat</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>height</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>border</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="87" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a769da8bdd0d16039009c6197cea1263a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glCopyTexSubImage1D</definition>
        <argsstring>(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)</argsstring>
        <name>glCopyTexSubImage1D</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>level</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>xoffset</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="88" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a0332eed3e073ab7df932bba145e9b828" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glCopyTexSubImage2D</definition>
        <argsstring>(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)</argsstring>
        <name>glCopyTexSubImage2D</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>level</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>xoffset</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>yoffset</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="89" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ac2168961fc8ea6ed07182284e13554cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glCullFace</definition>
        <argsstring>(GLenum mode)</argsstring>
        <name>glCullFace</name>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="90" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a782967b0335a9ff951de8180ef3ad1c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glDeleteLists</definition>
        <argsstring>(GLuint list, GLsizei range)</argsstring>
        <name>glDeleteLists</name>
        <param>
          <type>GLuint</type>
          <declname>list</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="91" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ad578daa8fcd4524b39f8496306ae88df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glDeleteTextures</definition>
        <argsstring>(GLsizei n, const GLuint *textures)</argsstring>
        <name>glDeleteTextures</name>
        <param>
          <type>GLsizei</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const GLuint *</type>
          <declname>textures</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="92" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1afb9f1c8d43f115019b311aa088fa1c00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glDepthFunc</definition>
        <argsstring>(GLenum func)</argsstring>
        <name>glDepthFunc</name>
        <param>
          <type>GLenum</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="93" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a194f2c1233201152c139422ecac6b58b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glDepthMask</definition>
        <argsstring>(GLboolean flag)</argsstring>
        <name>glDepthMask</name>
        <param>
          <type>GLboolean</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="94" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1adadff41012f97ac9fd8b67dfe081c4a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glDepthRange</definition>
        <argsstring>(GLclampd zNear, GLclampd zFar)</argsstring>
        <name>glDepthRange</name>
        <param>
          <type>GLclampd</type>
          <declname>zNear</declname>
        </param>
        <param>
          <type>GLclampd</type>
          <declname>zFar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="95" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a20b29ccd3a24f28fafc3a7597c8b05e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glDisable</definition>
        <argsstring>(GLenum cap)</argsstring>
        <name>glDisable</name>
        <param>
          <type>GLenum</type>
          <declname>cap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="96" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a733532f965c44086cfcda71a9dcc9c0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glDisableClientState</definition>
        <argsstring>(GLenum array)</argsstring>
        <name>glDisableClientState</name>
        <param>
          <type>GLenum</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="97" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1af9429973125d0e8e0b418de325c873a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glDrawArrays</definition>
        <argsstring>(GLenum mode, GLint first, GLsizei count)</argsstring>
        <name>glDrawArrays</name>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>first</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="98" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a4984cc055b903646dd85762fb4b85438" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glDrawBuffer</definition>
        <argsstring>(GLenum mode)</argsstring>
        <name>glDrawBuffer</name>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="99" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ab2bb46db469667dec4f28705995c493f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glDrawElements</definition>
        <argsstring>(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices)</argsstring>
        <name>glDrawElements</name>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>count</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="100" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a1e807e031efe191ed68a14d2c74018f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glDrawPixels</definition>
        <argsstring>(GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)</argsstring>
        <name>glDrawPixels</name>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>height</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>format</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>pixels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="101" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a6cc73c4d1302b96acf976bfbff081bf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glEdgeFlag</definition>
        <argsstring>(GLboolean flag)</argsstring>
        <name>glEdgeFlag</name>
        <param>
          <type>GLboolean</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="102" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a90c4dff301cbf3678ddd7d56078c63fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glEdgeFlagPointer</definition>
        <argsstring>(GLsizei stride, const GLvoid *pointer)</argsstring>
        <name>glEdgeFlagPointer</name>
        <param>
          <type>GLsizei</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="103" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a076579edf0780a9894c564fe6ca13b4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glEdgeFlagv</definition>
        <argsstring>(const GLboolean *flag)</argsstring>
        <name>glEdgeFlagv</name>
        <param>
          <type>const GLboolean *</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="104" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ac994527155720afcf882c1562a2c78a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glEnable</definition>
        <argsstring>(GLenum cap)</argsstring>
        <name>glEnable</name>
        <param>
          <type>GLenum</type>
          <declname>cap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="105" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a75022b7876c198154817225fe03396a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glEnableClientState</definition>
        <argsstring>(GLenum array)</argsstring>
        <name>glEnableClientState</name>
        <param>
          <type>GLenum</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="106" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1af50123535ec586f448744e0bc5a35923" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glEnd</definition>
        <argsstring>(void)</argsstring>
        <name>glEnd</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="107" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a2433bcb4a6367501ce3b690107e380d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glEndList</definition>
        <argsstring>(void)</argsstring>
        <name>glEndList</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="108" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a250762b96b74927ada3e87879385733b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glEvalCoord1d</definition>
        <argsstring>(GLdouble u)</argsstring>
        <name>glEvalCoord1d</name>
        <param>
          <type>GLdouble</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="109" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1afd40ff20e3e91a340453f6b9755e189c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glEvalCoord1dv</definition>
        <argsstring>(const GLdouble *u)</argsstring>
        <name>glEvalCoord1dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="110" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a7969cd1d5500ab4100aeae476b892962" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glEvalCoord1f</definition>
        <argsstring>(GLfloat u)</argsstring>
        <name>glEvalCoord1f</name>
        <param>
          <type>GLfloat</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="111" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a6e0a0d862286abdbee84a64b48e749cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glEvalCoord1fv</definition>
        <argsstring>(const GLfloat *u)</argsstring>
        <name>glEvalCoord1fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="112" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a8bf44c53807830bea59ab5c52c4c851d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glEvalCoord2d</definition>
        <argsstring>(GLdouble u, GLdouble v)</argsstring>
        <name>glEvalCoord2d</name>
        <param>
          <type>GLdouble</type>
          <declname>u</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="113" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1acd803512459ec78d05827336c44b286a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glEvalCoord2dv</definition>
        <argsstring>(const GLdouble *u)</argsstring>
        <name>glEvalCoord2dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="114" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1afe92e60b7181777a3894e1cf9bbd6681" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glEvalCoord2f</definition>
        <argsstring>(GLfloat u, GLfloat v)</argsstring>
        <name>glEvalCoord2f</name>
        <param>
          <type>GLfloat</type>
          <declname>u</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="115" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a9ccf09b79e8d86b2f44692a9c1261271" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glEvalCoord2fv</definition>
        <argsstring>(const GLfloat *u)</argsstring>
        <name>glEvalCoord2fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="116" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ad650c926e2e093b0ac408c2291ce4161" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glEvalMesh1</definition>
        <argsstring>(GLenum mode, GLint i1, GLint i2)</argsstring>
        <name>glEvalMesh1</name>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>i2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="117" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ac0530edda23036023f2d43b196f57462" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glEvalMesh2</definition>
        <argsstring>(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2)</argsstring>
        <name>glEvalMesh2</name>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>j1</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>j2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="118" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aa78946881a94f1d3a5e73371075470d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glEvalPoint1</definition>
        <argsstring>(GLint i)</argsstring>
        <name>glEvalPoint1</name>
        <param>
          <type>GLint</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="119" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aff13ddb537c5e2c08e656e18414f368d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glEvalPoint2</definition>
        <argsstring>(GLint i, GLint j)</argsstring>
        <name>glEvalPoint2</name>
        <param>
          <type>GLint</type>
          <declname>i</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="120" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1afd79af526bf4dc964955bd1b8a48d7f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glFeedbackBuffer</definition>
        <argsstring>(GLsizei size, GLenum type, GLfloat *buffer)</argsstring>
        <name>glFeedbackBuffer</name>
        <param>
          <type>GLsizei</type>
          <declname>size</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>GLfloat *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="121" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a1838c9b9b1c6c93f596295ed6724a7af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glFinish</definition>
        <argsstring>(void)</argsstring>
        <name>glFinish</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="122" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a9053f66d0dd41aa89e3f7ab19f4840bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glFlush</definition>
        <argsstring>(void)</argsstring>
        <name>glFlush</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="123" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a8e76e4396424524d2e40c2d8f85b376c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glFogf</definition>
        <argsstring>(GLenum pname, GLfloat param)</argsstring>
        <name>glFogf</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="124" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a34d2e44c52881dae0e6009674dc6f389" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glFogfv</definition>
        <argsstring>(GLenum pname, const GLfloat *params)</argsstring>
        <name>glFogfv</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="125" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a8fcbdc7066db8291558501e577836510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glFogi</definition>
        <argsstring>(GLenum pname, GLint param)</argsstring>
        <name>glFogi</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="126" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ab5c51dbfebef591593f1b4d3ab04b3b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glFogiv</definition>
        <argsstring>(GLenum pname, const GLint *params)</argsstring>
        <name>glFogiv</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="127" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ad8f92882dc97cde7ff2366ea9d9a6182" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glFrontFace</definition>
        <argsstring>(GLenum mode)</argsstring>
        <name>glFrontFace</name>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="128" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aaeb56fa2c36ee6b578d61ce4aa8e64da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glFrustum</definition>
        <argsstring>(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)</argsstring>
        <name>glFrustum</name>
        <param>
          <type>GLdouble</type>
          <declname>left</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>right</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>top</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>zNear</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>zFar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="129" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a652593bb33ea6a1ebee2bc41b895ff6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLuint</type>
        <definition>GLuint glGenLists</definition>
        <argsstring>(GLsizei range)</argsstring>
        <name>glGenLists</name>
        <param>
          <type>GLsizei</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="130" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a922ef676329b9884c42758ea8bfc6aa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGenTextures</definition>
        <argsstring>(GLsizei n, GLuint *textures)</argsstring>
        <name>glGenTextures</name>
        <param>
          <type>GLsizei</type>
          <declname>n</declname>
        </param>
        <param>
          <type>GLuint *</type>
          <declname>textures</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="131" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a3971188ae9ca48c63bfdb228a666c66e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetBooleanv</definition>
        <argsstring>(GLenum pname, GLboolean *params)</argsstring>
        <name>glGetBooleanv</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLboolean *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="132" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a34f50e2fa16221067bef21f4191c26b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetClipPlane</definition>
        <argsstring>(GLenum plane, GLdouble *equation)</argsstring>
        <name>glGetClipPlane</name>
        <param>
          <type>GLenum</type>
          <declname>plane</declname>
        </param>
        <param>
          <type>GLdouble *</type>
          <declname>equation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="133" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1af0d0b3ada4d0719af9039ca5ab62cffa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetDoublev</definition>
        <argsstring>(GLenum pname, GLdouble *params)</argsstring>
        <name>glGetDoublev</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLdouble *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="134" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ae223eaafd64957c4134a96af73bb61f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLenum</type>
        <definition>GLenum glGetError</definition>
        <argsstring>(void)</argsstring>
        <name>glGetError</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="135" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a3756e4af6c7ccb5b49ffb0f3260244e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetFloatv</definition>
        <argsstring>(GLenum pname, GLfloat *params)</argsstring>
        <name>glGetFloatv</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="136" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a53d86d752566d344f47be8e2931d5a85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetIntegerv</definition>
        <argsstring>(GLenum pname, GLint *params)</argsstring>
        <name>glGetIntegerv</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="137" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="137" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ac78fee3c7e3b45ef2678b8d4498ad61f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetLightfv</definition>
        <argsstring>(GLenum light, GLenum pname, GLfloat *params)</argsstring>
        <name>glGetLightfv</name>
        <param>
          <type>GLenum</type>
          <declname>light</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="144" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="144" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ac2068bffcbc2dee5e973d3a1ead7a41c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetLightiv</definition>
        <argsstring>(GLenum light, GLenum pname, GLint *params)</argsstring>
        <name>glGetLightiv</name>
        <param>
          <type>GLenum</type>
          <declname>light</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="145" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a0a33a9a8dd68ceeae982efb7d5b1d881" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetMapdv</definition>
        <argsstring>(GLenum target, GLenum query, GLdouble *v)</argsstring>
        <name>glGetMapdv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>query</declname>
        </param>
        <param>
          <type>GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="146" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aa984ca205bc16da0180c9697acdf43c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetMapfv</definition>
        <argsstring>(GLenum target, GLenum query, GLfloat *v)</argsstring>
        <name>glGetMapfv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>query</declname>
        </param>
        <param>
          <type>GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="147" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="147" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ac4ce6c79d8a2a4051d2dcb396879db2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetMapiv</definition>
        <argsstring>(GLenum target, GLenum query, GLint *v)</argsstring>
        <name>glGetMapiv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>query</declname>
        </param>
        <param>
          <type>GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="148" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="148" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1abdc18a349efac2020a933da4faacf625" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetMaterialfv</definition>
        <argsstring>(GLenum face, GLenum pname, GLfloat *params)</argsstring>
        <name>glGetMaterialfv</name>
        <param>
          <type>GLenum</type>
          <declname>face</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="149" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="149" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a37374f0fb502eb425374f2a45382bd54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetMaterialiv</definition>
        <argsstring>(GLenum face, GLenum pname, GLint *params)</argsstring>
        <name>glGetMaterialiv</name>
        <param>
          <type>GLenum</type>
          <declname>face</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="150" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1abf06778bd8db899fee11c8155e82124b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetPixelMapfv</definition>
        <argsstring>(GLenum map, GLfloat *values)</argsstring>
        <name>glGetPixelMapfv</name>
        <param>
          <type>GLenum</type>
          <declname>map</declname>
        </param>
        <param>
          <type>GLfloat *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="151" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="151" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a391433cb64e8079832b09c89b6ba08b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetPixelMapuiv</definition>
        <argsstring>(GLenum map, GLuint *values)</argsstring>
        <name>glGetPixelMapuiv</name>
        <param>
          <type>GLenum</type>
          <declname>map</declname>
        </param>
        <param>
          <type>GLuint *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="152" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="152" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a659ad26f0e507a7da05e4893c409b4e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetPixelMapusv</definition>
        <argsstring>(GLenum map, GLushort *values)</argsstring>
        <name>glGetPixelMapusv</name>
        <param>
          <type>GLenum</type>
          <declname>map</declname>
        </param>
        <param>
          <type>GLushort *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="153" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ab96d412ce6ef6315fe1caef82e30f235" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetPointerv</definition>
        <argsstring>(GLenum pname, GLvoid **params)</argsstring>
        <name>glGetPointerv</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLvoid **</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="154" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="154" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a6fc4537e2d26719d3848d759e4f53f69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetPolygonStipple</definition>
        <argsstring>(GLubyte *mask)</argsstring>
        <name>glGetPolygonStipple</name>
        <param>
          <type>GLubyte *</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="155" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ae4a2978f5c6f110e2453a209e301b198" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const GLubyte *</type>
        <definition>const GLubyte* glGetString</definition>
        <argsstring>(GLenum name)</argsstring>
        <name>glGetString</name>
        <param>
          <type>GLenum</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="156" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="156" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aaee5dc84b23407aff9d1e5ff801701ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetTexEnvfv</definition>
        <argsstring>(GLenum target, GLenum pname, GLfloat *params)</argsstring>
        <name>glGetTexEnvfv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="162" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ac0739e46139762144b6e6c8e1e6a3c4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetTexEnviv</definition>
        <argsstring>(GLenum target, GLenum pname, GLint *params)</argsstring>
        <name>glGetTexEnviv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="163" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="163" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a35052ba4d9a61ab99b2df417a3f58029" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetTexGendv</definition>
        <argsstring>(GLenum coord, GLenum pname, GLdouble *params)</argsstring>
        <name>glGetTexGendv</name>
        <param>
          <type>GLenum</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLdouble *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="164" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="164" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a664678c46ef9134a9ac131d1fdcfe96a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetTexGenfv</definition>
        <argsstring>(GLenum coord, GLenum pname, GLfloat *params)</argsstring>
        <name>glGetTexGenfv</name>
        <param>
          <type>GLenum</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="165" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a6b028a8e42a063cdb2f89e426114a7ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetTexGeniv</definition>
        <argsstring>(GLenum coord, GLenum pname, GLint *params)</argsstring>
        <name>glGetTexGeniv</name>
        <param>
          <type>GLenum</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="166" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="166" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ad413cb1688f3a156f4bff2345403e857" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetTexImage</definition>
        <argsstring>(GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels)</argsstring>
        <name>glGetTexImage</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>level</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>format</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>GLvoid *</type>
          <declname>pixels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="167" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="167" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a75e8cc45fdd3d6380dcf50a60da5318a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetTexLevelParameterfv</definition>
        <argsstring>(GLenum target, GLint level, GLenum pname, GLfloat *params)</argsstring>
        <name>glGetTexLevelParameterfv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>level</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="168" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ab2955127872c22321fec6e67dd0cb8db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetTexLevelParameteriv</definition>
        <argsstring>(GLenum target, GLint level, GLenum pname, GLint *params)</argsstring>
        <name>glGetTexLevelParameteriv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>level</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="169" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="169" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a59d9c98a2eb815b2adb52f476f1b3670" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetTexParameterfv</definition>
        <argsstring>(GLenum target, GLenum pname, GLfloat *params)</argsstring>
        <name>glGetTexParameterfv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="170" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="170" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a98511ba629fe037b59b77798668ed32c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glGetTexParameteriv</definition>
        <argsstring>(GLenum target, GLenum pname, GLint *params)</argsstring>
        <name>glGetTexParameteriv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="171" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="171" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a7ec09d68c6d803ee3fee2b0e1d3135c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glHint</definition>
        <argsstring>(GLenum target, GLenum mode)</argsstring>
        <name>glHint</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="172" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ae4623386b5257180e8fcac06ec9646b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glIndexMask</definition>
        <argsstring>(GLuint mask)</argsstring>
        <name>glIndexMask</name>
        <param>
          <type>GLuint</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="173" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="173" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ab0077fc6e6d52c1c8361fb0a79dadee7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glIndexPointer</definition>
        <argsstring>(GLenum type, GLsizei stride, const GLvoid *pointer)</argsstring>
        <name>glIndexPointer</name>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="174" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="174" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a889a48e63f94dfd2c97d4e4c479d1bd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glIndexd</definition>
        <argsstring>(GLdouble c)</argsstring>
        <name>glIndexd</name>
        <param>
          <type>GLdouble</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="175" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="175" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1afc17f7daa263752e7bd896647ced49f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glIndexdv</definition>
        <argsstring>(const GLdouble *c)</argsstring>
        <name>glIndexdv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="176" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="176" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ab42821f1dba693f43e59a31dad2f064a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glIndexf</definition>
        <argsstring>(GLfloat c)</argsstring>
        <name>glIndexf</name>
        <param>
          <type>GLfloat</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="177" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="177" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a0df9b95c582e0f25ff5abecd461a6f5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glIndexfv</definition>
        <argsstring>(const GLfloat *c)</argsstring>
        <name>glIndexfv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="178" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="178" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a7594ccf21cb3c241192ea2aad6eed92c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glIndexi</definition>
        <argsstring>(GLint c)</argsstring>
        <name>glIndexi</name>
        <param>
          <type>GLint</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="179" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="179" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a50a68b956b1a8e419a2ad8298a312175" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glIndexiv</definition>
        <argsstring>(const GLint *c)</argsstring>
        <name>glIndexiv</name>
        <param>
          <type>const GLint *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="180" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="180" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a811e2fcbbf45fec145673aa5b2270a54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glIndexs</definition>
        <argsstring>(GLshort c)</argsstring>
        <name>glIndexs</name>
        <param>
          <type>GLshort</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="181" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="181" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ae85633aefcec3584f48589e353ea26c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glIndexsv</definition>
        <argsstring>(const GLshort *c)</argsstring>
        <name>glIndexsv</name>
        <param>
          <type>const GLshort *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="182" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="182" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a78bbf1ceb72fb2575d2667e7e4811e58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glIndexub</definition>
        <argsstring>(GLubyte c)</argsstring>
        <name>glIndexub</name>
        <param>
          <type>GLubyte</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="183" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="183" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1adf2d125baf0162f235c4f76df0cf58c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glIndexubv</definition>
        <argsstring>(const GLubyte *c)</argsstring>
        <name>glIndexubv</name>
        <param>
          <type>const GLubyte *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="184" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="184" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aefaab7e9ee4c297d0e7e75bd24e35da9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glInitNames</definition>
        <argsstring>(void)</argsstring>
        <name>glInitNames</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="185" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="185" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aa52b916b5fc59f5b28c68aca56ad7091" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glInterleavedArrays</definition>
        <argsstring>(GLenum format, GLsizei stride, const GLvoid *pointer)</argsstring>
        <name>glInterleavedArrays</name>
        <param>
          <type>GLenum</type>
          <declname>format</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="186" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="186" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1adc27bdc362c204b2bfc477d365e32e57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLboolean</type>
        <definition>GLboolean glIsEnabled</definition>
        <argsstring>(GLenum cap)</argsstring>
        <name>glIsEnabled</name>
        <param>
          <type>GLenum</type>
          <declname>cap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="187" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="187" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a0e78cc24d6a4f7462cdc2367de40a3f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLboolean</type>
        <definition>GLboolean glIsList</definition>
        <argsstring>(GLuint list)</argsstring>
        <name>glIsList</name>
        <param>
          <type>GLuint</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="188" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="188" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a984f1b53fe0df013fb59f2c23d2403bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLboolean</type>
        <definition>GLboolean glIsTexture</definition>
        <argsstring>(GLuint texture)</argsstring>
        <name>glIsTexture</name>
        <param>
          <type>GLuint</type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="189" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="189" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a71ed83f10b5b2d0ff97fde736fd8b372" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glLightModelf</definition>
        <argsstring>(GLenum pname, GLfloat param)</argsstring>
        <name>glLightModelf</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="190" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="190" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aef29cfa2c1a24c2320a35cd769d03da0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glLightModelfv</definition>
        <argsstring>(GLenum pname, const GLfloat *params)</argsstring>
        <name>glLightModelfv</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="191" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="191" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a126d4a97a44411f3edfba327813d1868" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glLightModeli</definition>
        <argsstring>(GLenum pname, GLint param)</argsstring>
        <name>glLightModeli</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="192" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="192" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1afc6d9c98c90c5be6cbab448e72ae8b14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glLightModeliv</definition>
        <argsstring>(GLenum pname, const GLint *params)</argsstring>
        <name>glLightModeliv</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="193" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="193" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ada72accb17dfa04a9c0e0b282e9954dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glLightf</definition>
        <argsstring>(GLenum light, GLenum pname, GLfloat param)</argsstring>
        <name>glLightf</name>
        <param>
          <type>GLenum</type>
          <declname>light</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="194" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="194" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a5b4f7e0e7ffa745ecf32e5bb5d19b13e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glLightfv</definition>
        <argsstring>(GLenum light, GLenum pname, const GLfloat *params)</argsstring>
        <name>glLightfv</name>
        <param>
          <type>GLenum</type>
          <declname>light</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="195" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="195" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a5c11c4fb0c10db9b33846e604b42d215" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glLighti</definition>
        <argsstring>(GLenum light, GLenum pname, GLint param)</argsstring>
        <name>glLighti</name>
        <param>
          <type>GLenum</type>
          <declname>light</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="196" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="196" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a82bcb6a063d3b343576f61652a35a658" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glLightiv</definition>
        <argsstring>(GLenum light, GLenum pname, const GLint *params)</argsstring>
        <name>glLightiv</name>
        <param>
          <type>GLenum</type>
          <declname>light</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="197" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="197" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aba147b884cf3dd4cc9482941be9fb325" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glLineStipple</definition>
        <argsstring>(GLint factor, GLushort pattern)</argsstring>
        <name>glLineStipple</name>
        <param>
          <type>GLint</type>
          <declname>factor</declname>
        </param>
        <param>
          <type>GLushort</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="198" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="198" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ab82e41b32102673b0aafec8ee97d7757" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glLineWidth</definition>
        <argsstring>(GLfloat width)</argsstring>
        <name>glLineWidth</name>
        <param>
          <type>GLfloat</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="199" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="199" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a3442215d51d80db0d925b63aed011234" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glListBase</definition>
        <argsstring>(GLuint base)</argsstring>
        <name>glListBase</name>
        <param>
          <type>GLuint</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="200" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="200" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ad2f4e5d63593ca7af2a64041a6a52749" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glLoadIdentity</definition>
        <argsstring>(void)</argsstring>
        <name>glLoadIdentity</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="201" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="201" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a41ead687a7d5a562dabb752d63636ba7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glLoadMatrixd</definition>
        <argsstring>(const GLdouble *m)</argsstring>
        <name>glLoadMatrixd</name>
        <param>
          <type>const GLdouble *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="202" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="202" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a1f86071917bebae26a9b99fff64b3937" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glLoadMatrixf</definition>
        <argsstring>(const GLfloat *m)</argsstring>
        <name>glLoadMatrixf</name>
        <param>
          <type>const GLfloat *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="203" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="203" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1acfc4f95679947bece5074c9bef9f7c62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glLoadName</definition>
        <argsstring>(GLuint name)</argsstring>
        <name>glLoadName</name>
        <param>
          <type>GLuint</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="204" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="204" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a76cbfc2776648d46e4f8ca607477ac81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glLogicOp</definition>
        <argsstring>(GLenum opcode)</argsstring>
        <name>glLogicOp</name>
        <param>
          <type>GLenum</type>
          <declname>opcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="205" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="205" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ab4000e0689ae84276702c524305922ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glMap1d</definition>
        <argsstring>(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points)</argsstring>
        <name>glMap1d</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>u2</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>order</declname>
        </param>
        <param>
          <type>const GLdouble *</type>
          <declname>points</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="206" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="206" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a7bbb6c27c33f264a1e0752e030207931" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glMap1f</definition>
        <argsstring>(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points)</argsstring>
        <name>glMap1f</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>u2</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>order</declname>
        </param>
        <param>
          <type>const GLfloat *</type>
          <declname>points</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="207" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="207" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1adfe13a972500474c154d555e05c4fa59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glMap2d</definition>
        <argsstring>(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points)</argsstring>
        <name>glMap2d</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>u2</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>ustride</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>uorder</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>v2</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>vstride</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>vorder</declname>
        </param>
        <param>
          <type>const GLdouble *</type>
          <declname>points</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="208" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="208" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a1aa62a68f7edbc201c423055923a231a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glMap2f</definition>
        <argsstring>(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points)</argsstring>
        <name>glMap2f</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>u2</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>ustride</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>uorder</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>v2</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>vstride</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>vorder</declname>
        </param>
        <param>
          <type>const GLfloat *</type>
          <declname>points</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="209" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="209" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1adf1a6f9ab21867baa59a0718c0b5c9da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glMapGrid1d</definition>
        <argsstring>(GLint un, GLdouble u1, GLdouble u2)</argsstring>
        <name>glMapGrid1d</name>
        <param>
          <type>GLint</type>
          <declname>un</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>u2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="210" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="210" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aa35327c2067e8087c4c281190abc7aaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glMapGrid1f</definition>
        <argsstring>(GLint un, GLfloat u1, GLfloat u2)</argsstring>
        <name>glMapGrid1f</name>
        <param>
          <type>GLint</type>
          <declname>un</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>u2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="211" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="211" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ac4194e1a4f277272872776551315eb5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glMapGrid2d</definition>
        <argsstring>(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2)</argsstring>
        <name>glMapGrid2d</name>
        <param>
          <type>GLint</type>
          <declname>un</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>u2</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>vn</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="212" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="212" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aab27968f856a45b6a1ccd5958d239b88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glMapGrid2f</definition>
        <argsstring>(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2)</argsstring>
        <name>glMapGrid2f</name>
        <param>
          <type>GLint</type>
          <declname>un</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>u2</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>vn</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="213" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="213" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a64ea44693bf1600afe02307a361e0d5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glMaterialf</definition>
        <argsstring>(GLenum face, GLenum pname, GLfloat param)</argsstring>
        <name>glMaterialf</name>
        <param>
          <type>GLenum</type>
          <declname>face</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="214" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="214" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a5119d379f2033f67280e54927fca035d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glMaterialfv</definition>
        <argsstring>(GLenum face, GLenum pname, const GLfloat *params)</argsstring>
        <name>glMaterialfv</name>
        <param>
          <type>GLenum</type>
          <declname>face</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="215" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="215" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a6e1fdd4ce6d9e8a0b5a77b9c79492af6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glMateriali</definition>
        <argsstring>(GLenum face, GLenum pname, GLint param)</argsstring>
        <name>glMateriali</name>
        <param>
          <type>GLenum</type>
          <declname>face</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="216" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="216" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1abe93ecf5f1ea7d6205c745b6c88de013" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glMaterialiv</definition>
        <argsstring>(GLenum face, GLenum pname, const GLint *params)</argsstring>
        <name>glMaterialiv</name>
        <param>
          <type>GLenum</type>
          <declname>face</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="217" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="217" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a2b895ddd36cb9e8d8d76b786f65f04a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glMatrixMode</definition>
        <argsstring>(GLenum mode)</argsstring>
        <name>glMatrixMode</name>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="218" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="218" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a8a886b062be6d4381e8960bd7cd30d61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glMultMatrixd</definition>
        <argsstring>(const GLdouble *m)</argsstring>
        <name>glMultMatrixd</name>
        <param>
          <type>const GLdouble *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="219" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="219" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a741887f42ff707c95e637e6a52cc9df4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glMultMatrixf</definition>
        <argsstring>(const GLfloat *m)</argsstring>
        <name>glMultMatrixf</name>
        <param>
          <type>const GLfloat *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="220" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="220" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a4b8d17a34389e0310718ab5219f0719f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glNewList</definition>
        <argsstring>(GLuint list, GLenum mode)</argsstring>
        <name>glNewList</name>
        <param>
          <type>GLuint</type>
          <declname>list</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="221" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="221" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a46b1a1e41c3dba383621a00cb1f18a57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glNormal3b</definition>
        <argsstring>(GLbyte nx, GLbyte ny, GLbyte nz)</argsstring>
        <name>glNormal3b</name>
        <param>
          <type>GLbyte</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>GLbyte</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>GLbyte</type>
          <declname>nz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="222" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="222" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ade397e682a1470f807ed925f228b3e3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glNormal3bv</definition>
        <argsstring>(const GLbyte *v)</argsstring>
        <name>glNormal3bv</name>
        <param>
          <type>const GLbyte *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="223" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="223" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a2619271db2de4aa834da4b098e5e8aff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glNormal3d</definition>
        <argsstring>(GLdouble nx, GLdouble ny, GLdouble nz)</argsstring>
        <name>glNormal3d</name>
        <param>
          <type>GLdouble</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>nz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="224" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="224" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aadc9f1161a763a4bfebe2a9ede056c75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glNormal3dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>glNormal3dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="225" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="225" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a50c376fd422558ca71d937541145c48e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glNormal3f</definition>
        <argsstring>(GLfloat nx, GLfloat ny, GLfloat nz)</argsstring>
        <name>glNormal3f</name>
        <param>
          <type>GLfloat</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>nz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="226" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="226" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a78a38391c327a3903dba1ed69158e0c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glNormal3fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>glNormal3fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="227" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="227" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a3991f32a05dfa489f68ff972eb24da81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glNormal3i</definition>
        <argsstring>(GLint nx, GLint ny, GLint nz)</argsstring>
        <name>glNormal3i</name>
        <param>
          <type>GLint</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>nz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="228" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="228" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1abfbd962f541d04f41683c78db7cf7250" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glNormal3iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>glNormal3iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="229" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="229" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a69c72fbeb554be36ece9d9fb5b3c680d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glNormal3s</definition>
        <argsstring>(GLshort nx, GLshort ny, GLshort nz)</argsstring>
        <name>glNormal3s</name>
        <param>
          <type>GLshort</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>nz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="230" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="230" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a198958c7b52395ab69c5c86b7379d56a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glNormal3sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>glNormal3sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="231" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="231" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a7a9c10a19f87316282b44df09b075687" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glNormalPointer</definition>
        <argsstring>(GLenum type, GLsizei stride, const GLvoid *pointer)</argsstring>
        <name>glNormalPointer</name>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="232" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="232" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ac8b62764d1a3167241d46b6b0fdb510c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glOrtho</definition>
        <argsstring>(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)</argsstring>
        <name>glOrtho</name>
        <param>
          <type>GLdouble</type>
          <declname>left</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>right</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>top</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>zNear</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>zFar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="233" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="233" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a0de9ec7b6cfad796b1c486963fbdb9c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glPassThrough</definition>
        <argsstring>(GLfloat token)</argsstring>
        <name>glPassThrough</name>
        <param>
          <type>GLfloat</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="234" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="234" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ab6fe40dcec77c80e6fa5458224e31a5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glPixelMapfv</definition>
        <argsstring>(GLenum map, GLsizei mapsize, const GLfloat *values)</argsstring>
        <name>glPixelMapfv</name>
        <param>
          <type>GLenum</type>
          <declname>map</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>mapsize</declname>
        </param>
        <param>
          <type>const GLfloat *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="235" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="235" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a99eb6eca8a4176b4064727e1b23d0b23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glPixelMapuiv</definition>
        <argsstring>(GLenum map, GLsizei mapsize, const GLuint *values)</argsstring>
        <name>glPixelMapuiv</name>
        <param>
          <type>GLenum</type>
          <declname>map</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>mapsize</declname>
        </param>
        <param>
          <type>const GLuint *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="236" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="236" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a5651f3b7554c5665228bf4225ec3cc36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glPixelMapusv</definition>
        <argsstring>(GLenum map, GLsizei mapsize, const GLushort *values)</argsstring>
        <name>glPixelMapusv</name>
        <param>
          <type>GLenum</type>
          <declname>map</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>mapsize</declname>
        </param>
        <param>
          <type>const GLushort *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="237" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="237" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1af6caed9eca01a59e4cb17d9ad71869dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glPixelStoref</definition>
        <argsstring>(GLenum pname, GLfloat param)</argsstring>
        <name>glPixelStoref</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="238" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="238" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aa7103712f0da4d1acf1555c65e258a97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glPixelStorei</definition>
        <argsstring>(GLenum pname, GLint param)</argsstring>
        <name>glPixelStorei</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="239" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="239" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a4d84995ab7d79489331681417aba17bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glPixelTransferf</definition>
        <argsstring>(GLenum pname, GLfloat param)</argsstring>
        <name>glPixelTransferf</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="240" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="240" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a9b1c7ba6825f1271a933370eded923b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glPixelTransferi</definition>
        <argsstring>(GLenum pname, GLint param)</argsstring>
        <name>glPixelTransferi</name>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="241" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="241" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1afb079f23c2963fad33ff66c19dae5df8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glPixelZoom</definition>
        <argsstring>(GLfloat xfactor, GLfloat yfactor)</argsstring>
        <name>glPixelZoom</name>
        <param>
          <type>GLfloat</type>
          <declname>xfactor</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>yfactor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="242" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="242" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a680c652174b236f58b6f6a4288e6c254" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glPointSize</definition>
        <argsstring>(GLfloat size)</argsstring>
        <name>glPointSize</name>
        <param>
          <type>GLfloat</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="243" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="243" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a681e608cde02b24bf889e62ccebc96e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glPolygonMode</definition>
        <argsstring>(GLenum face, GLenum mode)</argsstring>
        <name>glPolygonMode</name>
        <param>
          <type>GLenum</type>
          <declname>face</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="244" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="244" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a225c027770754cc9f9854ccc29b5c92a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glPolygonOffset</definition>
        <argsstring>(GLfloat factor, GLfloat units)</argsstring>
        <name>glPolygonOffset</name>
        <param>
          <type>GLfloat</type>
          <declname>factor</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>units</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="245" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="245" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a463d0ea5ff50a7f87054e7192f860d37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glPolygonStipple</definition>
        <argsstring>(const GLubyte *mask)</argsstring>
        <name>glPolygonStipple</name>
        <param>
          <type>const GLubyte *</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="246" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="246" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ad0f886ee4d236c3902c1a2f566eeb8ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glPopAttrib</definition>
        <argsstring>(void)</argsstring>
        <name>glPopAttrib</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="247" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="247" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a8ea4d4c189f54c95a93bd91d8a87c9be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glPopClientAttrib</definition>
        <argsstring>(void)</argsstring>
        <name>glPopClientAttrib</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="248" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="248" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a2243f087ab49bf4fed1da164aff4a372" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glPopMatrix</definition>
        <argsstring>(void)</argsstring>
        <name>glPopMatrix</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="249" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="249" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a43df80902fa8b0bcdac1d9120a331176" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glPopName</definition>
        <argsstring>(void)</argsstring>
        <name>glPopName</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="250" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="250" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a567b6e4b1b020eb75157f1b09513abe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glPrioritizeTextures</definition>
        <argsstring>(GLsizei n, const GLuint *textures, const GLclampf *priorities)</argsstring>
        <name>glPrioritizeTextures</name>
        <param>
          <type>GLsizei</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const GLuint *</type>
          <declname>textures</declname>
        </param>
        <param>
          <type>const GLclampf *</type>
          <declname>priorities</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="251" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="251" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a1917b00fe1a903f7db1352e308fd3b52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glPushAttrib</definition>
        <argsstring>(GLbitfield mask)</argsstring>
        <name>glPushAttrib</name>
        <param>
          <type>GLbitfield</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="252" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="252" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a85fe8ff90062d23dbf14f664f456227a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glPushClientAttrib</definition>
        <argsstring>(GLbitfield mask)</argsstring>
        <name>glPushClientAttrib</name>
        <param>
          <type>GLbitfield</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="253" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="253" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a1c5c5fcb7319f4a4c800d4ad8467c023" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glPushMatrix</definition>
        <argsstring>(void)</argsstring>
        <name>glPushMatrix</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="254" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="254" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a38a2a0965d6754dd1f69e85fd5942c35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glPushName</definition>
        <argsstring>(GLuint name)</argsstring>
        <name>glPushName</name>
        <param>
          <type>GLuint</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="255" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="255" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1afcd4f541df47994757e1fc34c516e583" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRasterPos2d</definition>
        <argsstring>(GLdouble x, GLdouble y)</argsstring>
        <name>glRasterPos2d</name>
        <param>
          <type>GLdouble</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="256" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="256" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a5809644035f8aeae3df42124a2cce623" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRasterPos2dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>glRasterPos2dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="257" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="257" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a2786597c056bc646d5b259bf104ed2ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRasterPos2f</definition>
        <argsstring>(GLfloat x, GLfloat y)</argsstring>
        <name>glRasterPos2f</name>
        <param>
          <type>GLfloat</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="258" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="258" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a7b8d7289dd1a5b130b0562a47cf1546e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRasterPos2fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>glRasterPos2fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="259" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="259" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a3ff52bc6424de117427f33c9373782e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRasterPos2i</definition>
        <argsstring>(GLint x, GLint y)</argsstring>
        <name>glRasterPos2i</name>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="260" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="260" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aa8e73b62996e875abf2a31d6ba27c63e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRasterPos2iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>glRasterPos2iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="261" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="261" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a005f8eb87660b5283cf7407a1663de46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRasterPos2s</definition>
        <argsstring>(GLshort x, GLshort y)</argsstring>
        <name>glRasterPos2s</name>
        <param>
          <type>GLshort</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="262" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="262" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a8f3b3729d3c4b52b9fc51a58aae8dc2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRasterPos2sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>glRasterPos2sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="263" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="263" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1af5e3fab9e96821e6325b1debcec775ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRasterPos3d</definition>
        <argsstring>(GLdouble x, GLdouble y, GLdouble z)</argsstring>
        <name>glRasterPos3d</name>
        <param>
          <type>GLdouble</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="264" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="264" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ab71bf07f31c0349c5188ab4960f7dbfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRasterPos3dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>glRasterPos3dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="265" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="265" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a323054cdacff981ee93f8d392230515e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRasterPos3f</definition>
        <argsstring>(GLfloat x, GLfloat y, GLfloat z)</argsstring>
        <name>glRasterPos3f</name>
        <param>
          <type>GLfloat</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="266" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="266" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a571fea9ef7eb3b1aff2e007251f41f4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRasterPos3fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>glRasterPos3fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="267" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="267" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a164c931f901a1c65c3ad7f905d8a82a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRasterPos3i</definition>
        <argsstring>(GLint x, GLint y, GLint z)</argsstring>
        <name>glRasterPos3i</name>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="268" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="268" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a4756731e0c44d7e4d2d282edb2f05632" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRasterPos3iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>glRasterPos3iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="269" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="269" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ad17498225274a5de2c98e08c81bbeec1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRasterPos3s</definition>
        <argsstring>(GLshort x, GLshort y, GLshort z)</argsstring>
        <name>glRasterPos3s</name>
        <param>
          <type>GLshort</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="270" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="270" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a6d2967abd1ce437da81dbdba1848daa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRasterPos3sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>glRasterPos3sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="271" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="271" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a0aed03b03980887bfc996d7fca4bb8be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRasterPos4d</definition>
        <argsstring>(GLdouble x, GLdouble y, GLdouble z, GLdouble w)</argsstring>
        <name>glRasterPos4d</name>
        <param>
          <type>GLdouble</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>z</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="272" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="272" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a422133141c14c3a59eb06489418c9124" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRasterPos4dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>glRasterPos4dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="273" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="273" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a65c15f78f99ffd2e35663228d49101e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRasterPos4f</definition>
        <argsstring>(GLfloat x, GLfloat y, GLfloat z, GLfloat w)</argsstring>
        <name>glRasterPos4f</name>
        <param>
          <type>GLfloat</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>z</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="274" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="274" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aede134759cb287f3a2c5f2754c021dff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRasterPos4fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>glRasterPos4fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="275" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="275" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a597547c636c1bc15bb8546a1cb57c8fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRasterPos4i</definition>
        <argsstring>(GLint x, GLint y, GLint z, GLint w)</argsstring>
        <name>glRasterPos4i</name>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>z</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="276" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="276" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a6221236e0de23e3aeee45ea7c5ddcc16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRasterPos4iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>glRasterPos4iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="277" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="277" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a0b85e0816bad6d3a02a406094bb65f25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRasterPos4s</definition>
        <argsstring>(GLshort x, GLshort y, GLshort z, GLshort w)</argsstring>
        <name>glRasterPos4s</name>
        <param>
          <type>GLshort</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>z</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="278" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="278" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a5b27b759fb92e8c74f1e93be8ca1c019" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRasterPos4sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>glRasterPos4sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="279" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="279" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aa786f39234b06e070ee69786f5511623" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glReadBuffer</definition>
        <argsstring>(GLenum mode)</argsstring>
        <name>glReadBuffer</name>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="280" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="280" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1abfcfd1e7e904654d83ca8b3dcc118498" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glReadPixels</definition>
        <argsstring>(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels)</argsstring>
        <name>glReadPixels</name>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>height</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>format</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>GLvoid *</type>
          <declname>pixels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="281" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="281" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a14a0972eba9ee86cc54b7e5501a89d42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRectd</definition>
        <argsstring>(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2)</argsstring>
        <name>glRectd</name>
        <param>
          <type>GLdouble</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>y2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="282" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="282" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a5ccef5266c63152d4dcc4c41eecb2319" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRectdv</definition>
        <argsstring>(const GLdouble *v1, const GLdouble *v2)</argsstring>
        <name>glRectdv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const GLdouble *</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="283" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="283" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a22fc2b5e707b635c6e86b383728698e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRectf</definition>
        <argsstring>(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2)</argsstring>
        <name>glRectf</name>
        <param>
          <type>GLfloat</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>y2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="284" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="284" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a058451666ab98c538e80636fd2a789c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRectfv</definition>
        <argsstring>(const GLfloat *v1, const GLfloat *v2)</argsstring>
        <name>glRectfv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const GLfloat *</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="285" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="285" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ad4b7572d5461aa155c63ab0bd2d9451b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRecti</definition>
        <argsstring>(GLint x1, GLint y1, GLint x2, GLint y2)</argsstring>
        <name>glRecti</name>
        <param>
          <type>GLint</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="286" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="286" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a20047e1a3893986f30245a2804f5bca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRectiv</definition>
        <argsstring>(const GLint *v1, const GLint *v2)</argsstring>
        <name>glRectiv</name>
        <param>
          <type>const GLint *</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const GLint *</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="287" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="287" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a3c88833d4fe6e861e21837f2311150ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRects</definition>
        <argsstring>(GLshort x1, GLshort y1, GLshort x2, GLshort y2)</argsstring>
        <name>glRects</name>
        <param>
          <type>GLshort</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>y2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="288" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="288" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a41399cb59a86a597864777dcf9ac9659" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRectsv</definition>
        <argsstring>(const GLshort *v1, const GLshort *v2)</argsstring>
        <name>glRectsv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const GLshort *</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="289" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="289" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1adb8ab264c4d7d0151cafbd8d9480a0c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLint</type>
        <definition>GLint glRenderMode</definition>
        <argsstring>(GLenum mode)</argsstring>
        <name>glRenderMode</name>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="290" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="290" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a5aa4f373b883537741b3134b69079609" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRotated</definition>
        <argsstring>(GLdouble angle, GLdouble x, GLdouble y, GLdouble z)</argsstring>
        <name>glRotated</name>
        <param>
          <type>GLdouble</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="291" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="291" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a9ae5a2ff829b843578ff934a67514ecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glRotatef</definition>
        <argsstring>(GLfloat angle, GLfloat x, GLfloat y, GLfloat z)</argsstring>
        <name>glRotatef</name>
        <param>
          <type>GLfloat</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="292" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="292" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a76070775bd78ab9cca092f4917e1b55b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glScaled</definition>
        <argsstring>(GLdouble x, GLdouble y, GLdouble z)</argsstring>
        <name>glScaled</name>
        <param>
          <type>GLdouble</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="293" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="293" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a94b61500e9f7a2705447710a4078a8bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glScalef</definition>
        <argsstring>(GLfloat x, GLfloat y, GLfloat z)</argsstring>
        <name>glScalef</name>
        <param>
          <type>GLfloat</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="294" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="294" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ab332241e60224e5f78d10161c2a27305" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glScissor</definition>
        <argsstring>(GLint x, GLint y, GLsizei width, GLsizei height)</argsstring>
        <name>glScissor</name>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="295" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="295" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aad86428419804abee0359f5b1ff600bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glSelectBuffer</definition>
        <argsstring>(GLsizei size, GLuint *buffer)</argsstring>
        <name>glSelectBuffer</name>
        <param>
          <type>GLsizei</type>
          <declname>size</declname>
        </param>
        <param>
          <type>GLuint *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="296" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="296" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1abdc6ecfbd95800291eb8f355c30da908" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glShadeModel</definition>
        <argsstring>(GLenum mode)</argsstring>
        <name>glShadeModel</name>
        <param>
          <type>GLenum</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="297" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="297" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a7472488a156a32903d6caaf5dad8a0fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glStencilFunc</definition>
        <argsstring>(GLenum func, GLint ref, GLuint mask)</argsstring>
        <name>glStencilFunc</name>
        <param>
          <type>GLenum</type>
          <declname>func</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>GLuint</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="298" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="298" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a1dc04cd3dbbe56b676c7d7525e5043ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glStencilMask</definition>
        <argsstring>(GLuint mask)</argsstring>
        <name>glStencilMask</name>
        <param>
          <type>GLuint</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="299" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="299" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ae5d117d9fc044950df7aac777b2f6f00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glStencilOp</definition>
        <argsstring>(GLenum fail, GLenum zfail, GLenum zpass)</argsstring>
        <name>glStencilOp</name>
        <param>
          <type>GLenum</type>
          <declname>fail</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>zfail</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>zpass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="300" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="300" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a782072ca19e7c4e15d79f794e772e83e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord1d</definition>
        <argsstring>(GLdouble s)</argsstring>
        <name>glTexCoord1d</name>
        <param>
          <type>GLdouble</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="301" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="301" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ae4ebd125a1654bafb2e282248ed9a2e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord1dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>glTexCoord1dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="302" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="302" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aa073719ec1005d348ab7a4ea5a3ad974" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord1f</definition>
        <argsstring>(GLfloat s)</argsstring>
        <name>glTexCoord1f</name>
        <param>
          <type>GLfloat</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="303" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="303" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a0d0e7aa9929d7c43f4f28778856c9af7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord1fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>glTexCoord1fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="304" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="304" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a04943a8fa8e4cb41a8f1846eb5e6f073" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord1i</definition>
        <argsstring>(GLint s)</argsstring>
        <name>glTexCoord1i</name>
        <param>
          <type>GLint</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="305" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="305" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a650d6ea7acace41b8741f7f5327dbe28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord1iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>glTexCoord1iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="306" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="306" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a530837cbf6fdea2efdfa3b499251246a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord1s</definition>
        <argsstring>(GLshort s)</argsstring>
        <name>glTexCoord1s</name>
        <param>
          <type>GLshort</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="307" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="307" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aadd7889ede7b68f82290ba081b440146" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord1sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>glTexCoord1sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="308" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="308" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a2ca01db844c6a39709008fcbca6fe211" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord2d</definition>
        <argsstring>(GLdouble s, GLdouble t)</argsstring>
        <name>glTexCoord2d</name>
        <param>
          <type>GLdouble</type>
          <declname>s</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="309" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="309" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a0704279dce74908aed4240863a03bc5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord2dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>glTexCoord2dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="310" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="310" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a39a2ceb8a170f526f50c777def3e33c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord2f</definition>
        <argsstring>(GLfloat s, GLfloat t)</argsstring>
        <name>glTexCoord2f</name>
        <param>
          <type>GLfloat</type>
          <declname>s</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="311" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="311" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1afaac45be204352242652d1243cb02273" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord2fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>glTexCoord2fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="312" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="312" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a56ea028014d33e6b70f165be28c79a46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord2i</definition>
        <argsstring>(GLint s, GLint t)</argsstring>
        <name>glTexCoord2i</name>
        <param>
          <type>GLint</type>
          <declname>s</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="313" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="313" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aa978d95aeb86aba35e95eeaf92c618bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord2iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>glTexCoord2iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="314" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="314" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a07a5f5f415d71b6ac06adcbcf4a1342b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord2s</definition>
        <argsstring>(GLshort s, GLshort t)</argsstring>
        <name>glTexCoord2s</name>
        <param>
          <type>GLshort</type>
          <declname>s</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="315" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="315" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a7e3a981b305343084c70c0cf7fd1ddf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord2sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>glTexCoord2sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="316" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="316" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a039d1dd02fed46bac52d635d591995ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord3d</definition>
        <argsstring>(GLdouble s, GLdouble t, GLdouble r)</argsstring>
        <name>glTexCoord3d</name>
        <param>
          <type>GLdouble</type>
          <declname>s</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>t</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="317" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="317" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a41e4dc5d78477042df779be2be8c457f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord3dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>glTexCoord3dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="318" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="318" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a0ca5b4bbcbee092b3ee41842fc1e4508" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord3f</definition>
        <argsstring>(GLfloat s, GLfloat t, GLfloat r)</argsstring>
        <name>glTexCoord3f</name>
        <param>
          <type>GLfloat</type>
          <declname>s</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>t</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="319" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="319" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1adb70fd94f26f5cc33759463eda54437f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord3fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>glTexCoord3fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="320" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="320" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ac9a56e9dff2235cc276238d1a18c49bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord3i</definition>
        <argsstring>(GLint s, GLint t, GLint r)</argsstring>
        <name>glTexCoord3i</name>
        <param>
          <type>GLint</type>
          <declname>s</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>t</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="321" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="321" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a6b80f46116afa3ace900ba1744dfe6f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord3iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>glTexCoord3iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="322" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="322" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1af18fcb6514d7d08efcb3cd0d0553d5b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord3s</definition>
        <argsstring>(GLshort s, GLshort t, GLshort r)</argsstring>
        <name>glTexCoord3s</name>
        <param>
          <type>GLshort</type>
          <declname>s</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>t</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="323" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="323" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a23767cab0b01c85008f7d3892efc7b60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord3sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>glTexCoord3sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="324" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="324" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a7f656fd807ef0b8ddadb435d039f7a74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord4d</definition>
        <argsstring>(GLdouble s, GLdouble t, GLdouble r, GLdouble q)</argsstring>
        <name>glTexCoord4d</name>
        <param>
          <type>GLdouble</type>
          <declname>s</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>t</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>r</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="325" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="325" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a0f6333a39bd6e5b2f8cb8480f2b55350" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord4dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>glTexCoord4dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="326" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="326" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a4228c76284df1852964e750ca744bcde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord4f</definition>
        <argsstring>(GLfloat s, GLfloat t, GLfloat r, GLfloat q)</argsstring>
        <name>glTexCoord4f</name>
        <param>
          <type>GLfloat</type>
          <declname>s</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>t</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>r</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="327" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="327" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ac15fb7c0f562aaf644558460dc2ef85b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord4fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>glTexCoord4fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="328" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="328" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a52a01bb64733e029a3fcbf5dd49c723d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord4i</definition>
        <argsstring>(GLint s, GLint t, GLint r, GLint q)</argsstring>
        <name>glTexCoord4i</name>
        <param>
          <type>GLint</type>
          <declname>s</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>t</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>r</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="329" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="329" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1abd1ebd3d87de3c14733ad6b79075438a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord4iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>glTexCoord4iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="330" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="330" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a596a09d7e048ece61c43b87e73941d5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord4s</definition>
        <argsstring>(GLshort s, GLshort t, GLshort r, GLshort q)</argsstring>
        <name>glTexCoord4s</name>
        <param>
          <type>GLshort</type>
          <declname>s</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>t</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>r</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="331" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="331" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a8d1c73ebb4ef51db830925933c1e83a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoord4sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>glTexCoord4sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="332" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="332" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a6310e5b1c5393222d703dee25f0fc5aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexCoordPointer</definition>
        <argsstring>(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)</argsstring>
        <name>glTexCoordPointer</name>
        <param>
          <type>GLint</type>
          <declname>size</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="333" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="333" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a62b5900352a089359f8a964c620a65ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexEnvf</definition>
        <argsstring>(GLenum target, GLenum pname, GLfloat param)</argsstring>
        <name>glTexEnvf</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="334" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="334" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a53dc615340da0777dcce3c01eab28ac4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexEnvfv</definition>
        <argsstring>(GLenum target, GLenum pname, const GLfloat *params)</argsstring>
        <name>glTexEnvfv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="335" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="335" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aaf4cdac66ad914b59e5952eca4340272" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexEnvi</definition>
        <argsstring>(GLenum target, GLenum pname, GLint param)</argsstring>
        <name>glTexEnvi</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="336" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="336" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a56d08b603292f02e049752d757cda6c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexEnviv</definition>
        <argsstring>(GLenum target, GLenum pname, const GLint *params)</argsstring>
        <name>glTexEnviv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="337" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="337" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a61bd2191308e292d38f8a301508440f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexGend</definition>
        <argsstring>(GLenum coord, GLenum pname, GLdouble param)</argsstring>
        <name>glTexGend</name>
        <param>
          <type>GLenum</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="338" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="338" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1addc0cee1a98a1f02f67dd10267960080" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexGendv</definition>
        <argsstring>(GLenum coord, GLenum pname, const GLdouble *params)</argsstring>
        <name>glTexGendv</name>
        <param>
          <type>GLenum</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLdouble *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="339" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="339" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a8b2743088b42598b457d4316619fb23a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexGenf</definition>
        <argsstring>(GLenum coord, GLenum pname, GLfloat param)</argsstring>
        <name>glTexGenf</name>
        <param>
          <type>GLenum</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="340" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="340" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aa96af12f8dc134fe5228e307e1a1b0f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexGenfv</definition>
        <argsstring>(GLenum coord, GLenum pname, const GLfloat *params)</argsstring>
        <name>glTexGenfv</name>
        <param>
          <type>GLenum</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="341" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="341" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ab852fc10009893b495ecd220cf89fe17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexGeni</definition>
        <argsstring>(GLenum coord, GLenum pname, GLint param)</argsstring>
        <name>glTexGeni</name>
        <param>
          <type>GLenum</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="342" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="342" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a71cd3d67c07070974da1ba7a3e657142" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexGeniv</definition>
        <argsstring>(GLenum coord, GLenum pname, const GLint *params)</argsstring>
        <name>glTexGeniv</name>
        <param>
          <type>GLenum</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="343" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="343" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a04f5aaa8aaf157ac890c760ca264fbbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexImage1D</definition>
        <argsstring>(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels)</argsstring>
        <name>glTexImage1D</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>level</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>internalformat</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>border</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>format</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>pixels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="344" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="344" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a3d27abf49091d74a00148325089ff314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexImage2D</definition>
        <argsstring>(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)</argsstring>
        <name>glTexImage2D</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>level</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>internalformat</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>height</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>border</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>format</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>pixels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="345" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="345" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a43cc3c3f6fe5e6a3b12bbfc5d526e7ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexParameterf</definition>
        <argsstring>(GLenum target, GLenum pname, GLfloat param)</argsstring>
        <name>glTexParameterf</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="346" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="346" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ab7ae6de3a37ab6ddde2d171072e46e58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexParameterfv</definition>
        <argsstring>(GLenum target, GLenum pname, const GLfloat *params)</argsstring>
        <name>glTexParameterfv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLfloat *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="347" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="347" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a2831cebf2fd971da183d868d97b43d54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexParameteri</definition>
        <argsstring>(GLenum target, GLenum pname, GLint param)</argsstring>
        <name>glTexParameteri</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="348" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="348" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a54ba2b3626536979745e78b4d2725b2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexParameteriv</definition>
        <argsstring>(GLenum target, GLenum pname, const GLint *params)</argsstring>
        <name>glTexParameteriv</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>const GLint *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="349" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="349" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1af52d3b0d2348706c62043a15b28ae918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexSubImage1D</definition>
        <argsstring>(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels)</argsstring>
        <name>glTexSubImage1D</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>level</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>xoffset</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>format</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>pixels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="350" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="350" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a112a75eb47fb25dd833dfe15df13aa08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTexSubImage2D</definition>
        <argsstring>(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)</argsstring>
        <name>glTexSubImage2D</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>level</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>xoffset</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>yoffset</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>height</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>format</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>pixels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="351" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="351" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a1efb93e6f0773ca53064a9ad5ffb57b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTranslated</definition>
        <argsstring>(GLdouble x, GLdouble y, GLdouble z)</argsstring>
        <name>glTranslated</name>
        <param>
          <type>GLdouble</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="352" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="352" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ae561aba999bb86051040d1ef03ba179d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glTranslatef</definition>
        <argsstring>(GLfloat x, GLfloat y, GLfloat z)</argsstring>
        <name>glTranslatef</name>
        <param>
          <type>GLfloat</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="353" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="353" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a15700cde4a7edbf9ff2eeca5ccaaf77f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glVertex2d</definition>
        <argsstring>(GLdouble x, GLdouble y)</argsstring>
        <name>glVertex2d</name>
        <param>
          <type>GLdouble</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="354" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="354" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a4851f0cc236b9ea8a7a874fb56f5b0f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glVertex2dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>glVertex2dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="355" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="355" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ab3e1cff024caab79194e63cbb974db87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glVertex2f</definition>
        <argsstring>(GLfloat x, GLfloat y)</argsstring>
        <name>glVertex2f</name>
        <param>
          <type>GLfloat</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="356" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="356" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a569f5e3ee3cd53db610c982ef7d5f10e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glVertex2fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>glVertex2fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="357" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="357" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1afa5a74be6fd3f0327e1d701b69338c25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glVertex2i</definition>
        <argsstring>(GLint x, GLint y)</argsstring>
        <name>glVertex2i</name>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="358" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="358" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a1ac7df390507fbd28f7a704a6ee093b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glVertex2iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>glVertex2iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="359" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="359" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ad64edc5dd8feba5a7641c2d9271424cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glVertex2s</definition>
        <argsstring>(GLshort x, GLshort y)</argsstring>
        <name>glVertex2s</name>
        <param>
          <type>GLshort</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="360" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="360" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aed81abfaa45ed12aaa58117e46018a52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glVertex2sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>glVertex2sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="361" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="361" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a018eabc9ad53062ef3001cec2660ba83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glVertex3d</definition>
        <argsstring>(GLdouble x, GLdouble y, GLdouble z)</argsstring>
        <name>glVertex3d</name>
        <param>
          <type>GLdouble</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="362" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="362" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ab396c9ac5ed9a0b2b54dab2bf3fb9167" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glVertex3dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>glVertex3dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="363" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="363" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a958e3235784668353fe641e7b4fafa83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glVertex3f</definition>
        <argsstring>(GLfloat x, GLfloat y, GLfloat z)</argsstring>
        <name>glVertex3f</name>
        <param>
          <type>GLfloat</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="364" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="364" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a9109b82375a6590f2e2dd1abc8316451" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glVertex3fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>glVertex3fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="365" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="365" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a16938e95c1b1929e68cd6da9d4f11822" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glVertex3i</definition>
        <argsstring>(GLint x, GLint y, GLint z)</argsstring>
        <name>glVertex3i</name>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="366" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="366" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aff1a2a25067c07e184943390062e0080" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glVertex3iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>glVertex3iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="367" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="367" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aba6d4badb0f4d2f7d968c1f02a66a0bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glVertex3s</definition>
        <argsstring>(GLshort x, GLshort y, GLshort z)</argsstring>
        <name>glVertex3s</name>
        <param>
          <type>GLshort</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="368" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="368" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a9bbe614295276920b955ec7bc1c854bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glVertex3sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>glVertex3sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="369" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="369" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a35ddc435ffde00d285ba5eb9985af6e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glVertex4d</definition>
        <argsstring>(GLdouble x, GLdouble y, GLdouble z, GLdouble w)</argsstring>
        <name>glVertex4d</name>
        <param>
          <type>GLdouble</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>z</declname>
        </param>
        <param>
          <type>GLdouble</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="370" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="370" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a51f6beafdc613ca404d3328e9cf4ba96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glVertex4dv</definition>
        <argsstring>(const GLdouble *v)</argsstring>
        <name>glVertex4dv</name>
        <param>
          <type>const GLdouble *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="371" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="371" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a6a8c7787f8dee0e56700f1e06e49fd44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glVertex4f</definition>
        <argsstring>(GLfloat x, GLfloat y, GLfloat z, GLfloat w)</argsstring>
        <name>glVertex4f</name>
        <param>
          <type>GLfloat</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>z</declname>
        </param>
        <param>
          <type>GLfloat</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="372" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="372" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a432c7324f5688d825223f3a5257f5afa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glVertex4fv</definition>
        <argsstring>(const GLfloat *v)</argsstring>
        <name>glVertex4fv</name>
        <param>
          <type>const GLfloat *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="373" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="373" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a484e412be48d2169425a4b1a91da6854" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glVertex4i</definition>
        <argsstring>(GLint x, GLint y, GLint z, GLint w)</argsstring>
        <name>glVertex4i</name>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>z</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="374" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="374" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aa134976f9ae4bddff03470438adeb6fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glVertex4iv</definition>
        <argsstring>(const GLint *v)</argsstring>
        <name>glVertex4iv</name>
        <param>
          <type>const GLint *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="375" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="375" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aa6c7a256fd441516971fe15756c18ab2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glVertex4s</definition>
        <argsstring>(GLshort x, GLshort y, GLshort z, GLshort w)</argsstring>
        <name>glVertex4s</name>
        <param>
          <type>GLshort</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>z</declname>
        </param>
        <param>
          <type>GLshort</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="376" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="376" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a28fff3f92d98593e1180b1bc40715e1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glVertex4sv</definition>
        <argsstring>(const GLshort *v)</argsstring>
        <name>glVertex4sv</name>
        <param>
          <type>const GLshort *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="377" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="377" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a46156b19015714e52a7af8be3b498fb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glVertexPointer</definition>
        <argsstring>(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)</argsstring>
        <name>glVertexPointer</name>
        <param>
          <type>GLint</type>
          <declname>size</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const GLvoid *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="378" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="378" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a0ae59c06d55c26345d297e5207068aad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void glViewport</definition>
        <argsstring>(GLint x, GLint y, GLsizei width, GLsizei height)</argsstring>
        <name>glViewport</name>
        <param>
          <type>GLint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>GLint</type>
          <declname>y</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>width</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="379" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="379" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1abf8becc883e8776a72ad246842d43710" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_WakeBackEnd</definition>
        <argsstring>(void *a)</argsstring>
        <name>GLimp_WakeBackEnd</name>
        <param>
          <type>void *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="381" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="381" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a91e2043e06f0fb47209e12bfb7c31312" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_EnableLogging</definition>
        <argsstring>(bool)</argsstring>
        <name>GLimp_EnableLogging</name>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="382" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="382" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a9835240d9b55a62ab295d8cc862bc3bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_FrontEndSleep</definition>
        <argsstring>()</argsstring>
        <name>GLimp_FrontEndSleep</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="383" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="383" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1afbb7ab3187194e9393e7199e18a722c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_ActivateContext</definition>
        <argsstring>()</argsstring>
        <name>GLimp_ActivateContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="384" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="384" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1afa7613cfec06031bfedd91ccb6e80bf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_DeactivateContext</definition>
        <argsstring>()</argsstring>
        <name>GLimp_DeactivateContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="385" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="385" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1ae4e7631c6f3a09c541d043820f0a74d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GLimp_SpawnRenderThread</definition>
        <argsstring>(void(*a)())</argsstring>
        <name>GLimp_SpawnRenderThread</name>
        <param>
          <type>void(*)()</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="386" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="386" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a4b4e540ca7d95f602316596679ea1599" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void StubFunction</definition>
        <argsstring>(void)</argsstring>
        <name>StubFunction</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="388" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="388" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1aa5b3f1843ca4df506832c06c4639d959" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLExtension_t</type>
        <definition>GLExtension_t GLimp_ExtensionPointer</definition>
        <argsstring>(const char *a)</argsstring>
        <name>GLimp_ExtensionPointer</name>
        <param>
          <type>const char *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="389" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="389" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a9fb70be11eb28e25f269e1434b0d0c56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GLimp_Init</definition>
        <argsstring>(glimpParms_t a)</argsstring>
        <name>GLimp_Init</name>
        <param>
          <type><ref refid="structglimp_parms__t" kindref="compound">glimpParms_t</ref></type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="391" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="391" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a1f0777367441403c88463c510e5fd661" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_SetGamma</definition>
        <argsstring>(unsigned short *a, unsigned short *b, unsigned short *c)</argsstring>
        <name>GLimp_SetGamma</name>
        <param>
          <type>unsigned short *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned short *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>unsigned short *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="392" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="392" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1acb2015c13a076015f224cdbc009500b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_Shutdown</definition>
        <argsstring>()</argsstring>
        <name>GLimp_Shutdown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="393" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="393" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a778a95251827e30e806576fb0b897d4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_SwapBuffers</definition>
        <argsstring>()</argsstring>
        <name>GLimp_SwapBuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="394" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="394" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="stub__gl_8cpp_1a0b0fb50969a0f86e1e93f9dbf7be1966" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* GLimp_BackEndSleep</definition>
        <argsstring>()</argsstring>
        <name>GLimp_BackEndSleep</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" line="395" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp" bodystart="395" bodyend="395"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../idlib/precompiled.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>hdrstop</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../renderer/tr_local.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glAccum(GLenum<sp/>op,<sp/>GLfloat<sp/>value){};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glAlphaFunc(GLenum<sp/>func,<sp/>GLclampf<sp/>ref){};</highlight></codeline>
<codeline lineno="35"><highlight class="normal">GLboolean<sp/>glAreTexturesResident(GLsizei<sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLuint<sp/>*textures,<sp/>GLboolean<sp/>*residences){};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glArrayElement(GLint<sp/>i){};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glBegin(GLenum<sp/>mode){};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glBindTexture(GLenum<sp/>target,<sp/>GLuint<sp/>texture){};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glBitmap(GLsizei<sp/>width,<sp/>GLsizei<sp/>height,<sp/>GLfloat<sp/>xorig,<sp/>GLfloat<sp/>yorig,<sp/>GLfloat<sp/>xmove,<sp/>GLfloat<sp/>ymove,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte<sp/>*bitmap){};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glBlendFunc(GLenum<sp/>sfactor,<sp/>GLenum<sp/>dfactor){};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glCallList(GLuint<sp/>list){};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glCallLists(GLsizei<sp/>n,<sp/>GLenum<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*lists){};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glClear(GLbitfield<sp/>mask){};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glClearAccum(GLfloat<sp/>red,<sp/>GLfloat<sp/>green,<sp/>GLfloat<sp/>blue,<sp/>GLfloat<sp/>alpha){};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glClearColor(GLclampf<sp/>red,<sp/>GLclampf<sp/>green,<sp/>GLclampf<sp/>blue,<sp/>GLclampf<sp/>alpha){};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glClearDepth(GLclampd<sp/>depth){};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glClearIndex(GLfloat<sp/>c){};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glClearStencil(GLint<sp/>s){};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glClipPlane(GLenum<sp/>plane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*equation){};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor3b(GLbyte<sp/>red,<sp/>GLbyte<sp/>green,<sp/>GLbyte<sp/>blue){};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor3bv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLbyte<sp/>*v){};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor3d(GLdouble<sp/>red,<sp/>GLdouble<sp/>green,<sp/>GLdouble<sp/>blue){};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor3dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v){};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor3f(GLfloat<sp/>red,<sp/>GLfloat<sp/>green,<sp/>GLfloat<sp/>blue){};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor3fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v){};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor3i(GLint<sp/>red,<sp/>GLint<sp/>green,<sp/>GLint<sp/>blue){};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor3iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v){};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor3s(GLshort<sp/>red,<sp/>GLshort<sp/>green,<sp/>GLshort<sp/>blue){};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor3sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v){};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor3ub(GLubyte<sp/>red,<sp/>GLubyte<sp/>green,<sp/>GLubyte<sp/>blue){};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor3ubv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte<sp/>*v){};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor3ui(GLuint<sp/>red,<sp/>GLuint<sp/>green,<sp/>GLuint<sp/>blue){};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor3uiv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLuint<sp/>*v){};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor3us(GLushort<sp/>red,<sp/>GLushort<sp/>green,<sp/>GLushort<sp/>blue){};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor3usv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLushort<sp/>*v){};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor4b(GLbyte<sp/>red,<sp/>GLbyte<sp/>green,<sp/>GLbyte<sp/>blue,<sp/>GLbyte<sp/>alpha){};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor4bv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLbyte<sp/>*v){};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor4d(GLdouble<sp/>red,<sp/>GLdouble<sp/>green,<sp/>GLdouble<sp/>blue,<sp/>GLdouble<sp/>alpha){};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor4dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v){};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor4f(GLfloat<sp/>red,<sp/>GLfloat<sp/>green,<sp/>GLfloat<sp/>blue,<sp/>GLfloat<sp/>alpha){};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor4fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v){};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor4i(GLint<sp/>red,<sp/>GLint<sp/>green,<sp/>GLint<sp/>blue,<sp/>GLint<sp/>alpha){};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor4iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v){};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor4s(GLshort<sp/>red,<sp/>GLshort<sp/>green,<sp/>GLshort<sp/>blue,<sp/>GLshort<sp/>alpha){};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor4sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v){};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor4ub(GLubyte<sp/>red,<sp/>GLubyte<sp/>green,<sp/>GLubyte<sp/>blue,<sp/>GLubyte<sp/>alpha){};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor4ubv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte<sp/>*v){};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor4ui(GLuint<sp/>red,<sp/>GLuint<sp/>green,<sp/>GLuint<sp/>blue,<sp/>GLuint<sp/>alpha){};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor4uiv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLuint<sp/>*v){};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor4us(GLushort<sp/>red,<sp/>GLushort<sp/>green,<sp/>GLushort<sp/>blue,<sp/>GLushort<sp/>alpha){};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColor4usv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLushort<sp/>*v){};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColorMask(GLboolean<sp/>red,<sp/>GLboolean<sp/>green,<sp/>GLboolean<sp/>blue,<sp/>GLboolean<sp/>alpha){};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColorMaterial(GLenum<sp/>face,<sp/>GLenum<sp/>mode){};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glColorPointer(GLint<sp/>size,<sp/>GLenum<sp/>type,<sp/>GLsizei<sp/>stride,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pointer){};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glCopyPixels(GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLsizei<sp/>width,<sp/>GLsizei<sp/>height,<sp/>GLenum<sp/>type){};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glCopyTexImage1D(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLenum<sp/>internalFormat,<sp/>GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLsizei<sp/>width,<sp/>GLint<sp/>border){};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glCopyTexImage2D(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLenum<sp/>internalFormat,<sp/>GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLsizei<sp/>width,<sp/>GLsizei<sp/>height,<sp/>GLint<sp/>border){};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glCopyTexSubImage1D(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLint<sp/>xoffset,<sp/>GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLsizei<sp/>width){};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glCopyTexSubImage2D(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLint<sp/>xoffset,<sp/>GLint<sp/>yoffset,<sp/>GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLsizei<sp/>width,<sp/>GLsizei<sp/>height){};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glCullFace(GLenum<sp/>mode){};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glDeleteLists(GLuint<sp/>list,<sp/>GLsizei<sp/>range){};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glDeleteTextures(GLsizei<sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLuint<sp/>*textures){};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glDepthFunc(GLenum<sp/>func){};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glDepthMask(GLboolean<sp/>flag){};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glDepthRange(GLclampd<sp/>zNear,<sp/>GLclampd<sp/>zFar){};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glDisable(GLenum<sp/>cap){};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glDisableClientState(GLenum<sp/>array){};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glDrawArrays(GLenum<sp/>mode,<sp/>GLint<sp/>first,<sp/>GLsizei<sp/>count){};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glDrawBuffer(GLenum<sp/>mode){};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glDrawElements(GLenum<sp/>mode,<sp/>GLsizei<sp/>count,<sp/>GLenum<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*indices){};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glDrawPixels(GLsizei<sp/>width,<sp/>GLsizei<sp/>height,<sp/>GLenum<sp/>format,<sp/>GLenum<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pixels){};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glEdgeFlag(GLboolean<sp/>flag){};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glEdgeFlagPointer(GLsizei<sp/>stride,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pointer){};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glEdgeFlagv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLboolean<sp/>*flag){};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glEnable(GLenum<sp/>cap){};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glEnableClientState(GLenum<sp/>array){};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glEnd(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glEndList(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glEvalCoord1d(GLdouble<sp/>u){};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glEvalCoord1dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*u){};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glEvalCoord1f(GLfloat<sp/>u){};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glEvalCoord1fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*u){};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glEvalCoord2d(GLdouble<sp/>u,<sp/>GLdouble<sp/>v){};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glEvalCoord2dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*u){};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glEvalCoord2f(GLfloat<sp/>u,<sp/>GLfloat<sp/>v){};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glEvalCoord2fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*u){};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glEvalMesh1(GLenum<sp/>mode,<sp/>GLint<sp/>i1,<sp/>GLint<sp/>i2){};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glEvalMesh2(GLenum<sp/>mode,<sp/>GLint<sp/>i1,<sp/>GLint<sp/>i2,<sp/>GLint<sp/>j1,<sp/>GLint<sp/>j2){};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glEvalPoint1(GLint<sp/>i){};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glEvalPoint2(GLint<sp/>i,<sp/>GLint<sp/>j){};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glFeedbackBuffer(GLsizei<sp/>size,<sp/>GLenum<sp/>type,<sp/>GLfloat<sp/>*buffer){};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glFinish(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glFlush(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glFogf(GLenum<sp/>pname,<sp/>GLfloat<sp/>param){};</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glFogfv(GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*params){};</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glFogi(GLenum<sp/>pname,<sp/>GLint<sp/>param){};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glFogiv(GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*params){};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glFrontFace(GLenum<sp/>mode){};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glFrustum(GLdouble<sp/>left,<sp/>GLdouble<sp/>right,<sp/>GLdouble<sp/>bottom,<sp/>GLdouble<sp/>top,<sp/>GLdouble<sp/>zNear,<sp/>GLdouble<sp/>zFar){};</highlight></codeline>
<codeline lineno="130"><highlight class="normal">GLuint<sp/>glGenLists(GLsizei<sp/>range){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;};</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGenTextures(GLsizei<sp/>n,<sp/>GLuint<sp/>*textures){};</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetBooleanv(GLenum<sp/>pname,<sp/>GLboolean<sp/>*params){};</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetClipPlane(GLenum<sp/>plane,<sp/>GLdouble<sp/>*equation){};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetDoublev(GLenum<sp/>pname,<sp/>GLdouble<sp/>*params){};</highlight></codeline>
<codeline lineno="135"><highlight class="normal">GLenum<sp/>glGetError(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetFloatv(GLenum<sp/>pname,<sp/>GLfloat<sp/>*params){};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetIntegerv(GLenum<sp/>pname,<sp/>GLint<sp/>*params){</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>pname<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_MAX_TEXTURE_SIZE:<sp/>*params<sp/>=<sp/>1024;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_MAX_TEXTURE_UNITS_ARB:<sp/>*params<sp/>=<sp/>2;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>*params<sp/>=<sp/>0;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal">};</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetLightfv(GLenum<sp/>light,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>*params){};</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetLightiv(GLenum<sp/>light,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>*params){};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetMapdv(GLenum<sp/>target,<sp/>GLenum<sp/>query,<sp/>GLdouble<sp/>*v){};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetMapfv(GLenum<sp/>target,<sp/>GLenum<sp/>query,<sp/>GLfloat<sp/>*v){};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetMapiv(GLenum<sp/>target,<sp/>GLenum<sp/>query,<sp/>GLint<sp/>*v){};</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetMaterialfv(GLenum<sp/>face,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>*params){};</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetMaterialiv(GLenum<sp/>face,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>*params){};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetPixelMapfv(GLenum<sp/>map,<sp/>GLfloat<sp/>*values){};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetPixelMapuiv(GLenum<sp/>map,<sp/>GLuint<sp/>*values){};</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetPixelMapusv(GLenum<sp/>map,<sp/>GLushort<sp/>*values){};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetPointerv(GLenum<sp/>pname,<sp/>GLvoid*<sp/>*params){};</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetPolygonStipple(GLubyte<sp/>*mask){};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte<sp/>*<sp/>glGetString(GLenum<sp/>name){</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>name<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GL_EXTENSIONS:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(GLubyte<sp/>*)</highlight><highlight class="stringliteral">&quot;GL_ARB_multitexture<sp/>GL_ARB_texture_env_combine<sp/>GL_ARB_texture_cube_map<sp/>GL_ARB_texture_env_dot3&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte<sp/>*)</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">};</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetTexEnvfv(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>*params){};</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetTexEnviv(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>*params){};</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetTexGendv(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/>GLdouble<sp/>*params){};</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetTexGenfv(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>*params){};</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetTexGeniv(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>*params){};</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetTexImage(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLenum<sp/>format,<sp/>GLenum<sp/>type,<sp/>GLvoid<sp/>*pixels){};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetTexLevelParameterfv(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>*params){};</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetTexLevelParameteriv(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>*params){};</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetTexParameterfv(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>*params){};</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glGetTexParameteriv(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>*params){};</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glHint(GLenum<sp/>target,<sp/>GLenum<sp/>mode){};</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glIndexMask(GLuint<sp/>mask){};</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glIndexPointer(GLenum<sp/>type,<sp/>GLsizei<sp/>stride,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pointer){};</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glIndexd(GLdouble<sp/>c){};</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glIndexdv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*c){};</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glIndexf(GLfloat<sp/>c){};</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glIndexfv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*c){};</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glIndexi(GLint<sp/>c){};</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glIndexiv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*c){};</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glIndexs(GLshort<sp/>c){};</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glIndexsv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*c){};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glIndexub(GLubyte<sp/>c){};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glIndexubv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte<sp/>*c){};</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glInitNames(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){};</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glInterleavedArrays(GLenum<sp/>format,<sp/>GLsizei<sp/>stride,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pointer){};</highlight></codeline>
<codeline lineno="187"><highlight class="normal">GLboolean<sp/>glIsEnabled(GLenum<sp/>cap){};</highlight></codeline>
<codeline lineno="188"><highlight class="normal">GLboolean<sp/>glIsList(GLuint<sp/>list){};</highlight></codeline>
<codeline lineno="189"><highlight class="normal">GLboolean<sp/>glIsTexture(GLuint<sp/>texture){};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glLightModelf(GLenum<sp/>pname,<sp/>GLfloat<sp/>param){};</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glLightModelfv(GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*params){};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glLightModeli(GLenum<sp/>pname,<sp/>GLint<sp/>param){};</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glLightModeliv(GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*params){};</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glLightf(GLenum<sp/>light,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>param){};</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glLightfv(GLenum<sp/>light,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*params){};</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glLighti(GLenum<sp/>light,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>param){};</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glLightiv(GLenum<sp/>light,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*params){};</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glLineStipple(GLint<sp/>factor,<sp/>GLushort<sp/>pattern){};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glLineWidth(GLfloat<sp/>width){};</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glListBase(GLuint<sp/>base){};</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glLoadIdentity(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){};</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glLoadMatrixd(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*m){};</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glLoadMatrixf(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*m){};</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glLoadName(GLuint<sp/>name){};</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glLogicOp(GLenum<sp/>opcode){};</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glMap1d(GLenum<sp/>target,<sp/>GLdouble<sp/>u1,<sp/>GLdouble<sp/>u2,<sp/>GLint<sp/>stride,<sp/>GLint<sp/>order,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*points){};</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glMap1f(GLenum<sp/>target,<sp/>GLfloat<sp/>u1,<sp/>GLfloat<sp/>u2,<sp/>GLint<sp/>stride,<sp/>GLint<sp/>order,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*points){};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glMap2d(GLenum<sp/>target,<sp/>GLdouble<sp/>u1,<sp/>GLdouble<sp/>u2,<sp/>GLint<sp/>ustride,<sp/>GLint<sp/>uorder,<sp/>GLdouble<sp/>v1,<sp/>GLdouble<sp/>v2,<sp/>GLint<sp/>vstride,<sp/>GLint<sp/>vorder,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*points){};</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glMap2f(GLenum<sp/>target,<sp/>GLfloat<sp/>u1,<sp/>GLfloat<sp/>u2,<sp/>GLint<sp/>ustride,<sp/>GLint<sp/>uorder,<sp/>GLfloat<sp/>v1,<sp/>GLfloat<sp/>v2,<sp/>GLint<sp/>vstride,<sp/>GLint<sp/>vorder,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*points){};</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glMapGrid1d(GLint<sp/>un,<sp/>GLdouble<sp/>u1,<sp/>GLdouble<sp/>u2){};</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glMapGrid1f(GLint<sp/>un,<sp/>GLfloat<sp/>u1,<sp/>GLfloat<sp/>u2){};</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glMapGrid2d(GLint<sp/>un,<sp/>GLdouble<sp/>u1,<sp/>GLdouble<sp/>u2,<sp/>GLint<sp/>vn,<sp/>GLdouble<sp/>v1,<sp/>GLdouble<sp/>v2){};</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glMapGrid2f(GLint<sp/>un,<sp/>GLfloat<sp/>u1,<sp/>GLfloat<sp/>u2,<sp/>GLint<sp/>vn,<sp/>GLfloat<sp/>v1,<sp/>GLfloat<sp/>v2){};</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glMaterialf(GLenum<sp/>face,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>param){};</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glMaterialfv(GLenum<sp/>face,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*params){};</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glMateriali(GLenum<sp/>face,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>param){};</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glMaterialiv(GLenum<sp/>face,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*params){};</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glMatrixMode(GLenum<sp/>mode){};</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glMultMatrixd(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*m){};</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glMultMatrixf(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*m){};</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glNewList(GLuint<sp/>list,<sp/>GLenum<sp/>mode){};</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glNormal3b(GLbyte<sp/>nx,<sp/>GLbyte<sp/>ny,<sp/>GLbyte<sp/>nz){};</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glNormal3bv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLbyte<sp/>*v){};</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glNormal3d(GLdouble<sp/>nx,<sp/>GLdouble<sp/>ny,<sp/>GLdouble<sp/>nz){};</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glNormal3dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v){};</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glNormal3f(GLfloat<sp/>nx,<sp/>GLfloat<sp/>ny,<sp/>GLfloat<sp/>nz){};</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glNormal3fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v){};</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glNormal3i(GLint<sp/>nx,<sp/>GLint<sp/>ny,<sp/>GLint<sp/>nz){};</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glNormal3iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v){};</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glNormal3s(GLshort<sp/>nx,<sp/>GLshort<sp/>ny,<sp/>GLshort<sp/>nz){};</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glNormal3sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v){};</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glNormalPointer(GLenum<sp/>type,<sp/>GLsizei<sp/>stride,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pointer){};</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glOrtho(GLdouble<sp/>left,<sp/>GLdouble<sp/>right,<sp/>GLdouble<sp/>bottom,<sp/>GLdouble<sp/>top,<sp/>GLdouble<sp/>zNear,<sp/>GLdouble<sp/>zFar){};</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glPassThrough(GLfloat<sp/>token){};</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glPixelMapfv(GLenum<sp/>map,<sp/>GLsizei<sp/>mapsize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*values){};</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glPixelMapuiv(GLenum<sp/>map,<sp/>GLsizei<sp/>mapsize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLuint<sp/>*values){};</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glPixelMapusv(GLenum<sp/>map,<sp/>GLsizei<sp/>mapsize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLushort<sp/>*values){};</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glPixelStoref(GLenum<sp/>pname,<sp/>GLfloat<sp/>param){};</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glPixelStorei(GLenum<sp/>pname,<sp/>GLint<sp/>param){};</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glPixelTransferf(GLenum<sp/>pname,<sp/>GLfloat<sp/>param){};</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glPixelTransferi(GLenum<sp/>pname,<sp/>GLint<sp/>param){};</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glPixelZoom(GLfloat<sp/>xfactor,<sp/>GLfloat<sp/>yfactor){};</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glPointSize(GLfloat<sp/>size){};</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glPolygonMode(GLenum<sp/>face,<sp/>GLenum<sp/>mode){};</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glPolygonOffset(GLfloat<sp/>factor,<sp/>GLfloat<sp/>units){};</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glPolygonStipple(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLubyte<sp/>*mask){};</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glPopAttrib(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){};</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glPopClientAttrib(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){};</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glPopMatrix(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){};</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glPopName(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){};</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glPrioritizeTextures(GLsizei<sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLuint<sp/>*textures,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLclampf<sp/>*priorities){};</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glPushAttrib(GLbitfield<sp/>mask){};</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glPushClientAttrib(GLbitfield<sp/>mask){};</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glPushMatrix(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){};</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glPushName(GLuint<sp/>name){};</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRasterPos2d(GLdouble<sp/>x,<sp/>GLdouble<sp/>y){};</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRasterPos2dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v){};</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRasterPos2f(GLfloat<sp/>x,<sp/>GLfloat<sp/>y){};</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRasterPos2fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v){};</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRasterPos2i(GLint<sp/>x,<sp/>GLint<sp/>y){};</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRasterPos2iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v){};</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRasterPos2s(GLshort<sp/>x,<sp/>GLshort<sp/>y){};</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRasterPos2sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v){};</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRasterPos3d(GLdouble<sp/>x,<sp/>GLdouble<sp/>y,<sp/>GLdouble<sp/>z){};</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRasterPos3dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v){};</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRasterPos3f(GLfloat<sp/>x,<sp/>GLfloat<sp/>y,<sp/>GLfloat<sp/>z){};</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRasterPos3fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v){};</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRasterPos3i(GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLint<sp/>z){};</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRasterPos3iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v){};</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRasterPos3s(GLshort<sp/>x,<sp/>GLshort<sp/>y,<sp/>GLshort<sp/>z){};</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRasterPos3sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v){};</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRasterPos4d(GLdouble<sp/>x,<sp/>GLdouble<sp/>y,<sp/>GLdouble<sp/>z,<sp/>GLdouble<sp/>w){};</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRasterPos4dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v){};</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRasterPos4f(GLfloat<sp/>x,<sp/>GLfloat<sp/>y,<sp/>GLfloat<sp/>z,<sp/>GLfloat<sp/>w){};</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRasterPos4fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v){};</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRasterPos4i(GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLint<sp/>z,<sp/>GLint<sp/>w){};</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRasterPos4iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v){};</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRasterPos4s(GLshort<sp/>x,<sp/>GLshort<sp/>y,<sp/>GLshort<sp/>z,<sp/>GLshort<sp/>w){};</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRasterPos4sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v){};</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glReadBuffer(GLenum<sp/>mode){};</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glReadPixels(GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLsizei<sp/>width,<sp/>GLsizei<sp/>height,<sp/>GLenum<sp/>format,<sp/>GLenum<sp/>type,<sp/>GLvoid<sp/>*pixels){};</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRectd(GLdouble<sp/>x1,<sp/>GLdouble<sp/>y1,<sp/>GLdouble<sp/>x2,<sp/>GLdouble<sp/>y2){};</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRectdv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v2){};</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRectf(GLfloat<sp/>x1,<sp/>GLfloat<sp/>y1,<sp/>GLfloat<sp/>x2,<sp/>GLfloat<sp/>y2){};</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRectfv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v2){};</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRecti(GLint<sp/>x1,<sp/>GLint<sp/>y1,<sp/>GLint<sp/>x2,<sp/>GLint<sp/>y2){};</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRectiv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v2){};</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRects(GLshort<sp/>x1,<sp/>GLshort<sp/>y1,<sp/>GLshort<sp/>x2,<sp/>GLshort<sp/>y2){};</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRectsv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v2){};</highlight></codeline>
<codeline lineno="290"><highlight class="normal">GLint<sp/>glRenderMode(GLenum<sp/>mode){};</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRotated(GLdouble<sp/>angle,<sp/>GLdouble<sp/>x,<sp/>GLdouble<sp/>y,<sp/>GLdouble<sp/>z){};</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glRotatef(GLfloat<sp/>angle,<sp/>GLfloat<sp/>x,<sp/>GLfloat<sp/>y,<sp/>GLfloat<sp/>z){};</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glScaled(GLdouble<sp/>x,<sp/>GLdouble<sp/>y,<sp/>GLdouble<sp/>z){};</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glScalef(GLfloat<sp/>x,<sp/>GLfloat<sp/>y,<sp/>GLfloat<sp/>z){};</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glScissor(GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLsizei<sp/>width,<sp/>GLsizei<sp/>height){};</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glSelectBuffer(GLsizei<sp/>size,<sp/>GLuint<sp/>*buffer){};</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glShadeModel(GLenum<sp/>mode){};</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glStencilFunc(GLenum<sp/>func,<sp/>GLint<sp/>ref,<sp/>GLuint<sp/>mask){};</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glStencilMask(GLuint<sp/>mask){};</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glStencilOp(GLenum<sp/>fail,<sp/>GLenum<sp/>zfail,<sp/>GLenum<sp/>zpass){};</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord1d(GLdouble<sp/>s){};</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord1dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v){};</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord1f(GLfloat<sp/>s){};</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord1fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v){};</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord1i(GLint<sp/>s){};</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord1iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v){};</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord1s(GLshort<sp/>s){};</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord1sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v){};</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord2d(GLdouble<sp/>s,<sp/>GLdouble<sp/>t){};</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord2dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v){};</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord2f(GLfloat<sp/>s,<sp/>GLfloat<sp/>t){};</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord2fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v){};</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord2i(GLint<sp/>s,<sp/>GLint<sp/>t){};</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord2iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v){};</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord2s(GLshort<sp/>s,<sp/>GLshort<sp/>t){};</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord2sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v){};</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord3d(GLdouble<sp/>s,<sp/>GLdouble<sp/>t,<sp/>GLdouble<sp/>r){};</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord3dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v){};</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord3f(GLfloat<sp/>s,<sp/>GLfloat<sp/>t,<sp/>GLfloat<sp/>r){};</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord3fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v){};</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord3i(GLint<sp/>s,<sp/>GLint<sp/>t,<sp/>GLint<sp/>r){};</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord3iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v){};</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord3s(GLshort<sp/>s,<sp/>GLshort<sp/>t,<sp/>GLshort<sp/>r){};</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord3sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v){};</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord4d(GLdouble<sp/>s,<sp/>GLdouble<sp/>t,<sp/>GLdouble<sp/>r,<sp/>GLdouble<sp/>q){};</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord4dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v){};</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord4f(GLfloat<sp/>s,<sp/>GLfloat<sp/>t,<sp/>GLfloat<sp/>r,<sp/>GLfloat<sp/>q){};</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord4fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v){};</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord4i(GLint<sp/>s,<sp/>GLint<sp/>t,<sp/>GLint<sp/>r,<sp/>GLint<sp/>q){};</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord4iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v){};</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord4s(GLshort<sp/>s,<sp/>GLshort<sp/>t,<sp/>GLshort<sp/>r,<sp/>GLshort<sp/>q){};</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoord4sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v){};</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexCoordPointer(GLint<sp/>size,<sp/>GLenum<sp/>type,<sp/>GLsizei<sp/>stride,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pointer){};</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexEnvf(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>param){};</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexEnvfv(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*params){};</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexEnvi(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>param){};</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexEnviv(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*params){};</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexGend(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/>GLdouble<sp/>param){};</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexGendv(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*params){};</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexGenf(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>param){};</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexGenfv(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*params){};</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexGeni(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>param){};</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexGeniv(GLenum<sp/>coord,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*params){};</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexImage1D(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLint<sp/>internalformat,<sp/>GLsizei<sp/>width,<sp/>GLint<sp/>border,<sp/>GLenum<sp/>format,<sp/>GLenum<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pixels){};</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexImage2D(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLint<sp/>internalformat,<sp/>GLsizei<sp/>width,<sp/>GLsizei<sp/>height,<sp/>GLint<sp/>border,<sp/>GLenum<sp/>format,<sp/>GLenum<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pixels)<sp/>{};</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexParameterf(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/>GLfloat<sp/>param){};</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexParameterfv(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*params){};</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexParameteri(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/>GLint<sp/>param){};</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexParameteriv(GLenum<sp/>target,<sp/>GLenum<sp/>pname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*params){};</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexSubImage1D(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLint<sp/>xoffset,<sp/>GLsizei<sp/>width,<sp/>GLenum<sp/>format,<sp/>GLenum<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pixels){};</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTexSubImage2D(GLenum<sp/>target,<sp/>GLint<sp/>level,<sp/>GLint<sp/>xoffset,<sp/>GLint<sp/>yoffset,<sp/>GLsizei<sp/>width,<sp/>GLsizei<sp/>height,<sp/>GLenum<sp/>format,<sp/>GLenum<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pixels){};</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTranslated(GLdouble<sp/>x,<sp/>GLdouble<sp/>y,<sp/>GLdouble<sp/>z){};</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glTranslatef(GLfloat<sp/>x,<sp/>GLfloat<sp/>y,<sp/>GLfloat<sp/>z){};</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glVertex2d(GLdouble<sp/>x,<sp/>GLdouble<sp/>y){};</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glVertex2dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v){};</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glVertex2f(GLfloat<sp/>x,<sp/>GLfloat<sp/>y){};</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glVertex2fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v){};</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glVertex2i(GLint<sp/>x,<sp/>GLint<sp/>y){};</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glVertex2iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v){};</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glVertex2s(GLshort<sp/>x,<sp/>GLshort<sp/>y){};</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glVertex2sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v){};</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glVertex3d(GLdouble<sp/>x,<sp/>GLdouble<sp/>y,<sp/>GLdouble<sp/>z){};</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glVertex3dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v){};</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glVertex3f(GLfloat<sp/>x,<sp/>GLfloat<sp/>y,<sp/>GLfloat<sp/>z){};</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glVertex3fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v){};</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glVertex3i(GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLint<sp/>z){};</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glVertex3iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v){};</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glVertex3s(GLshort<sp/>x,<sp/>GLshort<sp/>y,<sp/>GLshort<sp/>z){};</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glVertex3sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v){};</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glVertex4d(GLdouble<sp/>x,<sp/>GLdouble<sp/>y,<sp/>GLdouble<sp/>z,<sp/>GLdouble<sp/>w){};</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glVertex4dv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLdouble<sp/>*v){};</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glVertex4f(GLfloat<sp/>x,<sp/>GLfloat<sp/>y,<sp/>GLfloat<sp/>z,<sp/>GLfloat<sp/>w){};</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glVertex4fv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLfloat<sp/>*v){};</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glVertex4i(GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLint<sp/>z,<sp/>GLint<sp/>w){};</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glVertex4iv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>*v){};</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glVertex4s(GLshort<sp/>x,<sp/>GLshort<sp/>y,<sp/>GLshort<sp/>z,<sp/>GLshort<sp/>w){};</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glVertex4sv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLshort<sp/>*v){};</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glVertexPointer(GLint<sp/>size,<sp/>GLenum<sp/>type,<sp/>GLsizei<sp/>stride,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLvoid<sp/>*pointer){};</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>glViewport(GLint<sp/>x,<sp/>GLint<sp/>y,<sp/>GLsizei<sp/>width,<sp/>GLsizei<sp/>height){};</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GLimp_WakeBackEnd(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*a)<sp/>{};</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GLimp_EnableLogging(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/>{};</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GLimp_FrontEndSleep()<sp/>{};</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GLimp_ActivateContext()<sp/>{};</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GLimp_DeactivateContext()<sp/>{};</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GLimp_SpawnRenderThread(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*a)())<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;};</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StubFunction(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{};</highlight></codeline>
<codeline lineno="389"><highlight class="normal">GLExtension_t<sp/>GLimp_ExtensionPointer(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*a)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StubFunction;<sp/>};</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GLimp_Init(<ref refid="structglimp_parms__t" kindref="compound">glimpParms_t</ref><sp/>a)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;};</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GLimp_SetGamma(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*a,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*b,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*c)<sp/>{};</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GLimp_Shutdown()<sp/>{};</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GLimp_SwapBuffers()<sp/>{};</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*GLimp_BackEndSleep()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;};</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp"/>
  </compounddef>
</doxygen>
