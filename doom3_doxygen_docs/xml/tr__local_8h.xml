<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="tr__local_8h" kind="file">
    <compoundname>tr_local.h</compoundname>
    <includes refid="_image_8h" local="yes">Image.h</includes>
    <includes refid="_mega_texture_8h" local="yes">MegaTexture.h</includes>
    <includes refid="_model_decal_8h" local="yes">ModelDecal.h</includes>
    <includes refid="_model_overlay_8h" local="yes">ModelOverlay.h</includes>
    <includes refid="_interaction_8h" local="yes">Interaction.h</includes>
    <includes refid="_render_world__local_8h" local="yes">RenderWorld_local.h</includes>
    <includes refid="_gui_model_8h" local="yes">GuiModel.h</includes>
    <includes refid="_vertex_cache_8h" local="yes">VertexCache.h</includes>
    <includedby refid="_cinematic_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/Cinematic.cpp</includedby>
    <includedby refid="draw__arb_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/draw_arb.cpp</includedby>
    <includedby refid="draw__arb2_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/draw_arb2.cpp</includedby>
    <includedby refid="draw__common_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/draw_common.cpp</includedby>
    <includedby refid="draw__exp_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/draw_exp.cpp</includedby>
    <includedby refid="draw__nv10_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/draw_nv10.cpp</includedby>
    <includedby refid="draw__nv20_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/draw_nv20.cpp</includedby>
    <includedby refid="draw__r200_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/draw_r200.cpp</includedby>
    <includedby refid="_gui_model_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/GuiModel.cpp</includedby>
    <includedby refid="_image__files_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/Image_files.cpp</includedby>
    <includedby refid="_image__init_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/Image_init.cpp</includedby>
    <includedby refid="_image__load_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/Image_load.cpp</includedby>
    <includedby refid="_image__process_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/Image_process.cpp</includedby>
    <includedby refid="_image__program_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/Image_program.cpp</includedby>
    <includedby refid="_interaction_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/Interaction.cpp</includedby>
    <includedby refid="_material_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/Material.cpp</includedby>
    <includedby refid="_mega_texture_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/MegaTexture.cpp</includedby>
    <includedby refid="_model_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/Model.cpp</includedby>
    <includedby refid="_model__beam_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/Model_beam.cpp</includedby>
    <includedby refid="_model__liquid_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/Model_liquid.cpp</includedby>
    <includedby refid="_model__md3_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/Model_md3.cpp</includedby>
    <includedby refid="_model__md5_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/Model_md5.cpp</includedby>
    <includedby refid="_model__prt_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/Model_prt.cpp</includedby>
    <includedby refid="_model__sprite_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/Model_sprite.cpp</includedby>
    <includedby refid="_model_decal_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/ModelDecal.cpp</includedby>
    <includedby refid="_model_manager_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/ModelManager.cpp</includedby>
    <includedby refid="_model_overlay_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/ModelOverlay.cpp</includedby>
    <includedby refid="_render_entity_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/RenderEntity.cpp</includedby>
    <includedby refid="_render_system_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem.cpp</includedby>
    <includedby refid="_render_system__init_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp</includedby>
    <includedby refid="_render_world_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.cpp</includedby>
    <includedby refid="_render_world__demo_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld_demo.cpp</includedby>
    <includedby refid="_render_world__load_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld_load.cpp</includedby>
    <includedby refid="_render_world__portals_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld_portals.cpp</includedby>
    <includedby refid="tr__backend_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/tr_backend.cpp</includedby>
    <includedby refid="tr__deform_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/tr_deform.cpp</includedby>
    <includedby refid="tr__font_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/tr_font.cpp</includedby>
    <includedby refid="tr__guisurf_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/tr_guisurf.cpp</includedby>
    <includedby refid="tr__light_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/tr_light.cpp</includedby>
    <includedby refid="tr__lightrun_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/tr_lightrun.cpp</includedby>
    <includedby refid="tr__main_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp</includedby>
    <includedby refid="tr__order_indexes_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/tr_orderIndexes.cpp</includedby>
    <includedby refid="tr__polytope_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/tr_polytope.cpp</includedby>
    <includedby refid="tr__render_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/tr_render.cpp</includedby>
    <includedby refid="tr__rendertools_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/tr_rendertools.cpp</includedby>
    <includedby refid="tr__shadowbounds_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/tr_shadowbounds.cpp</includedby>
    <includedby refid="tr__stencilshadow_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/tr_stencilshadow.cpp</includedby>
    <includedby refid="tr__subview_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/tr_subview.cpp</includedby>
    <includedby refid="tr__trace_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/tr_trace.cpp</includedby>
    <includedby refid="tr__trisurf_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp</includedby>
    <includedby refid="tr__turboshadow_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/tr_turboshadow.cpp</includedby>
    <includedby refid="_vertex_cache_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/renderer/VertexCache.cpp</includedby>
    <includedby refid="dedicated_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/sys/linux/dedicated.cpp</includedby>
    <includedby refid="glimp_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/sys/linux/glimp.cpp</includedby>
    <includedby refid="macosx__glimp_8mm" local="yes">E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_glimp.mm</includedby>
    <includedby refid="stub__gl_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/sys/stub/stub_gl.cpp</includedby>
    <includedby refid="win__gamma_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/sys/win32/win_gamma.cpp</includedby>
    <includedby refid="win__glimp_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp</includedby>
    <includedby refid="win__main_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/sys/win32/win_main.cpp</includedby>
    <includedby refid="win__qgl_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp</includedby>
    <includedby refid="win__wndproc_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/sys/win32/win_wndproc.cpp</includedby>
    <includedby refid="dmap_8h" local="yes">E:/sources/3rd_party/DOOM/neo/tools/compilers/dmap/dmap.h</includedby>
    <includedby refid="shadowopt3_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/compilers/dmap/shadowopt3.cpp</includedby>
    <includedby refid="renderbump_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/compilers/renderbump/renderbump.cpp</includedby>
    <includedby refid="_g_e_selection_mgr_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/guied/GESelectionMgr.cpp</includedby>
    <includedby refid="_g_e_viewer_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/guied/GEViewer.cpp</includedby>
    <includedby refid="_g_e_window_wrapper_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/guied/GEWindowWrapper.cpp</includedby>
    <includedby refid="_g_e_workspace_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/guied/GEWorkspace.cpp</includedby>
    <includedby refid="guied_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/guied/guied.cpp</includedby>
    <includedby refid="_new_tex_wnd_8h" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/NewTexWnd.h</includedby>
    <includedby refid="_cam_wnd_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/CamWnd.cpp</includedby>
    <includedby refid="_e_c_l_a_s_s_8_c_p_p" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/ECLASS.CPP</includedby>
    <includedby refid="_editor_brush_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorBrush.cpp</includedby>
    <includedby refid="_editor_entity_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/EditorEntity.cpp</includedby>
    <includedby refid="_new_tex_wnd_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/NewTexWnd.cpp</includedby>
    <includedby refid="_x_y_wnd_8cpp" local="yes">E:/sources/3rd_party/DOOM/neo/tools/radiant/XYWnd.cpp</includedby>
    <innerclass refid="classid_screen_rect" prot="public">idScreenRect</innerclass>
    <innerclass refid="structdraw_surf__s" prot="public">drawSurf_s</innerclass>
    <innerclass refid="structshadow_frustum__t" prot="public">shadowFrustum_t</innerclass>
    <innerclass refid="structarea_reference__s" prot="public">areaReference_s</innerclass>
    <innerclass refid="classid_render_light" prot="public">idRenderLight</innerclass>
    <innerclass refid="classid_render_entity" prot="public">idRenderEntity</innerclass>
    <innerclass refid="classid_render_light_local" prot="public">idRenderLightLocal</innerclass>
    <innerclass refid="classid_render_entity_local" prot="public">idRenderEntityLocal</innerclass>
    <innerclass refid="structview_light__s" prot="public">viewLight_s</innerclass>
    <innerclass refid="structview_entity__s" prot="public">viewEntity_s</innerclass>
    <innerclass refid="structview_def__s" prot="public">viewDef_s</innerclass>
    <innerclass refid="structdraw_interaction__t" prot="public">drawInteraction_t</innerclass>
    <innerclass refid="structempty_command__t" prot="public">emptyCommand_t</innerclass>
    <innerclass refid="structset_buffer_command__t" prot="public">setBufferCommand_t</innerclass>
    <innerclass refid="structdraw_surfs_command__t" prot="public">drawSurfsCommand_t</innerclass>
    <innerclass refid="structcopy_render_command__t" prot="public">copyRenderCommand_t</innerclass>
    <innerclass refid="structframe_memory_block__s" prot="public">frameMemoryBlock_s</innerclass>
    <innerclass refid="structframe_data__t" prot="public">frameData_t</innerclass>
    <innerclass refid="structperformance_counters__t" prot="public">performanceCounters_t</innerclass>
    <innerclass refid="structtmu__t" prot="public">tmu_t</innerclass>
    <innerclass refid="structglstate__t" prot="public">glstate_t</innerclass>
    <innerclass refid="structback_end_counters__t" prot="public">backEndCounters_t</innerclass>
    <innerclass refid="structback_end_state__t" prot="public">backEndState_t</innerclass>
    <innerclass refid="structrender_crop__t" prot="public">renderCrop_t</innerclass>
    <innerclass refid="classid_render_system_local" prot="public">idRenderSystemLocal</innerclass>
    <innerclass refid="structglimp_parms__t" prot="public">glimpParms_t</innerclass>
    <innerclass refid="structoptimized_shadow__t" prot="public">optimizedShadow_t</innerclass>
    <innerclass refid="structdeform_info__s" prot="public">deformInfo_s</innerclass>
    <innerclass refid="structlocal_trace__t" prot="public">localTrace_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="tr__local_8h_1a97dab30595d3df2a2c347964592ac8a6" prot="public" static="no">
        <name>USE_TRI_DATA_ALLOCATOR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1467" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1467" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="tr__local_8h_1af0d343ae62db3837dfb208e137e99ce9" prot="public" static="no">
        <name>demoCommand_t</name>
        <enumvalue id="tr__local_8h_1af0d343ae62db3837dfb208e137e99ce9acd64be4a4dbcdbbd0a803c665fc9d7dc" prot="public">
          <name>DC_BAD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1af0d343ae62db3837dfb208e137e99ce9a6f765e6b407285350cabf8676d20be24" prot="public">
          <name>DC_RENDERVIEW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1af0d343ae62db3837dfb208e137e99ce9aa44670bad20b30f69d47e49d393f2715" prot="public">
          <name>DC_UPDATE_ENTITYDEF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1af0d343ae62db3837dfb208e137e99ce9af57907d8d3fc21abdf767d24b119fc0d" prot="public">
          <name>DC_DELETE_ENTITYDEF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1af0d343ae62db3837dfb208e137e99ce9a2dbe100830bd4b71ecd448ce0a33c359" prot="public">
          <name>DC_UPDATE_LIGHTDEF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1af0d343ae62db3837dfb208e137e99ce9ae4b63cbf8d43676e59bc5fab3008ca92" prot="public">
          <name>DC_DELETE_LIGHTDEF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1af0d343ae62db3837dfb208e137e99ce9a1e353b28eeb8eb06f1b576ad9d136128" prot="public">
          <name>DC_LOADMAP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1af0d343ae62db3837dfb208e137e99ce9a263db31174ba0c55325771dfafba676b" prot="public">
          <name>DC_CROP_RENDER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1af0d343ae62db3837dfb208e137e99ce9a30267ff57d13428c8f3fb521b9ba2fa8" prot="public">
          <name>DC_UNCROP_RENDER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1af0d343ae62db3837dfb208e137e99ce9a7bd93c716392deab946d1834b75cde79" prot="public">
          <name>DC_CAPTURE_RENDER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1af0d343ae62db3837dfb208e137e99ce9a01d02e59058b2bcf7267077aeeae4869" prot="public">
          <name>DC_END_FRAME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1af0d343ae62db3837dfb208e137e99ce9a39c8a49ce82c51114af640381db278bf" prot="public">
          <name>DC_DEFINE_MODEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1af0d343ae62db3837dfb208e137e99ce9a2d5f638dd67257ca3710b3f2cb6a2f28" prot="public">
          <name>DC_SET_PORTAL_STATE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1af0d343ae62db3837dfb208e137e99ce9aa99f101be9a5f9a6dc373b305a68a840" prot="public">
          <name>DC_UPDATE_SOUNDOCCLUSION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1af0d343ae62db3837dfb208e137e99ce9a8f8a096622ed266bc2e3e8453e1ead9d" prot="public">
          <name>DC_GUI_MODEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="70" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="70" bodyend="86"/>
      </memberdef>
      <memberdef kind="enum" id="tr__local_8h_1aa41e33942246b343368062d4d08b3822" prot="public" static="no">
        <name>renderCommand_t</name>
        <enumvalue id="tr__local_8h_1aa41e33942246b343368062d4d08b3822a7a0f981714cd24205f47e0c146bc7099" prot="public">
          <name>RC_NOP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1aa41e33942246b343368062d4d08b3822adee0e9a36984f51a427632aa4f02fa5d" prot="public">
          <name>RC_DRAW_VIEW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1aa41e33942246b343368062d4d08b3822aa4a6c98909061de6edf09a8cf5f71182" prot="public">
          <name>RC_SET_BUFFER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1aa41e33942246b343368062d4d08b3822ae3b5b305d791803a9df7ce7559244a79" prot="public">
          <name>RC_COPY_RENDER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1aa41e33942246b343368062d4d08b3822a3e192d6c4ad99601317640cec6bad60f" prot="public">
          <name>RC_SWAP_BUFFERS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="472" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="472" bodyend="479"/>
      </memberdef>
      <memberdef kind="enum" id="tr__local_8h_1a4a87bf58c4d5528b5063697d650319e4" prot="public" static="no">
        <name>backEndName_t</name>
        <enumvalue id="tr__local_8h_1a4a87bf58c4d5528b5063697d650319e4a6cc7d6e6a06b59c3224c51365873fccd" prot="public">
          <name>BE_ARB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1a4a87bf58c4d5528b5063697d650319e4a1b1e355642818e02eec5078df1b810f8" prot="public">
          <name>BE_NV10</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1a4a87bf58c4d5528b5063697d650319e4aad4bfbb1c6ad4cb819e6ed06a9d09810" prot="public">
          <name>BE_NV20</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1a4a87bf58c4d5528b5063697d650319e4ae6cb96c3e4580259d1c7b5de7b0ff98f" prot="public">
          <name>BE_R200</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1a4a87bf58c4d5528b5063697d650319e4a91059ded3ed60f5949d2d340d80ab042" prot="public">
          <name>BE_ARB2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1a4a87bf58c4d5528b5063697d650319e4a277c33afcfd7bc5d31bedb5a157e772d" prot="public">
          <name>BE_BAD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="672" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="672" bodyend="679"/>
      </memberdef>
      <memberdef kind="enum" id="tr__local_8h_1a6cfd37e27dfa4a49be0ab6d983f4fc55" prot="public" static="no">
        <name>program_t</name>
        <enumvalue id="tr__local_8h_1a6cfd37e27dfa4a49be0ab6d983f4fc55a41384461991bd7461cdedf0ea799b227" prot="public">
          <name>PROG_INVALID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1a6cfd37e27dfa4a49be0ab6d983f4fc55a314e70cc0dba77480acf7c8f1526abc9" prot="public">
          <name>VPROG_INTERACTION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1a6cfd37e27dfa4a49be0ab6d983f4fc55a0c7acf8a47857a18d2250d30e1b95696" prot="public">
          <name>VPROG_ENVIRONMENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1a6cfd37e27dfa4a49be0ab6d983f4fc55a1ed4b64f8ebc6faaed36193a07d03aef" prot="public">
          <name>VPROG_BUMPY_ENVIRONMENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1a6cfd37e27dfa4a49be0ab6d983f4fc55af4b87af6babe9374ab2aba6488043a4f" prot="public">
          <name>VPROG_R200_INTERACTION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1a6cfd37e27dfa4a49be0ab6d983f4fc55aa10ac73c7bcb9395c19cc20703b9cff1" prot="public">
          <name>VPROG_STENCIL_SHADOW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1a6cfd37e27dfa4a49be0ab6d983f4fc55aa7fdc01f34e363c02cf2ba8e9e471920" prot="public">
          <name>VPROG_NV20_BUMP_AND_LIGHT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1a6cfd37e27dfa4a49be0ab6d983f4fc55aed48b0ae05a77081b99a8badba059c55" prot="public">
          <name>VPROG_NV20_DIFFUSE_COLOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1a6cfd37e27dfa4a49be0ab6d983f4fc55ac0f14f47072632673611b4328c50ac87" prot="public">
          <name>VPROG_NV20_SPECULAR_COLOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1a6cfd37e27dfa4a49be0ab6d983f4fc55af545e35101344aec71aa01de200e9f8a" prot="public">
          <name>VPROG_NV20_DIFFUSE_AND_SPECULAR_COLOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1a6cfd37e27dfa4a49be0ab6d983f4fc55a157f92d237012fd64f8a4b565c245e66" prot="public">
          <name>VPROG_TEST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1a6cfd37e27dfa4a49be0ab6d983f4fc55a982bfb2502c39c6f8eadf1a165b5e6e3" prot="public">
          <name>FPROG_INTERACTION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1a6cfd37e27dfa4a49be0ab6d983f4fc55aa405d366a04d7fb07cef53ad5dcd8f8d" prot="public">
          <name>FPROG_ENVIRONMENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1a6cfd37e27dfa4a49be0ab6d983f4fc55a65b43f259e9617056d6e1d1a06254283" prot="public">
          <name>FPROG_BUMPY_ENVIRONMENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1a6cfd37e27dfa4a49be0ab6d983f4fc55ad4b1fb890a0724d46d02331e0662dfdd" prot="public">
          <name>FPROG_TEST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1a6cfd37e27dfa4a49be0ab6d983f4fc55a5dbded94ef0694a8bd678c11418eaab7" prot="public">
          <name>VPROG_AMBIENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1a6cfd37e27dfa4a49be0ab6d983f4fc55a5024a0e2b6f0ba704d8f6b52d245e763" prot="public">
          <name>FPROG_AMBIENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1a6cfd37e27dfa4a49be0ab6d983f4fc55a4a5b57b824030a283cb437bda20d7d8a" prot="public">
          <name>VPROG_GLASSWARP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1a6cfd37e27dfa4a49be0ab6d983f4fc55ab649ee0a07019f1760ea88e46c459b8c" prot="public">
          <name>FPROG_GLASSWARP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1a6cfd37e27dfa4a49be0ab6d983f4fc55aa88da8dbe94ddab2b95fcb847672a09e" prot="public">
          <name>PROG_USER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1314" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1314" bodyend="1335"/>
      </memberdef>
      <memberdef kind="enum" id="tr__local_8h_1ab854cdbc12ad378163eb74f05b6f07f0" prot="public" static="no">
        <name>programParameter_t</name>
        <enumvalue id="tr__local_8h_1ab854cdbc12ad378163eb74f05b6f07f0a0d73193f1aa51393c428598ca642346e" prot="public">
          <name>PP_LIGHT_ORIGIN</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1ab854cdbc12ad378163eb74f05b6f07f0a2a731489d94c6eff1ba501aab239c1d7" prot="public">
          <name>PP_VIEW_ORIGIN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1ab854cdbc12ad378163eb74f05b6f07f0aa8d26a86a0344553b4f451aa25bdbc17" prot="public">
          <name>PP_LIGHT_PROJECT_S</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1ab854cdbc12ad378163eb74f05b6f07f0ab7bede7b97eac0e53582ccbfacc42dd8" prot="public">
          <name>PP_LIGHT_PROJECT_T</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1ab854cdbc12ad378163eb74f05b6f07f0a301fd469eb9bad8a94366fc0d58380fb" prot="public">
          <name>PP_LIGHT_PROJECT_Q</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1ab854cdbc12ad378163eb74f05b6f07f0a854c35fd534cdad4e49bbad82ff67548" prot="public">
          <name>PP_LIGHT_FALLOFF_S</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1ab854cdbc12ad378163eb74f05b6f07f0ac3fe03cc89940a51d833399390e2bcf0" prot="public">
          <name>PP_BUMP_MATRIX_S</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1ab854cdbc12ad378163eb74f05b6f07f0a8f0583f6238fb5af8ab240bf57e24354" prot="public">
          <name>PP_BUMP_MATRIX_T</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1ab854cdbc12ad378163eb74f05b6f07f0ab6e718f82cde81ae063dccb3d5792f34" prot="public">
          <name>PP_DIFFUSE_MATRIX_S</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1ab854cdbc12ad378163eb74f05b6f07f0af161b10c7d47920f35ef59d451ceafa8" prot="public">
          <name>PP_DIFFUSE_MATRIX_T</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1ab854cdbc12ad378163eb74f05b6f07f0ab09851b025f7850c0ae67c7c5144131d" prot="public">
          <name>PP_SPECULAR_MATRIX_S</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1ab854cdbc12ad378163eb74f05b6f07f0a55a7bb4e1e5f8265015544a6781a0dc9" prot="public">
          <name>PP_SPECULAR_MATRIX_T</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1ab854cdbc12ad378163eb74f05b6f07f0aba98df5e4a1bf2e6199e600264041447" prot="public">
          <name>PP_COLOR_MODULATE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1ab854cdbc12ad378163eb74f05b6f07f0ae2b0b0f6a7ddc88faf13919384e40e30" prot="public">
          <name>PP_COLOR_ADD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1ab854cdbc12ad378163eb74f05b6f07f0a64ad8af5c2dc902e03dd87ee1608ebb0" prot="public">
          <name>PP_LIGHT_FALLOFF_TQ</name>
          <initializer>= 20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1367" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1367" bodyend="1384"/>
      </memberdef>
      <memberdef kind="enum" id="tr__local_8h_1aa9d933b1f9752be3c71b427a372ba4f8" prot="public" static="no">
        <name>shadowGen_t</name>
        <enumvalue id="tr__local_8h_1aa9d933b1f9752be3c71b427a372ba4f8a1a5d8683a4884fe9287d2a32735d8079" prot="public">
          <name>SG_DYNAMIC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1aa9d933b1f9752be3c71b427a372ba4f8a59da13e199321394da497d0f49eb94cb" prot="public">
          <name>SG_STATIC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="tr__local_8h_1aa9d933b1f9752be3c71b427a372ba4f8a1922096e49e09e99c29a7f85caccce3d" prot="public">
          <name>SG_OFFLINE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1399" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1399" bodyend="1403"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="tr__local_8h_1a890404523d2c73424e40a171121207b2" prot="public" static="no">
        <type>struct <ref refid="structdraw_surf__s" kindref="compound">drawSurf_s</ref></type>
        <definition>typedef struct drawSurf_s  drawSurf_t</definition>
        <argsstring></argsstring>
        <name>drawSurf_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="tr__local_8h_1a025b7c332fd6ef00ed1689190e623a22" prot="public" static="no">
        <type>struct <ref refid="structarea_reference__s" kindref="compound">areaReference_s</ref></type>
        <definition>typedef struct areaReference_s  areaReference_t</definition>
        <argsstring></argsstring>
        <name>areaReference_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="tr__local_8h_1ae48d2392a2ad14d487f14a9084fdd3c6" prot="public" static="no">
        <type>struct <ref refid="structview_light__s" kindref="compound">viewLight_s</ref></type>
        <definition>typedef struct viewLight_s  viewLight_t</definition>
        <argsstring></argsstring>
        <name>viewLight_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="335" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="tr__local_8h_1a53fdc67d089fd937e9b7a55d3d7a3cee" prot="public" static="no">
        <type>struct <ref refid="structview_entity__s" kindref="compound">viewEntity_s</ref></type>
        <definition>typedef struct viewEntity_s  viewEntity_t</definition>
        <argsstring></argsstring>
        <name>viewEntity_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="362" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="tr__local_8h_1a05497539d57779a4c47e0624bf5a0644" prot="public" static="no">
        <type>struct <ref refid="structview_def__s" kindref="compound">viewDef_s</ref></type>
        <definition>typedef struct viewDef_s  viewDef_t</definition>
        <argsstring></argsstring>
        <name>viewDef_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="431" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="tr__local_8h_1a1ac7b4ef8bbc2e20f67d83dd9f19a6dd" prot="public" static="no">
        <type>struct <ref refid="structframe_memory_block__s" kindref="compound">frameMemoryBlock_s</ref></type>
        <definition>typedef struct frameMemoryBlock_s  frameMemoryBlock_t</definition>
        <argsstring></argsstring>
        <name>frameMemoryBlock_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="520" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="tr__local_8h_1a3b3045e4fee07cfdddd59e170274d70b" prot="public" static="no">
        <type>struct <ref refid="structdeform_info__s" kindref="compound">deformInfo_s</ref></type>
        <definition>typedef struct deformInfo_s  deformInfo_t</definition>
        <argsstring></argsstring>
        <name>deformInfo_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1537" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="tr__local_8h_1afb8960b7e35ba7eb94a17a280f93d83b" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int SMP_FRAMES</definition>
        <argsstring></argsstring>
        <name>SMP_FRAMES</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="40" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1aa0a33545d2df7e291667f47fc1fb1fd9" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int FALLOFF_TEXTURE_SIZE</definition>
        <argsstring></argsstring>
        <name>FALLOFF_TEXTURE_SIZE</name>
        <initializer>=	64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="42" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a48c6b535f53cfa465e7e9389143360b7" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>const float DEFAULT_FOG_DISTANCE</definition>
        <argsstring></argsstring>
        <name>DEFAULT_FOG_DISTANCE</name>
        <initializer>= 500.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="44" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1af63a314a2fc1cf3692c7ddda8f8f237f" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int FOG_ENTER_SIZE</definition>
        <argsstring></argsstring>
        <name>FOG_ENTER_SIZE</name>
        <initializer>= 64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="46" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ab2421338218f4fe164d20fe86273c4c0" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>const float FOG_ENTER</definition>
        <argsstring></argsstring>
        <name>FOG_ENTER</name>
        <initializer>= (FOG_ENTER_SIZE+1.0f)/(FOG_ENTER_SIZE*2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="47" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a7d05f07655fcc3dff8e7d9846e086a26" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int DSF_VIEW_INSIDE_SHADOW</definition>
        <argsstring></argsstring>
        <name>DSF_VIEW_INSIDE_SHADOW</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="109" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a46c1d9c12616edadd00cc17892aa9006" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int MAX_CLIP_PLANES</definition>
        <argsstring></argsstring>
        <name>MAX_CLIP_PLANES</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="365" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a8beb08712dea09e0f0df3db666326ba7" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int INITIAL_DRAWSURFS</definition>
        <argsstring></argsstring>
        <name>INITIAL_DRAWSURFS</name>
        <initializer>=			0x4000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="508" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="508" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1aac5032ae37c0cacc9aad2d66c7a81f00" prot="public" static="no" mutable="no">
        <type><ref refid="structframe_data__t" kindref="compound">frameData_t</ref> *</type>
        <definition>frameData_t* frameData</definition>
        <argsstring></argsstring>
        <name>frameData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="545" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_backend.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a6452cc803d6a5794e55dfffe7bfadc44" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int MAX_MULTITEXTURE_UNITS</definition>
        <argsstring></argsstring>
        <name>MAX_MULTITEXTURE_UNITS</name>
        <initializer>=	8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="602" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="602" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ac2f227e4a48cadbf5bf06d5aaf9928f5" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int MAX_GUI_SURFACES</definition>
        <argsstring></argsstring>
        <name>MAX_GUI_SURFACES</name>
        <initializer>= 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="669" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="669" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a1c63e597c3b160f6a68dd0d94c103b76" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int MAX_RENDER_CROPS</definition>
        <argsstring></argsstring>
        <name>MAX_RENDER_CROPS</name>
        <initializer>= 8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="684" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="684" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a0484bda4e1827703dad9dd3251b630ca" prot="public" static="no" mutable="no">
        <type><ref refid="structback_end_state__t" kindref="compound">backEndState_t</ref></type>
        <definition>backEndState_t backEnd</definition>
        <argsstring></argsstring>
        <name>backEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="808" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_backend.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a6817652a37e0c9f69c7b027a9acf30b1" prot="public" static="no" mutable="no">
        <type><ref refid="classid_render_system_local" kindref="compound">idRenderSystemLocal</ref></type>
        <definition>idRenderSystemLocal tr</definition>
        <argsstring></argsstring>
        <name>tr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="809" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ae5a86f4b2e7724fd33b09be699cacc97" prot="public" static="no" mutable="no">
        <type><ref refid="structglconfig__s" kindref="compound">glconfig_t</ref></type>
        <definition>glconfig_t glConfig</definition>
        <argsstring></argsstring>
        <name>glConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="810" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a80e22bdc04716638079e7e7b3f5dda90" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_ext_vertex_array_range</definition>
        <argsstring></argsstring>
        <name>r_ext_vertex_array_range</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="816" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a365cd96f6c2355153174a3fa16689610" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_glDriver</definition>
        <argsstring></argsstring>
        <name>r_glDriver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="818" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a87be4fbb9e35344d8424c2e2823927b2" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_mode</definition>
        <argsstring></argsstring>
        <name>r_mode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="819" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1aa4a78e6883db2c20656da3014f26029a" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_displayRefresh</definition>
        <argsstring></argsstring>
        <name>r_displayRefresh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="820" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a4f5788522b34dd0cd16ff53664e87e00" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_fullscreen</definition>
        <argsstring></argsstring>
        <name>r_fullscreen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="821" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a4a0491a5930221cf987e31ee60ceca6d" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_multiSamples</definition>
        <argsstring></argsstring>
        <name>r_multiSamples</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="822" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a7ec01551996224e8f435d59a69625e94" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_ignore</definition>
        <argsstring></argsstring>
        <name>r_ignore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="824" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a142c10401fa6154396256bbe5bdd6360" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_ignore2</definition>
        <argsstring></argsstring>
        <name>r_ignore2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="825" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ab171f518871101158659f1f77a0a84c6" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_znear</definition>
        <argsstring></argsstring>
        <name>r_znear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="826" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a89e2566e5f6b0fd5157694b3dced22dd" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_finish</definition>
        <argsstring></argsstring>
        <name>r_finish</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="828" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1adad7f5b39c91705de5dca2c522145da8" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_frontBuffer</definition>
        <argsstring></argsstring>
        <name>r_frontBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="829" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a17e80196ee2f534117ebc1e3b44e58e7" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_swapInterval</definition>
        <argsstring></argsstring>
        <name>r_swapInterval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="830" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a29f8795c0f86851a4b85ac4d8045fbfe" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_offsetFactor</definition>
        <argsstring></argsstring>
        <name>r_offsetFactor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="831" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a2624745c9c77ef01d26649e2ad62d2b5" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_offsetUnits</definition>
        <argsstring></argsstring>
        <name>r_offsetUnits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="832" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ae6ad471be55fc259cec79de3f8ef64ff" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_singleTriangle</definition>
        <argsstring></argsstring>
        <name>r_singleTriangle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="833" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1adc83582c765460ed0f140b6e98506b7a" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_logFile</definition>
        <argsstring></argsstring>
        <name>r_logFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="834" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1afa4a137bb02e8c796d5bf0fdbafb2d64" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_clear</definition>
        <argsstring></argsstring>
        <name>r_clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="835" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a0b365bb58c366cda918c686a853c3ae4" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_shadows</definition>
        <argsstring></argsstring>
        <name>r_shadows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="836" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a43e569df42283bfa6e9e0f2625abfad9" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_subviewOnly</definition>
        <argsstring></argsstring>
        <name>r_subviewOnly</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="837" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a72c46bd4a1e7bd7fc1358f33bc43c709" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_lightScale</definition>
        <argsstring></argsstring>
        <name>r_lightScale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="838" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1aea2585b28a8b371e893c4e7b08fb44a1" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_flareSize</definition>
        <argsstring></argsstring>
        <name>r_flareSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="839" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a049b1c497447b15a83b915ca6bf6151e" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_gamma</definition>
        <argsstring></argsstring>
        <name>r_gamma</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="841" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a730b4646744a209fc4645bf31c0715ee" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_brightness</definition>
        <argsstring></argsstring>
        <name>r_brightness</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="842" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a7eb87725aa4238b1d072e74ec7fac5d3" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_renderer</definition>
        <argsstring></argsstring>
        <name>r_renderer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="844" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1aa296fab84d1c05adfed7a3be2c169a71" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_cgVertexProfile</definition>
        <argsstring></argsstring>
        <name>r_cgVertexProfile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="846" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a017a655b514da062d12c3ffce35e231a" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_cgFragmentProfile</definition>
        <argsstring></argsstring>
        <name>r_cgFragmentProfile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="847" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a872c8c6d9e6eab4901066bf0d0eb2ef0" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_checkBounds</definition>
        <argsstring></argsstring>
        <name>r_checkBounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="849" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a82f453ba5ed6999a641204215465b211" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useNV20MonoLights</definition>
        <argsstring></argsstring>
        <name>r_useNV20MonoLights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="851" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a943678b6d69515d0787424bea8ad1e10" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useLightPortalFlow</definition>
        <argsstring></argsstring>
        <name>r_useLightPortalFlow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="852" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a78e5aebffa4dc92543d8ac2ec219d8fb" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useTripleTextureARB</definition>
        <argsstring></argsstring>
        <name>r_useTripleTextureARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="853" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a7f7764a421421bab201ea8a28b28979b" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useShadowSurfaceScissor</definition>
        <argsstring></argsstring>
        <name>r_useShadowSurfaceScissor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="854" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a79fad2aeba3c8e7e4db0582312873df2" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useConstantMaterials</definition>
        <argsstring></argsstring>
        <name>r_useConstantMaterials</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="855" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1acb9ea626d53cb2cd91534a7665f4becb" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useInteractionTable</definition>
        <argsstring></argsstring>
        <name>r_useInteractionTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="856" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1acbacc056165e3338a25472ed84c29df0" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useNodeCommonChildren</definition>
        <argsstring></argsstring>
        <name>r_useNodeCommonChildren</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="857" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a9a53d0751d422a38e8fed13068dc3352" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useSilRemap</definition>
        <argsstring></argsstring>
        <name>r_useSilRemap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="858" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1aafa8ed1437286b883ddfd6a2f572f3a4" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useCulling</definition>
        <argsstring></argsstring>
        <name>r_useCulling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="859" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a0d4b9cf47f611369aabff4d533befff7" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useLightCulling</definition>
        <argsstring></argsstring>
        <name>r_useLightCulling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="860" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a9bee4a4cde8a0556889e80c2e43110fb" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useLightScissors</definition>
        <argsstring></argsstring>
        <name>r_useLightScissors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="861" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a49721209f7a4bc52b158e45217919767" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useClippedLightScissors</definition>
        <argsstring></argsstring>
        <name>r_useClippedLightScissors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="862" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1accdbb198316c5cc63dd57eb3aeee04c6" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useEntityCulling</definition>
        <argsstring></argsstring>
        <name>r_useEntityCulling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="863" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a5e01bc46cd59df36bffe7e103481928b" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useEntityScissors</definition>
        <argsstring></argsstring>
        <name>r_useEntityScissors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="864" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ad5172a98a5ec390c61f27f43c17d21dd" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useInteractionCulling</definition>
        <argsstring></argsstring>
        <name>r_useInteractionCulling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="865" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a21864a52a609a948912348b01886fe5b" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useInteractionScissors</definition>
        <argsstring></argsstring>
        <name>r_useInteractionScissors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="866" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a268fb0d0769437fb4b14b0e4413bfd7f" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useFrustumFarDistance</definition>
        <argsstring></argsstring>
        <name>r_useFrustumFarDistance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="867" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a7752186cf2f3d66857082a992224f639" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useShadowCulling</definition>
        <argsstring></argsstring>
        <name>r_useShadowCulling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="868" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a16b1eb09973cc1ca44f675f6b29f352c" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_usePreciseTriangleInteractions</definition>
        <argsstring></argsstring>
        <name>r_usePreciseTriangleInteractions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="869" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a7541f6377bb8bf40898c54ec0eac5b62" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useTurboShadow</definition>
        <argsstring></argsstring>
        <name>r_useTurboShadow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="870" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a121b6dcd29517fb7e7cbe12e0753b1bd" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useExternalShadows</definition>
        <argsstring></argsstring>
        <name>r_useExternalShadows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="871" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ad199d92b0e24490e94000021e56c4200" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useOptimizedShadows</definition>
        <argsstring></argsstring>
        <name>r_useOptimizedShadows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="872" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1acf91efb584b253c33c67e6c3871f1f3d" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useShadowVertexProgram</definition>
        <argsstring></argsstring>
        <name>r_useShadowVertexProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="873" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ab02c01a881adbb27e9a050965a3d009b" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useShadowProjectedCull</definition>
        <argsstring></argsstring>
        <name>r_useShadowProjectedCull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="874" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a5826c3cde919e3f37f18b13385a83c42" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useDeferredTangents</definition>
        <argsstring></argsstring>
        <name>r_useDeferredTangents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="875" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a3d3b22fbd02c0bd217fc7bbf648d7ee9" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useCachedDynamicModels</definition>
        <argsstring></argsstring>
        <name>r_useCachedDynamicModels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="876" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a13d8329f8cecf3c1f9f93033ae1e690e" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useTwoSidedStencil</definition>
        <argsstring></argsstring>
        <name>r_useTwoSidedStencil</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="877" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a3ce945725f45415604f41e9675abf5d2" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useInfiniteFarZ</definition>
        <argsstring></argsstring>
        <name>r_useInfiniteFarZ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="878" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a3f9b333bfc84db8d0015b8b44f4fa3db" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useScissor</definition>
        <argsstring></argsstring>
        <name>r_useScissor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="879" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a14377f57424094f3d043c141503d3633" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_usePortals</definition>
        <argsstring></argsstring>
        <name>r_usePortals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="880" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a09a7690cf072fb7948179c7fb5c7ec9e" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useStateCaching</definition>
        <argsstring></argsstring>
        <name>r_useStateCaching</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="881" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a836e8582a588b083b8679b876e9268d0" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useCombinerDisplayLists</definition>
        <argsstring></argsstring>
        <name>r_useCombinerDisplayLists</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="882" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ad9820227d8c4b2d0ba7f3c8075a8172d" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useVertexBuffers</definition>
        <argsstring></argsstring>
        <name>r_useVertexBuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="883" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a92f770938a41bef569916ff8e77d1074" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useIndexBuffers</definition>
        <argsstring></argsstring>
        <name>r_useIndexBuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="884" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a82b964e5a55a1dfc63b7478c75319ba3" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useEntityCallbacks</definition>
        <argsstring></argsstring>
        <name>r_useEntityCallbacks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="885" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a3ee0ff9e417820ff4a3014befd27b5fc" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_lightAllBackFaces</definition>
        <argsstring></argsstring>
        <name>r_lightAllBackFaces</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="886" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ae558027d75017ead3f5b5bb7b1e129dc" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_useDepthBoundsTest</definition>
        <argsstring></argsstring>
        <name>r_useDepthBoundsTest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="887" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a09011388398ff096e649a2ab130c25a4" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipPostProcess</definition>
        <argsstring></argsstring>
        <name>r_skipPostProcess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="889" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1aa41579d2d9978c01697714eebb14c6d6" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipSuppress</definition>
        <argsstring></argsstring>
        <name>r_skipSuppress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="890" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1acc3bc6169f85834f3d3c0c464916e094" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipInteractions</definition>
        <argsstring></argsstring>
        <name>r_skipInteractions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="891" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a2628a4b21c06e962337eb71f3825e567" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipFrontEnd</definition>
        <argsstring></argsstring>
        <name>r_skipFrontEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="892" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ab1cfb9c2af71780f4a5d49eeb950d166" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipBackEnd</definition>
        <argsstring></argsstring>
        <name>r_skipBackEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="893" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a99ac23645eca3bcb2dcdddd38a46ae6f" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipCopyTexture</definition>
        <argsstring></argsstring>
        <name>r_skipCopyTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="894" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1adf53748f25ad561923f9b0cf15af44ec" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipRender</definition>
        <argsstring></argsstring>
        <name>r_skipRender</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="895" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ab3aa9a00c2188596004fc5ecd74ccf74" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipRenderContext</definition>
        <argsstring></argsstring>
        <name>r_skipRenderContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="896" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a6d4de46e37260efa7f8824b18cb1d7d4" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipTranslucent</definition>
        <argsstring></argsstring>
        <name>r_skipTranslucent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="897" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a59c075448e288597e2661eea7c46a3e4" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipAmbient</definition>
        <argsstring></argsstring>
        <name>r_skipAmbient</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="898" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a68e43fc71dd59131c477c6792129b5c1" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipNewAmbient</definition>
        <argsstring></argsstring>
        <name>r_skipNewAmbient</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="899" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a708a555ee035c32e3a960e40965934d3" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipBlendLights</definition>
        <argsstring></argsstring>
        <name>r_skipBlendLights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="900" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a7b5727972024f9005e8edcccd773f9ad" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipFogLights</definition>
        <argsstring></argsstring>
        <name>r_skipFogLights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="901" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1aeb70b71d45808ffc4d8889681bc3f446" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipSubviews</definition>
        <argsstring></argsstring>
        <name>r_skipSubviews</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="902" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1aa3532ef057cc7f94c4c0a965d832f479" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipGuiShaders</definition>
        <argsstring></argsstring>
        <name>r_skipGuiShaders</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="903" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ab30e365daf943cb870bd535db0bb40a8" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipParticles</definition>
        <argsstring></argsstring>
        <name>r_skipParticles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="904" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a98165d66ddeb7abef10e3628858e9c0a" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipUpdates</definition>
        <argsstring></argsstring>
        <name>r_skipUpdates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="905" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a9d755de3b6a321684ea5c9ef6b66fa29" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipDeforms</definition>
        <argsstring></argsstring>
        <name>r_skipDeforms</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="906" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a657d0882f7515b2d21bc1dd345098aff" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipDynamicTextures</definition>
        <argsstring></argsstring>
        <name>r_skipDynamicTextures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="907" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a3b558c40e9aea4246023651515485b8d" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipLightScale</definition>
        <argsstring></argsstring>
        <name>r_skipLightScale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="908" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a1ca4ab81f42210c50f67ae0d9f60377d" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipBump</definition>
        <argsstring></argsstring>
        <name>r_skipBump</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="909" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a52b916c6b4f162d5192a92bb6dff891f" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipSpecular</definition>
        <argsstring></argsstring>
        <name>r_skipSpecular</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="910" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a1c0363c81dbc99cce246f6aa258819f8" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipDiffuse</definition>
        <argsstring></argsstring>
        <name>r_skipDiffuse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="911" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ad79f9af2bc691a778e78dc4f5fb66833" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipOverlays</definition>
        <argsstring></argsstring>
        <name>r_skipOverlays</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="912" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a9cde906a306783d25d34a001d973b526" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_skipROQ</definition>
        <argsstring></argsstring>
        <name>r_skipROQ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="913" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ace44696205fda8a90148c2d1489409b1" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_ignoreGLErrors</definition>
        <argsstring></argsstring>
        <name>r_ignoreGLErrors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="915" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a62f7c334f777839e043e9a326eaf7566" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_forceLoadImages</definition>
        <argsstring></argsstring>
        <name>r_forceLoadImages</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="917" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1af7be50a5e214c700502e05a55eba49a6" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_demonstrateBug</definition>
        <argsstring></argsstring>
        <name>r_demonstrateBug</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="918" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ad7bca886830446cb0c9f87ef4a036507" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_screenFraction</definition>
        <argsstring></argsstring>
        <name>r_screenFraction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="919" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a64320b6add86d773146d7bc4dde619d5" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showUnsmoothedTangents</definition>
        <argsstring></argsstring>
        <name>r_showUnsmoothedTangents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="921" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ac4fd8fe73a77b032457f8ad4113fa925" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showSilhouette</definition>
        <argsstring></argsstring>
        <name>r_showSilhouette</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="922" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1af147c7f85fbea699a2bcf8dcd842f5bb" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showVertexColor</definition>
        <argsstring></argsstring>
        <name>r_showVertexColor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="923" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a0ebb0b4211d6f87e63a721e993db09ba" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showUpdates</definition>
        <argsstring></argsstring>
        <name>r_showUpdates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="924" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a1e9fbe40d7ae1f91a72c161d54137d56" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showDemo</definition>
        <argsstring></argsstring>
        <name>r_showDemo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="925" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1aa9b46846e9193c80310a91b9748e4861" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showDynamic</definition>
        <argsstring></argsstring>
        <name>r_showDynamic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="926" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1adedcff5516f33342d563f4d99f6aaa11" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showLightScale</definition>
        <argsstring></argsstring>
        <name>r_showLightScale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="927" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a946afaaf7741fa911331214478ee6ac3" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showIntensity</definition>
        <argsstring></argsstring>
        <name>r_showIntensity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="928" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a6177631e2a7d0153e4cc9a851f5aaa40" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showDefs</definition>
        <argsstring></argsstring>
        <name>r_showDefs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="929" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a9363032cead1fbc0664a9bf429eaada0" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showTrace</definition>
        <argsstring></argsstring>
        <name>r_showTrace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="930" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ae858d27542d781e41f80261cc758bf10" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showSmp</definition>
        <argsstring></argsstring>
        <name>r_showSmp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="931" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1abf791213162fc452bb0792e60c4b77c7" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showDepth</definition>
        <argsstring></argsstring>
        <name>r_showDepth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="932" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a5f0091a522650fda47784c615e69341f" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showImages</definition>
        <argsstring></argsstring>
        <name>r_showImages</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="933" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1aa3a0be6685bd3394e9065c8d72d9d8e9" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showTris</definition>
        <argsstring></argsstring>
        <name>r_showTris</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="934" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a3b9688761171362fa5f6a3f8eceeaa15" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showSurfaceInfo</definition>
        <argsstring></argsstring>
        <name>r_showSurfaceInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="935" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a410b4301eba691fd2ff77d7e34459621" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showNormals</definition>
        <argsstring></argsstring>
        <name>r_showNormals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="936" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1afe721ca4a0d446a49a7b50141aea4552" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showEdges</definition>
        <argsstring></argsstring>
        <name>r_showEdges</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="937" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a0ed96e27abde4cdd4547795040b4a0c0" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showViewEntitys</definition>
        <argsstring></argsstring>
        <name>r_showViewEntitys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="938" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a31ea5ad7074528a374341231248ce0be" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showTexturePolarity</definition>
        <argsstring></argsstring>
        <name>r_showTexturePolarity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="939" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ab22f22e0eadea4eda206c40411ec1d69" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showTangentSpace</definition>
        <argsstring></argsstring>
        <name>r_showTangentSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="940" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1accbf60306e5f807adf866dbf76855576" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showDominantTri</definition>
        <argsstring></argsstring>
        <name>r_showDominantTri</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="941" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ad3c38906c425de77e06f16bf99c9b2a5" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showTextureVectors</definition>
        <argsstring></argsstring>
        <name>r_showTextureVectors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="942" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a7241fee9014848a6510ea3c329b800fc" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showLights</definition>
        <argsstring></argsstring>
        <name>r_showLights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="943" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a3bcd8d743a3bc0d521f712fed29ce60d" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showLightCount</definition>
        <argsstring></argsstring>
        <name>r_showLightCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="944" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a649089cc4f93c6b1d405d378e9207266" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showShadows</definition>
        <argsstring></argsstring>
        <name>r_showShadows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="945" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ab144889d4a397706bc116a434edd22e8" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showShadowCount</definition>
        <argsstring></argsstring>
        <name>r_showShadowCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="946" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a7b7f114413c0880eca9282f8a1bb37cc" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showLightScissors</definition>
        <argsstring></argsstring>
        <name>r_showLightScissors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="947" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a133072ff3e19948b5a1c64d2ce407238" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showEntityScissors</definition>
        <argsstring></argsstring>
        <name>r_showEntityScissors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="948" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ade4861d9e46970220c2c7cdfc58ac769" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showInteractionFrustums</definition>
        <argsstring></argsstring>
        <name>r_showInteractionFrustums</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="949" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1aac3e66e3f4dd135a5a2c20cb881c16e5" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showInteractionScissors</definition>
        <argsstring></argsstring>
        <name>r_showInteractionScissors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="950" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ad03a72c1e8966c177fc53ee0ea604176" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showMemory</definition>
        <argsstring></argsstring>
        <name>r_showMemory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="951" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a70fc961474c910bc1308c6330bde01e4" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showCull</definition>
        <argsstring></argsstring>
        <name>r_showCull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="952" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a219d2f32573445f04d2fd62dd1be86a7" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showInteractions</definition>
        <argsstring></argsstring>
        <name>r_showInteractions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="953" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ac8d592638f93acd9d94dfcd57609375e" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showSurfaces</definition>
        <argsstring></argsstring>
        <name>r_showSurfaces</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="954" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1aaef268a29274279ed313b1d9f216e2d4" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showPrimitives</definition>
        <argsstring></argsstring>
        <name>r_showPrimitives</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="955" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ab83476d31315d9d75ab520c584c915a3" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showPortals</definition>
        <argsstring></argsstring>
        <name>r_showPortals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="956" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a8ea863101d1778e3213ad969723968fe" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showAlloc</definition>
        <argsstring></argsstring>
        <name>r_showAlloc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="957" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1af370534c3326b3516b90134929805042" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showSkel</definition>
        <argsstring></argsstring>
        <name>r_showSkel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="958" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a4ec6b948315ed012b13ca933bf165d42" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_showOverDraw</definition>
        <argsstring></argsstring>
        <name>r_showOverDraw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="959" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1aa5d7f0b83446729f3794862266e94a0c" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_jointNameScale</definition>
        <argsstring></argsstring>
        <name>r_jointNameScale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="960" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a37c7a5c9bee82aa8e756a173bf89d8bc" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_jointNameOffset</definition>
        <argsstring></argsstring>
        <name>r_jointNameOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="961" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a74c75cf76c740cbdce2fce73d560f401" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_testGamma</definition>
        <argsstring></argsstring>
        <name>r_testGamma</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="963" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ad7b3fca97b5819aefaffc5623e2b8ee6" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_testStepGamma</definition>
        <argsstring></argsstring>
        <name>r_testStepGamma</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="964" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a3cc98537846888cb267041d7c297204f" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_testGammaBias</definition>
        <argsstring></argsstring>
        <name>r_testGammaBias</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="965" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1af44c12fc64d2a46065283451923379cc" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_testARBProgram</definition>
        <argsstring></argsstring>
        <name>r_testARBProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="967" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ad01ccdb4116766b32e8771360d1c8b14" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_singleLight</definition>
        <argsstring></argsstring>
        <name>r_singleLight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="969" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a3c3f4ee21feffd868e5a8f81e4158663" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_singleEntity</definition>
        <argsstring></argsstring>
        <name>r_singleEntity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="970" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a435d872186a73b3d6844b5136eb0be8d" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_singleArea</definition>
        <argsstring></argsstring>
        <name>r_singleArea</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="971" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1abc38416519dff99ec11ca5aefd751cea" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_singleSurface</definition>
        <argsstring></argsstring>
        <name>r_singleSurface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="972" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ae319ed857103adc06734cfa02cdca4f4" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_shadowPolygonOffset</definition>
        <argsstring></argsstring>
        <name>r_shadowPolygonOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="973" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a277924d89d283fca935a53ae5a63e5a8" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_shadowPolygonFactor</definition>
        <argsstring></argsstring>
        <name>r_shadowPolygonFactor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="974" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a8ed275114ec3bd0d2a594546f0eb94ee" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_jitter</definition>
        <argsstring></argsstring>
        <name>r_jitter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="976" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a02c911a56f0858af544998c56625673f" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_lightSourceRadius</definition>
        <argsstring></argsstring>
        <name>r_lightSourceRadius</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="977" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a025c59a0e9925ed498e19496d727b9a6" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_lockSurfaces</definition>
        <argsstring></argsstring>
        <name>r_lockSurfaces</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="978" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1abca22f783319765c094c7e2d40255f0d" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_orderIndexes</definition>
        <argsstring></argsstring>
        <name>r_orderIndexes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="979" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a095a5aea9a8e0d1c0e2d4a2246daee6d" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_debugLineDepthTest</definition>
        <argsstring></argsstring>
        <name>r_debugLineDepthTest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="981" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a5b37be6386e49485cee0c01ea16478c5" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_debugLineWidth</definition>
        <argsstring></argsstring>
        <name>r_debugLineWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="982" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a5143033c1e1c5ac487394abe878be59f" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_debugArrowStep</definition>
        <argsstring></argsstring>
        <name>r_debugArrowStep</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="983" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a30838f7a5e454e9135f28164c10527c2" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_debugPolygonFilled</definition>
        <argsstring></argsstring>
        <name>r_debugPolygonFilled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="984" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a2e911fac2597d57d126e4a1b719e770f" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_materialOverride</definition>
        <argsstring></argsstring>
        <name>r_materialOverride</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="986" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ad43fdaebef672ff9c13bd34b8c45071d" prot="public" static="no" mutable="no">
        <type><ref refid="classid_c_var" kindref="compound">idCVar</ref></type>
        <definition>idCVar r_debugRenderToTexture</definition>
        <argsstring></argsstring>
        <name>r_debugRenderToTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="988" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1aa6183dbdca531c6031b4ec04f838ca1b" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_SRCBLEND_ZERO</definition>
        <argsstring></argsstring>
        <name>GLS_SRCBLEND_ZERO</name>
        <initializer>= 0x00000001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1005" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1005" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a594801ca992954846506fce47de2f703" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_SRCBLEND_ONE</definition>
        <argsstring></argsstring>
        <name>GLS_SRCBLEND_ONE</name>
        <initializer>= 0x0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1006" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1006" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1aefd7a88f8769e634664d20e91e2726d4" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_SRCBLEND_DST_COLOR</definition>
        <argsstring></argsstring>
        <name>GLS_SRCBLEND_DST_COLOR</name>
        <initializer>= 0x00000003</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1007" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1007" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a3d06ce6d6c875ffb70e7e1257db7ace0" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_SRCBLEND_ONE_MINUS_DST_COLOR</definition>
        <argsstring></argsstring>
        <name>GLS_SRCBLEND_ONE_MINUS_DST_COLOR</name>
        <initializer>= 0x00000004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1008" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1008" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a0dead87597f18f39df41a2df43f09bf7" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_SRCBLEND_SRC_ALPHA</definition>
        <argsstring></argsstring>
        <name>GLS_SRCBLEND_SRC_ALPHA</name>
        <initializer>= 0x00000005</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1009" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1009" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a1650bcd72d4faf79c7d5d9978501442b" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_SRCBLEND_ONE_MINUS_SRC_ALPHA</definition>
        <argsstring></argsstring>
        <name>GLS_SRCBLEND_ONE_MINUS_SRC_ALPHA</name>
        <initializer>= 0x00000006</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1010" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1010" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a10a725b95fb906cc9ec7835aeff164a8" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_SRCBLEND_DST_ALPHA</definition>
        <argsstring></argsstring>
        <name>GLS_SRCBLEND_DST_ALPHA</name>
        <initializer>= 0x00000007</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1011" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1011" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1afa258c7c852c30983995a41968787571" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_SRCBLEND_ONE_MINUS_DST_ALPHA</definition>
        <argsstring></argsstring>
        <name>GLS_SRCBLEND_ONE_MINUS_DST_ALPHA</name>
        <initializer>= 0x00000008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1012" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1012" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1af402e517cc697e25e7f06236eb69c0d8" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_SRCBLEND_ALPHA_SATURATE</definition>
        <argsstring></argsstring>
        <name>GLS_SRCBLEND_ALPHA_SATURATE</name>
        <initializer>= 0x00000009</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1013" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1013" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ad2c70d66c3a59da61d617664ae9baf9b" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_SRCBLEND_BITS</definition>
        <argsstring></argsstring>
        <name>GLS_SRCBLEND_BITS</name>
        <initializer>= 0x0000000f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1014" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1014" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a49725148570545dd6efdd22fc6905861" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_DSTBLEND_ZERO</definition>
        <argsstring></argsstring>
        <name>GLS_DSTBLEND_ZERO</name>
        <initializer>= 0x0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1016" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1016" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a21d23c5e079f6a16c48c463f39b61d6f" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_DSTBLEND_ONE</definition>
        <argsstring></argsstring>
        <name>GLS_DSTBLEND_ONE</name>
        <initializer>= 0x00000020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1017" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1017" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a448d837b06025f85e2b66530eef02203" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_DSTBLEND_SRC_COLOR</definition>
        <argsstring></argsstring>
        <name>GLS_DSTBLEND_SRC_COLOR</name>
        <initializer>= 0x00000030</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1018" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1018" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a41a015d42f82ec8ab34389ee3cfaf7e6" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_DSTBLEND_ONE_MINUS_SRC_COLOR</definition>
        <argsstring></argsstring>
        <name>GLS_DSTBLEND_ONE_MINUS_SRC_COLOR</name>
        <initializer>= 0x00000040</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1019" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1019" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a3dec9548378af708d6ca4dcdf44b5a14" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_DSTBLEND_SRC_ALPHA</definition>
        <argsstring></argsstring>
        <name>GLS_DSTBLEND_SRC_ALPHA</name>
        <initializer>= 0x00000050</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1020" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1020" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a8289ae8afb547d9ccdcc4f24d81eca5d" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_DSTBLEND_ONE_MINUS_SRC_ALPHA</definition>
        <argsstring></argsstring>
        <name>GLS_DSTBLEND_ONE_MINUS_SRC_ALPHA</name>
        <initializer>= 0x00000060</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1021" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1021" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a2a5d908a7957f85528d88af31d197069" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_DSTBLEND_DST_ALPHA</definition>
        <argsstring></argsstring>
        <name>GLS_DSTBLEND_DST_ALPHA</name>
        <initializer>= 0x00000070</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1022" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1022" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1aa0cb6e3859724aa57f00172b37bd34b4" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_DSTBLEND_ONE_MINUS_DST_ALPHA</definition>
        <argsstring></argsstring>
        <name>GLS_DSTBLEND_ONE_MINUS_DST_ALPHA</name>
        <initializer>= 0x00000080</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1023" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1023" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ab40e68a1f91f6f8c5a2847cce5a867d2" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_DSTBLEND_BITS</definition>
        <argsstring></argsstring>
        <name>GLS_DSTBLEND_BITS</name>
        <initializer>= 0x000000f0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1024" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1024" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a0c2da202be8867ce32ed712557815db3" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_DEPTHMASK</definition>
        <argsstring></argsstring>
        <name>GLS_DEPTHMASK</name>
        <initializer>= 0x00000100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1029" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1029" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a75af1d804be5f00018e7c353ddafd739" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_REDMASK</definition>
        <argsstring></argsstring>
        <name>GLS_REDMASK</name>
        <initializer>= 0x00000200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1030" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1030" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1aba2f365d5379643a39086988037d5cd7" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_GREENMASK</definition>
        <argsstring></argsstring>
        <name>GLS_GREENMASK</name>
        <initializer>= 0x00000400</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1031" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1031" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a925c2c7ae649bd14d23cd834b3ddb1f9" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_BLUEMASK</definition>
        <argsstring></argsstring>
        <name>GLS_BLUEMASK</name>
        <initializer>= 0x00000800</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1032" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1032" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a65a3cb3c975e28c697aba25aafd7b200" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_ALPHAMASK</definition>
        <argsstring></argsstring>
        <name>GLS_ALPHAMASK</name>
        <initializer>= 0x00001000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1033" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1033" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a18e835dadade20226b4d74b72f6581c4" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_COLORMASK</definition>
        <argsstring></argsstring>
        <name>GLS_COLORMASK</name>
        <initializer>= (GLS_REDMASK|GLS_GREENMASK|GLS_BLUEMASK)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1034" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1034" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a0bb7afcc5f2d2f6ce9aedb60ab8f9f5a" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_POLYMODE_LINE</definition>
        <argsstring></argsstring>
        <name>GLS_POLYMODE_LINE</name>
        <initializer>= 0x00002000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1036" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1036" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a1b25ea75c82ca612a2df055b76e185f5" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_DEPTHFUNC_ALWAYS</definition>
        <argsstring></argsstring>
        <name>GLS_DEPTHFUNC_ALWAYS</name>
        <initializer>= 0x00010000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1038" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1038" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ae4c0380d68b39224a40a8dbbc3be5103" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_DEPTHFUNC_EQUAL</definition>
        <argsstring></argsstring>
        <name>GLS_DEPTHFUNC_EQUAL</name>
        <initializer>= 0x00020000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1039" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1039" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a223efb4364f78843b622e272b31afa45" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_DEPTHFUNC_LESS</definition>
        <argsstring></argsstring>
        <name>GLS_DEPTHFUNC_LESS</name>
        <initializer>= 0x0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1040" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1040" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a2808f8e082adfa265d1268a8447cf9e0" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_ATEST_EQ_255</definition>
        <argsstring></argsstring>
        <name>GLS_ATEST_EQ_255</name>
        <initializer>= 0x10000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1042" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1042" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a2470b925d815bdc3e7a33f746f52d266" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_ATEST_LT_128</definition>
        <argsstring></argsstring>
        <name>GLS_ATEST_LT_128</name>
        <initializer>= 0x20000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1043" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1043" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1ae2f4a899a4b4cf80f3b42f538d57ab00" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_ATEST_GE_128</definition>
        <argsstring></argsstring>
        <name>GLS_ATEST_GE_128</name>
        <initializer>= 0x40000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1044" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1044" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a944c219183f0dc582e542e1fe0e8a00a" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_ATEST_BITS</definition>
        <argsstring></argsstring>
        <name>GLS_ATEST_BITS</name>
        <initializer>= 0x70000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1045" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1045" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tr__local_8h_1a02f20ce614cd73d0340c99654a5a3265" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int GLS_DEFAULT</definition>
        <argsstring></argsstring>
        <name>GLS_DEFAULT</name>
        <initializer>= GLS_DEPTHFUNC_ALWAYS</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1047" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" bodystart="1047" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="tr__local_8h_1afe6abd966dac696b50e87ed15bba7e4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_screen_rect" kindref="compound">idScreenRect</ref></type>
        <definition>idScreenRect R_ScreenRectFromViewFrustumBounds</definition>
        <argsstring>(const idBounds &amp;bounds)</argsstring>
        <name>R_ScreenRectFromViewFrustumBounds</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="67" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="151" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a6e0fcb827700b694defb72c5430d5dc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ShowColoredScreenRect</definition>
        <argsstring>(const idScreenRect &amp;rect, int colorIndex)</argsstring>
        <name>R_ShowColoredScreenRect</name>
        <param>
          <type>const <ref refid="classid_screen_rect" kindref="compound">idScreenRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>colorIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="68" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="172" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a800601d9a0fbed12a537ef6e35d64d70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_LockSurfaceScene</definition>
        <argsstring>(viewDef_t *parms)</argsstring>
        <name>R_LockSurfaceScene</name>
        <param>
          <type><ref refid="structview_def__s" kindref="compound">viewDef_t</ref> *</type>
          <declname>parms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="549" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem.cpp" bodystart="246" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a1f397938b090e9cab2e7b44824dd8779" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ClearCommandChain</definition>
        <argsstring>(void)</argsstring>
        <name>R_ClearCommandChain</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="550" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem.cpp" bodystart="180" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a0ebdb390b7058050fcd7fd6eaaebd180" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_AddDrawViewCmd</definition>
        <argsstring>(viewDef_t *parms)</argsstring>
        <name>R_AddDrawViewCmd</name>
        <param>
          <type><ref refid="structview_def__s" kindref="compound">viewDef_t</ref> *</type>
          <declname>parms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="551" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem.cpp" bodystart="208" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1af47dc2efea370dec9e0dff0e6e883352" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ReloadGuis_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>R_ReloadGuis_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="553" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_guisurf.cpp" bodystart="197" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a9f55d0cfaad07fc8c1920e0ba2a5e61e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ListGuis_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>R_ListGuis_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="554" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_guisurf.cpp" bodystart="217" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ab7f43f8a85369524917610167ad3872b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* R_GetCommandBuffer</definition>
        <argsstring>(int bytes)</argsstring>
        <name>R_GetCommandBuffer</name>
        <param>
          <type>int</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="556" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem.cpp" bodystart="160" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a57f6643fc3519d31a40ac548c5381105" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool R_GlobalShaderOverride</definition>
        <argsstring>(const idMaterial **shader)</argsstring>
        <name>R_GlobalShaderOverride</name>
        <param>
          <type>const <ref refid="classid_material" kindref="compound">idMaterial</ref> **</type>
          <declname>shader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="559" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.cpp" bodystart="2093" bodyend="2110"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ac0cfe1dc5b41cf27bb8aa76af25bef32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classid_material" kindref="compound">idMaterial</ref> *</type>
        <definition>const idMaterial* R_RemapShaderBySkin</definition>
        <argsstring>(const idMaterial *shader, const idDeclSkin *customSkin, const idMaterial *customShader)</argsstring>
        <name>R_RemapShaderBySkin</name>
        <param>
          <type>const <ref refid="classid_material" kindref="compound">idMaterial</ref> *</type>
          <declname>shader</declname>
        </param>
        <param>
          <type>const <ref refid="classid_decl_skin" kindref="compound">idDeclSkin</ref> *</type>
          <declname>customSkin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_material" kindref="compound">idMaterial</ref> *</type>
          <declname>customShader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="562" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.cpp" bodystart="2117" bodyend="2142"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a9871d18a46dbae8438751d74b3bade48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GL_SelectTexture</definition>
        <argsstring>(int unit)</argsstring>
        <name>GL_SelectTexture</name>
        <param>
          <type>int</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="998" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_backend.cpp" bodystart="135" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ac62e3d2a048a4f3a6225c842dc62ee17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GL_CheckErrors</definition>
        <argsstring>(void)</argsstring>
        <name>GL_CheckErrors</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="999" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="739" bodyend="778"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a854310259737814cf8a71208af7ba1e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GL_ClearStateDelta</definition>
        <argsstring>(void)</argsstring>
        <name>GL_ClearStateDelta</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1000" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_backend.cpp" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1afa27154865f427d7f60e9c66d917a17c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GL_State</definition>
        <argsstring>(int stateVector)</argsstring>
        <name>GL_State</name>
        <param>
          <type>int</type>
          <declname>stateVector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1001" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_backend.cpp" bodystart="239" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ac862524a0154bcab8d11dc0021e6654d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GL_TexEnv</definition>
        <argsstring>(int env)</argsstring>
        <name>GL_TexEnv</name>
        <param>
          <type>int</type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1002" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_backend.cpp" bodystart="196" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a4dd3701ee17d93e45ee34adf7ae6f58e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GL_Cull</definition>
        <argsstring>(int cullType)</argsstring>
        <name>GL_Cull</name>
        <param>
          <type>int</type>
          <declname>cullType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1003" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_backend.cpp" bodystart="161" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a6e9ed221145db3a3c14a7bfbbf3cf307" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_Init</definition>
        <argsstring>(void)</argsstring>
        <name>R_Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1049" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1aafecfe7a9c5163f7b4558ee23f44124c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_InitOpenGL</definition>
        <argsstring>(void)</argsstring>
        <name>R_InitOpenGL</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1050" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="618" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a658753caa978d330d284bb46f0101d30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_DoneFreeType</definition>
        <argsstring>(void)</argsstring>
        <name>R_DoneFreeType</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1052" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_font.cpp" bodystart="545" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a1d0bc13fc8cd002b3f0c880b0247c38c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_SetColorMappings</definition>
        <argsstring>(void)</argsstring>
        <name>R_SetColorMappings</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1054" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="1738" bodyend="1768"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a7ac6eea53959988d4b52340147f9a1c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ScreenShot_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>R_ScreenShot_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1056" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="1350" bodyend="1402"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1aa67c25f8d8c7eed2f8cce8895f7b17bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_StencilShot</definition>
        <argsstring>(void)</argsstring>
        <name>R_StencilShot</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1057" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="1410" bodyend="1446"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ae55eeb71f73ef6ea19591b5614211712" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool R_CheckExtension</definition>
        <argsstring>(char *name)</argsstring>
        <name>R_CheckExtension</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1059" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderSystem_init.cpp" bodystart="318" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1aec8d8937397a20b8708bb48898dd74c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GLimp_Init</definition>
        <argsstring>(glimpParms_t parms)</argsstring>
        <name>GLimp_Init</name>
        <param>
          <type><ref refid="structglimp_parms__t" kindref="compound">glimpParms_t</ref></type>
          <declname>parms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1079" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/dedicated.cpp" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a7d7a6454a8d0675d5ab4dda42e902ea9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GLimp_SetScreenParms</definition>
        <argsstring>(glimpParms_t parms)</argsstring>
        <name>GLimp_SetScreenParms</name>
        <param>
          <type><ref refid="structglimp_parms__t" kindref="compound">glimpParms_t</ref></type>
          <declname>parms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1084" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/dedicated.cpp" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a6610a0f20ac90d03d00d86ecb125846d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_Shutdown</definition>
        <argsstring>(void)</argsstring>
        <name>GLimp_Shutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1087" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/dedicated.cpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ae933f3d45500980594e4f3d26c73ba0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_SwapBuffers</definition>
        <argsstring>(void)</argsstring>
        <name>GLimp_SwapBuffers</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1091" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/dedicated.cpp" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a38ab40102293d75d5d7af3e613040e49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_SetGamma</definition>
        <argsstring>(unsigned short red[256], unsigned short green[256], unsigned short blue[256])</argsstring>
        <name>GLimp_SetGamma</name>
        <param>
          <type>unsigned short</type>
          <declname>red</declname>
          <array>[256]</array>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>green</declname>
          <array>[256]</array>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>blue</declname>
          <array>[256]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1096" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/dedicated.cpp" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a14a394921926116b00e993f86e2a068d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GLimp_SpawnRenderThread</definition>
        <argsstring>(void(*function)(void))</argsstring>
        <name>GLimp_SpawnRenderThread</name>
        <param>
          <type>void(*)(void)</type>
          <declname>function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1104" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/osx/macosx_glimp.mm" bodystart="1445" bodyend="1447"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1af4ddc92fe387ce1dc8b15a45398b61da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* GLimp_BackEndSleep</definition>
        <argsstring>(void)</argsstring>
        <name>GLimp_BackEndSleep</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1107" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/glimp.cpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a37b1a16b98d48e2d612bb364080fed23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_FrontEndSleep</definition>
        <argsstring>(void)</argsstring>
        <name>GLimp_FrontEndSleep</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1108" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/glimp.cpp" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a06eabf65806dc35a01ad35a67c3e7d7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_WakeBackEnd</definition>
        <argsstring>(void *data)</argsstring>
        <name>GLimp_WakeBackEnd</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1109" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/glimp.cpp" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a6ce9e58ba8c71dcd2fb3625c6f06cb4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_ActivateContext</definition>
        <argsstring>(void)</argsstring>
        <name>GLimp_ActivateContext</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1112" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/dedicated.cpp" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a972d2493706d76c5a207374ec22f7688" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_DeactivateContext</definition>
        <argsstring>(void)</argsstring>
        <name>GLimp_DeactivateContext</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1113" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/dedicated.cpp" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a4c67c2abdae18d4e0433cc609c6bd12a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_EnableLogging</definition>
        <argsstring>(bool enable)</argsstring>
        <name>GLimp_EnableLogging</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1122" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/linux/dedicated.cpp" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ac697f21ba377c3bdc2e4d64f2d954af5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_RenderView</definition>
        <argsstring>(viewDef_t *parms)</argsstring>
        <name>R_RenderView</name>
        <param>
          <type><ref refid="structview_def__s" kindref="compound">viewDef_t</ref> *</type>
          <declname>parms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1133" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="1095" bodyend="1163"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ac2b89f25388d9d72dc099a8025d967bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool R_CullLocalBox</definition>
        <argsstring>(const idBounds &amp;bounds, const float modelMatrix[16], int numPlanes, const idPlane *planes)</argsstring>
        <name>R_CullLocalBox</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>modelMatrix</declname>
          <array>[16]</array>
        </param>
        <param>
          <type>int</type>
          <declname>numPlanes</declname>
        </param>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> *</type>
          <declname>planes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1136" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="675" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ab6ac192e69c3ad44d0cec990a1955f05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool R_RadiusCullLocalBox</definition>
        <argsstring>(const idBounds &amp;bounds, const float modelMatrix[16], int numPlanes, const idPlane *planes)</argsstring>
        <name>R_RadiusCullLocalBox</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>modelMatrix</declname>
          <array>[16]</array>
        </param>
        <param>
          <type>int</type>
          <declname>numPlanes</declname>
        </param>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> *</type>
          <declname>planes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1137" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="587" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a0135f0e6fb39b07e44e905a09c99403c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool R_CornerCullLocalBox</definition>
        <argsstring>(const idBounds &amp;bounds, const float modelMatrix[16], int numPlanes, const idPlane *planes)</argsstring>
        <name>R_CornerCullLocalBox</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>modelMatrix</declname>
          <array>[16]</array>
        </param>
        <param>
          <type>int</type>
          <declname>numPlanes</declname>
        </param>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> *</type>
          <declname>planes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1138" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="625" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a7f2e811ae4e4b1d6f088b5a8eaf04224" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_AxisToModelMatrix</definition>
        <argsstring>(const idMat3 &amp;axis, const idVec3 &amp;origin, float modelMatrix[16])</argsstring>
        <name>R_AxisToModelMatrix</name>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>axis</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>modelMatrix</declname>
          <array>[16]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1140" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="445" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1aae17c44476a779c3c3153d5bb8851408" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_GlobalPointToLocal</definition>
        <argsstring>(const float modelMatrix[16], const idVec3 &amp;in, idVec3 &amp;out)</argsstring>
        <name>R_GlobalPointToLocal</name>
        <param>
          <type>const float</type>
          <declname>modelMatrix</declname>
          <array>[16]</array>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1143" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="522" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ac2abc7f8e05311fc6929b3dc9dcd4e15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_GlobalVectorToLocal</definition>
        <argsstring>(const float modelMatrix[16], const idVec3 &amp;in, idVec3 &amp;out)</argsstring>
        <name>R_GlobalVectorToLocal</name>
        <param>
          <type>const float</type>
          <declname>modelMatrix</declname>
          <array>[16]</array>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1144" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="541" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a6b6e1554511d3ee239a3c94ae5879a45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_GlobalPlaneToLocal</definition>
        <argsstring>(const float modelMatrix[16], const idPlane &amp;in, idPlane &amp;out)</argsstring>
        <name>R_GlobalPlaneToLocal</name>
        <param>
          <type>const float</type>
          <declname>modelMatrix</declname>
          <array>[16]</array>
        </param>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1145" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="547" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a8c510ff18d9c2cbbe298da05278a4657" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_PointTimesMatrix</definition>
        <argsstring>(const float modelMatrix[16], const idVec4 &amp;in, idVec4 &amp;out)</argsstring>
        <name>R_PointTimesMatrix</name>
        <param>
          <type>const float</type>
          <declname>modelMatrix</declname>
          <array>[16]</array>
        </param>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1146" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="511" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a2f8dd0de70d635a0beb4a849661a67f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_LocalPointToGlobal</definition>
        <argsstring>(const float modelMatrix[16], const idVec3 &amp;in, idVec3 &amp;out)</argsstring>
        <name>R_LocalPointToGlobal</name>
        <param>
          <type>const float</type>
          <declname>modelMatrix</declname>
          <array>[16]</array>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1147" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="470" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1abc1cd18b36b1522b007d86759ffd8560" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_LocalVectorToGlobal</definition>
        <argsstring>(const float modelMatrix[16], const idVec3 &amp;in, idVec3 &amp;out)</argsstring>
        <name>R_LocalVectorToGlobal</name>
        <param>
          <type>const float</type>
          <declname>modelMatrix</declname>
          <array>[16]</array>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1148" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="532" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a51100a52f7b453cc5f6ae9920e8a762f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_LocalPlaneToGlobal</definition>
        <argsstring>(const float modelMatrix[16], const idPlane &amp;in, idPlane &amp;out)</argsstring>
        <name>R_LocalPlaneToGlobal</name>
        <param>
          <type>const float</type>
          <declname>modelMatrix</declname>
          <array>[16]</array>
        </param>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1149" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="554" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a40b2d52eea993e35c7d9a337e3fc006d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_TransformEyeZToWin</definition>
        <argsstring>(float src_z, const float *projectionMatrix, float &amp;dst_z)</argsstring>
        <name>R_TransformEyeZToWin</name>
        <param>
          <type>float</type>
          <declname>src_z</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>projectionMatrix</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>dst_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1150" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="564" bodyend="577"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a3dbab99658012b749eddae2f54ad763d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_GlobalToNormalizedDeviceCoordinates</definition>
        <argsstring>(const idVec3 &amp;global, idVec3 &amp;ndc)</argsstring>
        <name>R_GlobalToNormalizedDeviceCoordinates</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>global</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>ndc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1152" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="714" bodyend="762"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a3dd67b6f8733311d9999f5f402c8cbc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_TransformModelToClip</definition>
        <argsstring>(const idVec3 &amp;src, const float *modelMatrix, const float *projectionMatrix, idPlane &amp;eye, idPlane &amp;dst)</argsstring>
        <name>R_TransformModelToClip</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>modelMatrix</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>projectionMatrix</declname>
        </param>
        <param>
          <type><ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>eye</declname>
        </param>
        <param>
          <type><ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1154" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="687" bodyend="705"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a30a87b83765f158488e34d3818275bab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_TransformClipToDevice</definition>
        <argsstring>(const idPlane &amp;clip, const viewDef_t *view, idVec3 &amp;normalized)</argsstring>
        <name>R_TransformClipToDevice</name>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> &amp;</type>
          <declname>clip</declname>
        </param>
        <param>
          <type>const <ref refid="structview_def__s" kindref="compound">viewDef_t</ref> *</type>
          <declname>view</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>normalized</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1156" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="771" bodyend="775"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a3f00bf71386e9829c1e50c140c0a31bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_TransposeGLMatrix</definition>
        <argsstring>(const float in[16], float out[16])</argsstring>
        <name>R_TransposeGLMatrix</name>
        <param>
          <type>const float</type>
          <declname>in</declname>
          <array>[16]</array>
        </param>
        <param>
          <type>float</type>
          <declname>out</declname>
          <array>[16]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1158" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="821" bodyend="829"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1abe986972f72cad3dc38c8560315111c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_SetViewMatrix</definition>
        <argsstring>(viewDef_t *viewDef)</argsstring>
        <name>R_SetViewMatrix</name>
        <param>
          <type><ref refid="structview_def__s" kindref="compound">viewDef_t</ref> *</type>
          <declname>viewDef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1160" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="838" bodyend="886"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a29f1fe2ffabd52f0af6cfc446a814c9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void myGlMultMatrix</definition>
        <argsstring>(const float *a, const float *b, float *out)</argsstring>
        <name>myGlMultMatrix</name>
        <param>
          <type>const float *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a3c0b1344c59a94c84ee94c249bbc48eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ListRenderLightDefs_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>R_ListRenderLightDefs_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1172" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.cpp" bodystart="39" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a16e27cfab896d8657ab0c5554a7446d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ListRenderEntityDefs_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>R_ListRenderEntityDefs_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1173" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/RenderWorld.cpp" bodystart="83" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1abcb64bc194c1d04b7bf54ab2c867d3ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool R_IssueEntityDefCallback</definition>
        <argsstring>(idRenderEntityLocal *def)</argsstring>
        <name>R_IssueEntityDefCallback</name>
        <param>
          <type><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref> *</type>
          <declname>def</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1175" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_light.cpp" bodystart="1060" bodyend="1092"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a0bb56df5c6c3903181c56bc4a6191347" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_render_model" kindref="compound">idRenderModel</ref> *</type>
        <definition>idRenderModel* R_EntityDefDynamicModel</definition>
        <argsstring>(idRenderEntityLocal *def)</argsstring>
        <name>R_EntityDefDynamicModel</name>
        <param>
          <type><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref> *</type>
          <declname>def</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1176" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_light.cpp" bodystart="1104" bodyend="1176"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a30804fe99d3f8c4daa5d4a9b06ae2433" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structview_entity__s" kindref="compound">viewEntity_t</ref> *</type>
        <definition>viewEntity_t* R_SetEntityDefViewEntity</definition>
        <argsstring>(idRenderEntityLocal *def)</argsstring>
        <name>R_SetEntityDefViewEntity</name>
        <param>
          <type><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref> *</type>
          <declname>def</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1178" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_light.cpp" bodystart="378" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ab8e9561f9e0d65167826623566ed86c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structview_light__s" kindref="compound">viewLight_t</ref> *</type>
        <definition>viewLight_t* R_SetLightDefViewLight</definition>
        <argsstring>(idRenderLightLocal *def)</argsstring>
        <name>R_SetLightDefViewLight</name>
        <param>
          <type><ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref> *</type>
          <declname>def</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1179" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_light.cpp" bodystart="458" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ae9c5622e9e9179c07bb2bbdd70b3dc77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_AddDrawSurf</definition>
        <argsstring>(const srfTriangles_t *tri, const viewEntity_t *space, const renderEntity_t *renderEntity, const idMaterial *shader, const idScreenRect &amp;scissor)</argsstring>
        <name>R_AddDrawSurf</name>
        <param>
          <type>const <ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <param>
          <type>const <ref refid="structview_entity__s" kindref="compound">viewEntity_t</ref> *</type>
          <declname>space</declname>
        </param>
        <param>
          <type>const <ref refid="structrender_entity__s" kindref="compound">renderEntity_t</ref> *</type>
          <declname>renderEntity</declname>
        </param>
        <param>
          <type>const <ref refid="classid_material" kindref="compound">idMaterial</ref> *</type>
          <declname>shader</declname>
        </param>
        <param>
          <type>const <ref refid="classid_screen_rect" kindref="compound">idScreenRect</ref> &amp;</type>
          <declname>scissor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1181" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_light.cpp" bodystart="1183" bodyend="1324"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a3d01032a7b535606f06557ef07ce9fae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_LinkLightSurf</definition>
        <argsstring>(const drawSurf_t **link, const srfTriangles_t *tri, const viewEntity_t *space, const idRenderLightLocal *light, const idMaterial *shader, const idScreenRect &amp;scissor, bool viewInsideShadow)</argsstring>
        <name>R_LinkLightSurf</name>
        <param>
          <type>const <ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref> **</type>
          <declname>link</declname>
        </param>
        <param>
          <type>const <ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <param>
          <type>const <ref refid="structview_entity__s" kindref="compound">viewEntity_t</ref> *</type>
          <declname>space</declname>
        </param>
        <param>
          <type>const <ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref> *</type>
          <declname>light</declname>
        </param>
        <param>
          <type>const <ref refid="classid_material" kindref="compound">idMaterial</ref> *</type>
          <declname>shader</declname>
        </param>
        <param>
          <type>const <ref refid="classid_screen_rect" kindref="compound">idScreenRect</ref> &amp;</type>
          <declname>scissor</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>viewInsideShadow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1184" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_light.cpp" bodystart="658" bodyend="706"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a9bebe995c7b0ef8da13a4d3a5f12b9c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool R_CreateAmbientCache</definition>
        <argsstring>(srfTriangles_t *tri, bool needsLighting)</argsstring>
        <name>R_CreateAmbientCache</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>needsLighting</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1187" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_light.cpp" bodystart="52" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a655d9328935fe233e5aa1093102ebcda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool R_CreateLightingCache</definition>
        <argsstring>(const idRenderEntityLocal *ent, const idRenderLightLocal *light, srfTriangles_t *tri)</argsstring>
        <name>R_CreateLightingCache</name>
        <param>
          <type>const <ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref> *</type>
          <declname>ent</declname>
        </param>
        <param>
          <type>const <ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref> *</type>
          <declname>light</declname>
        </param>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1188" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_light.cpp" bodystart="75" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1aa5bce128f2517da4b5d76658b4c67cf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_CreatePrivateShadowCache</definition>
        <argsstring>(srfTriangles_t *tri)</argsstring>
        <name>R_CreatePrivateShadowCache</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1189" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_light.cpp" bodystart="140" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1af1367427b50f21c357867a24165600f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_CreateVertexProgramShadowCache</definition>
        <argsstring>(srfTriangles_t *tri)</argsstring>
        <name>R_CreateVertexProgramShadowCache</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1190" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_light.cpp" bodystart="156" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1aa4199bff4d2796a03d4ddde6c4c3fa80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_RegenerateWorld_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>R_RegenerateWorld_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1200" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_lightrun.cpp" bodystart="863" bodyend="872"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ad394a424a845c99fe4e78d44101c8425" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ModulateLights_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>R_ModulateLights_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1202" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_lightrun.cpp" bodystart="123" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1aca45c473361dd2fea6388ee42d738723" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_SetLightProject</definition>
        <argsstring>(idPlane lightProject[4], const idVec3 origin, const idVec3 targetPoint, const idVec3 rightVector, const idVec3 upVector, const idVec3 start, const idVec3 stop)</argsstring>
        <name>R_SetLightProject</name>
        <param>
          <type><ref refid="classid_plane" kindref="compound">idPlane</ref></type>
          <declname>lightProject</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>origin</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>targetPoint</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>rightVector</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>upVector</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>stop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1204" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_lightrun.cpp" bodystart="231" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a6e1ec6c9cf7f069a71c4ed4e082d331c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_AddLightSurfaces</definition>
        <argsstring>(void)</argsstring>
        <name>R_AddLightSurfaces</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1207" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_light.cpp" bodystart="875" bodyend="1051"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a04b21958329b44ecad58d52cfd9f3ad2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_AddModelSurfaces</definition>
        <argsstring>(void)</argsstring>
        <name>R_AddModelSurfaces</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1208" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_light.cpp" bodystart="1460" bodyend="1563"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a9265ca24f11fe4bf2d9141ddd0af83ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_RemoveUnecessaryViewLights</definition>
        <argsstring>(void)</argsstring>
        <name>R_RemoveUnecessaryViewLights</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1209" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_light.cpp" bodystart="1570" bodyend="1619"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1af02634450ced7e855a0ef8161b9e08f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_FreeDerivedData</definition>
        <argsstring>(void)</argsstring>
        <name>R_FreeDerivedData</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1211" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_lightrun.cpp" bodystart="753" bodyend="778"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a0b86363a1cedb9c93a44cdaf4e8bc862" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ReCreateWorldReferences</definition>
        <argsstring>(void)</argsstring>
        <name>R_ReCreateWorldReferences</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1212" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_lightrun.cpp" bodystart="815" bodyend="853"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a9ed9b0591d87da91e3a9d43b7f3a9d8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_CreateEntityRefs</definition>
        <argsstring>(idRenderEntityLocal *def)</argsstring>
        <name>R_CreateEntityRefs</name>
        <param>
          <type><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref> *</type>
          <declname>def</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1214" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_lightrun.cpp" bodystart="168" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ae6c3d7b85cb9265e08ba561590439d54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_CreateLightRefs</definition>
        <argsstring>(idRenderLightLocal *light)</argsstring>
        <name>R_CreateLightRefs</name>
        <param>
          <type><ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref> *</type>
          <declname>light</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1215" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_lightrun.cpp" bodystart="447" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ae5dd0b3227a0f0347ede0a3ca9ac4779" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_DeriveLightData</definition>
        <argsstring>(idRenderLightLocal *light)</argsstring>
        <name>R_DeriveLightData</name>
        <param>
          <type><ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref> *</type>
          <declname>light</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1217" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_lightrun.cpp" bodystart="351" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a2495b7e4152f2479923cac494546f715" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_FreeLightDefDerivedData</definition>
        <argsstring>(idRenderLightLocal *light)</argsstring>
        <name>R_FreeLightDefDerivedData</name>
        <param>
          <type><ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref> *</type>
          <declname>light</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1218" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_lightrun.cpp" bodystart="596" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1afbdb8fe7545e632b2217aad478f584dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_CheckForEntityDefsUsingModel</definition>
        <argsstring>(idRenderModel *model)</argsstring>
        <name>R_CheckForEntityDefsUsingModel</name>
        <param>
          <type><ref refid="classid_render_model" kindref="compound">idRenderModel</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1219" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_lightrun.cpp" bodystart="785" bodyend="805"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ae7bca37b9a2fa328e9831ebdaf050731" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ClearEntityDefDynamicModel</definition>
        <argsstring>(idRenderEntityLocal *def)</argsstring>
        <name>R_ClearEntityDefDynamicModel</name>
        <param>
          <type><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref> *</type>
          <declname>def</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1221" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_lightrun.cpp" bodystart="699" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a69b1fb6389e62de30ec7381348db622b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_FreeEntityDefDerivedData</definition>
        <argsstring>(idRenderEntityLocal *def, bool keepDecals, bool keepCachedDynamicModel)</argsstring>
        <name>R_FreeEntityDefDerivedData</name>
        <param>
          <type><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref> *</type>
          <declname>def</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepDecals</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepCachedDynamicModel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1222" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_lightrun.cpp" bodystart="633" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a72083f69aa696634c199205a1162fa2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_FreeEntityDefCachedDynamicModel</definition>
        <argsstring>(idRenderEntityLocal *def)</argsstring>
        <name>R_FreeEntityDefCachedDynamicModel</name>
        <param>
          <type><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref> *</type>
          <declname>def</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1223" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a885124982b43784b468842b9c5d72d28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_FreeEntityDefDecals</definition>
        <argsstring>(idRenderEntityLocal *def)</argsstring>
        <name>R_FreeEntityDefDecals</name>
        <param>
          <type><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref> *</type>
          <declname>def</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1224" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_lightrun.cpp" bodystart="716" bodyend="722"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a852005931100ec95f3edd270cae6c623" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_FreeEntityDefOverlay</definition>
        <argsstring>(idRenderEntityLocal *def)</argsstring>
        <name>R_FreeEntityDefOverlay</name>
        <param>
          <type><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref> *</type>
          <declname>def</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1225" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_lightrun.cpp" bodystart="738" bodyend="743"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a83fff2aba94b38640b846742d1ac9b27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_FreeEntityDefFadedDecals</definition>
        <argsstring>(idRenderEntityLocal *def, int time)</argsstring>
        <name>R_FreeEntityDefFadedDecals</name>
        <param>
          <type><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref> *</type>
          <declname>def</declname>
        </param>
        <param>
          <type>int</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1226" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_lightrun.cpp" bodystart="729" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a8ed7f5e98252ea69ef5cef9ea5abd8fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_CreateLightDefFogPortals</definition>
        <argsstring>(idRenderLightLocal *ldef)</argsstring>
        <name>R_CreateLightDefFogPortals</name>
        <param>
          <type><ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref> *</type>
          <declname>ldef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1228" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_lightrun.cpp" bodystart="548" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a295bdbb896b8027c21433b36035dcbb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
        <definition>srfTriangles_t* R_PolytopeSurface</definition>
        <argsstring>(int numPlanes, const idPlane *planes, idWinding **windings)</argsstring>
        <name>R_PolytopeSurface</name>
        <param>
          <type>int</type>
          <declname>numPlanes</declname>
        </param>
        <param>
          <type>const <ref refid="classid_plane" kindref="compound">idPlane</ref> *</type>
          <declname>planes</declname>
        </param>
        <param>
          <type><ref refid="classid_winding" kindref="compound">idWinding</ref> **</type>
          <declname>windings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1238" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_polytope.cpp" bodystart="44" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a7b8170a01ae7f60f200d6e52e365a810" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_EnterWeaponDepthHack</definition>
        <argsstring>()</argsstring>
        <name>RB_EnterWeaponDepthHack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1248" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_render.cpp" bodystart="176" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a9fffef07f9911ac7c8bb7425532d0188" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_EnterModelDepthHack</definition>
        <argsstring>(float depth)</argsstring>
        <name>RB_EnterModelDepthHack</name>
        <param>
          <type>float</type>
          <declname>depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1249" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_render.cpp" bodystart="195" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a72487cf185e873d2f6a5716e393b5f69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_LeaveDepthHack</definition>
        <argsstring>()</argsstring>
        <name>RB_LeaveDepthHack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1250" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_render.cpp" bodystart="214" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a6a7bdfda044caa26b5b2c2dfd92452b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_DrawElementsImmediate</definition>
        <argsstring>(const srfTriangles_t *tri)</argsstring>
        <name>RB_DrawElementsImmediate</name>
        <param>
          <type>const <ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1251" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_render.cpp" bodystart="49" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a08b4fc99edb421f2763ba6da2acc15c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_RenderTriangleSurface</definition>
        <argsstring>(const srfTriangles_t *tri)</argsstring>
        <name>RB_RenderTriangleSurface</name>
        <param>
          <type>const <ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1252" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_render.cpp" bodystart="147" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1af1e8817b3795e1ae3b72c9f3a40e730f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_T_RenderTriangleSurface</definition>
        <argsstring>(const drawSurf_t *surf)</argsstring>
        <name>RB_T_RenderTriangleSurface</name>
        <param>
          <type>const <ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref> *</type>
          <declname>surf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1253" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_render.cpp" bodystart="167" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a17bbe3177825657f519a75c8e74f9b71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_RenderDrawSurfListWithFunction</definition>
        <argsstring>(drawSurf_t **drawSurfs, int numDrawSurfs, void(*triFunc_)(const drawSurf_t *))</argsstring>
        <name>RB_RenderDrawSurfListWithFunction</name>
        <param>
          <type><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref> **</type>
          <declname>drawSurfs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numDrawSurfs</declname>
        </param>
        <param>
          <type>void(*)(const <ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref> *)</type>
          <declname>triFunc_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1254" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_render.cpp" bodystart="232" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1abfc0f2a9a88c130539e3b1395ba79976" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_RenderDrawSurfChainWithFunction</definition>
        <argsstring>(const drawSurf_t *drawSurfs, void(*triFunc_)(const drawSurf_t *))</argsstring>
        <name>RB_RenderDrawSurfChainWithFunction</name>
        <param>
          <type>const <ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref> *</type>
          <declname>drawSurfs</declname>
        </param>
        <param>
          <type>void(*)(const <ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref> *)</type>
          <declname>triFunc_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1256" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_render.cpp" bodystart="280" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a75ec244cac7941a61f954cf695d36ee7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_DrawShaderPasses</definition>
        <argsstring>(drawSurf_t **drawSurfs, int numDrawSurfs)</argsstring>
        <name>RB_DrawShaderPasses</name>
        <param>
          <type><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref> **</type>
          <declname>drawSurfs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numDrawSurfs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1258" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a1e6115eb7141faa9813ccd4b6d1c2590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_LoadShaderTextureMatrix</definition>
        <argsstring>(const float *shaderRegisters, const textureStage_t *texture)</argsstring>
        <name>RB_LoadShaderTextureMatrix</name>
        <param>
          <type>const float *</type>
          <declname>shaderRegisters</declname>
        </param>
        <param>
          <type>const <ref refid="structtexture_stage__t" kindref="compound">textureStage_t</ref> *</type>
          <declname>texture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1259" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_render.cpp" bodystart="362" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ae763ae60b96fcce5a4ec0ad353f8d202" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_GetShaderTextureMatrix</definition>
        <argsstring>(const float *shaderRegisters, const textureStage_t *texture, float matrix[16])</argsstring>
        <name>RB_GetShaderTextureMatrix</name>
        <param>
          <type>const float *</type>
          <declname>shaderRegisters</declname>
        </param>
        <param>
          <type>const <ref refid="structtexture_stage__t" kindref="compound">textureStage_t</ref> *</type>
          <declname>texture</declname>
        </param>
        <param>
          <type>float</type>
          <declname>matrix</declname>
          <array>[16]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1260" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_render.cpp" bodystart="325" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a8568844b993fdd61b742b188e4256642" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_CreateSingleDrawInteractions</definition>
        <argsstring>(const drawSurf_t *surf, void(*DrawInteraction)(const drawInteraction_t *))</argsstring>
        <name>RB_CreateSingleDrawInteractions</name>
        <param>
          <type>const <ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref> *</type>
          <declname>surf</declname>
        </param>
        <param>
          <type>void(*)(const <ref refid="structdraw_interaction__t" kindref="compound">drawInteraction_t</ref> *)</type>
          <declname>DrawInteraction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1261" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_render.cpp" bodystart="689" bodyend="842"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a8c6a8f348a15105591272e8914265e61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structshader_stage__t" kindref="compound">shaderStage_t</ref> *</type>
        <definition>const shaderStage_t* RB_SetLightTexture</definition>
        <argsstring>(const idRenderLightLocal *light)</argsstring>
        <name>RB_SetLightTexture</name>
        <param>
          <type>const <ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref> *</type>
          <declname>light</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1263" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a3fe10fff0e81d43e1c4a00406c6fdba8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_DrawView</definition>
        <argsstring>(const void *data)</argsstring>
        <name>RB_DrawView</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1265" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_render.cpp" bodystart="849" bodyend="890"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a5ec0032949b582bba59e1552008c0d9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_DetermineLightScale</definition>
        <argsstring>(void)</argsstring>
        <name>RB_DetermineLightScale</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1267" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_render.cpp" bodystart="500" bodyend="544"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a43fafb2bf0f4b2e1e9846f12dfc5c0d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_STD_LightScale</definition>
        <argsstring>(void)</argsstring>
        <name>RB_STD_LightScale</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1268" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_common.cpp" bodystart="1598" bodyend="1656"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a87f9f31905a1bc0862c27e8006dfba4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_BeginDrawingView</definition>
        <argsstring>(void)</argsstring>
        <name>RB_BeginDrawingView</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1269" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_render.cpp" bodystart="555" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1adcd16bddc0a0a76b8777f7e2314e46b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_DrawElementsWithCounters</definition>
        <argsstring>(const srfTriangles_t *tri)</argsstring>
        <name>RB_DrawElementsWithCounters</name>
        <param>
          <type>const <ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1279" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_render.cpp" bodystart="78" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ab6a0bafab0b10b5dee634f11f4cc6c44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_DrawShadowElementsWithCounters</definition>
        <argsstring>(const srfTriangles_t *tri, int numIndexes)</argsstring>
        <name>RB_DrawShadowElementsWithCounters</name>
        <param>
          <type>const <ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numIndexes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1280" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_render.cpp" bodystart="117" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1af00a38e8ab77d09112bd54f8764f0ed1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_STD_FillDepthBuffer</definition>
        <argsstring>(drawSurf_t **drawSurfs, int numDrawSurfs)</argsstring>
        <name>RB_STD_FillDepthBuffer</name>
        <param>
          <type><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref> **</type>
          <declname>drawSurfs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numDrawSurfs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1281" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_common.cpp" bodystart="521" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a10811819d3faaf86400f6507f1bb4b58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_BindVariableStageImage</definition>
        <argsstring>(const textureStage_t *texture, const float *shaderRegisters)</argsstring>
        <name>RB_BindVariableStageImage</name>
        <param>
          <type>const <ref refid="structtexture_stage__t" kindref="compound">textureStage_t</ref> *</type>
          <declname>texture</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>shaderRegisters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1282" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_render.cpp" bodystart="378" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a0fed383c7c0a0c5908073c3858d87f68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_BindStageTexture</definition>
        <argsstring>(const float *shaderRegisters, const textureStage_t *texture, const drawSurf_t *surf)</argsstring>
        <name>RB_BindStageTexture</name>
        <param>
          <type>const float *</type>
          <declname>shaderRegisters</declname>
        </param>
        <param>
          <type>const <ref refid="structtexture_stage__t" kindref="compound">textureStage_t</ref> *</type>
          <declname>texture</declname>
        </param>
        <param>
          <type>const <ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref> *</type>
          <declname>surf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1283" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_render.cpp" bodystart="410" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a257f2a34a6f85b97cf82686ef7466fe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_FinishStageTexture</definition>
        <argsstring>(const textureStage_t *texture, const drawSurf_t *surf)</argsstring>
        <name>RB_FinishStageTexture</name>
        <param>
          <type>const <ref refid="structtexture_stage__t" kindref="compound">textureStage_t</ref> *</type>
          <declname>texture</declname>
        </param>
        <param>
          <type>const <ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref> *</type>
          <declname>surf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1284" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_render.cpp" bodystart="451" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a704ef2acfd415a8733dcbe7387c344dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_StencilShadowPass</definition>
        <argsstring>(const drawSurf_t *drawSurfs)</argsstring>
        <name>RB_StencilShadowPass</name>
        <param>
          <type>const <ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref> *</type>
          <declname>drawSurfs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1285" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_common.cpp" bodystart="1176" bodyend="1231"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ad0fdd6b54f5b7c0ba421639aefb33300" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_STD_DrawView</definition>
        <argsstring>(void)</argsstring>
        <name>RB_STD_DrawView</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1286" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_common.cpp" bodystart="1666" bodyend="1725"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1aee95dc87708f729ea0d1d2142f44550c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_STD_FogAllLights</definition>
        <argsstring>(void)</argsstring>
        <name>RB_STD_FogAllLights</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1287" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_common.cpp" bodystart="1532" bodyend="1586"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a566185be50c5d384c8e7e905318a681e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_BakeTextureMatrixIntoTexgen</definition>
        <argsstring>(idPlane lightProject[3], const float textureMatrix[16])</argsstring>
        <name>RB_BakeTextureMatrixIntoTexgen</name>
        <param>
          <type><ref refid="classid_plane" kindref="compound">idPlane</ref></type>
          <declname>lightProject</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>const float</type>
          <declname>textureMatrix</declname>
          <array>[16]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1288" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a8ee35a16fe3a66f3663d0d1f11a166fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_ARB_DrawInteractions</definition>
        <argsstring>(void)</argsstring>
        <name>RB_ARB_DrawInteractions</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1298" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_arb.cpp" bodystart="522" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a06fc0a3f97d9889d27e94cd05808192a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_R200_Init</definition>
        <argsstring>(void)</argsstring>
        <name>R_R200_Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1300" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_r200.cpp" bodystart="480" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a6aef8e3e21960efc80b941c785591d2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_R200_DrawInteractions</definition>
        <argsstring>(void)</argsstring>
        <name>RB_R200_DrawInteractions</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1301" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_r200.cpp" bodystart="278" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ac33ac7ed1a2e1e98ce05d30861226909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_NV10_Init</definition>
        <argsstring>(void)</argsstring>
        <name>R_NV10_Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1303" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_nv10.cpp" bodystart="639" bodyend="647"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1adbdfcc9a9dba8ee506e3e0b4af28b64a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_NV10_DrawInteractions</definition>
        <argsstring>(void)</argsstring>
        <name>RB_NV10_DrawInteractions</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1304" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_nv10.cpp" bodystart="624" bodyend="630"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a53b0e420e882dc3f28d33374623e4442" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_NV20_Init</definition>
        <argsstring>(void)</argsstring>
        <name>R_NV20_Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1306" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_nv20.cpp" bodystart="844" bodyend="884"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1aa072ee73b07e3a6684099a0ca57343de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_NV20_DrawInteractions</definition>
        <argsstring>(void)</argsstring>
        <name>RB_NV20_DrawInteractions</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1307" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_nv20.cpp" bodystart="763" bodyend="834"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a05f573725a76e8f156a68438506e7bed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ARB2_Init</definition>
        <argsstring>(void)</argsstring>
        <name>R_ARB2_Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1309" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_arb2.cpp" bodystart="521" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1af1470b5c4d2add4046a07b8aaa5169b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_ARB2_DrawInteractions</definition>
        <argsstring>(void)</argsstring>
        <name>RB_ARB2_DrawInteractions</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1310" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_arb2.cpp" bodystart="243" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ac47be2ca79af0afa8e92bd0c0f6e58d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ReloadARBPrograms_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>R_ReloadARBPrograms_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1311" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_arb2.cpp" bodystart="505" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ac615fe6f196e433ea4afce1704b915c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int R_FindARBProgram</definition>
        <argsstring>(GLenum target, const char *program)</argsstring>
        <name>R_FindARBProgram</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>program</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1312" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/draw_arb2.cpp" bodystart="466" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ae5ac75f3c8dd301068a30273b57e6426" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_MakeShadowFrustums</definition>
        <argsstring>(idRenderLightLocal *def)</argsstring>
        <name>R_MakeShadowFrustums</name>
        <param>
          <type><ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref> *</type>
          <declname>def</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1397" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_stencilshadow.cpp" bodystart="1032" bodyend="1189"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a73deefbb5b4214b6572dbff5ae884373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
        <definition>srfTriangles_t* R_CreateShadowVolume</definition>
        <argsstring>(const idRenderEntityLocal *ent, const srfTriangles_t *tri, const idRenderLightLocal *light, shadowGen_t optimize, srfCullInfo_t &amp;cullInfo)</argsstring>
        <name>R_CreateShadowVolume</name>
        <param>
          <type>const <ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref> *</type>
          <declname>ent</declname>
        </param>
        <param>
          <type>const <ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <param>
          <type>const <ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref> *</type>
          <declname>light</declname>
        </param>
        <param>
          <type>shadowGen_t</type>
          <declname>optimize</declname>
        </param>
        <param>
          <type><ref refid="structsrf_cull_info__t" kindref="compound">srfCullInfo_t</ref> &amp;</type>
          <declname>cullInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1405" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_stencilshadow.cpp" bodystart="1217" bodyend="1395"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ab5f7538e435b717b1b9aaab295337ab3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
        <definition>srfTriangles_t* R_CreateVertexProgramTurboShadowVolume</definition>
        <argsstring>(const idRenderEntityLocal *ent, const srfTriangles_t *tri, const idRenderLightLocal *light, srfCullInfo_t &amp;cullInfo)</argsstring>
        <name>R_CreateVertexProgramTurboShadowVolume</name>
        <param>
          <type>const <ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref> *</type>
          <declname>ent</declname>
        </param>
        <param>
          <type>const <ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <param>
          <type>const <ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref> *</type>
          <declname>light</declname>
        </param>
        <param>
          <type><ref refid="structsrf_cull_info__t" kindref="compound">srfCullInfo_t</ref> &amp;</type>
          <declname>cullInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1422" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_turboshadow.cpp" bodystart="45" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ab39b7b8d757cddbf379e1f444f799d1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
        <definition>srfTriangles_t* R_CreateTurboShadowVolume</definition>
        <argsstring>(const idRenderEntityLocal *ent, const srfTriangles_t *tri, const idRenderLightLocal *light, srfCullInfo_t &amp;cullInfo)</argsstring>
        <name>R_CreateTurboShadowVolume</name>
        <param>
          <type>const <ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref> *</type>
          <declname>ent</declname>
        </param>
        <param>
          <type>const <ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <param>
          <type>const <ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref> *</type>
          <declname>light</declname>
        </param>
        <param>
          <type><ref refid="structsrf_cull_info__t" kindref="compound">srfCullInfo_t</ref> &amp;</type>
          <declname>cullInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1426" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_turboshadow.cpp" bodystart="187" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a48131cd4a45bacb5f67e83c1b78d2d0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structoptimized_shadow__t" kindref="compound">optimizedShadow_t</ref></type>
        <definition>optimizedShadow_t SuperOptimizeOccluders</definition>
        <argsstring>(idVec4 *verts, glIndex_t *indexes, int numIndexes, idPlane projectionPlane, idVec3 projectionOrigin)</argsstring>
        <name>SuperOptimizeOccluders</name>
        <param>
          <type><ref refid="classid_vec4" kindref="compound">idVec4</ref> *</type>
          <declname>verts</declname>
        </param>
        <param>
          <type>glIndex_t *</type>
          <declname>indexes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numIndexes</declname>
        </param>
        <param>
          <type><ref refid="classid_plane" kindref="compound">idPlane</ref></type>
          <declname>projectionPlane</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>projectionOrigin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1454" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/compilers/dmap/shadowopt3.cpp" bodystart="1009" bodyend="1089"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a864928bc4815dd6585261167cfcc28f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CleanupOptimizedShadowTris</definition>
        <argsstring>(srfTriangles_t *tri)</argsstring>
        <name>CleanupOptimizedShadowTris</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1457" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/tools/compilers/dmap/shadowopt3.cpp" bodystart="1137" bodyend="1208"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ab8ce29891314598f3a5f00d94165b22f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_InitTriSurfData</definition>
        <argsstring>(void)</argsstring>
        <name>R_InitTriSurfData</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1469" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="157" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a2196e9f9d08547fb8f6c35c63c4e628e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ShutdownTriSurfData</definition>
        <argsstring>(void)</argsstring>
        <name>R_ShutdownTriSurfData</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1470" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="188" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a6524d3565da56d1cb6ce8c906c81be85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_PurgeTriSurfData</definition>
        <argsstring>(frameData_t *frame)</argsstring>
        <name>R_PurgeTriSurfData</name>
        <param>
          <type><ref refid="structframe_data__t" kindref="compound">frameData_t</ref> *</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1471" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="208" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a20a2d01359209c6e8510a9087076db9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ShowTriSurfMemory_f</definition>
        <argsstring>(const idCmdArgs &amp;args)</argsstring>
        <name>R_ShowTriSurfMemory_f</name>
        <param>
          <type>const <ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1472" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="229" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a09056752c2cc06985c2263834637275b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
        <definition>srfTriangles_t* R_AllocStaticTriSurf</definition>
        <argsstring>(void)</argsstring>
        <name>R_AllocStaticTriSurf</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1474" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="523" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ae1a293a0ee1acf099bb4e29cfcfa7a4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
        <definition>srfTriangles_t* R_CopyStaticTriSurf</definition>
        <argsstring>(const srfTriangles_t *tri)</argsstring>
        <name>R_CopyStaticTriSurf</name>
        <param>
          <type>const <ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1475" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="536" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1acae0a8043ce35a0c37b6f545aa336e0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_AllocStaticTriSurfVerts</definition>
        <argsstring>(srfTriangles_t *tri, int numVerts)</argsstring>
        <name>R_AllocStaticTriSurfVerts</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numVerts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1476" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="555" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a93609d650d86a5e2fae6dc99c4c7e13d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_AllocStaticTriSurfIndexes</definition>
        <argsstring>(srfTriangles_t *tri, int numIndexes)</argsstring>
        <name>R_AllocStaticTriSurfIndexes</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numIndexes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1477" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="565" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ab2c0cc504609b280a81863ed72e5096e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_AllocStaticTriSurfShadowVerts</definition>
        <argsstring>(srfTriangles_t *tri, int numVerts)</argsstring>
        <name>R_AllocStaticTriSurfShadowVerts</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numVerts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1478" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="575" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1af5ccc976330ee5670ff7450f5e22b405" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_AllocStaticTriSurfPlanes</definition>
        <argsstring>(srfTriangles_t *tri, int numIndexes)</argsstring>
        <name>R_AllocStaticTriSurfPlanes</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numIndexes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1479" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="585" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a0b2856b045422f48ffdbecd9ae8c0dd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ResizeStaticTriSurfVerts</definition>
        <argsstring>(srfTriangles_t *tri, int numVerts)</argsstring>
        <name>R_ResizeStaticTriSurfVerts</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numVerts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1480" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="597" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a5b0c93ad6ebdc8454c995992e6f127d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ResizeStaticTriSurfIndexes</definition>
        <argsstring>(srfTriangles_t *tri, int numIndexes)</argsstring>
        <name>R_ResizeStaticTriSurfIndexes</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numIndexes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1481" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="610" bodyend="616"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1aa3cf3f2286839a705c0f49e9ffc0b934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ResizeStaticTriSurfShadowVerts</definition>
        <argsstring>(srfTriangles_t *tri, int numVerts)</argsstring>
        <name>R_ResizeStaticTriSurfShadowVerts</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numVerts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1482" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="623" bodyend="629"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a7e26b2ae8a54c0148917250c2bca7df2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ReferenceStaticTriSurfVerts</definition>
        <argsstring>(srfTriangles_t *tri, const srfTriangles_t *reference)</argsstring>
        <name>R_ReferenceStaticTriSurfVerts</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <param>
          <type>const <ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1483" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="636" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a19e63ff4bc05b0d59016992bf3680de2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ReferenceStaticTriSurfIndexes</definition>
        <argsstring>(srfTriangles_t *tri, const srfTriangles_t *reference)</argsstring>
        <name>R_ReferenceStaticTriSurfIndexes</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <param>
          <type>const <ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>reference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1484" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="645" bodyend="647"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a9aaca45c870ca64f9221193c9e484c53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_FreeStaticTriSurfSilIndexes</definition>
        <argsstring>(srfTriangles_t *tri)</argsstring>
        <name>R_FreeStaticTriSurfSilIndexes</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1485" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="654" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a5e067785c849e400ff07b4fd36d371a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_FreeStaticTriSurf</definition>
        <argsstring>(srfTriangles_t *tri)</argsstring>
        <name>R_FreeStaticTriSurf</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1486" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="489" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a4e2439bfe3d0fa91eb14525390fff027" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_FreeStaticTriSurfVertexCaches</definition>
        <argsstring>(srfTriangles_t *tri)</argsstring>
        <name>R_FreeStaticTriSurfVertexCaches</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1487" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="343" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ab1eb3256ae5845bcbb47c99d58f51234" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ReallyFreeStaticTriSurf</definition>
        <argsstring>(srfTriangles_t *tri)</argsstring>
        <name>R_ReallyFreeStaticTriSurf</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1488" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="374" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a33368f68dc5491c03cade673aa67711c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_FreeDeferredTriSurfs</definition>
        <argsstring>(frameData_t *frame)</argsstring>
        <name>R_FreeDeferredTriSurfs</name>
        <param>
          <type><ref refid="structframe_data__t" kindref="compound">frameData_t</ref> *</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1489" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="466" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a5fa4e091ca7864325cfcf630f90dd348" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int R_TriSurfMemory</definition>
        <argsstring>(const srfTriangles_t *tri)</argsstring>
        <name>R_TriSurfMemory</name>
        <param>
          <type>const <ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1490" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="290" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a12dcc4234fd9d9624ef08eb994fb1813" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_BoundTriSurf</definition>
        <argsstring>(srfTriangles_t *tri)</argsstring>
        <name>R_BoundTriSurf</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1492" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="704" bodyend="706"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a3c60e4a36d1248df390d8eb36aa55b97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_RemoveDuplicatedTriangles</definition>
        <argsstring>(srfTriangles_t *tri)</argsstring>
        <name>R_RemoveDuplicatedTriangles</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1493" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="1842" bodyend="1873"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a44b1c8d3109712cff260e8c1ade9a05c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_CreateSilIndexes</definition>
        <argsstring>(srfTriangles_t *tri)</argsstring>
        <name>R_CreateSilIndexes</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1494" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="765" bodyend="783"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a29a61a7a3653b7920465dfc5260b4525" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_RemoveDegenerateTriangles</definition>
        <argsstring>(srfTriangles_t *tri)</argsstring>
        <name>R_RemoveDegenerateTriangles</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1495" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="1882" bodyend="1909"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ad2b125c139e42eb567e8c57dba3b928e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_RemoveUnusedVerts</definition>
        <argsstring>(srfTriangles_t *tri)</argsstring>
        <name>R_RemoveUnusedVerts</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1496" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="1942" bodyend="1996"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a6e54bb5e68c2eedb3f523187644b23d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_RangeCheckIndexes</definition>
        <argsstring>(const srfTriangles_t *tri)</argsstring>
        <name>R_RangeCheckIndexes</name>
        <param>
          <type>const <ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1497" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="671" bodyend="697"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a5de6a3fe98c2c9d67f73c8b792243091" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_CreateVertexNormals</definition>
        <argsstring>(srfTriangles_t *tri)</argsstring>
        <name>R_CreateVertexNormals</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1498" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="891" bodyend="918"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a6c583894068f440fd52001d59f43a548" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_DeriveFacePlanes</definition>
        <argsstring>(srfTriangles_t *tri)</argsstring>
        <name>R_DeriveFacePlanes</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1499" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="827" bodyend="881"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a97bb77b66f1cac47b2aa78b7ae0ab7c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_CleanupTriangles</definition>
        <argsstring>(srfTriangles_t *tri, bool createNormals, bool identifySilEdges, bool useUnsmoothedTangents)</argsstring>
        <name>R_CleanupTriangles</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>createNormals</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>identifySilEdges</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useUnsmoothedTangents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1500" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="2096" bodyend="2132"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a6824162bd1154477db03c91dfab2632b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ReverseTriangles</definition>
        <argsstring>(srfTriangles_t *tri)</argsstring>
        <name>R_ReverseTriangles</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1501" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="2069" bodyend="2087"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a56c56217240de3055d55f88eca058d9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
        <definition>srfTriangles_t* R_MergeSurfaceList</definition>
        <argsstring>(const srfTriangles_t **surfaces, int numSurfaces)</argsstring>
        <name>R_MergeSurfaceList</name>
        <param>
          <type>const <ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> **</type>
          <declname>surfaces</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numSurfaces</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1505" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="2006" bodyend="2039"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ab672a44674cea51151540fae3b964b0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
        <definition>srfTriangles_t* R_MergeTriangles</definition>
        <argsstring>(const srfTriangles_t *tri1, const srfTriangles_t *tri2)</argsstring>
        <name>R_MergeTriangles</name>
        <param>
          <type>const <ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri1</declname>
        </param>
        <param>
          <type>const <ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1506" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="2049" bodyend="2056"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1aeedee84a55bb9ac45ac89c430d7d8493" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_DeriveTangents</definition>
        <argsstring>(srfTriangles_t *tri, bool allocFacePlanes=true)</argsstring>
        <name>R_DeriveTangents</name>
        <param>
          <type><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allocFacePlanes</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1510" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="1647" bodyend="1830"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ae2a0850486a67b0580f3902ac726d2f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdeform_info__s" kindref="compound">deformInfo_t</ref> *</type>
        <definition>deformInfo_t* R_BuildDeformInfo</definition>
        <argsstring>(int numVerts, const idDrawVert *verts, int numIndexes, const int *indexes, bool useUnsmoothedTangents)</argsstring>
        <name>R_BuildDeformInfo</name>
        <param>
          <type>int</type>
          <declname>numVerts</declname>
        </param>
        <param>
          <type>const <ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref> *</type>
          <declname>verts</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numIndexes</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>indexes</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useUnsmoothedTangents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1540" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="2147" bodyend="2215"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1aefa1ab44ca99520ed9a0da7215b82d42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_FreeDeformInfo</definition>
        <argsstring>(deformInfo_t *deformInfo)</argsstring>
        <name>R_FreeDeformInfo</name>
        <param>
          <type><ref refid="structdeform_info__s" kindref="compound">deformInfo_t</ref> *</type>
          <declname>deformInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1541" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="2222" bodyend="2242"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1aa2f29f1625f7d088ea749a36dbfaf2a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int R_DeformInfoMemoryUsed</definition>
        <argsstring>(deformInfo_t *deformInfo)</argsstring>
        <name>R_DeformInfoMemoryUsed</name>
        <param>
          <type><ref refid="structdeform_info__s" kindref="compound">deformInfo_t</ref> *</type>
          <declname>deformInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1542" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trisurf.cpp" bodystart="2249" bodyend="2273"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a6a05b4a72b3f5c628cbd96c203e8dfba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool R_PreciseCullSurface</definition>
        <argsstring>(const drawSurf_t *drawSurf, idBounds &amp;ndcBounds)</argsstring>
        <name>R_PreciseCullSurface</name>
        <param>
          <type>const <ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref> *</type>
          <declname>drawSurf</declname>
        </param>
        <param>
          <type><ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>ndcBounds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1552" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_subview.cpp" bodystart="109" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a24f573c55e72beae07abfa3083a28a69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool R_GenerateSubViews</definition>
        <argsstring>(void)</argsstring>
        <name>R_GenerateSubViews</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1553" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_subview.cpp" bodystart="549" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ad6fef3bfb0a020857f9be3f45bc35d2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_InitFrameData</definition>
        <argsstring>(void)</argsstring>
        <name>R_InitFrameData</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1563" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="246" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1af726a94ce5d91dff4cfc6f6b1953207b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ShutdownFrameData</definition>
        <argsstring>(void)</argsstring>
        <name>R_ShutdownFrameData</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1564" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="220" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a2c7eb1fef314db2f3444f3426246e48d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int R_CountFrameData</definition>
        <argsstring>(void)</argsstring>
        <name>R_CountFrameData</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1565" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="274" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1afdd7dc63719e14eb118a909ba7e1915a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_ToggleSmpFrame</definition>
        <argsstring>(void)</argsstring>
        <name>R_ToggleSmpFrame</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1566" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="184" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a7e7fbe2d8b889a9b2748814104f68c51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* R_FrameAlloc</definition>
        <argsstring>(int bytes)</argsstring>
        <name>R_FrameAlloc</name>
        <param>
          <type>int</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1567" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="365" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a32329f3400333d9a2037662e7bc33147" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* R_ClearedFrameAlloc</definition>
        <argsstring>(int bytes)</argsstring>
        <name>R_ClearedFrameAlloc</name>
        <param>
          <type>int</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1568" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="417" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a263b1323640eba4ef3fd665bb08285c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_FrameFree</definition>
        <argsstring>(void *data)</argsstring>
        <name>R_FrameFree</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1569" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="438" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a1541ac1be31dc4534c4785c3f149037c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* R_StaticAlloc</definition>
        <argsstring>(int bytes)</argsstring>
        <name>R_StaticAlloc</name>
        <param>
          <type>int</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1571" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="301" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a36eb88ce25c1f8120af5fe5d1764783d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* R_ClearedStaticAlloc</definition>
        <argsstring>(int bytes)</argsstring>
        <name>R_ClearedStaticAlloc</name>
        <param>
          <type>int</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1572" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="322" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a9b5415d21d166ca9b6f73ac85edca2b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_StaticFree</definition>
        <argsstring>(void *data)</argsstring>
        <name>R_StaticFree</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1573" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_main.cpp" bodystart="335" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a0af6be42b198d418a48f95ea7f299c0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float RB_DrawTextLength</definition>
        <argsstring>(const char *text, float scale, int len)</argsstring>
        <name>RB_DrawTextLength</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1584" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_rendertools.cpp" bodystart="1719" bodyend="1751"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1affb3cff768b57a3652d923a407f27317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_AddDebugText</definition>
        <argsstring>(const char *text, const idVec3 &amp;origin, float scale, const idVec4 &amp;color, const idMat3 &amp;viewAxis, const int align, const int lifetime, const bool depthTest)</argsstring>
        <name>RB_AddDebugText</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="classid_mat3" kindref="compound">idMat3</ref> &amp;</type>
          <declname>viewAxis</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>align</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>lifetime</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>depthTest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1585" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_rendertools.cpp" bodystart="1696" bodyend="1710"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ad30d9b68d482de584cc0e111dae7de8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_ClearDebugText</definition>
        <argsstring>(int time)</argsstring>
        <name>RB_ClearDebugText</name>
        <param>
          <type>int</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1586" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_rendertools.cpp" bodystart="1660" bodyend="1689"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a9e8864d93246e23909136d19f63fd7eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_AddDebugLine</definition>
        <argsstring>(const idVec4 &amp;color, const idVec3 &amp;start, const idVec3 &amp;end, const int lifeTime, const bool depthTest)</argsstring>
        <name>RB_AddDebugLine</name>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>lifeTime</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>depthTest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1587" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_rendertools.cpp" bodystart="1922" bodyend="1933"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a6372a025cf8eb5d2ccc4993b30000151" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_ClearDebugLines</definition>
        <argsstring>(int time)</argsstring>
        <name>RB_ClearDebugLines</name>
        <param>
          <type>int</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1588" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_rendertools.cpp" bodystart="1891" bodyend="1915"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1adacad387c149aa2d570382aaf219efff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_AddDebugPolygon</definition>
        <argsstring>(const idVec4 &amp;color, const idWinding &amp;winding, const int lifeTime, const bool depthTest)</argsstring>
        <name>RB_AddDebugPolygon</name>
        <param>
          <type>const <ref refid="classid_vec4" kindref="compound">idVec4</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>const <ref refid="classid_winding" kindref="compound">idWinding</ref> &amp;</type>
          <declname>winding</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>lifeTime</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>depthTest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1589" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_rendertools.cpp" bodystart="2039" bodyend="2049"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a5dc7d83010c455f4352ccf31feed0a61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_ClearDebugPolygons</definition>
        <argsstring>(int time)</argsstring>
        <name>RB_ClearDebugPolygons</name>
        <param>
          <type>int</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1590" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_rendertools.cpp" bodystart="2007" bodyend="2032"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a9297706aca4478d5b1ee926b0dcec2f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_DrawBounds</definition>
        <argsstring>(const idBounds &amp;bounds)</argsstring>
        <name>RB_DrawBounds</name>
        <param>
          <type>const <ref refid="classid_bounds" kindref="compound">idBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1591" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_rendertools.cpp" bodystart="86" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a4ec051049917f6025369a22bd9f61d83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_ShowLights</definition>
        <argsstring>(drawSurf_t **drawSurfs, int numDrawSurfs)</argsstring>
        <name>RB_ShowLights</name>
        <param>
          <type><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref> **</type>
          <declname>drawSurfs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numDrawSurfs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1592" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a1c94a9a97cbd9338a1f158a3c1ac9210" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_ShowLightCount</definition>
        <argsstring>(drawSurf_t **drawSurfs, int numDrawSurfs)</argsstring>
        <name>RB_ShowLightCount</name>
        <param>
          <type><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref> **</type>
          <declname>drawSurfs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numDrawSurfs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1593" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a1742dfa0eae44715bd08068277a5ca7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_PolygonClear</definition>
        <argsstring>(void)</argsstring>
        <name>RB_PolygonClear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1594" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_rendertools.cpp" bodystart="168" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1aa0b2a2588d368a402a1876cd7e0a6e25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_ScanStencilBuffer</definition>
        <argsstring>(void)</argsstring>
        <name>RB_ScanStencilBuffer</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1595" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_rendertools.cpp" bodystart="204" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ac255fbe8b27bb3abd52ec0142315c2e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_ShowDestinationAlpha</definition>
        <argsstring>(void)</argsstring>
        <name>RB_ShowDestinationAlpha</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1596" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_rendertools.cpp" bodystart="191" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ac1745811e9ba2c73b28c2f8067ccdf85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_ShowOverdraw</definition>
        <argsstring>(void)</argsstring>
        <name>RB_ShowOverdraw</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1597" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_rendertools.cpp" bodystart="302" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ab6852453e70b5b5fb9f86b085968f218" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_RenderDebugTools</definition>
        <argsstring>(drawSurf_t **drawSurfs, int numDrawSurfs)</argsstring>
        <name>RB_RenderDebugTools</name>
        <param>
          <type><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref> **</type>
          <declname>drawSurfs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numDrawSurfs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1598" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_rendertools.cpp" bodystart="2329" bodyend="2374"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a5956e6f341498d0821bf056cd14e4465" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_ShutdownDebugTools</definition>
        <argsstring>(void)</argsstring>
        <name>RB_ShutdownDebugTools</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1599" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_rendertools.cpp" bodystart="2381" bodyend="2385"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a05eeb78953ffd94bb62e91c96df2981c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_SetDefaultGLState</definition>
        <argsstring>(void)</argsstring>
        <name>RB_SetDefaultGLState</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1609" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_backend.cpp" bodystart="46" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ad047a44ed44ad36d872978400ad0509a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_SetGL2D</definition>
        <argsstring>(void)</argsstring>
        <name>RB_SetGL2D</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1610" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_backend.cpp" bodystart="423" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a448a2d2513baee4d46ff855d378dbe1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_LogComment</definition>
        <argsstring>(const char *comment,...) id_attribute((format(printf</argsstring>
        <name>RB_LogComment</name>
        <param>
          <type>const char *</type>
          <declname>comment</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1613" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a6f4e9c4cc0bb01a19e28ed3253e52cb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void void</type>
        <definition>void void RB_ShowImages</definition>
        <argsstring>(void)</argsstring>
        <name>RB_ShowImages</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1615" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_backend.cpp" bodystart="490" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1acfc8b1ec27e334e8685d966a81f7e322" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_ExecuteBackEndCommands</definition>
        <argsstring>(const emptyCommand_t *cmds)</argsstring>
        <name>RB_ExecuteBackEndCommands</name>
        <param>
          <type>const <ref refid="structempty_command__t" kindref="compound">emptyCommand_t</ref> *</type>
          <declname>cmds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1617" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_backend.cpp" bodystart="600" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1ab5b9fdecc71f10598beb4f4990f11f42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_SurfaceToTextureAxis</definition>
        <argsstring>(const srfTriangles_t *tri, idVec3 &amp;origin, idVec3 axis[3])</argsstring>
        <name>R_SurfaceToTextureAxis</name>
        <param>
          <type>const <ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type><ref refid="classid_vec3" kindref="compound">idVec3</ref></type>
          <declname>axis</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1628" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_guisurf.cpp" bodystart="49" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a039927fe2b819c63ce667b6ff306828a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_RenderGuiSurf</definition>
        <argsstring>(idUserInterface *gui, drawSurf_t *drawSurf)</argsstring>
        <name>R_RenderGuiSurf</name>
        <param>
          <type><ref refid="classid_user_interface" kindref="compound">idUserInterface</ref> *</type>
          <declname>gui</declname>
        </param>
        <param>
          <type><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref> *</type>
          <declname>drawSurf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1629" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_guisurf.cpp" bodystart="128" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a0fd99e95b708416b54ef3e8ae6fb2e34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_OrderIndexes</definition>
        <argsstring>(int numIndexes, glIndex_t *indexes)</argsstring>
        <name>R_OrderIndexes</name>
        <param>
          <type>int</type>
          <declname>numIndexes</declname>
        </param>
        <param>
          <type>glIndex_t *</type>
          <declname>indexes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1639" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_orderIndexes.cpp" bodystart="89" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a54b7fe04af3e6493d76f1ffa877f6c44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void R_DeformDrawSurf</definition>
        <argsstring>(drawSurf_t *drawSurf)</argsstring>
        <name>R_DeformDrawSurf</name>
        <param>
          <type><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref> *</type>
          <declname>drawSurf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1649" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_deform.cpp" bodystart="1228" bodyend="1267"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1aeaca0926985c5d804808342159cfbecf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlocal_trace__t" kindref="compound">localTrace_t</ref></type>
        <definition>localTrace_t R_LocalTrace</definition>
        <argsstring>(const idVec3 &amp;start, const idVec3 &amp;end, const float radius, const srfTriangles_t *tri)</argsstring>
        <name>R_LocalTrace</name>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="classid_vec3" kindref="compound">idVec3</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>const <ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref> *</type>
          <declname>tri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1667" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trace.cpp" bodystart="43" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1a45b4b55adcd7a448b1b966817c0eb32c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RB_ShowTrace</definition>
        <argsstring>(drawSurf_t **drawSurfs, int numDrawSurfs)</argsstring>
        <name>RB_ShowTrace</name>
        <param>
          <type><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref> **</type>
          <declname>drawSurfs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numDrawSurfs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1668" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_trace.cpp" bodystart="353" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="tr__local_8h_1acf4fa7173498a5913932548e76adc4fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classid_screen_rect" kindref="compound">idScreenRect</ref></type>
        <definition>idScreenRect R_CalcIntersectionScissor</definition>
        <argsstring>(const idRenderLightLocal *lightDef, const idRenderEntityLocal *entityDef, const viewDef_t *viewDef)</argsstring>
        <name>R_CalcIntersectionScissor</name>
        <param>
          <type>const <ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref> *</type>
          <declname>lightDef</declname>
        </param>
        <param>
          <type>const <ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref> *</type>
          <declname>entityDef</declname>
        </param>
        <param>
          <type>const <ref refid="structview_def__s" kindref="compound">viewDef_t</ref> *</type>
          <declname>viewDef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h" line="1677" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/renderer/tr_shadowbounds.cpp" bodystart="530" bodyend="638"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__TR_LOCAL_H__</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__TR_LOCAL_H__</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Image.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MegaTexture.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classid_render_world_local" kindref="compound">idRenderWorldLocal</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>everything<sp/>that<sp/>is<sp/>needed<sp/>by<sp/>the<sp/>backend<sp/>needs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>double<sp/>buffered<sp/>to<sp/>allow<sp/>it<sp/>to<sp/>run<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>parallel<sp/>on<sp/>a<sp/>dual<sp/>cpu<sp/>machine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SMP_FRAMES<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FALLOFF_TEXTURE_SIZE<sp/>=<sp/><sp/><sp/><sp/>64;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>DEFAULT_FOG_DISTANCE<sp/>=<sp/>500.0f;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FOG_ENTER_SIZE<sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>FOG_ENTER<sp/>=<sp/>(FOG_ENTER_SIZE+1.0f)/(FOG_ENTER_SIZE*2);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>picky<sp/>to<sp/>get<sp/>the<sp/>bilerp<sp/>correct<sp/>at<sp/>terminator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>idScreenRect<sp/>gets<sp/>carried<sp/>around<sp/>with<sp/>each<sp/>drawSurf,<sp/>so<sp/>it<sp/>makes<sp/>sense</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>keep<sp/>it<sp/>compact,<sp/>instead<sp/>of<sp/>just<sp/>using<sp/>the<sp/>idBounds<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classid_screen_rect" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classid_screen_rect" kindref="compound">idScreenRect</ref><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1,<sp/>y1,<sp/>x2,<sp/>y2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inclusive<sp/>pixel<sp/>bounds<sp/>inside<sp/>viewport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zmin,<sp/>zmax;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>depth<sp/>bounds<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Clear();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>to<sp/>backwards<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddPoint(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adds<sp/>a<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Expand();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>expand<sp/>by<sp/>one<sp/>pixel<sp/>each<sp/>way<sp/>to<sp/>fix<sp/>roundoffs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Intersect(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_screen_rect" kindref="compound">idScreenRect</ref><sp/>&amp;rect<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Union(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_screen_rect" kindref="compound">idScreenRect</ref><sp/>&amp;rect<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Equals(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_screen_rect" kindref="compound">idScreenRect</ref><sp/>&amp;rect<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsEmpty()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="classid_screen_rect" kindref="compound">idScreenRect</ref><sp/>R_ScreenRectFromViewFrustumBounds(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_bounds" kindref="compound">idBounds</ref><sp/>&amp;bounds<sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_ShowColoredScreenRect(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_screen_rect" kindref="compound">idScreenRect</ref><sp/>&amp;rect,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colorIndex<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>DC_BAD,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>DC_RENDERVIEW,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>DC_UPDATE_ENTITYDEF,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>DC_DELETE_ENTITYDEF,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>DC_UPDATE_LIGHTDEF,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>DC_DELETE_LIGHTDEF,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>DC_LOADMAP,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>DC_CROP_RENDER,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>DC_UNCROP_RENDER,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>DC_CAPTURE_RENDER,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>DC_END_FRAME,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>DC_DEFINE_MODEL,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>DC_SET_PORTAL_STATE,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>DC_UPDATE_SOUNDOCCLUSION,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>DC_GUI_MODEL</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}<sp/>demoCommand_t;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="89"><highlight class="comment">==============================================================================</highlight></codeline>
<codeline lineno="90"><highlight class="comment"></highlight></codeline>
<codeline lineno="91"><highlight class="comment">SURFACES</highlight></codeline>
<codeline lineno="92"><highlight class="comment"></highlight></codeline>
<codeline lineno="93"><highlight class="comment">==============================================================================</highlight></codeline>
<codeline lineno="94"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ModelDecal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ModelOverlay.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Interaction.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>drawSurf_t<sp/>structures<sp/>command<sp/>the<sp/>back<sp/>end<sp/>to<sp/>render<sp/>surfaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>given<sp/>srfTriangles_t<sp/>may<sp/>be<sp/>used<sp/>with<sp/>multiple<sp/>viewEntity_t,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>when<sp/>viewed<sp/>in<sp/>a<sp/>subview<sp/>or<sp/>multiple<sp/>viewport<sp/>render,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>multiple<sp/>shaders<sp/>when<sp/>skinned,<sp/>or,<sp/>possibly<sp/>with<sp/>multiple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>lights,<sp/>although<sp/>currently<sp/>each<sp/>lighting<sp/>interaction<sp/>creates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unique<sp/>srfTriangles_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>drawSurf_t<sp/>are<sp/>always<sp/>allocated<sp/>and<sp/>freed<sp/>every<sp/>frame,<sp/>they<sp/>are<sp/>never<sp/>cached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>DSF_VIEW_INSIDE_SHADOW<sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="structdraw_surf__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdraw_surf__s" kindref="compound">drawSurf_s</ref><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/><sp/><sp/><sp/>*geo;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structview_entity__s" kindref="compound">viewEntity_s</ref><sp/>*space;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*material;<sp/><sp/></highlight><highlight class="comment">//<sp/>may<sp/>be<sp/>NULL<sp/>for<sp/>shadow<sp/>volumes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>material-&gt;sort,<sp/>modified<sp/>by<sp/>gui<sp/>/<sp/>entity<sp/>sort<sp/>offsets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*shaderRegisters;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>evaluated<sp/>and<sp/>adjusted<sp/>for<sp/>referenceShaders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdraw_surf__s" kindref="compound">drawSurf_s</ref><sp/>*nextOnLight;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>viewLight<sp/>chains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_screen_rect" kindref="compound">idScreenRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scissorRect;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>scissor<sp/>clipping,<sp/>local<sp/>inside<sp/>renderView<sp/>viewport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsFlags;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DSF_VIEW_INSIDE_SHADOW,<sp/>etc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvert_cache__s" kindref="compound">vertCache_s</ref><sp/><sp/><sp/><sp/><sp/><sp/>*dynamicTexCoords;<sp/><sp/></highlight><highlight class="comment">//<sp/>float<sp/>*<sp/>in<sp/>vertex<sp/>cache<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>specular<sp/>directions<sp/>for<sp/>non<sp/>vertex<sp/>program<sp/>cards,<sp/>skybox<sp/>texcoords,<sp/>etc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">}<sp/><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="structshadow_frustum__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>numPlanes;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>always<sp/>6<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/>planes[6];</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>positive<sp/>sides<sp/>facing<sp/>inward</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>plane<sp/>5<sp/>is<sp/>always<sp/>the<sp/>plane<sp/>the<sp/>projection<sp/>is<sp/>going<sp/>to,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>other<sp/>planes<sp/>are<sp/>just<sp/>clip<sp/>planes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>planes<sp/>are<sp/>in<sp/>global<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>makeClippedPlanes;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>projected<sp/>light<sp/>with<sp/>a<sp/>single<sp/>frustum<sp/>needs<sp/>to<sp/>make<sp/>sil<sp/>planes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>triangles<sp/>that<sp/>clip<sp/>against<sp/>side<sp/>planes,<sp/>but<sp/>a<sp/>point<sp/>light</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>has<sp/>adjacent<sp/>frustums<sp/>doesn&apos;t<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">}<sp/><ref refid="structshadow_frustum__t" kindref="compound">shadowFrustum_t</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>areas<sp/>have<sp/>references<sp/>to<sp/>hold<sp/>all<sp/>the<sp/>lights<sp/>and<sp/>entities<sp/>in<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="structarea_reference__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarea_reference__s" kindref="compound">areaReference_s</ref><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarea_reference__s" kindref="compound">areaReference_s</ref><sp/>*areaNext;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>chain<sp/>in<sp/>the<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarea_reference__s" kindref="compound">areaReference_s</ref><sp/>*areaPrev;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structarea_reference__s" kindref="compound">areaReference_s</ref><sp/>*ownerNext;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>chain<sp/>on<sp/>either<sp/>the<sp/>entityDef<sp/>or<sp/>lightDef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref><sp/>*<sp/><sp/><sp/>entity;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>one<sp/>of<sp/>entity<sp/>/<sp/>light<sp/>will<sp/>be<sp/>non-NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref><sp/>*<sp/><sp/><sp/><sp/>light;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>one<sp/>of<sp/>entity<sp/>/<sp/>light<sp/>will<sp/>be<sp/>non-NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structportal_area__s" kindref="compound">portalArea_s</ref><sp/>*<sp/><sp/><sp/>area;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>owners<sp/>can<sp/>find<sp/>all<sp/>the<sp/>areas<sp/>they<sp/>are<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">}<sp/><ref refid="structarea_reference__s" kindref="compound">areaReference_t</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/>idRenderLight<sp/>should<sp/>become<sp/>the<sp/>new<sp/>public<sp/>interface<sp/>replacing<sp/>the<sp/>qhandle_t<sp/>to<sp/>light<sp/>defs<sp/>in<sp/>the<sp/>idRenderWorld<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="classid_render_light" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classid_render_light" kindref="compound">idRenderLight</ref><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~<ref refid="classid_render_light" kindref="compound">idRenderLight</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreeRenderLight()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateRenderLight(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structrender_light__s" kindref="compound">renderLight_t</ref><sp/>*re,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>forceUpdate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetRenderLight(<sp/><ref refid="structrender_light__s" kindref="compound">renderLight_t</ref><sp/>*re<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ForceUpdate()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetIndex()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">};</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//<sp/>idRenderEntity<sp/>should<sp/>become<sp/>the<sp/>new<sp/>public<sp/>interface<sp/>replacing<sp/>the<sp/>qhandle_t<sp/>to<sp/>entity<sp/>defs<sp/>in<sp/>the<sp/>idRenderWorld<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classid_render_entity" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classid_render_entity" kindref="compound">idRenderEntity</ref><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~<ref refid="classid_render_entity" kindref="compound">idRenderEntity</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreeRenderEntity()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateRenderEntity(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structrender_entity__s" kindref="compound">renderEntity_t</ref><sp/>*re,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>forceUpdate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetRenderEntity(<sp/><ref refid="structrender_entity__s" kindref="compound">renderEntity_t</ref><sp/>*re<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ForceUpdate()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetIndex()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overlays<sp/>are<sp/>extra<sp/>polygons<sp/>that<sp/>deform<sp/>with<sp/>animating<sp/>models<sp/>for<sp/>blood<sp/>and<sp/>damage<sp/>marks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProjectOverlay(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/>localTextureAxis[2],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>*material<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RemoveDecals()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">};</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="classid_render_light_local" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classid_render_light" kindref="compound">idRenderLight</ref><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreeRenderLight();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateRenderLight(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structrender_light__s" kindref="compound">renderLight_t</ref><sp/>*re,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>forceUpdate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetRenderLight(<sp/><ref refid="structrender_light__s" kindref="compound">renderLight_t</ref><sp/>*re<sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ForceUpdate();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetIndex();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrender_light__s" kindref="compound">renderLight_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>specification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lightHasMoved;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>light<sp/>has<sp/>changed<sp/>its<sp/>position<sp/>since<sp/>it<sp/>was</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>added,<sp/>so<sp/>the<sp/>prelight<sp/>model<sp/>is<sp/>not<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modelMatrix[16];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>just<sp/>a<sp/>rearrangement<sp/>of<sp/>parms.axis<sp/>and<sp/>parms.origin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_render_world_local" kindref="compound">idRenderWorldLocal</ref><sp/>*<sp/><sp/><sp/><sp/>world;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>world<sp/>lightdefs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>areaNum;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>not<sp/>-1,<sp/>we<sp/>may<sp/>be<sp/>able<sp/>to<sp/>cull<sp/>all<sp/>the<sp/>light&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>interactions<sp/>if<sp/>!viewDef-&gt;connectedAreas[areaNum]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastModifiedFrameNum;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>determine<sp/>if<sp/>it<sp/>is<sp/>constantly<sp/>changing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>should<sp/>go<sp/>in<sp/>the<sp/>dynamic<sp/>frame<sp/>memory,<sp/>or<sp/>kept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>cached<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>archived;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>demo<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>derived<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lightProject[4];</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>lightShader;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>guaranteed<sp/>to<sp/>be<sp/>valid,<sp/>even<sp/>if<sp/>parms.shader<sp/>isn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>falloffImage;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalLightOrigin;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accounting<sp/>for<sp/>lightCenter<sp/>and<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frustum[6];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>global<sp/>space,<sp/>positive<sp/>side<sp/>facing<sp/>out,<sp/>last<sp/>two<sp/>are<sp/>front/back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_winding" kindref="compound">idWinding</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frustumWindings[6];<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>for<sp/>culling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frustumTris;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>triangulated<sp/>frustumWindings[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numShadowFrustums;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>for<sp/>projected<sp/>lights,<sp/>usually<sp/>six<sp/>for<sp/>point<sp/>lights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structshadow_frustum__t" kindref="compound">shadowFrustum_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shadowFrustums[6];</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewCount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>==<sp/>tr.viewCount,<sp/>the<sp/>light<sp/>is<sp/>on<sp/>the<sp/>viewDef-&gt;viewLights<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structview_light__s" kindref="compound">viewLight_s</ref><sp/>*<sp/><sp/><sp/><sp/>viewLight;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structarea_reference__s" kindref="compound">areaReference_t</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>references;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>each<sp/>area<sp/>the<sp/>light<sp/>is<sp/>present<sp/>in<sp/>will<sp/>have<sp/>a<sp/>lightRef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_interaction" kindref="compound">idInteraction</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstInteraction;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>doubly<sp/>linked<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_interaction" kindref="compound">idInteraction</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastInteraction;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdouble_portal__s" kindref="compound">doublePortal_s</ref><sp/>*<sp/>foggedPortals;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">};</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="classid_render_entity_local" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classid_render_entity" kindref="compound">idRenderEntity</ref><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref>();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreeRenderEntity();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateRenderEntity(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structrender_entity__s" kindref="compound">renderEntity_t</ref><sp/>*re,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>forceUpdate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetRenderEntity(<sp/><ref refid="structrender_entity__s" kindref="compound">renderEntity_t</ref><sp/>*re<sp/>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ForceUpdate();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetIndex();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overlays<sp/>are<sp/>extra<sp/>polygons<sp/>that<sp/>deform<sp/>with<sp/>animating<sp/>models<sp/>for<sp/>blood<sp/>and<sp/>damage<sp/>marks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProjectOverlay(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/>localTextureAxis[2],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>*material<sp/>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RemoveDecals();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrender_entity__s" kindref="compound">renderEntity_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modelMatrix[16];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>just<sp/>a<sp/>rearrangement<sp/>of<sp/>parms.axis<sp/>and<sp/>parms.origin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_render_world_local" kindref="compound">idRenderWorldLocal</ref><sp/>*<sp/><sp/><sp/><sp/>world;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>world<sp/>entityDefs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastModifiedFrameNum;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>determine<sp/>if<sp/>it<sp/>is<sp/>constantly<sp/>changing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>should<sp/>go<sp/>in<sp/>the<sp/>dynamic<sp/>frame<sp/>memory,<sp/>or<sp/>kept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>cached<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>archived;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>demo<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_render_model" kindref="compound">idRenderModel</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dynamicModel;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>parms.model-&gt;IsDynamicModel(),<sp/>this<sp/>is<sp/>the<sp/>generated<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dynamicModelFrameCount;<sp/></highlight><highlight class="comment">//<sp/>continuously<sp/>animating<sp/>dynamic<sp/>models<sp/>will<sp/>recreate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dynamicModel<sp/>if<sp/>this<sp/>doesn&apos;t<sp/>==<sp/>tr.viewCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_render_model" kindref="compound">idRenderModel</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cachedDynamicModel;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_bounds" kindref="compound">idBounds</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>referenceBounds;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>local<sp/>bounds<sp/>used<sp/>to<sp/>place<sp/>entityRefs,<sp/>either<sp/>from<sp/>parms<sp/>or<sp/>a<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>viewEntity_t<sp/>is<sp/>created<sp/>whenever<sp/>a<sp/>idRenderEntityLocal<sp/>is<sp/>considered<sp/>for<sp/>inclusion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>a<sp/>given<sp/>view,<sp/>even<sp/>if<sp/>it<sp/>turns<sp/>out<sp/>to<sp/>not<sp/>be<sp/>visible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewCount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>tr.viewCount<sp/>==<sp/>viewCount,<sp/>viewEntity<sp/>is<sp/>valid,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>the<sp/>entity<sp/>may<sp/>still<sp/>be<sp/>off<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structview_entity__s" kindref="compound">viewEntity_s</ref><sp/>*<sp/><sp/><sp/>viewEntity;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>frame<sp/>temporary<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visibleCount;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>tr.viewCount<sp/>==<sp/>visibleCount,<sp/>at<sp/>least<sp/>one<sp/>ambient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>surface<sp/>has<sp/>actually<sp/>been<sp/>added<sp/>by<sp/>R_AddAmbientDrawsurfs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>an<sp/>entity<sp/>could<sp/>still<sp/>be<sp/>in<sp/>the<sp/>view<sp/>frustum<sp/>and<sp/>not<sp/>be<sp/>visible<sp/>due</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>portal<sp/>passing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_render_model_decal" kindref="compound">idRenderModelDecal</ref><sp/>*<sp/><sp/><sp/><sp/>decals;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>chain<sp/>of<sp/>decals<sp/>that<sp/>have<sp/>been<sp/>projected<sp/>on<sp/>this<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_render_model_overlay" kindref="compound">idRenderModelOverlay</ref><sp/>*<sp/><sp/>overlay;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>blood<sp/>overlays<sp/>on<sp/>animated<sp/>models</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structarea_reference__s" kindref="compound">areaReference_t</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityRefs;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>chain<sp/>of<sp/>all<sp/>references</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_interaction" kindref="compound">idInteraction</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstInteraction;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>doubly<sp/>linked<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_interaction" kindref="compound">idInteraction</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastInteraction;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>needsPortalSky;</highlight></codeline>
<codeline lineno="290"><highlight class="normal">};</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">//<sp/>viewLights<sp/>are<sp/>allocated<sp/>on<sp/>the<sp/>frame<sp/>temporary<sp/>stack<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>viewLight<sp/>contains<sp/>everything<sp/>that<sp/>the<sp/>back<sp/>end<sp/>needs<sp/>out<sp/>of<sp/>an<sp/>idRenderLightLocal,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>the<sp/>front<sp/>end<sp/>may<sp/>be<sp/>modifying<sp/>simultaniously<sp/>if<sp/>running<sp/>in<sp/>SMP<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>viewLight<sp/>may<sp/>exist<sp/>even<sp/>without<sp/>any<sp/>surfaces,<sp/>and<sp/>may<sp/>be<sp/>relevent<sp/>for<sp/>fogging,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>should<sp/>never<sp/>exist<sp/>if<sp/>its<sp/>volume<sp/>does<sp/>not<sp/>intersect<sp/>the<sp/>view<sp/>frustum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="structview_light__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structview_light__s" kindref="compound">viewLight_s</ref><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structview_light__s" kindref="compound">viewLight_s</ref><sp/>*<sp/><sp/><sp/><sp/>next;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>back<sp/>end<sp/>should<sp/>NOT<sp/>reference<sp/>the<sp/>lightDef,<sp/>because<sp/>it<sp/>can<sp/>change<sp/>when<sp/>running<sp/>SMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref><sp/>*<sp/><sp/><sp/><sp/>lightDef;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>scissor<sp/>clipping,<sp/>local<sp/>inside<sp/>renderView<sp/>viewport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scissorRect.Empty()<sp/>is<sp/>true<sp/>if<sp/>the<sp/>viewEntity_t<sp/>was<sp/>never<sp/>actually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>seen<sp/>through<sp/>any<sp/>portals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_screen_rect" kindref="compound">idScreenRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scissorRect;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>view<sp/>isn&apos;t<sp/>inside<sp/>the<sp/>light,<sp/>we<sp/>can<sp/>use<sp/>the<sp/>non-reversed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shadow<sp/>drawing,<sp/>avoiding<sp/>the<sp/>draws<sp/>of<sp/>the<sp/>front<sp/>and<sp/>rear<sp/>caps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewInsideLight;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>true<sp/>if<sp/>globalLightOrigin<sp/>is<sp/>inside<sp/>the<sp/>view<sp/>frustum,<sp/>even<sp/>if<sp/>it<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>obscured<sp/>by<sp/>geometry.<sp/><sp/>This<sp/>allows<sp/>us<sp/>to<sp/>skip<sp/>shadows<sp/>from<sp/>non-visible<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewSeesGlobalLightOrigin;<sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>!viewInsideLight,<sp/>the<sp/>corresponding<sp/>bit<sp/>for<sp/>each<sp/>of<sp/>the<sp/>shadowFrustum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>projection<sp/>planes<sp/>that<sp/>the<sp/>view<sp/>is<sp/>on<sp/>the<sp/>negative<sp/>side<sp/>of<sp/>will<sp/>be<sp/>set,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allowing<sp/>us<sp/>to<sp/>skip<sp/>drawing<sp/>the<sp/>projected<sp/>caps<sp/>of<sp/>shadows<sp/>if<sp/>we<sp/>can&apos;t<sp/>see<sp/>the<sp/>face</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewSeesShadowPlaneBits;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalLightOrigin;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>global<sp/>light<sp/>origin<sp/>used<sp/>by<sp/>backend</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lightProject[4];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>light<sp/>project<sp/>used<sp/>by<sp/>backend</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fogPlane;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fog<sp/>plane<sp/>for<sp/>backend<sp/>fog<sp/>volume<sp/>rendering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*<sp/><sp/>frustumTris;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>light<sp/>frustum<sp/>for<sp/>backend<sp/>fog<sp/>volume<sp/>rendering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>lightShader;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>light<sp/>shader<sp/>used<sp/>by<sp/>backend</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shaderRegisters;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shader<sp/>registers<sp/>used<sp/>by<sp/>backend</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>falloffImage;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>falloff<sp/>image<sp/>used<sp/>by<sp/>backend</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdraw_surf__s" kindref="compound">drawSurf_s</ref><sp/>*globalShadows;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shadow<sp/>everything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdraw_surf__s" kindref="compound">drawSurf_s</ref><sp/>*localInteractions;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>get<sp/>local<sp/>shadows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdraw_surf__s" kindref="compound">drawSurf_s</ref><sp/>*localShadows;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>shadow<sp/>local<sp/>Surfaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdraw_surf__s" kindref="compound">drawSurf_s</ref><sp/>*globalInteractions;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>shadows<sp/>from<sp/>everything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdraw_surf__s" kindref="compound">drawSurf_s</ref><sp/>*translucentInteractions;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>shadows<sp/>from<sp/>everything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal">}<sp/><ref refid="structview_light__s" kindref="compound">viewLight_t</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>viewEntity<sp/>is<sp/>created<sp/>whenever<sp/>a<sp/>idRenderEntityLocal<sp/>is<sp/>considered<sp/>for<sp/>inclusion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>current<sp/>view,<sp/>but<sp/>it<sp/>may<sp/>still<sp/>turn<sp/>out<sp/>to<sp/>be<sp/>culled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">//<sp/>viewEntity<sp/>are<sp/>allocated<sp/>on<sp/>the<sp/>frame<sp/>temporary<sp/>stack<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>viewEntity<sp/>contains<sp/>everything<sp/>that<sp/>the<sp/>back<sp/>end<sp/>needs<sp/>out<sp/>of<sp/>a<sp/>idRenderEntityLocal,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>the<sp/>front<sp/>end<sp/>may<sp/>be<sp/>modifying<sp/>simultaniously<sp/>if<sp/>running<sp/>in<sp/>SMP<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>single<sp/>entityDef<sp/>can<sp/>generate<sp/>multiple<sp/>viewEntity_t<sp/>in<sp/>a<sp/>single<sp/>frame,<sp/>as<sp/>when<sp/>seen<sp/>in<sp/>a<sp/>mirror</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="structview_entity__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structview_entity__s" kindref="compound">viewEntity_s</ref><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structview_entity__s" kindref="compound">viewEntity_s</ref><sp/>*next;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>back<sp/>end<sp/>should<sp/>NOT<sp/>reference<sp/>the<sp/>entityDef,<sp/>because<sp/>it<sp/>can<sp/>change<sp/>when<sp/>running<sp/>SMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref><sp/>*entityDef;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>scissor<sp/>clipping,<sp/>local<sp/>inside<sp/>renderView<sp/>viewport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scissorRect.Empty()<sp/>is<sp/>true<sp/>if<sp/>the<sp/>viewEntity_t<sp/>was<sp/>never<sp/>actually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>seen<sp/>through<sp/>any<sp/>portals,<sp/>but<sp/>was<sp/>created<sp/>for<sp/>shadow<sp/>casting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>viewEntity<sp/>can<sp/>have<sp/>a<sp/>non-empty<sp/>scissorRect,<sp/>meaning<sp/>that<sp/>an<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>it<sp/>is<sp/>in<sp/>is<sp/>visible,<sp/>and<sp/>still<sp/>not<sp/>be<sp/>visible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_screen_rect" kindref="compound">idScreenRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scissorRect;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weaponDepthHack;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modelDepthHack;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modelMatrix[16];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>local<sp/>coords<sp/>to<sp/>global<sp/>coords</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modelViewMatrix[16];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>local<sp/>coords<sp/>to<sp/>eye<sp/>coords</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal">}<sp/><ref refid="structview_entity__s" kindref="compound">viewEntity_t</ref>;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>MAX_CLIP_PLANES<sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>may<sp/>expand<sp/>this<sp/>to<sp/>six<sp/>for<sp/>some<sp/>subview<sp/>issues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="comment">//<sp/>viewDefs<sp/>are<sp/>allocated<sp/>on<sp/>the<sp/>frame<sp/>temporary<sp/>stack<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="structview_def__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structview_def__s" kindref="compound">viewDef_s</ref><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>specified<sp/>in<sp/>the<sp/>call<sp/>to<sp/>DrawScene()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrender_view__s" kindref="compound">renderView_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderView;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>projectionMatrix[16];</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structview_entity__s" kindref="compound">viewEntity_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worldSpace;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_render_world_local" kindref="compound">idRenderWorldLocal</ref><sp/>*renderWorld;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>floatTime;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialViewAreaOrigin;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>find<sp/>the<sp/>portalArea<sp/>that<sp/>view<sp/>flooding<sp/>will<sp/>take<sp/>place<sp/>from.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>a<sp/>normal<sp/>view,<sp/>the<sp/>initialViewOrigin<sp/>will<sp/>be<sp/>renderView.viewOrg,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>a<sp/>mirror<sp/>may<sp/>put<sp/>the<sp/>projection<sp/>origin<sp/>outside</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>any<sp/>valid<sp/>area,<sp/>or<sp/>in<sp/>an<sp/>unconnected<sp/>area<sp/>of<sp/>the<sp/>map,<sp/>so<sp/>the<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>area<sp/>must<sp/>be<sp/>based<sp/>on<sp/>a<sp/>point<sp/>just<sp/>off<sp/>the<sp/>surface<sp/>of<sp/>the<sp/>mirror<sp/>/<sp/>subview.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>may<sp/>be<sp/>possible<sp/>to<sp/>get<sp/>a<sp/>failed<sp/>portal<sp/>pass<sp/>if<sp/>the<sp/>plane<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mirror<sp/>intersects<sp/>a<sp/>portal,<sp/>and<sp/>the<sp/>initialViewAreaOrigin<sp/>is<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>different<sp/>side<sp/>than<sp/>the<sp/>renderView.viewOrg<sp/>is.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isSubview;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>true<sp/>if<sp/>this<sp/>view<sp/>is<sp/>not<sp/>the<sp/>main<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isMirror;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>portal<sp/>is<sp/>a<sp/>mirror,<sp/>invert<sp/>the<sp/>face<sp/>culling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isXraySubview;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isEditor;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numClipPlanes;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mirrors<sp/>will<sp/>often<sp/>use<sp/>a<sp/>single<sp/>clip<sp/>plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipPlanes[MAX_CLIP_PLANES];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>world<sp/>space,<sp/>the<sp/>positive<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>plane<sp/>is<sp/>the<sp/>visible<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_screen_rect" kindref="compound">idScreenRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>real<sp/>pixels<sp/>and<sp/>proper<sp/>Y<sp/>flip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_screen_rect" kindref="compound">idScreenRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scissor;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>scissor<sp/>clipping,<sp/>local<sp/>inside<sp/>renderView<sp/>viewport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>subviews<sp/>may<sp/>only<sp/>be<sp/>rendering<sp/>part<sp/>of<sp/>the<sp/>main<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>are<sp/>real<sp/>physical<sp/>pixel<sp/>values,<sp/>possibly<sp/>scaled<sp/>and<sp/>offset<sp/>from<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>renderView<sp/>x/y/width/height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structview_def__s" kindref="compound">viewDef_s</ref><sp/>*<sp/><sp/>superView;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>never<sp/>go<sp/>into<sp/>an<sp/>infinite<sp/>subview<sp/>loop<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdraw_surf__s" kindref="compound">drawSurf_s</ref><sp/>*<sp/>subviewSurface;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>drawSurfs<sp/>are<sp/>the<sp/>visible<sp/>surfaces<sp/>of<sp/>the<sp/>viewEntities,<sp/>sorted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>material<sp/>sort<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawSurfs;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>don&apos;t<sp/>use<sp/>an<sp/>idList<sp/>for<sp/>this,<sp/>because</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numDrawSurfs;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>allocated<sp/>in<sp/>frame<sp/>temporary<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxDrawSurfs;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>may<sp/>be<sp/>resized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structview_light__s" kindref="compound">viewLight_s</ref><sp/><sp/>*viewLights;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>chain<sp/>of<sp/>all<sp/>viewLights<sp/>effecting<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structview_entity__s" kindref="compound">viewEntity_s</ref><sp/>*viewEntitys;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>chain<sp/>of<sp/>all<sp/>viewEntities<sp/>effecting<sp/>view,<sp/>including<sp/>off<sp/>screen<sp/>ones<sp/>casting<sp/>shadows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>use<sp/>viewEntities<sp/>as<sp/>a<sp/>check<sp/>to<sp/>see<sp/>if<sp/>a<sp/>given<sp/>view<sp/>consists<sp/>solely</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>2D<sp/>rendering,<sp/>which<sp/>we<sp/>can<sp/>optimize<sp/>in<sp/>certain<sp/>ways.<sp/><sp/>A<sp/>2D<sp/>view<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>have<sp/>any<sp/>viewEntities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frustum[5];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>positive<sp/>sides<sp/>face<sp/>outward,<sp/>[4]<sp/>is<sp/>the<sp/>front<sp/>clip<sp/>plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_frustum" kindref="compound">idFrustum</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewFrustum;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>areaNum;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-1<sp/>=<sp/>not<sp/>in<sp/>a<sp/>valid<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connectedAreas;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>An<sp/>array<sp/>in<sp/>frame<sp/>temporary<sp/>memory<sp/>that<sp/>lists<sp/>if<sp/>an<sp/>area<sp/>can<sp/>be<sp/>reached<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>crossing<sp/>a<sp/>closed<sp/>door.<sp/><sp/>This<sp/>is<sp/>used<sp/>to<sp/>avoid<sp/>drawing<sp/>interactions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>the<sp/>light<sp/>is<sp/>behind<sp/>a<sp/>closed<sp/>door.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal">}<sp/><ref refid="structview_def__s" kindref="compound">viewDef_t</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment">//<sp/>complex<sp/>light<sp/>/<sp/>surface<sp/>interactions<sp/>are<sp/>broken<sp/>up<sp/>into<sp/>multiple<sp/>passes<sp/>of<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="comment">//<sp/>simple<sp/>interaction<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436" refid="structdraw_interaction__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref><sp/>*<sp/><sp/>surf;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lightImage;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lightFalloffImage;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bumpImage;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffuseImage;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specularImage;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffuseColor;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>may<sp/>have<sp/>a<sp/>light<sp/>color<sp/>baked<sp/>into<sp/>it,<sp/>will<sp/>be<sp/>&lt;<sp/>tr.backEndRendererMaxLight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specularColor;<sp/><sp/></highlight><highlight class="comment">//<sp/>may<sp/>have<sp/>a<sp/>light<sp/>color<sp/>baked<sp/>into<sp/>it,<sp/>will<sp/>be<sp/>&lt;<sp/>tr.backEndRendererMaxLight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>stageVertexColor_t<sp/><sp/>vertexColor;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>applies<sp/>to<sp/>both<sp/>diffuse<sp/>and<sp/>specular</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ambientLight;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>tr.ambientNormalMap<sp/>instead<sp/>of<sp/>normalization<sp/>cube<sp/>map<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(not<sp/>a<sp/>bool<sp/>just<sp/>to<sp/>avoid<sp/>an<sp/>uninitialized<sp/>memory<sp/>check<sp/>of<sp/>the<sp/>pad<sp/>region<sp/>by<sp/>valgrind)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>are<sp/>loaded<sp/>into<sp/>the<sp/>vertex<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localLightOrigin;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localViewOrigin;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lightProjection[4];<sp/></highlight><highlight class="comment">//<sp/>in<sp/>local<sp/>coordinates,<sp/>possibly<sp/>with<sp/>a<sp/>texture<sp/>matrix<sp/>baked<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bumpMatrix[2];</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffuseMatrix[2];</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specularMatrix[2];</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}<sp/><ref refid="structdraw_interaction__t" kindref="compound">drawInteraction_t</ref>;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="463"><highlight class="comment">=============================================================</highlight></codeline>
<codeline lineno="464"><highlight class="comment"></highlight></codeline>
<codeline lineno="465"><highlight class="comment">RENDERER<sp/>BACK<sp/>END<sp/>COMMAND<sp/>QUEUE</highlight></codeline>
<codeline lineno="466"><highlight class="comment"></highlight></codeline>
<codeline lineno="467"><highlight class="comment">TR_CMDS</highlight></codeline>
<codeline lineno="468"><highlight class="comment"></highlight></codeline>
<codeline lineno="469"><highlight class="comment">=============================================================</highlight></codeline>
<codeline lineno="470"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>RC_NOP,</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>RC_DRAW_VIEW,</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>RC_SET_BUFFER,</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>RC_COPY_RENDER,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>RC_SWAP_BUFFERS<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>just<sp/>assume<sp/>swap<sp/>at<sp/>end<sp/>of<sp/>list<sp/>because</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>forced<sp/>list<sp/>submission<sp/>before<sp/>syncs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal">}<sp/>renderCommand_t;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481" refid="structempty_command__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>renderCommand_t<sp/><sp/><sp/><sp/><sp/>commandId,<sp/>*next;</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}<sp/><ref refid="structempty_command__t" kindref="compound">emptyCommand_t</ref>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485" refid="structset_buffer_command__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>renderCommand_t<sp/><sp/><sp/><sp/><sp/>commandId,<sp/>*next;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>GLenum<sp/><sp/>buffer;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>frameCount;</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}<sp/><ref refid="structset_buffer_command__t" kindref="compound">setBufferCommand_t</ref>;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491" refid="structdraw_surfs_command__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>renderCommand_t<sp/><sp/><sp/><sp/><sp/>commandId,<sp/>*next;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structview_def__s" kindref="compound">viewDef_t</ref><sp/><sp/><sp/>*viewDef;</highlight></codeline>
<codeline lineno="494"><highlight class="normal">}<sp/><ref refid="structdraw_surfs_command__t" kindref="compound">drawSurfsCommand_t</ref>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496" refid="structcopy_render_command__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>renderCommand_t<sp/><sp/><sp/><sp/><sp/>commandId,<sp/>*next;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>x,<sp/>y,<sp/>imageWidth,<sp/>imageHeight;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/>*image;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>cubeFace;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>copying<sp/>to<sp/>a<sp/>cubeMap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal">}<sp/><ref refid="structcopy_render_command__t" kindref="compound">copyRenderCommand_t</ref>;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="comment">//=======================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>the<sp/>inital<sp/>allocation<sp/>for<sp/>max<sp/>number<sp/>of<sp/>drawsurfs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>a<sp/>given<sp/>view,<sp/>but<sp/>it<sp/>will<sp/>automatically<sp/>grow<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>INITIAL_DRAWSURFS<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x4000;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>request<sp/>for<sp/>frame<sp/>memory<sp/>will<sp/>never<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(until<sp/>malloc<sp/>fails),<sp/>but<sp/>it<sp/>may<sp/>force<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="comment">//<sp/>allocation<sp/>of<sp/>a<sp/>new<sp/>memory<sp/>block<sp/>that<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>discontinuous<sp/>with<sp/>the<sp/>existing<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514" refid="structframe_memory_block__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structframe_memory_block__s" kindref="compound">frameMemoryBlock_s</ref><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structframe_memory_block__s" kindref="compound">frameMemoryBlock_s</ref><sp/>*next;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>size;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>used;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>poop;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>that<sp/>base<sp/>is<sp/>16<sp/>byte<sp/>aligned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/><sp/>base[4];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dynamically<sp/>allocated<sp/>as<sp/>[size]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal">}<sp/><ref refid="structframe_memory_block__s" kindref="compound">frameMemoryBlock_t</ref>;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>of<sp/>the<sp/>information<sp/>needed<sp/>by<sp/>the<sp/>back<sp/>end<sp/>must<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="comment">//<sp/>contained<sp/>in<sp/>a<sp/>frameData_t.<sp/><sp/>This<sp/>entire<sp/>structure<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="comment">//<sp/>duplicated<sp/>so<sp/>the<sp/>front<sp/>and<sp/>back<sp/>end<sp/>can<sp/>run<sp/>in<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="comment">//<sp/>on<sp/>an<sp/>SMP<sp/>machine<sp/>(OBSOLETE:<sp/>this<sp/>capability<sp/>has<sp/>been<sp/>removed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526" refid="structframe_data__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>or<sp/>more<sp/>blocks<sp/>of<sp/>memory<sp/>for<sp/>all<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>temporary<sp/>allocations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structframe_memory_block__s" kindref="compound">frameMemoryBlock_t</ref><sp/><sp/>*memory;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alloc<sp/>will<sp/>point<sp/>somewhere<sp/>into<sp/>the<sp/>memory<sp/>chain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structframe_memory_block__s" kindref="compound">frameMemoryBlock_t</ref><sp/><sp/>*alloc;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*<sp/><sp/><sp/><sp/>firstDeferredFreeTriSurf;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*<sp/><sp/><sp/><sp/>lastDeferredFreeTriSurf;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memoryHighwater;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>max<sp/>used<sp/>on<sp/>any<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>currently<sp/>building<sp/>command<sp/>list<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>commands<sp/>can<sp/>be<sp/>inserted<sp/>at<sp/>the<sp/>front<sp/>if<sp/>needed,<sp/>as<sp/>for<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dynamically<sp/>generated<sp/>textures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structempty_command__t" kindref="compound">emptyCommand_t</ref><sp/><sp/>*cmdHead,<sp/>*cmdTail;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>may<sp/>be<sp/>of<sp/>other<sp/>command<sp/>type<sp/>based<sp/>on<sp/>commandId</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal">}<sp/><ref refid="structframe_data__t" kindref="compound">frameData_t</ref>;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><sp/><ref refid="structframe_data__t" kindref="compound">frameData_t</ref><sp/>*frameData;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="comment">//=======================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_LockSurfaceScene(<sp/><ref refid="structview_def__s" kindref="compound">viewDef_t</ref><sp/>*parms<sp/>);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_ClearCommandChain(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_AddDrawViewCmd(<sp/><ref refid="structview_def__s" kindref="compound">viewDef_t</ref><sp/>*parms<sp/>);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_ReloadGuis_f(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref><sp/>&amp;args<sp/>);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_ListGuis_f(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref><sp/>&amp;args<sp/>);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*R_GetCommandBuffer(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes<sp/>);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>allows<sp/>a<sp/>global<sp/>override<sp/>of<sp/>all<sp/>materials</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>R_GlobalShaderOverride(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>**shader<sp/>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>does<sp/>various<sp/>checks<sp/>before<sp/>calling<sp/>the<sp/>idDeclSkin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>*R_RemapShaderBySkin(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>*shader,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_decl_skin" kindref="compound">idDeclSkin</ref><sp/>*customSkin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>*customShader<sp/>);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="comment">//====================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="569"><highlight class="comment">**<sp/>performanceCounters_t</highlight></codeline>
<codeline lineno="570"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571" refid="structperformance_counters__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_sphere_cull_in,<sp/>c_sphere_cull_clip,<sp/>c_sphere_cull_out;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_box_cull_in,<sp/>c_box_cull_out;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_createInteractions;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>calls<sp/>to<sp/>idInteraction::CreateInteraction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_createLightTris;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_createShadowVolumes;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_generateMd5;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_entityDefCallbacks;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_alloc,<sp/>c_free;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>counts<sp/>for<sp/>R_StaticAllc/R_StaticFree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_visibleViewEntities;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_shadowViewEntities;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_viewLights;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_numViews;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>total<sp/>views<sp/>rendered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_deformedSurfaces;<sp/></highlight><highlight class="comment">//<sp/>idMD5Mesh::GenerateSurface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_deformedVerts;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>idMD5Mesh::GenerateSurface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_deformedIndexes;<sp/><sp/></highlight><highlight class="comment">//<sp/>idMD5Mesh::GenerateSurface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_tangentIndexes;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>R_DeriveTangents()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_entityUpdates,<sp/>c_lightUpdates,<sp/>c_entityReferences,<sp/>c_lightReferences;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_guiSurfs;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>frontEndMsec;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sum<sp/>of<sp/>time<sp/>in<sp/>all<sp/>RE_RenderScene&apos;s<sp/>in<sp/>a<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal">}<sp/><ref refid="structperformance_counters__t" kindref="compound">performanceCounters_t</ref>;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594" refid="structtmu__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>current2DMap;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>current3DMap;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>currentCubeMap;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>texEnv;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>textureType_t<sp/><sp/><sp/>textureType;</highlight></codeline>
<codeline lineno="600"><highlight class="normal">}<sp/><ref refid="structtmu__t" kindref="compound">tmu_t</ref>;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAX_MULTITEXTURE_UNITS<sp/>=<sp/><sp/>8;</highlight></codeline>
<codeline lineno="603" refid="structglstate__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtmu__t" kindref="compound">tmu_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmu[MAX_MULTITEXTURE_UNITS];</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currenttmu;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>faceCulling;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glStateBits;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forceGlState;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>next<sp/>GL_State<sp/>will<sp/>ignore<sp/>glStateBits<sp/>and<sp/>set<sp/>everything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal">}<sp/><ref refid="structglstate__t" kindref="compound">glstate_t</ref>;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613" refid="structback_end_counters__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_surfaces;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_shaders;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_vertexes;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_indexes;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>set<sp/>per<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_totalIndexes;<sp/></highlight><highlight class="comment">//<sp/>counting<sp/>all<sp/>passes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_drawElements;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_drawIndexes;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_drawVertexes;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_drawRefIndexes;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_drawRefVertexes;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_shadowElements;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_shadowIndexes;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_shadowVertexes;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>c_vboIndexes;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>c_overDraw;<sp/></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>maxLightValue;<sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>light<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>msec;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>total<sp/>msec<sp/>for<sp/>backend<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal">}<sp/><ref refid="structback_end_counters__t" kindref="compound">backEndCounters_t</ref>;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>state<sp/>modified<sp/>by<sp/>the<sp/>back<sp/>end<sp/>is<sp/>separated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="comment">//<sp/>from<sp/>the<sp/>front<sp/>end<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639" refid="structback_end_state__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>to<sp/>track<sp/>all<sp/>images<sp/>used<sp/>in<sp/>a<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structview_def__s" kindref="compound">viewDef_t</ref><sp/>*<sp/><sp/><sp/>viewDef;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structback_end_counters__t" kindref="compound">backEndCounters_t</ref><sp/><sp/><sp/>pc;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structview_entity__s" kindref="compound">viewEntity_t</ref><sp/>*currentSpace;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>detecting<sp/>when<sp/>a<sp/>matrix<sp/>must<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_screen_rect" kindref="compound">idScreenRect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentScissor;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>scissor<sp/>clipping,<sp/>local<sp/>inside<sp/>renderView<sp/>viewport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structview_light__s" kindref="compound">viewLight_t</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>vLight;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depthFunc;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GLS_DEPTHFUNC_EQUAL,<sp/>or<sp/>GLS_DEPTHFUNC_LESS<sp/>for<sp/>translucent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lightTextureMatrix[16];<sp/></highlight><highlight class="comment">//<sp/>only<sp/>if<sp/>lightStage-&gt;texture.hasMatrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lightColor[4];<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>evaluation<sp/>of<sp/>current<sp/>light&apos;s<sp/>color<sp/>stage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lightScale;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Every<sp/>light<sp/>color<sp/>calaculation<sp/>will<sp/>be<sp/>multiplied<sp/>by<sp/>this,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>will<sp/>guarantee<sp/>that<sp/>the<sp/>result<sp/>is<sp/>&lt;<sp/>tr.backEndRendererMaxLight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>card<sp/>with<sp/>high<sp/>dynamic<sp/>range<sp/>will<sp/>have<sp/>this<sp/>set<sp/>to<sp/>1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overBright;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>amount<sp/>that<sp/>all<sp/>light<sp/>interactions<sp/>must<sp/>be<sp/>multiplied<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>post<sp/>processing<sp/>to<sp/>get<sp/>the<sp/>desired<sp/>total<sp/>light<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>high<sp/>dynamic<sp/>range<sp/>card<sp/>will<sp/>have<sp/>this<sp/>set<sp/>to<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentRenderCopied;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>true<sp/>if<sp/>any<sp/>material<sp/>has<sp/>already<sp/>referenced<sp/>_currentRender</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>our<sp/>OpenGL<sp/>state<sp/>deltas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structglstate__t" kindref="compound">glstate_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glState;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_copyFrameBuffer;</highlight></codeline>
<codeline lineno="666"><highlight class="normal">}<sp/><ref refid="structback_end_state__t" kindref="compound">backEndState_t</ref>;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAX_GUI_SURFACES<sp/><sp/>=<sp/>1024;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>size<sp/>of<sp/>the<sp/>drawSurfs<sp/>list<sp/>for<sp/>guis,<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>automatically<sp/>expanded<sp/>as<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>BE_ARB,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>BE_NV10,</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>BE_NV20,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>BE_R200,</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>BE_ARB2,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>BE_BAD</highlight></codeline>
<codeline lineno="679"><highlight class="normal">}<sp/>backEndName_t;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681" refid="structrender_crop__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>x,<sp/>y,<sp/>width,<sp/>height;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>are<sp/>in<sp/>physical,<sp/>OpenGL<sp/>Y-at-bottom<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal">}<sp/><ref refid="structrender_crop__t" kindref="compound">renderCrop_t</ref>;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>MAX_RENDER_CROPS<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="687"><highlight class="comment">**<sp/>Most<sp/>renderer<sp/>globals<sp/>are<sp/>defined<sp/>here.</highlight></codeline>
<codeline lineno="688"><highlight class="comment">**<sp/>backend<sp/>functions<sp/>should<sp/>never<sp/>modify<sp/>any<sp/>of<sp/>these<sp/>fields,</highlight></codeline>
<codeline lineno="689"><highlight class="comment">**<sp/>but<sp/>may<sp/>read<sp/>fields<sp/>that<sp/>aren&apos;t<sp/>dynamically<sp/>modified</highlight></codeline>
<codeline lineno="690"><highlight class="comment">**<sp/>by<sp/>the<sp/>frontend.</highlight></codeline>
<codeline lineno="691"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692" refid="classid_render_system_local" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classid_render_system_local" kindref="compound">idRenderSystemLocal</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classid_render_system" kindref="compound">idRenderSystem</ref><sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>external<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Init(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Shutdown(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitOpenGL(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShutdownOpenGL(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsOpenGLRunning(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsFullScreen(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetScreenWidth(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetScreenHeight(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classid_render_world" kindref="compound">idRenderWorld</ref><sp/>*<sp/>AllocRenderWorld(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreeRenderWorld(<sp/><ref refid="classid_render_world" kindref="compound">idRenderWorld</ref><sp/>*rw<sp/>);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginLevelLoad(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EndLevelLoad(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegisterFont(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fontName,<sp/><ref refid="structfont_info_ex__t" kindref="compound">fontInfoEx_t</ref><sp/>&amp;font<sp/>);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetColor(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>&amp;rgba<sp/>);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetColor4(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>g,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a<sp/>);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawStretchPic<sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref><sp/>*verts,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>glIndex_t<sp/>*indexes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vertCount,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indexCount,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>*material,</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clip<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0.0f,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0.0f,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>640.0f,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>0.0f<sp/>);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawStretchPic<sp/>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>*material<sp/>);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawStretchTri<sp/>(<sp/><ref refid="classid_vec2" kindref="compound">idVec2</ref><sp/>p1,<sp/><ref refid="classid_vec2" kindref="compound">idVec2</ref><sp/>p2,<sp/><ref refid="classid_vec2" kindref="compound">idVec2</ref><sp/>p3,<sp/><ref refid="classid_vec2" kindref="compound">idVec2</ref><sp/>t1,<sp/><ref refid="classid_vec2" kindref="compound">idVec2</ref><sp/>t2,<sp/><ref refid="classid_vec2" kindref="compound">idVec2</ref><sp/>t3,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>*material<sp/>);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GlobalToNormalizedDeviceCoordinates(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;global,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;ndc<sp/>);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetGLSettings(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>height<sp/>);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrintMemInfo(<sp/><ref refid="struct_mem_info__t" kindref="compound">MemInfo_t</ref><sp/>*mi<sp/>);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawSmallChar(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>*material<sp/>);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawSmallStringExt(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>&amp;setColor,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>forceColor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>*material<sp/>);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawBigChar(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>*material<sp/>);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawBigStringExt(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>&amp;setColor,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>forceColor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>*material<sp/>);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WriteDemoPics();</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DrawDemoPics();</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginFrame(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowHeight<sp/>);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EndFrame(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*frontEndMsec,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*backEndMsec<sp/>);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TakeScreenshot(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>downSample,<sp/><ref refid="structrender_view__s" kindref="compound">renderView_t</ref><sp/>*ref<sp/>);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CropRenderSize(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>makePowerOfTwo<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>forceDimensions<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CaptureRenderToImage(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*imageName<sp/>);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CaptureRenderToFile(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileName,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fixAlpha<sp/>);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnCrop();</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetCardCaps(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;oldCard,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;nv10or20<sp/>);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UploadImage(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*imageName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>byte<sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>internal<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_render_system_local" kindref="compound">idRenderSystemLocal</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~<ref refid="classid_render_system_local" kindref="compound">idRenderSystemLocal</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Clear(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetBackEndRenderer();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sets<sp/>tr.backEndRenderer<sp/>based<sp/>on<sp/>cvars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderViewToViewport(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structrender_view__s" kindref="compound">renderView_t</ref><sp/>*renderView,<sp/><ref refid="classid_screen_rect" kindref="compound">idScreenRect</ref><sp/>*viewport<sp/>);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>renderer<sp/>globals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>registered;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cleared<sp/>at<sp/>shutdown,<sp/>set<sp/>at<sp/>InitOpenGL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>takingScreenshot;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>incremented<sp/>every<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewCount;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>incremented<sp/>every<sp/>view<sp/>(twice<sp/>a<sp/>scene<sp/>if<sp/>subviewed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>every<sp/>R_MarkFragments<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>staticAllocCount;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>running<sp/>total<sp/>of<sp/>bytes<sp/>allocated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameShaderTime;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shader<sp/>time<sp/>for<sp/>all<sp/>non-world<sp/>2D<sp/>rendering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewportOffset[2];<sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>doing<sp/>larger-than-window<sp/>tiled<sp/>renderings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tiledViewport[2];</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determines<sp/>which<sp/>back<sp/>end<sp/>to<sp/>use,<sp/>and<sp/>if<sp/>vertex<sp/>programs<sp/>are<sp/>in<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>backEndName_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEndRenderer;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEndRendererHasVertexPrograms;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEndRendererMaxLight;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.0<sp/>for<sp/>standard,<sp/>unlimited<sp/>for<sp/>floats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determines<sp/>how<sp/>much<sp/>overbrighting<sp/>needs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>done<sp/>post-process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ambientLightVector;<sp/></highlight><highlight class="comment">//<sp/>used<sp/>for<sp/>&quot;ambient<sp/>bump<sp/>mapping&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sortOffset;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>determinist<sp/>sorting<sp/>of<sp/>equal<sp/>sort<sp/>materials</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_list" kindref="compound">idList&lt;idRenderWorldLocal*&gt;</ref>worlds;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_render_world_local" kindref="compound">idRenderWorldLocal</ref><sp/>*<sp/><sp/><sp/><sp/>primaryWorld;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrender_view__s" kindref="compound">renderView_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>primaryRenderView;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structview_def__s" kindref="compound">viewDef_t</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>primaryView;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>many<sp/>console<sp/>commands<sp/>need<sp/>to<sp/>know<sp/>which<sp/>world<sp/>they<sp/>should<sp/>operate<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>defaultMaterial;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testImage;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_cinematic" kindref="compound">idCinematic</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testVideo;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testVideoStartTime;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_image" kindref="compound">idImage</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ambientCubeImage;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hack<sp/>for<sp/>testing<sp/>dependent<sp/>ambient<sp/>lighting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structview_def__s" kindref="compound">viewDef_t</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewDef;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structperformance_counters__t" kindref="compound">performanceCounters_t</ref><sp/><sp/><sp/>pc;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>performance<sp/>counters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdraw_surfs_command__t" kindref="compound">drawSurfsCommand_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>lockSurfacesCmd;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>this<sp/>when<sp/>r_lockSurfaces<sp/>=<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structview_entity__s" kindref="compound">viewEntity_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>identitySpace;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>use<sp/>if<sp/>we<sp/>don&apos;t<sp/>know<sp/>viewDef-&gt;worldSpace<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logFile;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>logging<sp/>GL<sp/>calls<sp/>and<sp/>frame<sp/>breaks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stencilIncr,<sp/>stencilDecr;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GL_INCR<sp/>/<sp/>INCR_WRAP_EXT,<sp/>GL_DECR<sp/>/<sp/>GL_DECR_EXT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrender_crop__t" kindref="compound">renderCrop_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderCrops[MAX_RENDER_CROPS];</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentRenderCrop;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GUI<sp/>drawing<sp/>variables<sp/>for<sp/>surface<sp/>creation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>guiRecursionLevel;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>prevent<sp/>infinite<sp/>overruns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classid_gui_model" kindref="compound">idGuiModel</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>guiModel;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classid_gui_model" kindref="compound">idGuiModel</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>demoGuiModel;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gammaTable[256];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>brightness<sp/>/<sp/>gamma<sp/>modify<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal">};</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structback_end_state__t" kindref="compound">backEndState_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backEnd;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_render_system_local" kindref="compound">idRenderSystemLocal</ref><sp/><sp/>tr;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structglconfig__s" kindref="compound">glconfig_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glConfig;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>outside<sp/>of<sp/>TR<sp/>since<sp/>it<sp/>shouldn&apos;t<sp/>be<sp/>cleared<sp/>during<sp/>ref<sp/>re-init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cvars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_ext_vertex_array_range;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_glDriver;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;opengl32&quot;,<sp/>etc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_mode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>video<sp/>mode<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_displayRefresh;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>optional<sp/>display<sp/>refresh<sp/>rate<sp/>option<sp/>for<sp/>vid<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_fullscreen;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>=<sp/>windowed,<sp/>1<sp/>=<sp/>full<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_multiSamples;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>antialiasing<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_ignore;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>for<sp/>random<sp/>debugging<sp/>without<sp/>defining<sp/>new<sp/>vars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_ignore2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>for<sp/>random<sp/>debugging<sp/>without<sp/>defining<sp/>new<sp/>vars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_znear;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>near<sp/>Z<sp/>clip<sp/>plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_finish;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>a<sp/>call<sp/>to<sp/>glFinish()<sp/>every<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_frontBuffer;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>to<sp/>front<sp/>buffer<sp/>for<sp/>debugging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_swapInterval;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>changes<sp/>wglSwapIntarval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_offsetFactor;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>polygon<sp/>offset<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_offsetUnits;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>polygon<sp/>offset<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_singleTriangle;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>draw<sp/>a<sp/>single<sp/>triangle<sp/>per<sp/>primitive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_logFile;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>frames<sp/>to<sp/>emit<sp/>GL<sp/>logs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_clear;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>screen<sp/>clear<sp/>every<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_shadows;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enable<sp/>shadows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_subviewOnly;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>don&apos;t<sp/>render<sp/>main<sp/>view,<sp/>allowing<sp/>subviews<sp/>to<sp/>be<sp/>debugged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_lightScale;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>light<sp/>intensities<sp/>are<sp/>multiplied<sp/>by<sp/>this,<sp/>which<sp/>is<sp/>normally<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_flareSize;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scale<sp/>the<sp/>flare<sp/>deforms<sp/>from<sp/>the<sp/>material<sp/>def</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_gamma;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>changes<sp/>gamma<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_brightness;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>changes<sp/>gamma<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_renderer;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>arb,<sp/>nv10,<sp/>nv20,<sp/>r200,<sp/>gl2,<sp/>etc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_cgVertexProfile;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>arbvp1,<sp/>vp20,<sp/>vp30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_cgFragmentProfile;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>arbfp1,<sp/>fp30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_checkBounds;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compare<sp/>all<sp/>surface<sp/>bounds<sp/>with<sp/>precalculated<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useNV20MonoLights;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>allow<sp/>an<sp/>interaction<sp/>pass<sp/>optimization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useLightPortalFlow;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>do<sp/>a<sp/>more<sp/>precise<sp/>area<sp/>reference<sp/>determination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useTripleTextureARB;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>cards<sp/>with<sp/>3+<sp/>texture<sp/>units<sp/>do<sp/>a<sp/>two<sp/>pass<sp/>instead<sp/>of<sp/>three<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useShadowSurfaceScissor;</highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>scissor<sp/>shadows<sp/>by<sp/>the<sp/>scissor<sp/>rect<sp/>of<sp/>the<sp/>interaction<sp/>surfaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useConstantMaterials;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>use<sp/>pre-calculated<sp/>material<sp/>registers<sp/>if<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useInteractionTable;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>full<sp/>entityDefs<sp/>*<sp/>lightDefs<sp/>table<sp/>to<sp/>make<sp/>finding<sp/>interactions<sp/>faster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useNodeCommonChildren;<sp/><sp/></highlight><highlight class="comment">//<sp/>stop<sp/>pushing<sp/>reference<sp/>bounds<sp/>early<sp/>when<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useSilRemap;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>consider<sp/>verts<sp/>with<sp/>the<sp/>same<sp/>XYZ,<sp/>but<sp/>different<sp/>ST<sp/>the<sp/>same<sp/>for<sp/>shadows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useCulling;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>=<sp/>none,<sp/>1<sp/>=<sp/>sphere,<sp/>2<sp/>=<sp/>sphere<sp/>+<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useLightCulling;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>=<sp/>none,<sp/>1<sp/>=<sp/>box,<sp/>2<sp/>=<sp/>exact<sp/>clip<sp/>of<sp/>polyhedron<sp/>faces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useLightScissors;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>use<sp/>custom<sp/>scissor<sp/>rectangle<sp/>for<sp/>each<sp/>light</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useClippedLightScissors;</highlight><highlight class="comment">//<sp/>0<sp/>=<sp/>full<sp/>screen<sp/>when<sp/>near<sp/>clipped,<sp/>1<sp/>=<sp/>exact<sp/>when<sp/>near<sp/>clipped,<sp/>2<sp/>=<sp/>exact<sp/>always</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useEntityCulling;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>=<sp/>none,<sp/>1<sp/>=<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useEntityScissors;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>use<sp/>custom<sp/>scissor<sp/>rectangle<sp/>for<sp/>each<sp/>entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useInteractionCulling;<sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>cull<sp/>interactions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useInteractionScissors;<sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>use<sp/>a<sp/>custom<sp/>scissor<sp/>rectangle<sp/>for<sp/>each<sp/>interaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useFrustumFarDistance;<sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>!=<sp/>0<sp/>force<sp/>the<sp/>view<sp/>frustum<sp/>far<sp/>distance<sp/>to<sp/>this<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useShadowCulling;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>cull<sp/>shadows<sp/>from<sp/>partially<sp/>visible<sp/>lights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_usePreciseTriangleInteractions;<sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>do<sp/>winding<sp/>clipping<sp/>to<sp/>determine<sp/>if<sp/>each<sp/>ambiguous<sp/>tri<sp/>should<sp/>be<sp/>lit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useTurboShadow;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>use<sp/>the<sp/>infinite<sp/>projection<sp/>with<sp/>W<sp/>technique<sp/>for<sp/>dynamic<sp/>shadows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useExternalShadows;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>skip<sp/>drawing<sp/>caps<sp/>when<sp/>outside<sp/>the<sp/>light<sp/>volume</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useOptimizedShadows;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>use<sp/>the<sp/>dmap<sp/>generated<sp/>static<sp/>shadow<sp/>volumes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useShadowVertexProgram;<sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>do<sp/>the<sp/>shadow<sp/>projection<sp/>in<sp/>the<sp/>vertex<sp/>program<sp/>on<sp/>capable<sp/>cards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useShadowProjectedCull;<sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>discard<sp/>triangles<sp/>outside<sp/>light<sp/>volume<sp/>before<sp/>shadowing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useDeferredTangents;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>don&apos;t<sp/>always<sp/>calc<sp/>tangents<sp/>after<sp/>deform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useCachedDynamicModels;<sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>cache<sp/>snapshots<sp/>of<sp/>dynamic<sp/>models</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useTwoSidedStencil;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>do<sp/>stencil<sp/>shadows<sp/>in<sp/>one<sp/>pass<sp/>with<sp/>different<sp/>ops<sp/>on<sp/>each<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useInfiniteFarZ;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>use<sp/>the<sp/>no-far-clip-plane<sp/>trick</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useScissor;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>scissor<sp/>clip<sp/>as<sp/>portals<sp/>and<sp/>lights<sp/>are<sp/>processed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_usePortals;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>use<sp/>portals<sp/>to<sp/>perform<sp/>area<sp/>culling,<sp/>otherwise<sp/>draw<sp/>everything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useStateCaching;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>redundant<sp/>state<sp/>changes<sp/>in<sp/>GL_*()<sp/>calls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useCombinerDisplayLists;</highlight><highlight class="comment">//<sp/>if<sp/>1,<sp/>put<sp/>all<sp/>nvidia<sp/>register<sp/>combiner<sp/>programming<sp/>in<sp/>display<sp/>lists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useVertexBuffers;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>0,<sp/>don&apos;t<sp/>use<sp/>ARB_vertex_buffer_object<sp/>for<sp/>vertexes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useIndexBuffers;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>0,<sp/>don&apos;t<sp/>use<sp/>ARB_vertex_buffer_object<sp/>for<sp/>indexes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useEntityCallbacks;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>0,<sp/>issue<sp/>the<sp/>callback<sp/>immediately<sp/>at<sp/>update<sp/>time,<sp/>rather<sp/>than<sp/>defering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_lightAllBackFaces;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>light<sp/>all<sp/>the<sp/>back<sp/>faces,<sp/>even<sp/>when<sp/>they<sp/>would<sp/>be<sp/>shadowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_useDepthBoundsTest;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>depth<sp/>bounds<sp/>test<sp/>to<sp/>reduce<sp/>shadow<sp/>fill</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipPostProcess;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>all<sp/>post-process<sp/>renderings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipSuppress;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>the<sp/>per-view<sp/>suppressions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipInteractions;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>all<sp/>light/surface<sp/>interaction<sp/>drawing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipFrontEnd;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bypasses<sp/>all<sp/>front<sp/>end<sp/>work,<sp/>but<sp/>2D<sp/>gui<sp/>rendering<sp/>still<sp/>draws</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipBackEnd;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>draw<sp/>anything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipCopyTexture;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>all<sp/>rendering,<sp/>but<sp/>don&apos;t<sp/>actually<sp/>copyTexSubImage2D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipRender;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>3D<sp/>rendering,<sp/>but<sp/>pass<sp/>2D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipRenderContext;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NULL<sp/>the<sp/>rendering<sp/>context<sp/>during<sp/>backend<sp/>3D<sp/>rendering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipTranslucent;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>the<sp/>translucent<sp/>interaction<sp/>rendering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipAmbient;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bypasses<sp/>all<sp/>non-interaction<sp/>drawing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipNewAmbient;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bypasses<sp/>all<sp/>vertex/fragment<sp/>program<sp/>ambients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipBlendLights;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>all<sp/>blend<sp/>lights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipFogLights;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>all<sp/>fog<sp/>lights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipSubviews;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>don&apos;t<sp/>render<sp/>any<sp/>mirrors<sp/>/<sp/>cameras<sp/>/<sp/>etc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipGuiShaders;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>don&apos;t<sp/>render<sp/>any<sp/>gui<sp/>elements<sp/>on<sp/>surfaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipParticles;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>don&apos;t<sp/>render<sp/>any<sp/>particles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipUpdates;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>don&apos;t<sp/>accept<sp/>any<sp/>entity<sp/>or<sp/>light<sp/>updates,<sp/>making<sp/>everything<sp/>static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipDeforms;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>leave<sp/>all<sp/>deform<sp/>materials<sp/>in<sp/>their<sp/>original<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipDynamicTextures;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>dynamically<sp/>create<sp/>textures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipLightScale;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>do<sp/>any<sp/>post-interaction<sp/>light<sp/>scaling,<sp/>makes<sp/>things<sp/>dim<sp/>on<sp/>low-dynamic<sp/>range<sp/>cards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipBump;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uses<sp/>a<sp/>flat<sp/>surface<sp/>instead<sp/>of<sp/>the<sp/>bump<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipSpecular;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>black<sp/>for<sp/>specular</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipDiffuse;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>black<sp/>for<sp/>diffuse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipOverlays;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>overlay<sp/>surfaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_skipROQ;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_ignoreGLErrors;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_forceLoadImages;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>all<sp/>images<sp/>to<sp/>screen<sp/>after<sp/>registration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_demonstrateBug;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>during<sp/>development<sp/>to<sp/>show<sp/>IHV&apos;s<sp/>their<sp/>problems</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_screenFraction;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>testing<sp/>fill<sp/>rate,<sp/>the<sp/>resolution<sp/>of<sp/>the<sp/>entire<sp/>screen<sp/>can<sp/>be<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showUnsmoothedTangents;<sp/></highlight><highlight class="comment">//<sp/>highlight<sp/>geometry<sp/>rendered<sp/>with<sp/>unsmoothed<sp/>tangents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showSilhouette;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>highlight<sp/>edges<sp/>that<sp/>are<sp/>casting<sp/>shadow<sp/>planes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showVertexColor;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draws<sp/>all<sp/>triangles<sp/>with<sp/>the<sp/>solid<sp/>vertex<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showUpdates;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>report<sp/>entity<sp/>and<sp/>light<sp/>updates<sp/>and<sp/>ref<sp/>counts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showDemo;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>report<sp/>reads<sp/>and<sp/>writes<sp/>to<sp/>the<sp/>demo<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showDynamic;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>report<sp/>stats<sp/>on<sp/>dynamic<sp/>surface<sp/>generation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showLightScale;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>report<sp/>the<sp/>scale<sp/>factor<sp/>applied<sp/>to<sp/>drawing<sp/>for<sp/>overbrights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showIntensity;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>the<sp/>screen<sp/>colors<sp/>based<sp/>on<sp/>intensity,<sp/>red<sp/>=<sp/>0,<sp/>green<sp/>=<sp/>128,<sp/>blue<sp/>=<sp/>255</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showDefs;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>report<sp/>the<sp/>number<sp/>of<sp/>modeDefs<sp/>and<sp/>lightDefs<sp/>in<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showTrace;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>show<sp/>the<sp/>intersection<sp/>of<sp/>an<sp/>eye<sp/>trace<sp/>with<sp/>the<sp/>world</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showSmp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>show<sp/>which<sp/>end<sp/>(front<sp/>or<sp/>back)<sp/>is<sp/>blocking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showDepth;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>display<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>depth<sp/>buffer<sp/>and<sp/>the<sp/>depth<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showImages;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>all<sp/>images<sp/>to<sp/>screen<sp/>instead<sp/>of<sp/>rendering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showTris;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enables<sp/>wireframe<sp/>rendering<sp/>of<sp/>the<sp/>world</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showSurfaceInfo;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>show<sp/>surface<sp/>material<sp/>name<sp/>under<sp/>crosshair</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showNormals;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draws<sp/>wireframe<sp/>normals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showEdges;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>the<sp/>sil<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showViewEntitys;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>displays<sp/>the<sp/>bounding<sp/>boxes<sp/>of<sp/>all<sp/>view<sp/>models<sp/>and<sp/>optionally<sp/>the<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showTexturePolarity;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shade<sp/>triangles<sp/>by<sp/>texture<sp/>area<sp/>polarity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showTangentSpace;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shade<sp/>triangles<sp/>by<sp/>tangent<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showDominantTri;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>lines<sp/>from<sp/>vertexes<sp/>to<sp/>center<sp/>of<sp/>dominant<sp/>triangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showTextureVectors;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>each<sp/>triangles<sp/>texture<sp/>(tangent)<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showLights;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>print<sp/>light<sp/>info,<sp/>2<sp/>=<sp/>also<sp/>draw<sp/>volumes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showLightCount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>colors<sp/>surfaces<sp/>based<sp/>on<sp/>light<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showShadows;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>visualize<sp/>the<sp/>stencil<sp/>shadow<sp/>volumes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showShadowCount;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>colors<sp/>screen<sp/>based<sp/>on<sp/>shadow<sp/>volume<sp/>depth<sp/>complexity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showLightScissors;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>show<sp/>light<sp/>scissor<sp/>rectangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showEntityScissors;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>show<sp/>entity<sp/>scissor<sp/>rectangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showInteractionFrustums;</highlight><highlight class="comment">//<sp/>show<sp/>a<sp/>frustum<sp/>for<sp/>each<sp/>interaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showInteractionScissors;</highlight><highlight class="comment">//<sp/>show<sp/>screen<sp/>rectangle<sp/>which<sp/>contains<sp/>the<sp/>interaction<sp/>frustum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showMemory;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>frame<sp/>memory<sp/>utilization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showCull;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>report<sp/>sphere<sp/>and<sp/>box<sp/>culling<sp/>stats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showInteractions;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>report<sp/>interaction<sp/>generation<sp/>activity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showSurfaces;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>report<sp/>surface/light/shadow<sp/>counts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showPrimitives;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>report<sp/>vertex/index/draw<sp/>counts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showPortals;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>portal<sp/>outlines<sp/>in<sp/>color<sp/>based<sp/>on<sp/>passed<sp/>/<sp/>not<sp/>passed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showAlloc;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>report<sp/>alloc/free<sp/>counts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showSkel;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>the<sp/>skeleton<sp/>when<sp/>model<sp/>animates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_showOverDraw;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>show<sp/>overdraw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_jointNameScale;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>joint<sp/>names<sp/>when<sp/>r_showskel<sp/>is<sp/>set<sp/>to<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_jointNameOffset;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>offset<sp/>of<sp/>joint<sp/>names<sp/>when<sp/>r_showskel<sp/>is<sp/>set<sp/>to<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_testGamma;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>a<sp/>grid<sp/>pattern<sp/>to<sp/>test<sp/>gamma<sp/>levels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_testStepGamma;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>a<sp/>grid<sp/>pattern<sp/>to<sp/>test<sp/>gamma<sp/>levels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_testGammaBias;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>a<sp/>grid<sp/>pattern<sp/>to<sp/>test<sp/>gamma<sp/>levels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_testARBProgram;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>experiment<sp/>with<sp/>vertex/fragment<sp/>programs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_singleLight;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>suppress<sp/>all<sp/>but<sp/>one<sp/>light</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_singleEntity;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>suppress<sp/>all<sp/>but<sp/>one<sp/>entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_singleArea;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>draw<sp/>the<sp/>portal<sp/>area<sp/>the<sp/>view<sp/>is<sp/>actually<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_singleSurface;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>suppress<sp/>all<sp/>but<sp/>one<sp/>surface<sp/>on<sp/>each<sp/>entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_shadowPolygonOffset;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bias<sp/>value<sp/>added<sp/>to<sp/>depth<sp/>test<sp/>for<sp/>stencil<sp/>shadow<sp/>drawing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_shadowPolygonFactor;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scale<sp/>value<sp/>for<sp/>stencil<sp/>shadow<sp/>drawing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_jitter;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>randomly<sp/>subpixel<sp/>jitter<sp/>the<sp/>projection<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_lightSourceRadius;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>soft-shadow<sp/>sampling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_lockSurfaces;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_orderIndexes;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>perform<sp/>index<sp/>reorganization<sp/>to<sp/>optimize<sp/>vertex<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_debugLineDepthTest;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>perform<sp/>depth<sp/>test<sp/>on<sp/>debug<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_debugLineWidth;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>width<sp/>of<sp/>debug<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_debugArrowStep;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>step<sp/>size<sp/>of<sp/>arrow<sp/>cone<sp/>line<sp/>rotation<sp/>in<sp/>degrees</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_debugPolygonFilled;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_materialOverride;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>override<sp/>all<sp/>materials</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classid_c_var" kindref="compound">idCVar</ref><sp/>r_debugRenderToTexture;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="991"><highlight class="comment">====================================================================</highlight></codeline>
<codeline lineno="992"><highlight class="comment"></highlight></codeline>
<codeline lineno="993"><highlight class="comment">GL<sp/>wrapper/helper<sp/>functions</highlight></codeline>
<codeline lineno="994"><highlight class="comment"></highlight></codeline>
<codeline lineno="995"><highlight class="comment">====================================================================</highlight></codeline>
<codeline lineno="996"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>GL_SelectTexture(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unit<sp/>);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>GL_CheckErrors(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>GL_ClearStateDelta(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>GL_State(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stateVector<sp/>);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>GL_TexEnv(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>env<sp/>);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>GL_Cull(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cullType<sp/>);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_SRCBLEND_ZERO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00000001;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_SRCBLEND_ONE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_SRCBLEND_DST_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00000003;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_SRCBLEND_ONE_MINUS_DST_COLOR<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00000004;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_SRCBLEND_SRC_ALPHA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00000005;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_SRCBLEND_ONE_MINUS_SRC_ALPHA<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00000006;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_SRCBLEND_DST_ALPHA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00000007;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_SRCBLEND_ONE_MINUS_DST_ALPHA<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00000008;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_SRCBLEND_ALPHA_SATURATE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00000009;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_SRCBLEND_BITS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0000000f;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_DSTBLEND_ZERO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_DSTBLEND_ONE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00000020;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_DSTBLEND_SRC_COLOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00000030;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_DSTBLEND_ONE_MINUS_SRC_COLOR<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00000040;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_DSTBLEND_SRC_ALPHA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00000050;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_DSTBLEND_ONE_MINUS_SRC_ALPHA<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00000060;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_DSTBLEND_DST_ALPHA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00000070;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_DSTBLEND_ONE_MINUS_DST_ALPHA<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00000080;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_DSTBLEND_BITS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x000000f0;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight><highlight class="comment">//<sp/>these<sp/>masks<sp/>are<sp/>the<sp/>inverse,<sp/>meaning<sp/>when<sp/>set<sp/>the<sp/>glColorMask<sp/>value<sp/>will<sp/>be<sp/>0,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight><highlight class="comment">//<sp/>preventing<sp/>that<sp/>channel<sp/>from<sp/>being<sp/>written</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_DEPTHMASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00000100;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_REDMASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00000200;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_GREENMASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00000400;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_BLUEMASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00000800;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_ALPHAMASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00001000;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_COLORMASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(GLS_REDMASK|GLS_GREENMASK|GLS_BLUEMASK);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_POLYMODE_LINE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00002000;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_DEPTHFUNC_ALWAYS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00010000;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_DEPTHFUNC_EQUAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00020000;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_DEPTHFUNC_LESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_ATEST_EQ_255<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x10000000;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_ATEST_LT_128<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x20000000;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_ATEST_GE_128<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x40000000;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_ATEST_BITS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x70000000;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLS_DEFAULT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>GLS_DEPTHFUNC_ALWAYS;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_Init(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_InitOpenGL(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_DoneFreeType(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_SetColorMappings(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_ScreenShot_f(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref><sp/>&amp;args<sp/>);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_StencilShot(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>R_CheckExtension(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name<sp/>);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1063"><highlight class="comment">====================================================================</highlight></codeline>
<codeline lineno="1064"><highlight class="comment"></highlight></codeline>
<codeline lineno="1065"><highlight class="comment">IMPLEMENTATION<sp/>SPECIFIC<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="1066"><highlight class="comment"></highlight></codeline>
<codeline lineno="1067"><highlight class="comment">====================================================================</highlight></codeline>
<codeline lineno="1068"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070" refid="structglimp_parms__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fullScreen;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stereo;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>displayHz;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiSamples;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal">}<sp/><ref refid="structglimp_parms__t" kindref="compound">glimpParms_t</ref>;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLimp_Init(<sp/><ref refid="structglimp_parms__t" kindref="compound">glimpParms_t</ref><sp/>parms<sp/>);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>desired<sp/>mode<sp/>can&apos;t<sp/>be<sp/>set<sp/>satisfactorily,<sp/>false<sp/>will<sp/>be<sp/>returned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>renderer<sp/>will<sp/>then<sp/>reset<sp/>the<sp/>glimpParms<sp/>to<sp/>&quot;safe<sp/>mode&quot;<sp/>of<sp/>640x480</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fullscreen<sp/>and<sp/>try<sp/>again.<sp/><sp/>If<sp/>that<sp/>also<sp/>fails,<sp/>the<sp/>error<sp/>will<sp/>be<sp/>fatal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLimp_SetScreenParms(<sp/><ref refid="structglimp_parms__t" kindref="compound">glimpParms_t</ref><sp/>parms<sp/>);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>set<sp/>up<sp/>gl<sp/>up<sp/>with<sp/>the<sp/>new<sp/>parms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLimp_Shutdown(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Destroys<sp/>the<sp/>rendering<sp/>context,<sp/>closes<sp/>the<sp/>window,<sp/>resets<sp/>the<sp/>resolution,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>resets<sp/>the<sp/>gamma<sp/>ramps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLimp_SwapBuffers(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Calls<sp/>the<sp/>system<sp/>specific<sp/>swapbuffers<sp/>routine,<sp/>and<sp/>may<sp/>also<sp/>perform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight><highlight class="comment">//<sp/>other<sp/>system<sp/>specific<sp/>cvar<sp/>checks<sp/>that<sp/>happen<sp/>every<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>not<sp/>be<sp/>called<sp/>if<sp/>&apos;r_drawBuffer<sp/>GL_FRONT&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLimp_SetGamma(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>red[256],<sp/></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>green[256],</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>blue[256]<sp/>);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>hardware<sp/>gamma<sp/>ramps<sp/>for<sp/>gamma<sp/>and<sp/>brightness<sp/>adjustment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>now<sp/>taken<sp/>as<sp/>16<sp/>bit<sp/>values,<sp/>so<sp/>we<sp/>can<sp/>take<sp/>full<sp/>advantage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>dacs<sp/>with<sp/>&gt;8<sp/>bits<sp/>of<sp/>precision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLimp_SpawnRenderThread(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">function</highlight><highlight class="normal">)(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>false<sp/>if<sp/>the<sp/>system<sp/>only<sp/>has<sp/>a<sp/>single<sp/>processor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>GLimp_BackEndSleep(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLimp_FrontEndSleep(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLimp_WakeBackEnd(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data<sp/>);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>these<sp/>functions<sp/>implement<sp/>the<sp/>dual<sp/>processor<sp/>syncronization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLimp_ActivateContext(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLimp_DeactivateContext(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>used<sp/>for<sp/>managing<sp/>SMP<sp/>handoffs<sp/>of<sp/>the<sp/>OpenGL<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>between<sp/>threads,<sp/>and<sp/>as<sp/>a<sp/>performance<sp/>tunining<sp/>aid.<sp/><sp/>Setting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&apos;r_skipRenderContext<sp/>1&apos;<sp/>will<sp/>call<sp/>GLimp_DeactivateContext()<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>3D<sp/>rendering<sp/>code,<sp/>and<sp/>GLimp_ActivateContext()<sp/>afterwards.<sp/><sp/>On</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>most<sp/>OpenGL<sp/>implementations,<sp/>this<sp/>will<sp/>result<sp/>in<sp/>all<sp/>OpenGL<sp/>calls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>being<sp/>immediate<sp/>returns,<sp/>which<sp/>lets<sp/>us<sp/>guage<sp/>how<sp/>much<sp/>time<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight><highlight class="comment">//<sp/>being<sp/>spent<sp/>inside<sp/>OpenGL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLimp_EnableLogging(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable<sp/>);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1126"><highlight class="comment">====================================================================</highlight></codeline>
<codeline lineno="1127"><highlight class="comment"></highlight></codeline>
<codeline lineno="1128"><highlight class="comment">MAIN</highlight></codeline>
<codeline lineno="1129"><highlight class="comment"></highlight></codeline>
<codeline lineno="1130"><highlight class="comment">====================================================================</highlight></codeline>
<codeline lineno="1131"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_RenderView(<sp/><ref refid="structview_def__s" kindref="compound">viewDef_t</ref><sp/>*parms<sp/>);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight><highlight class="comment">//<sp/>performs<sp/>radius<sp/>cull<sp/>first,<sp/>then<sp/>corner<sp/>cull</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>R_CullLocalBox(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_bounds" kindref="compound">idBounds</ref><sp/>&amp;bounds,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>modelMatrix[16],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPlanes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/>*planes<sp/>);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>R_RadiusCullLocalBox(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_bounds" kindref="compound">idBounds</ref><sp/>&amp;bounds,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>modelMatrix[16],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPlanes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/>*planes<sp/>);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>R_CornerCullLocalBox(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_bounds" kindref="compound">idBounds</ref><sp/>&amp;bounds,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>modelMatrix[16],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPlanes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/>*planes<sp/>);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_AxisToModelMatrix(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/>&amp;axis,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;origin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>modelMatrix[16]<sp/>);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>many<sp/>of<sp/>these<sp/>assume<sp/>a<sp/>normalized<sp/>matrix,<sp/>and<sp/>will<sp/>not<sp/>work<sp/>with<sp/>scaled<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_GlobalPointToLocal(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>modelMatrix[16],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;in,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;out<sp/>);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_GlobalVectorToLocal(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>modelMatrix[16],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;in,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;out<sp/>);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_GlobalPlaneToLocal(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>modelMatrix[16],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/>&amp;in,<sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/>&amp;out<sp/>);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_PointTimesMatrix(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>modelMatrix[16],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>&amp;in,<sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>&amp;out<sp/>);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_LocalPointToGlobal(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>modelMatrix[16],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;in,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;out<sp/>);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_LocalVectorToGlobal(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>modelMatrix[16],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;in,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;out<sp/>);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_LocalPlaneToGlobal(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>modelMatrix[16],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/>&amp;in,<sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/>&amp;out<sp/>);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_TransformEyeZToWin(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>src_z,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*projectionMatrix,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;dst_z<sp/>);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_GlobalToNormalizedDeviceCoordinates(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;global,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;ndc<sp/>);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_TransformModelToClip(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*modelMatrix,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*projectionMatrix,<sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/>&amp;eye,<sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/>&amp;dst<sp/>);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_TransformClipToDevice(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/>&amp;clip,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structview_def__s" kindref="compound">viewDef_t</ref><sp/>*view,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;normalized<sp/>);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_TransposeGLMatrix(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>in[16],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>out[16]<sp/>);</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_SetViewMatrix(<sp/><ref refid="structview_def__s" kindref="compound">viewDef_t</ref><sp/>*viewDef<sp/>);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>myGlMultMatrix(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*out<sp/>);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1165"><highlight class="comment">============================================================</highlight></codeline>
<codeline lineno="1166"><highlight class="comment"></highlight></codeline>
<codeline lineno="1167"><highlight class="comment">LIGHT</highlight></codeline>
<codeline lineno="1168"><highlight class="comment"></highlight></codeline>
<codeline lineno="1169"><highlight class="comment">============================================================</highlight></codeline>
<codeline lineno="1170"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_ListRenderLightDefs_f(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref><sp/>&amp;args<sp/>);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_ListRenderEntityDefs_f(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref><sp/>&amp;args<sp/>);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>R_IssueEntityDefCallback(<sp/><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref><sp/>*def<sp/>);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><ref refid="classid_render_model" kindref="compound">idRenderModel</ref><sp/>*R_EntityDefDynamicModel(<sp/><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref><sp/>*def<sp/>);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><ref refid="structview_entity__s" kindref="compound">viewEntity_t</ref><sp/>*R_SetEntityDefViewEntity(<sp/><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref><sp/>*def<sp/>);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><ref refid="structview_light__s" kindref="compound">viewLight_t</ref><sp/>*R_SetLightDefViewLight(<sp/><ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref><sp/>*def<sp/>);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_AddDrawSurf(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structview_entity__s" kindref="compound">viewEntity_t</ref><sp/>*space,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structrender_entity__s" kindref="compound">renderEntity_t</ref><sp/>*renderEntity,</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>*shader,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_screen_rect" kindref="compound">idScreenRect</ref><sp/>&amp;scissor<sp/>);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_LinkLightSurf(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref><sp/>**link,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structview_entity__s" kindref="compound">viewEntity_t</ref><sp/>*space,<sp/></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref><sp/>*light,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_material" kindref="compound">idMaterial</ref><sp/>*shader,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_screen_rect" kindref="compound">idScreenRect</ref><sp/>&amp;scissor,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>viewInsideShadow<sp/>);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>R_CreateAmbientCache(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>needsLighting<sp/>);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>R_CreateLightingCache(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref><sp/>*ent,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref><sp/>*light,<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_CreatePrivateShadowCache(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_CreateVertexProgramShadowCache(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1193"><highlight class="comment">============================================================</highlight></codeline>
<codeline lineno="1194"><highlight class="comment"></highlight></codeline>
<codeline lineno="1195"><highlight class="comment">LIGHTRUN</highlight></codeline>
<codeline lineno="1196"><highlight class="comment"></highlight></codeline>
<codeline lineno="1197"><highlight class="comment">============================================================</highlight></codeline>
<codeline lineno="1198"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_RegenerateWorld_f(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref><sp/>&amp;args<sp/>);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_ModulateLights_f(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref><sp/>&amp;args<sp/>);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_SetLightProject(<sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/>lightProject[4],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>origin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>targetPoint,</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>rightVector,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>upVector,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>stop<sp/>);</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_AddLightSurfaces(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_AddModelSurfaces(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_RemoveUnecessaryViewLights(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_FreeDerivedData(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_ReCreateWorldReferences(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_CreateEntityRefs(<sp/><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref><sp/>*def<sp/>);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_CreateLightRefs(<sp/><ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref><sp/>*light<sp/>);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_DeriveLightData(<sp/><ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref><sp/>*light<sp/>);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_FreeLightDefDerivedData(<sp/><ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref><sp/>*light<sp/>);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_CheckForEntityDefsUsingModel(<sp/><ref refid="classid_render_model" kindref="compound">idRenderModel</ref><sp/>*model<sp/>);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_ClearEntityDefDynamicModel(<sp/><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref><sp/>*def<sp/>);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_FreeEntityDefDerivedData(<sp/><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref><sp/>*def,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keepDecals,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keepCachedDynamicModel<sp/>);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_FreeEntityDefCachedDynamicModel(<sp/><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref><sp/>*def<sp/>);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_FreeEntityDefDecals(<sp/><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref><sp/>*def<sp/>);</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_FreeEntityDefOverlay(<sp/><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref><sp/>*def<sp/>);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_FreeEntityDefFadedDecals(<sp/><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref><sp/>*def,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time<sp/>);</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_CreateLightDefFogPortals(<sp/><ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref><sp/>*ldef<sp/>);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1231"><highlight class="comment">============================================================</highlight></codeline>
<codeline lineno="1232"><highlight class="comment"></highlight></codeline>
<codeline lineno="1233"><highlight class="comment">POLYTOPE</highlight></codeline>
<codeline lineno="1234"><highlight class="comment"></highlight></codeline>
<codeline lineno="1235"><highlight class="comment">============================================================</highlight></codeline>
<codeline lineno="1236"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*R_PolytopeSurface(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPlanes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/>*planes,<sp/><ref refid="classid_winding" kindref="compound">idWinding</ref><sp/>**windings<sp/>);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1241"><highlight class="comment">============================================================</highlight></codeline>
<codeline lineno="1242"><highlight class="comment"></highlight></codeline>
<codeline lineno="1243"><highlight class="comment">RENDER</highlight></codeline>
<codeline lineno="1244"><highlight class="comment"></highlight></codeline>
<codeline lineno="1245"><highlight class="comment">============================================================</highlight></codeline>
<codeline lineno="1246"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_EnterWeaponDepthHack();</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_EnterModelDepthHack(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>depth<sp/>);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_LeaveDepthHack();</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_DrawElementsImmediate(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_RenderTriangleSurface(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_T_RenderTriangleSurface(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref><sp/>*surf<sp/>);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_RenderDrawSurfListWithFunction(<sp/><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref><sp/>**drawSurfs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numDrawSurfs,<sp/></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*triFunc_)(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref><sp/>*)<sp/>);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_RenderDrawSurfChainWithFunction(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref><sp/>*drawSurfs,<sp/></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*triFunc_)(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref><sp/>*)<sp/>);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_DrawShaderPasses(<sp/><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref><sp/>**drawSurfs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numDrawSurfs<sp/>);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_LoadShaderTextureMatrix(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*shaderRegisters,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtexture_stage__t" kindref="compound">textureStage_t</ref><sp/>*texture<sp/>);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_GetShaderTextureMatrix(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*shaderRegisters,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtexture_stage__t" kindref="compound">textureStage_t</ref><sp/>*texture,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>matrix[16]<sp/>);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_CreateSingleDrawInteractions(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref><sp/>*surf,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*DrawInteraction)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdraw_interaction__t" kindref="compound">drawInteraction_t</ref><sp/>*)<sp/>);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshader_stage__t" kindref="compound">shaderStage_t</ref><sp/>*RB_SetLightTexture(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref><sp/>*light<sp/>);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_DrawView(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data<sp/>);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_DetermineLightScale(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_STD_LightScale(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_BeginDrawingView<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1272"><highlight class="comment">============================================================</highlight></codeline>
<codeline lineno="1273"><highlight class="comment"></highlight></codeline>
<codeline lineno="1274"><highlight class="comment">DRAW_STANDARD</highlight></codeline>
<codeline lineno="1275"><highlight class="comment"></highlight></codeline>
<codeline lineno="1276"><highlight class="comment">============================================================</highlight></codeline>
<codeline lineno="1277"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_DrawElementsWithCounters(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>);</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_DrawShadowElementsWithCounters(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numIndexes<sp/>);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_STD_FillDepthBuffer(<sp/><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref><sp/>**drawSurfs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numDrawSurfs<sp/>);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_BindVariableStageImage(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtexture_stage__t" kindref="compound">textureStage_t</ref><sp/>*texture,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*shaderRegisters<sp/>);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_BindStageTexture(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*shaderRegisters,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtexture_stage__t" kindref="compound">textureStage_t</ref><sp/>*texture,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref><sp/>*surf<sp/>);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_FinishStageTexture(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtexture_stage__t" kindref="compound">textureStage_t</ref><sp/>*texture,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref><sp/>*surf<sp/>);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_StencilShadowPass(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref><sp/>*drawSurfs<sp/>);</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_STD_DrawView(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_STD_FogAllLights(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_BakeTextureMatrixIntoTexgen(<sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/>lightProject[3],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>textureMatrix[16]<sp/>);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1291"><highlight class="comment">============================================================</highlight></codeline>
<codeline lineno="1292"><highlight class="comment"></highlight></codeline>
<codeline lineno="1293"><highlight class="comment">DRAW_*</highlight></codeline>
<codeline lineno="1294"><highlight class="comment"></highlight></codeline>
<codeline lineno="1295"><highlight class="comment">============================================================</highlight></codeline>
<codeline lineno="1296"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>RB_ARB_DrawInteractions(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>R_R200_Init(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>RB_R200_DrawInteractions(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>R_NV10_Init(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>RB_NV10_DrawInteractions(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>R_NV20_Init(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>RB_NV20_DrawInteractions(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>R_ARB2_Init(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>RB_ARB2_DrawInteractions(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>R_ReloadARBPrograms_f(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref><sp/>&amp;args<sp/>);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>R_FindARBProgram(<sp/>GLenum<sp/>target,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*program<sp/>);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/>PROG_INVALID,</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/>VPROG_INTERACTION,</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/>VPROG_ENVIRONMENT,</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/>VPROG_BUMPY_ENVIRONMENT,</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/>VPROG_R200_INTERACTION,</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/>VPROG_STENCIL_SHADOW,</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/>VPROG_NV20_BUMP_AND_LIGHT,</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/>VPROG_NV20_DIFFUSE_COLOR,</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/>VPROG_NV20_SPECULAR_COLOR,</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/>VPROG_NV20_DIFFUSE_AND_SPECULAR_COLOR,</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/>VPROG_TEST,</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/>FPROG_INTERACTION,</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/>FPROG_ENVIRONMENT,</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/>FPROG_BUMPY_ENVIRONMENT,</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>FPROG_TEST,</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>VPROG_AMBIENT,</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/>FPROG_AMBIENT,</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/>VPROG_GLASSWARP,</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/>FPROG_GLASSWARP,</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>PROG_USER</highlight></codeline>
<codeline lineno="1335"><highlight class="normal">}<sp/>program_t;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1338"><highlight class="comment"></highlight></codeline>
<codeline lineno="1339"><highlight class="comment"><sp/><sp/>All<sp/>vertex<sp/>programs<sp/>use<sp/>the<sp/>same<sp/>constant<sp/>register<sp/>layout:</highlight></codeline>
<codeline lineno="1340"><highlight class="comment"></highlight></codeline>
<codeline lineno="1341"><highlight class="comment">c[4]<sp/><sp/><sp/><sp/>localLightOrigin</highlight></codeline>
<codeline lineno="1342"><highlight class="comment">c[5]<sp/><sp/><sp/><sp/>localViewOrigin</highlight></codeline>
<codeline lineno="1343"><highlight class="comment">c[6]<sp/><sp/><sp/><sp/>lightProjection<sp/>S</highlight></codeline>
<codeline lineno="1344"><highlight class="comment">c[7]<sp/><sp/><sp/><sp/>lightProjection<sp/>T</highlight></codeline>
<codeline lineno="1345"><highlight class="comment">c[8]<sp/><sp/><sp/><sp/>lightProjection<sp/>Q</highlight></codeline>
<codeline lineno="1346"><highlight class="comment">c[9]<sp/><sp/><sp/><sp/>lightFalloff<sp/><sp/><sp/><sp/>S</highlight></codeline>
<codeline lineno="1347"><highlight class="comment">c[10]<sp/><sp/><sp/>bumpMatrix<sp/>S</highlight></codeline>
<codeline lineno="1348"><highlight class="comment">c[11]<sp/><sp/><sp/>bumpMatrix<sp/>T</highlight></codeline>
<codeline lineno="1349"><highlight class="comment">c[12]<sp/><sp/><sp/>diffuseMatrix<sp/>S</highlight></codeline>
<codeline lineno="1350"><highlight class="comment">c[13]<sp/><sp/><sp/>diffuseMatrix<sp/>T</highlight></codeline>
<codeline lineno="1351"><highlight class="comment">c[14]<sp/><sp/><sp/>specularMatrix<sp/>S</highlight></codeline>
<codeline lineno="1352"><highlight class="comment">c[15]<sp/><sp/><sp/>specularMatrix<sp/>T</highlight></codeline>
<codeline lineno="1353"><highlight class="comment"></highlight></codeline>
<codeline lineno="1354"><highlight class="comment"></highlight></codeline>
<codeline lineno="1355"><highlight class="comment">c[20]<sp/><sp/><sp/>light<sp/>falloff<sp/>tq<sp/>constant</highlight></codeline>
<codeline lineno="1356"><highlight class="comment"></highlight></codeline>
<codeline lineno="1357"><highlight class="comment">//<sp/>texture<sp/>0<sp/>was<sp/>cube<sp/>map</highlight></codeline>
<codeline lineno="1358"><highlight class="comment">//<sp/>texture<sp/>1<sp/>will<sp/>be<sp/>the<sp/>per-surface<sp/>bump<sp/>map</highlight></codeline>
<codeline lineno="1359"><highlight class="comment">//<sp/>texture<sp/>2<sp/>will<sp/>be<sp/>the<sp/>light<sp/>falloff<sp/>texture</highlight></codeline>
<codeline lineno="1360"><highlight class="comment">//<sp/>texture<sp/>3<sp/>will<sp/>be<sp/>the<sp/>light<sp/>projection<sp/>texture</highlight></codeline>
<codeline lineno="1361"><highlight class="comment">//<sp/>texture<sp/>4<sp/>is<sp/>the<sp/>per-surface<sp/>diffuse<sp/>map</highlight></codeline>
<codeline lineno="1362"><highlight class="comment">//<sp/>texture<sp/>5<sp/>is<sp/>the<sp/>per-surface<sp/>specular<sp/>map</highlight></codeline>
<codeline lineno="1363"><highlight class="comment">//<sp/>texture<sp/>6<sp/>is<sp/>the<sp/>specular<sp/>half<sp/>angle<sp/>cube<sp/>map</highlight></codeline>
<codeline lineno="1364"><highlight class="comment"></highlight></codeline>
<codeline lineno="1365"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/>PP_LIGHT_ORIGIN<sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/>PP_VIEW_ORIGIN,</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/>PP_LIGHT_PROJECT_S,</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/>PP_LIGHT_PROJECT_T,</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>PP_LIGHT_PROJECT_Q,</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/>PP_LIGHT_FALLOFF_S,</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/>PP_BUMP_MATRIX_S,</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/>PP_BUMP_MATRIX_T,</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/>PP_DIFFUSE_MATRIX_S,</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>PP_DIFFUSE_MATRIX_T,</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/>PP_SPECULAR_MATRIX_S,</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/>PP_SPECULAR_MATRIX_T,</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/>PP_COLOR_MODULATE,</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/>PP_COLOR_ADD,</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/>PP_LIGHT_FALLOFF_TQ<sp/>=<sp/>20<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>for<sp/>NV<sp/>programs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal">}<sp/>programParameter_t;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1388"><highlight class="comment">============================================================</highlight></codeline>
<codeline lineno="1389"><highlight class="comment"></highlight></codeline>
<codeline lineno="1390"><highlight class="comment">TR_STENCILSHADOWS</highlight></codeline>
<codeline lineno="1391"><highlight class="comment"></highlight></codeline>
<codeline lineno="1392"><highlight class="comment">&quot;facing&quot;<sp/>should<sp/>have<sp/>one<sp/>more<sp/>element<sp/>than<sp/>tri-&gt;numIndexes<sp/>/<sp/>3,<sp/>which<sp/>should<sp/>be<sp/>set<sp/>to<sp/>1</highlight></codeline>
<codeline lineno="1393"><highlight class="comment"></highlight></codeline>
<codeline lineno="1394"><highlight class="comment">============================================================</highlight></codeline>
<codeline lineno="1395"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_MakeShadowFrustums(<sp/><ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref><sp/>*def<sp/>);</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/>SG_DYNAMIC,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>infinite<sp/>projections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/>SG_STATIC,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clip<sp/>to<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/>SG_OFFLINE<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>perform<sp/>very<sp/>time<sp/>consuming<sp/>optimizations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal">}<sp/>shadowGen_t;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*R_CreateShadowVolume(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref><sp/>*ent,</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref><sp/>*light,</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shadowGen_t<sp/>optimize,<sp/><ref refid="structsrf_cull_info__t" kindref="compound">srfCullInfo_t</ref><sp/>&amp;cullInfo<sp/>);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1410"><highlight class="comment">============================================================</highlight></codeline>
<codeline lineno="1411"><highlight class="comment"></highlight></codeline>
<codeline lineno="1412"><highlight class="comment">TR_TURBOSHADOW</highlight></codeline>
<codeline lineno="1413"><highlight class="comment"></highlight></codeline>
<codeline lineno="1414"><highlight class="comment">Fast,<sp/>non-clipped<sp/>overshoot<sp/>shadow<sp/>volumes</highlight></codeline>
<codeline lineno="1415"><highlight class="comment"></highlight></codeline>
<codeline lineno="1416"><highlight class="comment">&quot;facing&quot;<sp/>should<sp/>have<sp/>one<sp/>more<sp/>element<sp/>than<sp/>tri-&gt;numIndexes<sp/>/<sp/>3,<sp/>which<sp/>should<sp/>be<sp/>set<sp/>to<sp/>1</highlight></codeline>
<codeline lineno="1417"><highlight class="comment">calling<sp/>this<sp/>function<sp/>may<sp/>modify<sp/>&quot;facing&quot;<sp/>based<sp/>on<sp/>culling</highlight></codeline>
<codeline lineno="1418"><highlight class="comment"></highlight></codeline>
<codeline lineno="1419"><highlight class="comment">============================================================</highlight></codeline>
<codeline lineno="1420"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*R_CreateVertexProgramTurboShadowVolume(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref><sp/>*ent,</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref><sp/>*light,</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsrf_cull_info__t" kindref="compound">srfCullInfo_t</ref><sp/>&amp;cullInfo<sp/>);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*R_CreateTurboShadowVolume(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref><sp/>*ent,</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref><sp/>*light,</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsrf_cull_info__t" kindref="compound">srfCullInfo_t</ref><sp/>&amp;cullInfo<sp/>);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1431"><highlight class="comment">============================================================</highlight></codeline>
<codeline lineno="1432"><highlight class="comment"></highlight></codeline>
<codeline lineno="1433"><highlight class="comment">util/shadowopt3</highlight></codeline>
<codeline lineno="1434"><highlight class="comment"></highlight></codeline>
<codeline lineno="1435"><highlight class="comment">dmap<sp/>time<sp/>optimization<sp/>of<sp/>shadow<sp/>volumes,<sp/>called<sp/>from<sp/>R_CreateShadowVolume</highlight></codeline>
<codeline lineno="1436"><highlight class="comment"></highlight></codeline>
<codeline lineno="1437"><highlight class="comment">============================================================</highlight></codeline>
<codeline lineno="1438"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441" refid="structoptimized_shadow__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/>*verts;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>includes<sp/>both<sp/>front<sp/>and<sp/>back<sp/>projections,<sp/>caller<sp/>should<sp/>free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>numVerts;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/>glIndex_t<sp/><sp/><sp/>*indexes;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>caller<sp/>should<sp/>free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>indexes<sp/>must<sp/>be<sp/>sorted<sp/>frontCap,<sp/>rearCap,<sp/>silPlanes<sp/>so<sp/>the<sp/>caps<sp/>can<sp/>be<sp/>removed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>the<sp/>viewer<sp/>is<sp/>in<sp/>a<sp/>position<sp/>that<sp/>they<sp/>don&apos;t<sp/>need<sp/>to<sp/>see<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>numFrontCapIndexes;</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>numRearCapIndexes;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>numSilPlaneIndexes;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>totalIndexes;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal">}<sp/><ref refid="structoptimized_shadow__t" kindref="compound">optimizedShadow_t</ref>;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><ref refid="structoptimized_shadow__t" kindref="compound">optimizedShadow_t</ref><sp/>SuperOptimizeOccluders(<sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>*verts,<sp/>glIndex_t<sp/>*indexes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numIndexes,<sp/></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classid_plane" kindref="compound">idPlane</ref><sp/>projectionPlane,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>projectionOrigin<sp/>);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CleanupOptimizedShadowTris(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>);</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1460"><highlight class="comment">============================================================</highlight></codeline>
<codeline lineno="1461"><highlight class="comment"></highlight></codeline>
<codeline lineno="1462"><highlight class="comment">TRISURF</highlight></codeline>
<codeline lineno="1463"><highlight class="comment"></highlight></codeline>
<codeline lineno="1464"><highlight class="comment">============================================================</highlight></codeline>
<codeline lineno="1465"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USE_TRI_DATA_ALLOCATOR</highlight></codeline>
<codeline lineno="1468"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_InitTriSurfData(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_ShutdownTriSurfData(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_PurgeTriSurfData(<sp/><ref refid="structframe_data__t" kindref="compound">frameData_t</ref><sp/>*frame<sp/>);</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_ShowTriSurfMemory_f(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_cmd_args" kindref="compound">idCmdArgs</ref><sp/>&amp;args<sp/>);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*<sp/><sp/><sp/><sp/>R_AllocStaticTriSurf(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*<sp/><sp/><sp/><sp/>R_CopyStaticTriSurf(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_AllocStaticTriSurfVerts(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numVerts<sp/>);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_AllocStaticTriSurfIndexes(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numIndexes<sp/>);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_AllocStaticTriSurfShadowVerts(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numVerts<sp/>);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_AllocStaticTriSurfPlanes(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numIndexes<sp/>);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_ResizeStaticTriSurfVerts(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numVerts<sp/>);</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_ResizeStaticTriSurfIndexes(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numIndexes<sp/>);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_ResizeStaticTriSurfShadowVerts(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numVerts<sp/>);</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_ReferenceStaticTriSurfVerts(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*reference<sp/>);</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_ReferenceStaticTriSurfIndexes(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*reference<sp/>);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_FreeStaticTriSurfSilIndexes(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>);</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_FreeStaticTriSurf(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>);</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_FreeStaticTriSurfVertexCaches(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_ReallyFreeStaticTriSurf(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_FreeDeferredTriSurfs(<sp/><ref refid="structframe_data__t" kindref="compound">frameData_t</ref><sp/>*frame<sp/>);</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_TriSurfMemory(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>);</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_BoundTriSurf(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_RemoveDuplicatedTriangles(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>);</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_CreateSilIndexes(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_RemoveDegenerateTriangles(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_RemoveUnusedVerts(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_RangeCheckIndexes(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_CreateVertexNormals(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>also<sp/>called<sp/>by<sp/>dmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_DeriveFacePlanes(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>also<sp/>called<sp/>by<sp/>renderbump</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_CleanupTriangles(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>createNormals,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>identifySilEdges,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useUnsmoothedTangents<sp/>);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_ReverseTriangles(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Only<sp/>deals<sp/>with<sp/>vertexes<sp/>and<sp/>indexes,<sp/>not<sp/>silhouettes,<sp/>planes,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Does<sp/>NOT<sp/>perform<sp/>a<sp/>cleanup<sp/>triangles,<sp/>so<sp/>there<sp/>may<sp/>be<sp/>duplicated<sp/>verts<sp/>in<sp/>the<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*<sp/><sp/><sp/><sp/>R_MergeSurfaceList(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>**surfaces,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numSurfaces<sp/>);</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*<sp/><sp/><sp/><sp/>R_MergeTriangles(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri2<sp/>);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>deformed<sp/>verts<sp/>have<sp/>significant<sp/>enough<sp/>texture<sp/>coordinate<sp/>changes<sp/>to<sp/>reverse<sp/>the<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight><highlight class="comment">//<sp/>polarity<sp/>of<sp/>a<sp/>triangle,<sp/>the<sp/>tangents<sp/>will<sp/>be<sp/>incorrect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_DeriveTangents(<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allocFacePlanes<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight><highlight class="comment">//<sp/>deformable<sp/>meshes<sp/>precalculate<sp/>as<sp/>much<sp/>as<sp/>possible<sp/>from<sp/>a<sp/>base<sp/>frame,<sp/>then<sp/>generate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight><highlight class="comment">//<sp/>complete<sp/>srfTriangles_t<sp/>from<sp/>just<sp/>a<sp/>new<sp/>set<sp/>of<sp/>vertexes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1514" refid="structdeform_info__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdeform_info__s" kindref="compound">deformInfo_s</ref><sp/>{</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numSourceVerts;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>numOutputVerts<sp/>may<sp/>be<sp/>smaller<sp/>if<sp/>the<sp/>input<sp/>had<sp/>duplicated<sp/>or<sp/>degenerate<sp/>triangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>will<sp/>often<sp/>be<sp/>larger<sp/>if<sp/>the<sp/>input<sp/>had<sp/>mirrored<sp/>texture<sp/>seams<sp/>that<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>busted<sp/>for<sp/>proper<sp/>tangent<sp/>spaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numOutputVerts;</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numMirroredVerts;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mirroredVerts;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numIndexes;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/>glIndex_t<sp/>*<sp/><sp/><sp/><sp/><sp/>indexes;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/>glIndex_t<sp/>*<sp/><sp/><sp/><sp/><sp/>silIndexes;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numDupVerts;</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dupVerts;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numSilEdges;</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsil_edge__t" kindref="compound">silEdge_t</ref><sp/>*<sp/><sp/><sp/><sp/><sp/>silEdges;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdominant_tri__s" kindref="compound">dominantTri_t</ref><sp/>*<sp/>dominantTris;</highlight></codeline>
<codeline lineno="1537"><highlight class="normal">}<sp/><ref refid="structdeform_info__s" kindref="compound">deformInfo_t</ref>;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><ref refid="structdeform_info__s" kindref="compound">deformInfo_t</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>R_BuildDeformInfo(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numVerts,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_draw_vert" kindref="compound">idDrawVert</ref><sp/>*verts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numIndexes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*indexes,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useUnsmoothedTangents<sp/>);</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_FreeDeformInfo(<sp/><ref refid="structdeform_info__s" kindref="compound">deformInfo_t</ref><sp/>*deformInfo<sp/>);</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R_DeformInfoMemoryUsed(<sp/><ref refid="structdeform_info__s" kindref="compound">deformInfo_t</ref><sp/>*deformInfo<sp/>);</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1545"><highlight class="comment">============================================================</highlight></codeline>
<codeline lineno="1546"><highlight class="comment"></highlight></codeline>
<codeline lineno="1547"><highlight class="comment">SUBVIEW</highlight></codeline>
<codeline lineno="1548"><highlight class="comment"></highlight></codeline>
<codeline lineno="1549"><highlight class="comment">============================================================</highlight></codeline>
<codeline lineno="1550"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>R_PreciseCullSurface(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref><sp/>*drawSurf,<sp/><ref refid="classid_bounds" kindref="compound">idBounds</ref><sp/>&amp;ndcBounds<sp/>);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>R_GenerateSubViews(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1556"><highlight class="comment">============================================================</highlight></codeline>
<codeline lineno="1557"><highlight class="comment"></highlight></codeline>
<codeline lineno="1558"><highlight class="comment">SCENE<sp/>GENERATION</highlight></codeline>
<codeline lineno="1559"><highlight class="comment"></highlight></codeline>
<codeline lineno="1560"><highlight class="comment">============================================================</highlight></codeline>
<codeline lineno="1561"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_InitFrameData(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_ShutdownFrameData(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>R_CountFrameData(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_ToggleSmpFrame(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*R_FrameAlloc(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes<sp/>);</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*R_ClearedFrameAlloc(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes<sp/>);</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_FrameFree(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data<sp/>);</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*R_StaticAlloc(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>malloc<sp/>with<sp/>error<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*R_ClearedStaticAlloc(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes<sp/>);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>memset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_StaticFree(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data<sp/>);</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1577"><highlight class="comment">=============================================================</highlight></codeline>
<codeline lineno="1578"><highlight class="comment"></highlight></codeline>
<codeline lineno="1579"><highlight class="comment">RENDERER<sp/>DEBUG<sp/>TOOLS</highlight></codeline>
<codeline lineno="1580"><highlight class="comment"></highlight></codeline>
<codeline lineno="1581"><highlight class="comment">=============================================================</highlight></codeline>
<codeline lineno="1582"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>RB_DrawTextLength(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>);</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_AddDebugText(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;origin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>&amp;color,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_mat3" kindref="compound">idMat3</ref><sp/>&amp;viewAxis,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>align,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lifetime,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>depthTest<sp/>);</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_ClearDebugText(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time<sp/>);</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_AddDebugLine(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>&amp;color,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;end,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lifeTime,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>depthTest<sp/>);</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_ClearDebugLines(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time<sp/>);</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_AddDebugPolygon(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec4" kindref="compound">idVec4</ref><sp/>&amp;color,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_winding" kindref="compound">idWinding</ref><sp/>&amp;winding,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lifeTime,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>depthTest<sp/>);</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_ClearDebugPolygons(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time<sp/>);</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_DrawBounds(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_bounds" kindref="compound">idBounds</ref><sp/>&amp;bounds<sp/>);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_ShowLights(<sp/><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref><sp/>**drawSurfs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numDrawSurfs<sp/>);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_ShowLightCount(<sp/><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref><sp/>**drawSurfs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numDrawSurfs<sp/>);</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_PolygonClear(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_ScanStencilBuffer(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_ShowDestinationAlpha(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_ShowOverdraw(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_RenderDebugTools(<sp/><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref><sp/>**drawSurfs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numDrawSurfs<sp/>);</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_ShutdownDebugTools(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1602"><highlight class="comment">=============================================================</highlight></codeline>
<codeline lineno="1603"><highlight class="comment"></highlight></codeline>
<codeline lineno="1604"><highlight class="comment">TR_BACKEND</highlight></codeline>
<codeline lineno="1605"><highlight class="comment"></highlight></codeline>
<codeline lineno="1606"><highlight class="comment">=============================================================</highlight></codeline>
<codeline lineno="1607"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_SetDefaultGLState(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_SetGL2D(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight><highlight class="comment">//<sp/>write<sp/>a<sp/>comment<sp/>to<sp/>the<sp/>r_logFile<sp/>if<sp/>it<sp/>is<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_LogComment(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*comment,<sp/>...<sp/>)<sp/>id_attribute((format(printf,1,2)));</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_ShowImages(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_ExecuteBackEndCommands(<sp/>const<sp/><ref refid="structempty_command__t" kindref="compound">emptyCommand_t</ref><sp/>*cmds<sp/>);</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1621"><highlight class="comment">=============================================================</highlight></codeline>
<codeline lineno="1622"><highlight class="comment"></highlight></codeline>
<codeline lineno="1623"><highlight class="comment">TR_GUISURF</highlight></codeline>
<codeline lineno="1624"><highlight class="comment"></highlight></codeline>
<codeline lineno="1625"><highlight class="comment">=============================================================</highlight></codeline>
<codeline lineno="1626"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_SurfaceToTextureAxis(<sp/>const<sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;origin,<sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>axis[3]<sp/>);</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_RenderGuiSurf(<sp/><ref refid="classid_user_interface" kindref="compound">idUserInterface</ref><sp/>*gui,<sp/><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref><sp/>*drawSurf<sp/>);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1632"><highlight class="comment">=============================================================</highlight></codeline>
<codeline lineno="1633"><highlight class="comment"></highlight></codeline>
<codeline lineno="1634"><highlight class="comment">TR_ORDERINDEXES</highlight></codeline>
<codeline lineno="1635"><highlight class="comment"></highlight></codeline>
<codeline lineno="1636"><highlight class="comment">=============================================================</highlight></codeline>
<codeline lineno="1637"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_OrderIndexes(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numIndexes,<sp/>glIndex_t<sp/>*indexes<sp/>);</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1642"><highlight class="comment">=============================================================</highlight></codeline>
<codeline lineno="1643"><highlight class="comment"></highlight></codeline>
<codeline lineno="1644"><highlight class="comment">TR_DEFORM</highlight></codeline>
<codeline lineno="1645"><highlight class="comment"></highlight></codeline>
<codeline lineno="1646"><highlight class="comment">=============================================================</highlight></codeline>
<codeline lineno="1647"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>R_DeformDrawSurf(<sp/><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref><sp/>*drawSurf<sp/>);</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1652"><highlight class="comment">=============================================================</highlight></codeline>
<codeline lineno="1653"><highlight class="comment"></highlight></codeline>
<codeline lineno="1654"><highlight class="comment">TR_TRACE</highlight></codeline>
<codeline lineno="1655"><highlight class="comment"></highlight></codeline>
<codeline lineno="1656"><highlight class="comment">=============================================================</highlight></codeline>
<codeline lineno="1657"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight></codeline>
<codeline lineno="1659" refid="structlocal_trace__t" refkind="compound"><highlight class="normal">typedef<sp/>struct<sp/>{</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fraction;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>valid<sp/>if<sp/>fraction<sp/>&lt;<sp/>1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/>point;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/><sp/><sp/><sp/><sp/><sp/>normal;</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexes[3];</highlight></codeline>
<codeline lineno="1665"><highlight class="normal">}<sp/><ref refid="structlocal_trace__t" kindref="compound">localTrace_t</ref>;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><ref refid="structlocal_trace__t" kindref="compound">localTrace_t</ref><sp/>R_LocalTrace(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_vec3" kindref="compound">idVec3</ref><sp/>&amp;end,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsrf_triangles__s" kindref="compound">srfTriangles_t</ref><sp/>*tri<sp/>);</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RB_ShowTrace(<sp/><ref refid="structdraw_surf__s" kindref="compound">drawSurf_t</ref><sp/>**drawSurfs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numDrawSurfs<sp/>);</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1671"><highlight class="comment">=============================================================</highlight></codeline>
<codeline lineno="1672"><highlight class="comment"></highlight></codeline>
<codeline lineno="1673"><highlight class="comment">TR_SHADOWBOUNDS</highlight></codeline>
<codeline lineno="1674"><highlight class="comment"></highlight></codeline>
<codeline lineno="1675"><highlight class="comment">=============================================================</highlight></codeline>
<codeline lineno="1676"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><ref refid="classid_screen_rect" kindref="compound">idScreenRect</ref><sp/>R_CalcIntersectionScissor(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_render_light_local" kindref="compound">idRenderLightLocal</ref><sp/>*<sp/>lightDef,</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classid_render_entity_local" kindref="compound">idRenderEntityLocal</ref><sp/>*<sp/>entityDef,</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structview_def__s" kindref="compound">viewDef_t</ref><sp/>*<sp/>viewDef<sp/>);</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight><highlight class="comment">//=============================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;RenderWorld_local.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GuiModel.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;VertexCache.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!__TR_LOCAL_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/renderer/tr_local.h"/>
  </compounddef>
</doxygen>
