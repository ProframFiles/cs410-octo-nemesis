<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="url_8c" kind="file">
    <compoundname>url.c</compoundname>
    <includes refid="lib_2setup_8h" local="yes">setup.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">io.h</includes>
    <includes refid="urldata_8h" local="yes">urldata.h</includes>
    <includes refid="netrc_8h" local="yes">netrc.h</includes>
    <includes refid="formdata_8h" local="yes">formdata.h</includes>
    <includes refid="curl_2lib_2base64_8h" local="yes">base64.h</includes>
    <includes refid="ssluse_8h" local="yes">ssluse.h</includes>
    <includes refid="hostip_8h" local="yes">hostip.h</includes>
    <includes refid="if2ip_8h" local="yes">if2ip.h</includes>
    <includes refid="transfer_8h" local="yes">transfer.h</includes>
    <includes refid="sendf_8h" local="yes">sendf.h</includes>
    <includes refid="progress_8h" local="yes">progress.h</includes>
    <includes refid="cookie_8h" local="yes">cookie.h</includes>
    <includes refid="strequal_8h" local="yes">strequal.h</includes>
    <includes refid="escape_8h" local="yes">escape.h</includes>
    <includes refid="strtok_8h" local="yes">strtok.h</includes>
    <includes refid="share_8h" local="yes">share.h</includes>
    <includes refid="content__encoding_8h" local="yes">content_encoding.h</includes>
    <includes refid="http__digest_8h" local="yes">http_digest.h</includes>
    <includes refid="http__negotiate_8h" local="yes">http_negotiate.h</includes>
    <includes refid="ftp_8h" local="yes">ftp.h</includes>
    <includes refid="curl_2lib_2dict_8h" local="yes">dict.h</includes>
    <includes refid="telnet_8h" local="yes">telnet.h</includes>
    <includes refid="http_8h" local="yes">http.h</includes>
    <includes refid="curl_2lib_2file_8h" local="yes">file.h</includes>
    <includes refid="ldap_8h" local="yes">ldap.h</includes>
    <includes refid="url_8h" local="yes">url.h</includes>
    <includes refid="connect_8h" local="yes">connect.h</includes>
    <includes refid="types_8h" local="no">curl/types.h</includes>
    <includes refid="mprintf_8h" local="no">curl/mprintf.h</includes>
    <incdepgraph>
      <node id="556">
        <label>sys/stat.h</label>
      </node>
      <node id="552">
        <label>stdarg.h</label>
      </node>
      <node id="553">
        <label>stdlib.h</label>
      </node>
      <node id="557">
        <label>errno.h</label>
      </node>
      <node id="559">
        <label>io.h</label>
      </node>
      <node id="549">
        <label>E:/sources/3rd_party/DOOM/neo/curl/lib/url.c</label>
        <link refid="url.c"/>
        <childnode refid="550" relation="include">
        </childnode>
        <childnode refid="551" relation="include">
        </childnode>
        <childnode refid="552" relation="include">
        </childnode>
        <childnode refid="553" relation="include">
        </childnode>
        <childnode refid="554" relation="include">
        </childnode>
        <childnode refid="555" relation="include">
        </childnode>
        <childnode refid="556" relation="include">
        </childnode>
        <childnode refid="557" relation="include">
        </childnode>
        <childnode refid="558" relation="include">
        </childnode>
        <childnode refid="559" relation="include">
        </childnode>
      </node>
      <node id="555">
        <label>sys/types.h</label>
      </node>
      <node id="551">
        <label>string.h</label>
      </node>
      <node id="558">
        <label>time.h</label>
      </node>
      <node id="554">
        <label>ctype.h</label>
      </node>
      <node id="550">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="url_8c_1ad0c1862ea86ace30c84408d669a3fc7e" prot="public" static="no">
        <name>_MPRINTF_REPLACE</name>
        <initializer>/* use our functions only */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="127" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="url_8c_1a2486c8e75432fa519185126d057f069a" prot="public" static="no">
        <name>LEAST_PATH_ALLOC</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="2070" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="url_8c_1ab227b4752f663b4d2393720098941282" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ConnectionKillOne</definition>
        <argsstring>(struct SessionHandle *data)</argsstring>
        <name>ConnectionKillOne</name>
        <param>
          <type>struct <ref refid="struct_session_handle" kindref="compound">SessionHandle</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="140" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="1508" bodyend="1561"/>
      </memberdef>
      <memberdef kind="function" id="url_8c_1a7defd357e2cbfd598176a2a848e40333" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ConnectionExists</definition>
        <argsstring>(struct SessionHandle *data, struct connectdata *needle, struct connectdata **usethis)</argsstring>
        <name>ConnectionExists</name>
        <param>
          <type>struct <ref refid="struct_session_handle" kindref="compound">SessionHandle</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>needle</declname>
        </param>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> **</type>
          <declname>usethis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="141" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="1415" bodyend="1500"/>
      </memberdef>
      <memberdef kind="function" id="url_8c_1a9c2c3be4c9c3e8cb83a6f96fc11c8c00" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>static unsigned int ConnectionStore</definition>
        <argsstring>(struct SessionHandle *data, struct connectdata *conn)</argsstring>
        <name>ConnectionStore</name>
        <param>
          <type>struct <ref refid="struct_session_handle" kindref="compound">SessionHandle</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="144" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="1572" bodyend="1595"/>
      </memberdef>
      <memberdef kind="function" id="url_8c_1a98baec0bcf522ad3a5a145c7607850b7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool safe_strequal</definition>
        <argsstring>(char *str1, char *str2)</argsstring>
        <name>safe_strequal</name>
        <param>
          <type>char *</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="146" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="3398" bodyend="3406"/>
      </memberdef>
      <memberdef kind="function" id="url_8c_1acf70c870cde4729e5879d698a9375ae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Curl_safefree</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>Curl_safefree</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="172" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="172" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="url_8c_1a36ff583e44d9c573263d7a9a6d606ed9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_close</definition>
        <argsstring>(struct SessionHandle *data)</argsstring>
        <name>Curl_close</name>
        <param>
          <type>struct <ref refid="struct_session_handle" kindref="compound">SessionHandle</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="187" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="187" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="url_8c_1a88321662adcbfeafcca0b3df235b4aa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_open</definition>
        <argsstring>(struct SessionHandle **curl)</argsstring>
        <name>Curl_open</name>
        <param>
          <type>struct <ref refid="struct_session_handle" kindref="compound">SessionHandle</ref> **</type>
          <declname>curl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="249" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="249" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="url_8c_1a5b0a4cd8ac014c90962deaf5926db53d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_setopt</definition>
        <argsstring>(struct SessionHandle *data, CURLoption option,...)</argsstring>
        <name>Curl_setopt</name>
        <param>
          <type>struct <ref refid="struct_session_handle" kindref="compound">SessionHandle</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>CURLoption</type>
          <declname>option</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="343" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="343" bodyend="1311"/>
      </memberdef>
      <memberdef kind="function" id="url_8c_1acf190b0fb1891ec6f4e4d78e0a34abb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_disconnect</definition>
        <argsstring>(struct connectdata *conn)</argsstring>
        <name>Curl_disconnect</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="1313" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="1313" bodyend="1381"/>
      </memberdef>
      <memberdef kind="function" id="url_8c_1a9ea89285fa222892a9273f7558ecf66d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SocketIsDead</definition>
        <argsstring>(curl_socket_t sock)</argsstring>
        <name>SocketIsDead</name>
        <param>
          <type>curl_socket_t</type>
          <declname>sock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="1388" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="1388" bodyend="1407"/>
      </memberdef>
      <memberdef kind="function" id="url_8c_1ae8e29d1fac3ab6de8f81b44979949cd2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int handleSock5Proxy</definition>
        <argsstring>(const char *proxy_name, const char *proxy_password, struct connectdata *conn)</argsstring>
        <name>handleSock5Proxy</name>
        <param>
          <type>const char *</type>
          <declname>proxy_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>proxy_password</declname>
        </param>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="1601" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="1601" bodyend="1808"/>
      </memberdef>
      <memberdef kind="function" id="url_8c_1a803bcb5b8a593dcbde8d94bf8f71ecac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>static CURLcode ConnectPlease</definition>
        <argsstring>(struct connectdata *conn, struct Curl_dns_entry *hostaddr, bool *connected)</argsstring>
        <name>ConnectPlease</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>struct <ref refid="struct_curl__dns__entry" kindref="compound">Curl_dns_entry</ref> *</type>
          <declname>hostaddr</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>connected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="1810" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="1810" bodyend="1858"/>
      </memberdef>
      <memberdef kind="function" id="url_8c_1a24385d0bd63a05ac94bb0b5b5dcba96a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void verboseconnect</definition>
        <argsstring>(struct connectdata *conn, struct Curl_dns_entry *dns)</argsstring>
        <name>verboseconnect</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>struct <ref refid="struct_curl__dns__entry" kindref="compound">Curl_dns_entry</ref> *</type>
          <declname>dns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="1863" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="1863" bodyend="1919"/>
      </memberdef>
      <memberdef kind="function" id="url_8c_1a3ecc63dabd5af88992e6047a8c4f1f55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_protocol_connect</definition>
        <argsstring>(struct connectdata *conn, struct Curl_dns_entry *hostaddr)</argsstring>
        <name>Curl_protocol_connect</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>struct <ref refid="struct_curl__dns__entry" kindref="compound">Curl_dns_entry</ref> *</type>
          <declname>hostaddr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="1931" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="1931" bodyend="1961"/>
      </memberdef>
      <memberdef kind="function" id="url_8c_1a398ec3ea27c80593c867b41a82735b5c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>static CURLcode CreateConnection</definition>
        <argsstring>(struct SessionHandle *data, struct connectdata **in_connect, struct Curl_dns_entry **addr, bool *async)</argsstring>
        <name>CreateConnection</name>
        <param>
          <type>struct <ref refid="struct_session_handle" kindref="compound">SessionHandle</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> **</type>
          <declname>in_connect</declname>
        </param>
        <param>
          <type>struct <ref refid="struct_curl__dns__entry" kindref="compound">Curl_dns_entry</ref> **</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>async</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="1972" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="1972" bodyend="3133"/>
      </memberdef>
      <memberdef kind="function" id="url_8c_1af4e6e8c6c2b149a76dd0e02f91a26f2d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>static CURLcode SetupConnection</definition>
        <argsstring>(struct connectdata *conn, struct Curl_dns_entry *hostaddr)</argsstring>
        <name>SetupConnection</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>struct <ref refid="struct_curl__dns__entry" kindref="compound">Curl_dns_entry</ref> *</type>
          <declname>hostaddr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="3139" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="3139" bodyend="3215"/>
      </memberdef>
      <memberdef kind="function" id="url_8c_1ae8838f777fcdb05b92ae02cf19a77dd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_connect</definition>
        <argsstring>(struct SessionHandle *data, struct connectdata **in_connect, bool *asyncp)</argsstring>
        <name>Curl_connect</name>
        <param>
          <type>struct <ref refid="struct_session_handle" kindref="compound">SessionHandle</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> **</type>
          <declname>in_connect</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>asyncp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="3217" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="3217" bodyend="3250"/>
      </memberdef>
      <memberdef kind="function" id="url_8c_1aece5bb798be6876eb0b470fc12615a9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_async_resolved</definition>
        <argsstring>(struct connectdata *conn)</argsstring>
        <name>Curl_async_resolved</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="3254" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="3254" bodyend="3269"/>
      </memberdef>
      <memberdef kind="function" id="url_8c_1a036b7ebd68d6f4eb97e39dd43b412b70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_done</definition>
        <argsstring>(struct connectdata *conn)</argsstring>
        <name>Curl_done</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="3272" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="3272" bodyend="3328"/>
      </memberdef>
      <memberdef kind="function" id="url_8c_1a78b38e3a25ab595eedcede4c0485cb9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_do</definition>
        <argsstring>(struct connectdata **connp)</argsstring>
        <name>Curl_do</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> **</type>
          <declname>connp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="3330" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="3330" bodyend="3386"/>
      </memberdef>
      <memberdef kind="function" id="url_8c_1a403eff06aec0683cecfd8c37f6b69df1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_do_more</definition>
        <argsstring>(struct connectdata *conn)</argsstring>
        <name>Curl_do_more</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="3388" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="3388" bodyend="3396"/>
      </memberdef>
      <memberdef kind="function" id="url_8c_1a06da8e6460e0f4079e1c85e3869baeb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Curl_ssl_config_matches</definition>
        <argsstring>(struct ssl_config_data *data, struct ssl_config_data *needle)</argsstring>
        <name>Curl_ssl_config_matches</name>
        <param>
          <type>struct <ref refid="structssl__config__data" kindref="compound">ssl_config_data</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct <ref refid="structssl__config__data" kindref="compound">ssl_config_data</ref> *</type>
          <declname>needle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="3409" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="3409" bodyend="3423"/>
      </memberdef>
      <memberdef kind="function" id="url_8c_1ab8b58b9d0a3cdb3aacd3d1af8eac48ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Curl_clone_ssl_config</definition>
        <argsstring>(struct ssl_config_data *source, struct ssl_config_data *dest)</argsstring>
        <name>Curl_clone_ssl_config</name>
        <param>
          <type>struct <ref refid="structssl__config__data" kindref="compound">ssl_config_data</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>struct <ref refid="structssl__config__data" kindref="compound">ssl_config_data</ref> *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="3426" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="3426" bodyend="3464"/>
      </memberdef>
      <memberdef kind="function" id="url_8c_1ad24c499f8d94f6e66257b2e3a3fa2405" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Curl_free_ssl_config</definition>
        <argsstring>(struct ssl_config_data *sslc)</argsstring>
        <name>Curl_free_ssl_config</name>
        <param>
          <type>struct <ref refid="structssl__config__data" kindref="compound">ssl_config_data</ref> *</type>
          <declname>sslc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" line="3466" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="3466" bodyend="3482"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_<sp/><sp/><sp/>_<sp/>____<sp/><sp/>_</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>Project<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>___|<sp/>|<sp/>|<sp/>|<sp/><sp/>_<sp/>\|<sp/>|</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>__|<sp/>|<sp/>|<sp/>|<sp/>|_)<sp/>|<sp/>|</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(__|<sp/>|_|<sp/>|<sp/><sp/>_<sp/>&lt;|<sp/>|___</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\___|\___/|_|<sp/>\_\_____|</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1998<sp/>-<sp/>2004,<sp/>Daniel<sp/>Stenberg,<sp/>&lt;daniel@haxx.se&gt;,<sp/>et<sp/>al.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>is<sp/>licensed<sp/>as<sp/>described<sp/>in<sp/>the<sp/>file<sp/>COPYING,<sp/>which</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>you<sp/>should<sp/>have<sp/>received<sp/>as<sp/>part<sp/>of<sp/>this<sp/>distribution.<sp/>The<sp/>terms</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>are<sp/>also<sp/>available<sp/>at<sp/>http://curl.haxx.se/docs/copyright.html.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>opt<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>COPYING<sp/>file.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>basis,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>url.c,v<sp/>1.350<sp/>2004/03/12<sp/>08:55:51<sp/>bagder<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--<sp/>WIN32<sp/>approved<sp/>--<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;setup.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(WIN32)<sp/>&amp;&amp;<sp/>!defined(__GNUC__)<sp/>||<sp/>defined(__MINGW32__)</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;io.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SYS_SOCKET_H</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/socket.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;netinet/in.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNISTD_H</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;netdb.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_ARPA_INET_H</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;arpa/inet.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_NET_IF_H</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;net/if.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/ioctl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SYS_PARAM_H</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/param.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SYS_SELECT_H</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/select.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VMS</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;in.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;inet.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SETJMP_H</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;setjmp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HAVE_SELECT</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#error<sp/>&quot;We<sp/>can&apos;t<sp/>compile<sp/>without<sp/>select()<sp/>support!&quot;</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifndef<sp/>HAVE_SOCKET</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#error<sp/>&quot;We<sp/>can&apos;t<sp/>compile<sp/>without<sp/>socket()<sp/>support!&quot;</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_OPENSSL_ENGINE_H</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/engine.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;urldata.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;netrc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;formdata.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;base64.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ssluse.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hostip.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;if2ip.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;transfer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sendf.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;progress.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cookie.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;strequal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;escape.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;strtok.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;share.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;content_encoding.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;http_digest.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;http_negotiate.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>And<sp/>now<sp/>for<sp/>the<sp/>protocols<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ftp.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dict.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;telnet.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;http.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;file.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ldap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;url.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;connect.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;ca-bundle.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;curl/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HAVE_INET_NTOA_R)<sp/>&amp;&amp;<sp/>!defined(HAVE_INET_NTOA_R_DECL)</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;inet_ntoa_r.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_MPRINTF_REPLACE<sp/></highlight><highlight class="comment">/*<sp/>use<sp/>our<sp/>functions<sp/>only<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;curl/mprintf.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_KRB4</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;security.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>last<sp/>#include<sp/>file<sp/>should<sp/>be:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CURLDEBUG</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;memdebug.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Local<sp/>static<sp/>prototypes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ConnectionKillOne(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ConnectionExists(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*needle,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>**usethis);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ConnectionStore(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>safe_strequal(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str1,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str2);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_ARES</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>not<sp/>for<sp/>Win32,<sp/>unless<sp/>it<sp/>is<sp/>cygwin</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/>not<sp/>for<sp/>ares<sp/>builds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(WIN32)<sp/>||<sp/>defined(__CYGWIN32__)</highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RETSIGTYPE</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>RETSIGTYPE<sp/>void</highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SIGSETJMP</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>sigjmp_buf<sp/>curl_jmpenv;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">RETSIGTYPE<sp/>alarmfunc(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>for<sp/>&quot;-ansi<sp/>-Wall<sp/>-pedantic&quot;<sp/>to<sp/>stop<sp/>complaining!<sp/><sp/><sp/>(rabe)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>(void)sig;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SIGSETJMP</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>siglongjmp(curl_jmpenv,<sp/>1);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_ARES<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Curl_safefree(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ptr)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>free(ptr);</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>the<sp/>internal<sp/>function<sp/>curl_easy_cleanup()<sp/>calls.<sp/>This<sp/>should</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*<sp/>cleanup<sp/>and<sp/>free<sp/>all<sp/>resources<sp/>associated<sp/>with<sp/>this<sp/>sessionhandle.</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/>NOTE:<sp/>if<sp/>we<sp/>ever<sp/>add<sp/>something<sp/>that<sp/>attempts<sp/>to<sp/>write<sp/>to<sp/>a<sp/>socket<sp/>or</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/>similar<sp/>here,<sp/>we<sp/>must<sp/>ignore<sp/>SIGPIPE<sp/>first.<sp/>It<sp/>is<sp/>currently<sp/>only<sp/>done</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/>when<sp/>curl_easy_perform()<sp/>is<sp/>invoked.</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">CURLcode<sp/>Curl_close(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>through<sp/>all<sp/>open<sp/>connections<sp/>and<sp/>kill<sp/>them<sp/>one<sp/>by<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(-1<sp/>!=<sp/>ConnectionKillOne(data));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SSLEAY</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Close<sp/>down<sp/>all<sp/>open<sp/>SSL<sp/>info<sp/>and<sp/>sessions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>Curl_SSL_Close_All(data);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;change.cookielist)<sp/></highlight><highlight class="comment">/*<sp/>clean<sp/>up<sp/>list<sp/>if<sp/>any<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>curl_slist_free_all(data-&gt;change.cookielist);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>Curl_safefree(data-&gt;state.auth_host);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>Curl_safefree(data-&gt;state.scratch);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;change.proxy_alloc)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>free(data-&gt;change.proxy);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;change.referer_alloc)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>free(data-&gt;change.referer);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;change.url_alloc)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>free(data-&gt;change.url);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>Curl_safefree(data-&gt;state.headerbuff);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CURL_DISABLE_HTTP</highlight></codeline>
<codeline lineno="215"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>Curl_share_lock(data,<sp/>CURL_LOCK_DATA_COOKIE,<sp/>CURL_LOCK_ACCESS_SINGLE);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.cookiejar)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>have<sp/>a<sp/>&quot;destination&quot;<sp/>for<sp/>all<sp/>the<sp/>cookies<sp/>to<sp/>get<sp/>dumped<sp/>to<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Curl_cookie_output(data-&gt;cookies,<sp/>data-&gt;set.cookiejar))</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>failed<sp/>to<sp/>save<sp/>cookies<sp/>in<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.cookiejar);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!data-&gt;share<sp/>||<sp/>(data-&gt;cookies<sp/>!=<sp/>data-&gt;share-&gt;cookies)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>Curl_cookie_cleanup(data-&gt;cookies);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>Curl_share_unlock(data,<sp/>CURL_LOCK_DATA_COOKIE);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="228"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>the<sp/>connection<sp/>cache<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>free(data-&gt;state.connects);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>Curl_safefree(data-&gt;info.contenttype);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>Curl_digest_cleanup(data);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_ARES</highlight></codeline>
<codeline lineno="237"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>destroys<sp/>the<sp/>channel<sp/>and<sp/>we<sp/>cannot<sp/>use<sp/>it<sp/>anymore<sp/>after<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>ares_destroy(data-&gt;state.areschannel);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="240"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>longer<sp/>a<sp/>dirty<sp/>share,<sp/>if<sp/>it<sp/>exists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data-&gt;share)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;share-&gt;dirty--;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>free(data);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal">CURLcode<sp/>Curl_open(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>**curl)</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>don&apos;t<sp/>yet<sp/>support<sp/>specifying<sp/>the<sp/>URL<sp/>at<sp/>this<sp/>point<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Very<sp/>simple<sp/>start-up:<sp/>alloc<sp/>the<sp/>struct,<sp/>init<sp/>it<sp/>with<sp/>zeroes<sp/>and<sp/>return<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>data<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref>));</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!data)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>a<sp/>very<sp/>serious<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OUT_OF_MEMORY;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>memset(data,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref>));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_ARES</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ARES_SUCCESS<sp/>!=<sp/>ares_init(&amp;data-&gt;state.areschannel))<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>free(data);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FAILED_INIT;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>that<sp/>all<sp/>other<sp/>returns<sp/>from<sp/>this<sp/>function<sp/>should<sp/>destroy<sp/>the</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>ares<sp/>channel<sp/>before<sp/>returning<sp/>error!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>do<sp/>some<sp/>initial<sp/>setup<sp/>here,<sp/>all<sp/>those<sp/>fields<sp/>that<sp/>can&apos;t<sp/>be<sp/>just<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>data-&gt;state.headerbuff=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(HEADERSIZE);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!data-&gt;state.headerbuff)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>free(data);<sp/></highlight><highlight class="comment">/*<sp/>free<sp/>the<sp/>memory<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OUT_OF_MEMORY;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>data-&gt;state.headersize=HEADERSIZE;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>data-&gt;set.out<sp/>=<sp/>stdout;<sp/></highlight><highlight class="comment">/*<sp/>default<sp/>output<sp/>to<sp/>stdout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>data-&gt;set.in<sp/><sp/>=<sp/>stdin;<sp/><sp/></highlight><highlight class="comment">/*<sp/>default<sp/>input<sp/>from<sp/>stdin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>data-&gt;set.err<sp/><sp/>=<sp/>stderr;<sp/><sp/></highlight><highlight class="comment">/*<sp/>default<sp/>stderr<sp/>to<sp/>stderr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>fwrite<sp/>as<sp/>default<sp/>function<sp/>to<sp/>store<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>data-&gt;set.fwrite<sp/>=<sp/>(curl_write_callback)fwrite;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>fread<sp/>as<sp/>default<sp/>function<sp/>to<sp/>read<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>data-&gt;set.fread<sp/>=<sp/>(curl_read_callback)fread;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>data-&gt;set.infilesize<sp/>=<sp/>-1;<sp/></highlight><highlight class="comment">/*<sp/>we<sp/>don&apos;t<sp/>know<sp/>any<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>data-&gt;state.current_speed<sp/>=<sp/>-1;<sp/></highlight><highlight class="comment">/*<sp/>init<sp/>to<sp/>negative<sp/>==<sp/>impossible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>data-&gt;set.httpreq<sp/>=<sp/>HTTPREQ_GET;<sp/></highlight><highlight class="comment">/*<sp/>Default<sp/>HTTP<sp/>request<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>data-&gt;set.ftp_use_epsv<sp/>=<sp/>TRUE;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FTP<sp/>defaults<sp/>to<sp/>EPSV<sp/>operations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>data-&gt;set.ftp_use_eprt<sp/>=<sp/>TRUE;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FTP<sp/>defaults<sp/>to<sp/>EPRT<sp/>operations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>data-&gt;set.dns_cache_timeout<sp/>=<sp/>60;<sp/></highlight><highlight class="comment">/*<sp/>Timeout<sp/>every<sp/>60<sp/>seconds<sp/>by<sp/>default<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>libcurl<sp/>quiet<sp/>by<sp/>default:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>data-&gt;set.hide_progress<sp/>=<sp/>TRUE;<sp/><sp/></highlight><highlight class="comment">/*<sp/>CURLOPT_NOPROGRESS<sp/>changes<sp/>these<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>data-&gt;progress.flags<sp/>|=<sp/>PGRS_HIDE;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>default<sp/>size<sp/>of<sp/>the<sp/>SSL<sp/>session<sp/>ID<sp/>cache<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>data-&gt;set.ssl.numsessions<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>data-&gt;set.proxyport<sp/>=<sp/>1080;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>data-&gt;set.proxytype<sp/>=<sp/>CURLPROXY_HTTP;<sp/></highlight><highlight class="comment">/*<sp/>defaults<sp/>to<sp/>HTTP<sp/>proxy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>data-&gt;set.httpauth<sp/>=<sp/>CURLAUTH_BASIC;<sp/></highlight><highlight class="comment">/*<sp/>defaults<sp/>to<sp/>basic<sp/>authentication<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>data-&gt;set.proxyauth<sp/>=<sp/>CURLAUTH_BASIC;<sp/></highlight><highlight class="comment">/*<sp/>defaults<sp/>to<sp/>basic<sp/>authentication<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>an<sp/>array<sp/>with<sp/>connection<sp/>data<sp/>struct<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>data-&gt;state.numconnects<sp/>=<sp/>5;<sp/></highlight><highlight class="comment">/*<sp/>hard-coded<sp/>right<sp/>now<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>data-&gt;state.connects<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>**)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*)<sp/>*<sp/>data-&gt;state.numconnects);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!data-&gt;state.connects)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>free(data-&gt;state.headerbuff);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>free(data);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OUT_OF_MEMORY;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/><sp/><sp/>*<sp/>libcurl<sp/>7.10<sp/>introduces<sp/>SSL<sp/>verification<sp/>*by<sp/>default*!<sp/>This<sp/>needs<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/><sp/><sp/>*<sp/>switched<sp/>off<sp/>unless<sp/>wanted.</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>data-&gt;set.ssl.verifypeer<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>data-&gt;set.ssl.verifyhost<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CURL_CA_BUNDLE</highlight></codeline>
<codeline lineno="332"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>our<sp/>prefered<sp/>CA<sp/>cert<sp/>bundle<sp/>since<sp/>install<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>data-&gt;set.ssl.CAfile<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)CURL_CA_BUNDLE;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="335"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>memset(data-&gt;state.connects,<sp/>0,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*)*data-&gt;state.numconnects);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>*curl<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal">CURLcode<sp/>Curl_setopt(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data,<sp/>CURLoption<sp/>option,<sp/>...)</highlight></codeline>
<codeline lineno="344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>va_list<sp/>param;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cookiefile;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>va_start(param,<sp/>option);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(option)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_DNS_CACHE_TIMEOUT:</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.dns_cache_timeout<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_DNS_USE_GLOBAL_CACHE:</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>use_cache<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use_cache)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Curl_global_host_cache_init();</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.global_dns_cache<sp/>=<sp/>use_cache;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_SSL_CIPHER_LIST:</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>a<sp/>list<sp/>of<sp/>cipher<sp/>we<sp/>want<sp/>to<sp/>use<sp/>in<sp/>the<sp/>SSL<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.ssl.cipher_list<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_RANDOM_FILE:</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>is<sp/>the<sp/>path<sp/>name<sp/>to<sp/>a<sp/>file<sp/>that<sp/>contains<sp/>random<sp/>data<sp/>to<sp/>seed</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>random<sp/>SSL<sp/>stuff<sp/>with.<sp/>The<sp/>file<sp/>is<sp/>only<sp/>used<sp/>for<sp/>reading.</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.ssl.random_file<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_EGDSOCKET:</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>Entropy<sp/>Gathering<sp/>Daemon<sp/>socket<sp/>pathname</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.ssl.egdsocket<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_MAXCONNECTS:</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>the<sp/>absolute<sp/>number<sp/>of<sp/>maximum<sp/>simultaneous<sp/>alive<sp/>connection<sp/>that</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>libcurl<sp/>is<sp/>allowed<sp/>to<sp/>have.</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>newconnects=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>**newptr;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newconnects<sp/>&lt;<sp/>data-&gt;state.numconnects)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Since<sp/>this<sp/>number<sp/>is<sp/>*decreased*<sp/>from<sp/>the<sp/>existing<sp/>number,<sp/>we<sp/>must</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close<sp/>the<sp/>possibly<sp/>open<sp/>connections<sp/>that<sp/>live<sp/>on<sp/>the<sp/>indexes<sp/>that</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>are<sp/>being<sp/>removed!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=newconnects;<sp/>i&lt;<sp/>data-&gt;state.numconnects;<sp/>i++)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Curl_disconnect(data-&gt;state.connects[i]);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newconnects)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newptr=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>**)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realloc(data-&gt;state.connects,</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*)<sp/>*<sp/>newconnects);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!newptr)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>closed<sp/>a<sp/>few<sp/>connections<sp/>in<sp/>vain,<sp/>but<sp/>so<sp/>what?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OUT_OF_MEMORY;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nullify<sp/>the<sp/>newly<sp/>added<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=data-&gt;state.numconnects;<sp/>i&lt;newconnects;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newptr[i]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;state.connects<sp/>=<sp/>newptr;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;state.numconnects<sp/>=<sp/>newconnects;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>zero<sp/>makes<sp/>NO<sp/>cache<sp/>at<sp/>all<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;state.connects)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(data-&gt;state.connects);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;state.connects=NULL;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;state.numconnects=0;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_FORBID_REUSE:</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>When<sp/>this<sp/>transfer<sp/>is<sp/>done,<sp/>it<sp/>must<sp/>not<sp/>be<sp/>left<sp/>to<sp/>be<sp/>reused<sp/>by<sp/>a</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>subsequent<sp/>transfer<sp/>but<sp/>shall<sp/>be<sp/>closed<sp/>immediately.</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.reuse_forbid<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)?TRUE:FALSE;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_FRESH_CONNECT:</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>transfer<sp/>shall<sp/>not<sp/>use<sp/>a<sp/>previously<sp/>cached<sp/>connection<sp/>but</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>should<sp/>be<sp/>made<sp/>with<sp/>a<sp/>fresh<sp/>new<sp/>connect!</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.reuse_fresh<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)?TRUE:FALSE;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_VERBOSE:</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Verbose<sp/>means<sp/>infof()<sp/>calls<sp/>that<sp/>give<sp/>a<sp/>lot<sp/>of<sp/>information<sp/>about</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>connection<sp/>and<sp/>transfer<sp/>procedures<sp/>as<sp/>well<sp/>as<sp/>internal<sp/>choices.</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.verbose<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)?TRUE:FALSE;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_HEADER:</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>to<sp/>include<sp/>the<sp/>header<sp/>in<sp/>the<sp/>general<sp/>data<sp/>output<sp/>stream.</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.http_include_header<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)?TRUE:FALSE;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_NOPROGRESS:</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Shut<sp/>off<sp/>the<sp/>internal<sp/>supported<sp/>progress<sp/>meter</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.hide_progress<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)?TRUE:FALSE;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.hide_progress)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;progress.flags<sp/>|=<sp/>PGRS_HIDE;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;progress.flags<sp/>&amp;=<sp/>~PGRS_HIDE;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_NOBODY:</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="464"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Do<sp/>not<sp/>include<sp/>the<sp/>body<sp/>part<sp/>in<sp/>the<sp/>output<sp/>data<sp/>stream.</highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.no_body<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)?TRUE:FALSE;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_FAILONERROR:</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Don&apos;t<sp/>output<sp/>the<sp/>&gt;=300<sp/>error<sp/>code<sp/>HTML-page,<sp/>but<sp/>instead<sp/>only</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>return<sp/>error.</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.http_fail_on_error<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)?TRUE:FALSE;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_UPLOAD:</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>We<sp/>want<sp/>to<sp/>sent<sp/>data<sp/>to<sp/>the<sp/>remote<sp/>host</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.upload<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)?TRUE:FALSE;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.upload)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>HTTP,<sp/>PUT<sp/>is<sp/>what&apos;s<sp/>needed<sp/>to<sp/>&quot;upload&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.httpreq<sp/>=<sp/>HTTPREQ_PUT;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_FILETIME:</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Try<sp/>to<sp/>get<sp/>the<sp/>file<sp/>time<sp/>of<sp/>the<sp/>remote<sp/>document.<sp/>The<sp/>time<sp/>will</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>later<sp/>(possibly)<sp/>become<sp/>available<sp/>using<sp/>curl_easy_getinfo().</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.get_filetime<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)?TRUE:FALSE;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_FTP_CREATE_MISSING_DIRS:</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>An<sp/>FTP<sp/>option<sp/>that<sp/>modifies<sp/>an<sp/>upload<sp/>to<sp/>create<sp/>missing<sp/>directories<sp/>on</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>server.</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.ftp_create_missing_dirs<sp/>=<sp/>va_arg(<sp/>param<sp/>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>)?TRUE:FALSE;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_FTP_RESPONSE_TIMEOUT:</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>An<sp/>FTP<sp/>option<sp/>that<sp/>specifies<sp/>how<sp/>quickly<sp/>an<sp/>FTP<sp/>response<sp/>must<sp/>be<sp/></highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>obtained<sp/>before<sp/>it<sp/>is<sp/>considered<sp/>failure.</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.ftp_response_timeout<sp/>=<sp/>va_arg(<sp/>param<sp/>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_FTPLISTONLY:</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>An<sp/>FTP<sp/>option<sp/>that<sp/>changes<sp/>the<sp/>command<sp/>to<sp/>one<sp/>that<sp/>asks<sp/>for<sp/>a<sp/>list</highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>only,<sp/>no<sp/>file<sp/>info<sp/>details.</highlight></codeline>
<codeline lineno="509"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.ftp_list_only<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)?TRUE:FALSE;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_FTPAPPEND:</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>We<sp/>want<sp/>to<sp/>upload<sp/>and<sp/>append<sp/>to<sp/>an<sp/>existing<sp/>(FTP)<sp/>file.</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.ftp_append<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)?TRUE:FALSE;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_NETRC:</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Parse<sp/>the<sp/>$HOME/.netrc<sp/>file</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.use_netrc<sp/>=<sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>CURL_NETRC_OPTION)va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_NETRC_FILE:</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Use<sp/>this<sp/>file<sp/>instead<sp/>of<sp/>the<sp/>$HOME/.netrc<sp/>file</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.netrc_file<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_FOLLOWLOCATION:</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Follow<sp/>Location:<sp/>header<sp/>hints<sp/>on<sp/>a<sp/>HTTP-server.</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.http_follow_location<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)?TRUE:FALSE;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_UNRESTRICTED_AUTH:</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="538"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Send<sp/>authentication<sp/>(user+password)<sp/>when<sp/>following<sp/>locations,<sp/>even<sp/>when</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>hostname<sp/>changed.</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.http_disable_hostname_check_before_authentication<sp/>=</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)?TRUE:FALSE;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_HTTP_VERSION:</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>sets<sp/>a<sp/>requested<sp/>HTTP<sp/>version<sp/>to<sp/>be<sp/>used.<sp/>The<sp/>value<sp/>is<sp/>one<sp/>of</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>listed<sp/>enums<sp/>in<sp/>curl/curl.h.</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.httpversion<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_TRANSFERTEXT:</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>option<sp/>was<sp/>previously<sp/>named<sp/>&apos;FTPASCII&apos;.<sp/>Renamed<sp/>to<sp/>work<sp/>with</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>more<sp/>protocols<sp/>than<sp/>merely<sp/>FTP.</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Transfer<sp/>using<sp/>ASCII<sp/>(instead<sp/>of<sp/>BINARY).</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.ftp_ascii<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)?TRUE:FALSE;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_PUT:</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Use<sp/>the<sp/>HTTP<sp/>PUT<sp/>request<sp/>to<sp/>transfer<sp/>data<sp/>if<sp/>this<sp/>is<sp/>TRUE.<sp/><sp/>If<sp/>this<sp/>is</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>FALSE,<sp/>don&apos;t<sp/>set<sp/>the<sp/>httpreq.<sp/>We<sp/>can&apos;t<sp/>know<sp/>what<sp/>to<sp/>revert<sp/>it<sp/>to!</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.httpreq<sp/>=<sp/>HTTPREQ_PUT;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_TIMECONDITION:</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>HTTP<sp/>time<sp/>condition.<sp/>This<sp/>must<sp/>be<sp/>one<sp/>of<sp/>the<sp/>defines<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>curl/curl.h<sp/>header<sp/>file.</highlight></codeline>
<codeline lineno="572"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.timecondition<sp/>=<sp/>(curl_TimeCond)va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_TIMEVALUE:</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>is<sp/>the<sp/>value<sp/>to<sp/>compare<sp/>with<sp/>the<sp/>remote<sp/>document<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>method<sp/>set<sp/>with<sp/>CURLOPT_TIMECONDITION</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.timevalue<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_SSLVERSION:</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>explicit<sp/>SSL<sp/>version<sp/>to<sp/>try<sp/>to<sp/>connect<sp/>with,<sp/>as<sp/>some<sp/>SSL</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>implementations<sp/>are<sp/>lame.</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.ssl.version<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_COOKIESESSION:</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>this<sp/>option<sp/>to<sp/>TRUE<sp/>to<sp/>start<sp/>a<sp/>new<sp/>&quot;cookie<sp/>session&quot;.<sp/>It<sp/>will</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>prevent<sp/>the<sp/>forthcoming<sp/>read-cookies-from-file<sp/>actions<sp/>to<sp/>accept</highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>cookies<sp/>that<sp/>are<sp/>marked<sp/>as<sp/>being<sp/>session<sp/>cookies,<sp/>as<sp/>they<sp/>belong<sp/>to<sp/>a</highlight></codeline>
<codeline lineno="595"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>previous<sp/>session.</highlight></codeline>
<codeline lineno="596"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>In<sp/>the<sp/>original<sp/>Netscape<sp/>cookie<sp/>spec,<sp/>&quot;session<sp/>cookies&quot;<sp/>are<sp/>cookies</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>with<sp/>no<sp/>expire<sp/>date<sp/>set.<sp/>RFC2109<sp/>describes<sp/>the<sp/>same<sp/>action<sp/>if<sp/>no</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>&apos;Max-Age&apos;<sp/>is<sp/>set<sp/>and<sp/>RFC2965<sp/>includes<sp/>the<sp/>RFC2109<sp/>description<sp/>and<sp/>adds</highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>&apos;Discard&apos;<sp/>action<sp/>that<sp/>can<sp/>enforce<sp/>the<sp/>discard<sp/>even<sp/>for<sp/>cookies<sp/>that</highlight></codeline>
<codeline lineno="601"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>have<sp/>a<sp/>Max-Age.</highlight></codeline>
<codeline lineno="602"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="603"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>We<sp/>run<sp/>mostly<sp/>with<sp/>the<sp/>original<sp/>cookie<sp/>spec,<sp/>as<sp/>hardly<sp/>anyone<sp/>implements</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>anything<sp/>else.</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.cookiesession<sp/>=<sp/>(bool)va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CURL_DISABLE_HTTP</highlight></codeline>
<codeline lineno="610"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_COOKIEFILE:</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="612"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>cookie<sp/>file<sp/>to<sp/>read<sp/>and<sp/>parse.<sp/>Can<sp/>be<sp/>used<sp/>multiple<sp/>times.</highlight></codeline>
<codeline lineno="613"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>cookiefile<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)va_arg(param,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cookiefile)</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>append<sp/>the<sp/>cookie<sp/>file<sp/>name<sp/>to<sp/>the<sp/>list<sp/>of<sp/>file<sp/>names,<sp/>and<sp/>deal<sp/>with</highlight></codeline>
<codeline lineno="617"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>them<sp/>later<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;change.cookielist<sp/>=</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curl_slist_append(data-&gt;change.cookielist,<sp/>cookiefile);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_COOKIEJAR:</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>cookie<sp/>file<sp/>name<sp/>to<sp/>dump<sp/>all<sp/>cookies<sp/>to<sp/>when<sp/>we&apos;re<sp/>done.</highlight></codeline>
<codeline lineno="625"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.cookiejar<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)va_arg(param,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="629"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Activate<sp/>the<sp/>cookie<sp/>parser.<sp/>This<sp/>may<sp/>or<sp/>may<sp/>not<sp/>already</highlight></codeline>
<codeline lineno="630"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>have<sp/>been<sp/>made.</highlight></codeline>
<codeline lineno="631"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;cookies<sp/>=<sp/>Curl_cookie_init(data,<sp/>NULL,<sp/>data-&gt;cookies,</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.cookiesession);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="636"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_WRITEHEADER:</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Custom<sp/>pointer<sp/>to<sp/>pass<sp/>the<sp/>header<sp/>write<sp/>callback<sp/>function</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.writeheader<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)va_arg(param,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_COOKIE:</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="645"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Cookie<sp/>string<sp/>to<sp/>send<sp/>to<sp/>the<sp/>remote<sp/>server<sp/>in<sp/>the<sp/>request.</highlight></codeline>
<codeline lineno="646"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.cookie<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_ERRORBUFFER:</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Error<sp/>buffer<sp/>provided<sp/>by<sp/>the<sp/>caller<sp/>to<sp/>get<sp/>the<sp/>human<sp/>readable</highlight></codeline>
<codeline lineno="652"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>error<sp/>string<sp/>in.</highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.errorbuffer<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_FILE:</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="658"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>FILE<sp/>pointer<sp/>to<sp/>write<sp/>to<sp/>or<sp/>include<sp/>in<sp/>the<sp/>data<sp/>write<sp/>callback</highlight></codeline>
<codeline lineno="659"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.out<sp/>=<sp/>va_arg(param,<sp/>FILE<sp/>*);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_FTPPORT:</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="664"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Use<sp/>FTP<sp/>PORT,<sp/>this<sp/>also<sp/>specifies<sp/>which<sp/>IP<sp/>address<sp/>to<sp/>use</highlight></codeline>
<codeline lineno="665"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.ftpport<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.ftp_use_port<sp/>=<sp/>data-&gt;set.ftpport?1:0;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_FTP_USE_EPRT:</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.ftp_use_eprt<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)?TRUE:FALSE;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_FTP_USE_EPSV:</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.ftp_use_epsv<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)?TRUE:FALSE;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_HTTPHEADER:</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="680"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>a<sp/>list<sp/>with<sp/>HTTP<sp/>headers<sp/>to<sp/>use<sp/>(or<sp/>replace<sp/>internals<sp/>with)</highlight></codeline>
<codeline lineno="681"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.headers<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcurl__slist" kindref="compound">curl_slist</ref><sp/>*);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_CUSTOMREQUEST:</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="686"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>a<sp/>custom<sp/>string<sp/>to<sp/>use<sp/>as<sp/>request</highlight></codeline>
<codeline lineno="687"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.customrequest<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>don&apos;t<sp/>set</highlight></codeline>
<codeline lineno="691"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.httpreq<sp/>=<sp/>HTTPREQ_CUSTOM;</highlight></codeline>
<codeline lineno="692"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>here,<sp/>we<sp/>continue<sp/>as<sp/>if<sp/>we<sp/>were<sp/>using<sp/>the<sp/>already<sp/>set<sp/>type</highlight></codeline>
<codeline lineno="693"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>this<sp/>just<sp/>changes<sp/>the<sp/>actual<sp/>request<sp/>keyword<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_HTTPPOST:</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="697"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>to<sp/>make<sp/>us<sp/>do<sp/>HTTP<sp/>POST</highlight></codeline>
<codeline lineno="698"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.httppost<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcurl__httppost" kindref="compound">curl_httppost</ref><sp/>*);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.httppost)</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.httpreq<sp/>=<sp/>HTTPREQ_POST_FORM;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_HTTPGET:</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="706"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>to<sp/>force<sp/>us<sp/>do<sp/>HTTP<sp/>GET</highlight></codeline>
<codeline lineno="707"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.httpreq<sp/>=<sp/>HTTPREQ_GET;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.upload<sp/>=<sp/>FALSE;<sp/></highlight><highlight class="comment">/*<sp/>switch<sp/>off<sp/>upload<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_INFILE:</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="716"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>FILE<sp/>pointer<sp/>to<sp/>read<sp/>the<sp/>file<sp/>to<sp/>be<sp/>uploaded<sp/>from.<sp/>Or<sp/>possibly</highlight></codeline>
<codeline lineno="717"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>used<sp/>as<sp/>argument<sp/>to<sp/>the<sp/>read<sp/>callback.</highlight></codeline>
<codeline lineno="718"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.in<sp/>=<sp/>va_arg(param,<sp/>FILE<sp/>*);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_INFILESIZE:</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="723"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>known,<sp/>this<sp/>should<sp/>inform<sp/>curl<sp/>about<sp/>the<sp/>file<sp/>size<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="724"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to-be-uploaded<sp/>file.</highlight></codeline>
<codeline lineno="725"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.infilesize<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_INFILESIZE_LARGE:</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="730"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>known,<sp/>this<sp/>should<sp/>inform<sp/>curl<sp/>about<sp/>the<sp/>file<sp/>size<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="731"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to-be-uploaded<sp/>file.</highlight></codeline>
<codeline lineno="732"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.infilesize<sp/>=<sp/>va_arg(param,<sp/>curl_off_t);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_LOW_SPEED_LIMIT:</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="737"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>low<sp/>speed<sp/>limit<sp/>that<sp/>if<sp/>transfers<sp/>are<sp/>below<sp/>this<sp/>for</highlight></codeline>
<codeline lineno="738"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>CURLOPT_LOW_SPEED_TIME,<sp/>the<sp/>transfer<sp/>is<sp/>aborted.</highlight></codeline>
<codeline lineno="739"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.low_speed_limit=va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_LOW_SPEED_TIME:</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="744"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>low<sp/>speed<sp/>time<sp/>that<sp/>if<sp/>transfers<sp/>are<sp/>below<sp/>the<sp/>set</highlight></codeline>
<codeline lineno="745"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>CURLOPT_LOW_SPEED_LIMIT<sp/>during<sp/>this<sp/>time,<sp/>the<sp/>transfer<sp/>is<sp/>aborted.</highlight></codeline>
<codeline lineno="746"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.low_speed_time=va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_URL:</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="751"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>URL<sp/>to<sp/>fetch.</highlight></codeline>
<codeline lineno="752"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;change.url_alloc)<sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>already<sp/>set<sp/>URL<sp/>is<sp/>allocated,<sp/>free<sp/>it<sp/>first!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(data-&gt;change.url);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;change.url_alloc=FALSE;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.set_url<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;change.url<sp/>=<sp/>data-&gt;set.set_url;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;change.url_changed<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_PORT:</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="764"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>port<sp/>number<sp/>to<sp/>use<sp/>when<sp/>getting<sp/>the<sp/>URL</highlight></codeline>
<codeline lineno="765"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.use_port<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_POST:</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Does<sp/>this<sp/>option<sp/>serve<sp/>a<sp/>purpose<sp/>anymore?<sp/>Yes<sp/>it<sp/>does,<sp/>when</highlight></codeline>
<codeline lineno="770"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CURLOPT_POSTFIELDS<sp/>isn&apos;t<sp/>used<sp/>and<sp/>the<sp/>POST<sp/>data<sp/>is<sp/>read<sp/>off<sp/>the</highlight></codeline>
<codeline lineno="771"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.httpreq<sp/>=<sp/>HTTPREQ_POST;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_POSTFIELDS:</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="777"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>A<sp/>string<sp/>with<sp/>POST<sp/>data.<sp/>Makes<sp/>curl<sp/>HTTP<sp/>POST.</highlight></codeline>
<codeline lineno="778"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.postfields<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.postfields)</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.httpreq<sp/>=<sp/>HTTPREQ_POST;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_POSTFIELDSIZE:</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="785"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>size<sp/>of<sp/>the<sp/>POSTFIELD<sp/>data<sp/>to<sp/>prevent<sp/>libcurl<sp/>to<sp/>do<sp/>strlen()<sp/>to</highlight></codeline>
<codeline lineno="786"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>figure<sp/>it<sp/>out.<sp/>Enables<sp/>binary<sp/>posts.</highlight></codeline>
<codeline lineno="787"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.postfieldsize<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_POSTFIELDSIZE_LARGE:</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="792"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>size<sp/>of<sp/>the<sp/>POSTFIELD<sp/>data<sp/>to<sp/>prevent<sp/>libcurl<sp/>to<sp/>do<sp/>strlen()<sp/>to</highlight></codeline>
<codeline lineno="793"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>figure<sp/>it<sp/>out.<sp/>Enables<sp/>binary<sp/>posts.</highlight></codeline>
<codeline lineno="794"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.postfieldsize<sp/>=<sp/>va_arg(param,<sp/>curl_off_t);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_REFERER:</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="799"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>String<sp/>to<sp/>set<sp/>in<sp/>the<sp/>HTTP<sp/>Referer:<sp/>field.</highlight></codeline>
<codeline lineno="800"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;change.referer_alloc)<sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(data-&gt;change.referer);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;change.referer_alloc<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.set_referer<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;change.referer<sp/>=<sp/>data-&gt;set.set_referer;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_AUTOREFERER:</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="810"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Switch<sp/>on<sp/>automatic<sp/>referer<sp/>that<sp/>gets<sp/>set<sp/>if<sp/>curl<sp/>follows<sp/>locations.</highlight></codeline>
<codeline lineno="811"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.http_auto_referer<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)?1:0;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_PROXY:</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="816"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>proxy<sp/>server:port<sp/>to<sp/>use<sp/>as<sp/>HTTP<sp/>proxy.</highlight></codeline>
<codeline lineno="817"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="818"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>the<sp/>proxy<sp/>is<sp/>set<sp/>to<sp/>&quot;&quot;<sp/>we<sp/>explicitly<sp/>say<sp/>that<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>use<sp/>a</highlight></codeline>
<codeline lineno="819"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>proxy<sp/>(even<sp/>though<sp/>there<sp/>might<sp/>be<sp/>environment<sp/>variables<sp/>saying<sp/>so).</highlight></codeline>
<codeline lineno="820"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="821"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Setting<sp/>it<sp/>to<sp/>NULL,<sp/>means<sp/>no<sp/>proxy<sp/>but<sp/>allows<sp/>the<sp/>environment<sp/>variables</highlight></codeline>
<codeline lineno="822"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>decide<sp/>for<sp/>us.</highlight></codeline>
<codeline lineno="823"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;change.proxy_alloc)<sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="826"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>already<sp/>set<sp/>string<sp/>is<sp/>allocated,<sp/>free<sp/>that<sp/>first</highlight></codeline>
<codeline lineno="827"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;change.proxy_alloc=FALSE;;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(data-&gt;change.proxy);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.set_proxy<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;change.proxy<sp/>=<sp/>data-&gt;set.set_proxy;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_HTTPPROXYTUNNEL:</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="836"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Tunnel<sp/>operations<sp/>through<sp/>the<sp/>proxy<sp/>instead<sp/>of<sp/>normal<sp/>proxy<sp/>use</highlight></codeline>
<codeline lineno="837"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.tunnel_thru_httpproxy<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)?TRUE:FALSE;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_PROXYPORT:</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="842"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Explicitly<sp/>set<sp/>HTTP<sp/>proxy<sp/>port<sp/>number.</highlight></codeline>
<codeline lineno="843"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.proxyport<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_TIMEOUT:</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="848"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>maximum<sp/>time<sp/>you<sp/>allow<sp/>curl<sp/>to<sp/>use<sp/>for<sp/>a<sp/>single<sp/>transfer</highlight></codeline>
<codeline lineno="849"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>operation.</highlight></codeline>
<codeline lineno="850"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.timeout<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_CONNECTTIMEOUT:</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="855"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>maximum<sp/>time<sp/>you<sp/>allow<sp/>curl<sp/>to<sp/>use<sp/>to<sp/>connect.</highlight></codeline>
<codeline lineno="856"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.connecttimeout<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_MAXREDIRS:</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="861"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>maximum<sp/>amount<sp/>of<sp/>hops<sp/>you<sp/>allow<sp/>curl<sp/>to<sp/>follow<sp/>Location:</highlight></codeline>
<codeline lineno="862"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>headers.<sp/>This<sp/>should<sp/>mostly<sp/>be<sp/>used<sp/>to<sp/>detect<sp/>never-ending<sp/>loops.</highlight></codeline>
<codeline lineno="863"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.maxredirs<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_USERAGENT:</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="868"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>String<sp/>to<sp/>use<sp/>in<sp/>the<sp/>HTTP<sp/>User-Agent<sp/>field</highlight></codeline>
<codeline lineno="869"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.useragent<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_ENCODING:</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="874"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>String<sp/>to<sp/>use<sp/>at<sp/>the<sp/>value<sp/>of<sp/>Accept-Encoding<sp/>header.<sp/>08/28/02<sp/>jhrg</highlight></codeline>
<codeline lineno="875"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="876"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>the<sp/>encoding<sp/>is<sp/>set<sp/>to<sp/>&quot;&quot;<sp/>we<sp/>use<sp/>an<sp/>Accept-Encoding<sp/>header<sp/>that</highlight></codeline>
<codeline lineno="877"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>encompasses<sp/>all<sp/>the<sp/>encodings<sp/>we<sp/>support.</highlight></codeline>
<codeline lineno="878"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>the<sp/>encoding<sp/>is<sp/>set<sp/>to<sp/>NULL<sp/>we<sp/>don&apos;t<sp/>send<sp/>an<sp/>Accept-Encoding<sp/>header</highlight></codeline>
<codeline lineno="879"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>ignore<sp/>an<sp/>received<sp/>Content-Encoding<sp/>header.</highlight></codeline>
<codeline lineno="880"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="881"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.encoding<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.encoding<sp/>&amp;&amp;<sp/>!*data-&gt;set.encoding)</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.encoding<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)ALL_CONTENT_ENCODINGS;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_HTTPAUTH:</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="889"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>HTTP<sp/>Authentication<sp/>type<sp/>BITMASK.</highlight></codeline>
<codeline lineno="890"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>auth<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>switch<sp/>off<sp/>bits<sp/>we<sp/>can&apos;t<sp/>support<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_SSLEAY</highlight></codeline>
<codeline lineno="895"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>auth<sp/>&amp;=<sp/>~CURLAUTH_NTLM;<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>NTLM<sp/>without<sp/>SSL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="897"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifndef<sp/>HAVE_GSSAPI</highlight></codeline>
<codeline lineno="898"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>auth<sp/>&amp;=<sp/>~CURLAUTH_GSSNEGOTIATE;<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>GSS-Negotiate<sp/>without<sp/>GSSAPI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="900"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!auth)</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FAILED_INIT;<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>supported<sp/>types<sp/>left!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.httpauth<sp/>=<sp/>auth;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_PROXYAUTH:</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="909"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>HTTP<sp/>Authentication<sp/>type<sp/>BITMASK.</highlight></codeline>
<codeline lineno="910"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>auth<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>switch<sp/>off<sp/>bits<sp/>we<sp/>can&apos;t<sp/>support<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_SSLEAY</highlight></codeline>
<codeline lineno="915"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>auth<sp/>&amp;=<sp/>~CURLAUTH_NTLM;<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>NTLM<sp/>without<sp/>SSL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="917"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifndef<sp/>HAVE_GSSAPI</highlight></codeline>
<codeline lineno="918"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>auth<sp/>&amp;=<sp/>~CURLAUTH_GSSNEGOTIATE;<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>GSS-Negotiate<sp/>without<sp/>GSSAPI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="920"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!auth)</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FAILED_INIT;<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>supported<sp/>types<sp/>left!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.proxyauth<sp/>=<sp/>auth;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_USERPWD:</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="929"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>user:password<sp/>to<sp/>use<sp/>in<sp/>the<sp/>operation</highlight></codeline>
<codeline lineno="930"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.userpwd<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_POSTQUOTE:</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="935"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>List<sp/>of<sp/>RAW<sp/>FTP<sp/>commands<sp/>to<sp/>use<sp/>after<sp/>a<sp/>transfer</highlight></codeline>
<codeline lineno="936"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.postquote<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcurl__slist" kindref="compound">curl_slist</ref><sp/>*);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_PREQUOTE:</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="941"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>List<sp/>of<sp/>RAW<sp/>FTP<sp/>commands<sp/>to<sp/>use<sp/>prior<sp/>to<sp/>RETR<sp/>(Wesley<sp/>Laxton)</highlight></codeline>
<codeline lineno="942"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.prequote<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcurl__slist" kindref="compound">curl_slist</ref><sp/>*);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_QUOTE:</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="947"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>List<sp/>of<sp/>RAW<sp/>FTP<sp/>commands<sp/>to<sp/>use<sp/>before<sp/>a<sp/>transfer</highlight></codeline>
<codeline lineno="948"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.quote<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcurl__slist" kindref="compound">curl_slist</ref><sp/>*);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_PROGRESSFUNCTION:</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="953"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Progress<sp/>callback<sp/>function</highlight></codeline>
<codeline lineno="954"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.fprogress<sp/>=<sp/>va_arg(param,<sp/>curl_progress_callback);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.fprogress)</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;progress.callback<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>longer<sp/>internal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;progress.callback<sp/>=<sp/>FALSE;<sp/></highlight><highlight class="comment">/*<sp/>NULL<sp/>enforces<sp/>internal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_PROGRESSDATA:</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="964"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Custom<sp/>client<sp/>data<sp/>to<sp/>pass<sp/>to<sp/>the<sp/>progress<sp/>callback</highlight></codeline>
<codeline lineno="965"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.progress_client<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_PROXYUSERPWD:</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="970"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>user:password<sp/>needed<sp/>to<sp/>use<sp/>the<sp/>proxy</highlight></codeline>
<codeline lineno="971"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.proxyuserpwd<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_RANGE:</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="976"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>What<sp/>range<sp/>of<sp/>the<sp/>file<sp/>you<sp/>want<sp/>to<sp/>transfer</highlight></codeline>
<codeline lineno="977"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.set_range<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_RESUME_FROM:</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="982"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Resume<sp/>transfer<sp/>at<sp/>the<sp/>give<sp/>file<sp/>position</highlight></codeline>
<codeline lineno="983"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.set_resume_from<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_RESUME_FROM_LARGE:</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="988"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Resume<sp/>transfer<sp/>at<sp/>the<sp/>give<sp/>file<sp/>position</highlight></codeline>
<codeline lineno="989"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.set_resume_from<sp/>=<sp/>va_arg(param,<sp/>curl_off_t);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_DEBUGFUNCTION:</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="994"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>stderr<sp/>write<sp/>callback.</highlight></codeline>
<codeline lineno="995"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.fdebug<sp/>=<sp/>va_arg(param,<sp/>curl_debug_callback);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="998"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>the<sp/>callback<sp/>provided<sp/>is<sp/>NULL,<sp/>it&apos;ll<sp/>use<sp/>the<sp/>default<sp/>callback</highlight></codeline>
<codeline lineno="999"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_DEBUGDATA:</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1003"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>to<sp/>a<sp/>void<sp/>*<sp/>that<sp/>should<sp/>receive<sp/>all<sp/>error<sp/>writes.<sp/>This</highlight></codeline>
<codeline lineno="1004"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>defaults<sp/>to<sp/>CURLOPT_STDERR<sp/>for<sp/>normal<sp/>operations.</highlight></codeline>
<codeline lineno="1005"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.debugdata<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_STDERR:</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1010"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>to<sp/>a<sp/>FILE<sp/>*<sp/>that<sp/>should<sp/>receive<sp/>all<sp/>error<sp/>writes.<sp/>This</highlight></codeline>
<codeline lineno="1011"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>defaults<sp/>to<sp/>stderr<sp/>for<sp/>normal<sp/>operations.</highlight></codeline>
<codeline lineno="1012"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.err<sp/>=<sp/>va_arg(param,<sp/>FILE<sp/>*);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!data-&gt;set.err)</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.err<sp/>=<sp/>stderr;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_HEADERFUNCTION:</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1019"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>header<sp/>write<sp/>callback</highlight></codeline>
<codeline lineno="1020"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.fwrite_header<sp/>=<sp/>va_arg(param,<sp/>curl_write_callback);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_WRITEFUNCTION:</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1025"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>data<sp/>write<sp/>callback</highlight></codeline>
<codeline lineno="1026"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.fwrite<sp/>=<sp/>va_arg(param,<sp/>curl_write_callback);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!data-&gt;set.fwrite)</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>set<sp/>to<sp/>NULL,<sp/>reset<sp/>to<sp/>our<sp/>internal<sp/>default<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.fwrite<sp/>=<sp/>(curl_write_callback)fwrite;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_READFUNCTION:</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1034"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Read<sp/>data<sp/>callback</highlight></codeline>
<codeline lineno="1035"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.fread<sp/>=<sp/>va_arg(param,<sp/>curl_read_callback);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!data-&gt;set.fread)</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>set<sp/>to<sp/>NULL,<sp/>reset<sp/>to<sp/>our<sp/>internal<sp/>default<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.fread<sp/>=<sp/>(curl_read_callback)fread;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_SSLCERT:</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1043"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>String<sp/>that<sp/>holds<sp/>file<sp/>name<sp/>of<sp/>the<sp/>SSL<sp/>certificate<sp/>to<sp/>use</highlight></codeline>
<codeline lineno="1044"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.cert<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_SSLCERTTYPE:</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1049"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>String<sp/>that<sp/>holds<sp/>file<sp/>type<sp/>of<sp/>the<sp/>SSL<sp/>certificate<sp/>to<sp/>use</highlight></codeline>
<codeline lineno="1050"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.cert_type<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_SSLKEY:</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1055"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>String<sp/>that<sp/>holds<sp/>file<sp/>name<sp/>of<sp/>the<sp/>SSL<sp/>certificate<sp/>to<sp/>use</highlight></codeline>
<codeline lineno="1056"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.key<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_SSLKEYTYPE:</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1061"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>String<sp/>that<sp/>holds<sp/>file<sp/>type<sp/>of<sp/>the<sp/>SSL<sp/>certificate<sp/>to<sp/>use</highlight></codeline>
<codeline lineno="1062"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.key_type<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_SSLKEYPASSWD:</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1067"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>String<sp/>that<sp/>holds<sp/>the<sp/>SSL<sp/>private<sp/>key<sp/>password.</highlight></codeline>
<codeline lineno="1068"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.key_passwd<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_SSLENGINE:</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1073"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>String<sp/>that<sp/>holds<sp/>the<sp/>SSL<sp/>crypto<sp/>engine.</highlight></codeline>
<codeline lineno="1074"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_OPENSSL_ENGINE_H</highlight></codeline>
<codeline lineno="1076"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cpTemp<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ENGINE<sp/><sp/><sp/><sp/><sp/>*e;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cpTemp<sp/>&amp;&amp;<sp/>cpTemp[0])<sp/>{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>ENGINE_by_id(cpTemp);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e)<sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data-&gt;engine)<sp/>{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ENGINE_free(data-&gt;engine);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;engine<sp/>=<sp/>e;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;SSL<sp/>Engine<sp/>&apos;%s&apos;<sp/>not<sp/>found&quot;</highlight><highlight class="normal">,<sp/>cpTemp);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_SSL_ENGINE_NOTFOUND;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1095"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_SSL_ENGINE_NOTFOUND;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1097"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_SSLENGINE_DEFAULT:</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1099"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>flag<sp/>to<sp/>set<sp/>engine<sp/>as<sp/>default.</highlight></codeline>
<codeline lineno="1100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_OPENSSL_ENGINE_H</highlight></codeline>
<codeline lineno="1102"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data-&gt;engine)<sp/>{</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ENGINE_set_default(data-&gt;engine,<sp/>ENGINE_METHOD_ALL)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="1105"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;set<sp/>default<sp/>crypto<sp/>engine\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1107"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight></codeline>
<codeline lineno="1110"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;set<sp/>default<sp/>crypto<sp/>engine<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1112"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_SSL_ENGINE_SETFAILED;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1116"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_CRLF:</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Kludgy<sp/>option<sp/>to<sp/>enable<sp/>CRLF<sp/>convertions.<sp/>Subject<sp/>for<sp/>removal.</highlight></codeline>
<codeline lineno="1120"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.crlf<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)?TRUE:FALSE;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_INTERFACE:</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1125"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>what<sp/>interface<sp/>to<sp/>bind<sp/>to<sp/>when<sp/>performing<sp/>an<sp/>operation<sp/>and<sp/>thus</highlight></codeline>
<codeline lineno="1126"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>what<sp/>from-IP<sp/>your<sp/>connection<sp/>will<sp/>use.</highlight></codeline>
<codeline lineno="1127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.device<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_KRB4LEVEL:</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1132"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>A<sp/>string<sp/>that<sp/>defines<sp/>the<sp/>krb4<sp/>security<sp/>level.</highlight></codeline>
<codeline lineno="1133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.krb4_level<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.krb4=data-&gt;set.krb4_level?TRUE:FALSE;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_SSL_VERIFYPEER:</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Enable<sp/>peer<sp/>SSL<sp/>verifying.</highlight></codeline>
<codeline lineno="1140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.ssl.verifypeer<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_SSL_VERIFYHOST:</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Enable<sp/>verification<sp/>of<sp/>the<sp/>CN<sp/>contained<sp/>in<sp/>the<sp/>peer<sp/>certificate</highlight></codeline>
<codeline lineno="1146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.ssl.verifyhost<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_SSL_CTX_FUNCTION:</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>a<sp/>SSL_CTX<sp/>callback</highlight></codeline>
<codeline lineno="1152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.ssl.fsslctx<sp/>=<sp/>va_arg(param,<sp/>curl_ssl_ctx_callback);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_SSL_CTX_DATA:</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>a<sp/>SSL_CTX<sp/>callback<sp/>parameter<sp/>pointer</highlight></codeline>
<codeline lineno="1158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.ssl.fsslctxp<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_CAINFO:</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>CA<sp/>info<sp/>for<sp/>SSL<sp/>connection.<sp/>Specify<sp/>file<sp/>name<sp/>of<sp/>the<sp/>CA<sp/>certificate</highlight></codeline>
<codeline lineno="1164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.ssl.CAfile<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_CAPATH:</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>CA<sp/>path<sp/>info<sp/>for<sp/>SSL<sp/>connection.<sp/>Specify<sp/>directory<sp/>name<sp/>of<sp/>the<sp/>CA</highlight></codeline>
<codeline lineno="1170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>certificates<sp/>which<sp/>have<sp/>been<sp/>prepared<sp/>using<sp/>openssl<sp/>c_rehash<sp/>utility.</highlight></codeline>
<codeline lineno="1171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>does<sp/>not<sp/>work<sp/>on<sp/>windows.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.ssl.CApath<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_TELNETOPTIONS:</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>a<sp/>linked<sp/>list<sp/>of<sp/>telnet<sp/>options</highlight></codeline>
<codeline lineno="1178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.telnet_options<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcurl__slist" kindref="compound">curl_slist</ref><sp/>*);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_BUFFERSIZE:</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1184"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>application<sp/>kindly<sp/>asks<sp/>for<sp/>a<sp/>differently<sp/>sized<sp/>receive<sp/>buffer.</highlight></codeline>
<codeline lineno="1185"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>it<sp/>seems<sp/>reasonable,<sp/>we&apos;ll<sp/>use<sp/>it.</highlight></codeline>
<codeline lineno="1186"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.buffer_size<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((data-&gt;set.buffer_size&gt;<sp/>(BUFSIZE<sp/>-1<sp/>))<sp/>||</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(data-&gt;set.buffer_size<sp/>&lt;<sp/>1))</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.buffer_size<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>huge<sp/>internal<sp/>default<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_NOSIGNAL:</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>application<sp/>asks<sp/>not<sp/>to<sp/>set<sp/>any<sp/>signal()<sp/>or<sp/>alarm()<sp/>handlers,</highlight></codeline>
<codeline lineno="1198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>even<sp/>when<sp/>using<sp/>a<sp/>timeout.</highlight></codeline>
<codeline lineno="1199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.no_signal<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>?<sp/>TRUE<sp/>:<sp/>FALSE;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_SHARE:</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_curl__share" kindref="compound">Curl_share</ref><sp/>*set;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_curl__share" kindref="compound">Curl_share</ref><sp/>*);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>disconnect<sp/>from<sp/>old<sp/>share,<sp/>if<sp/>any<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;share)<sp/>{</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Curl_share_lock(data,<sp/>CURL_LOCK_DATA_SHARE,<sp/>CURL_LOCK_ACCESS_SINGLE);</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;share-&gt;hostcache<sp/>==<sp/>data-&gt;hostcache)</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;hostcache<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;share-&gt;cookies<sp/>==<sp/>data-&gt;cookies)</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;cookies<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;share-&gt;dirty--;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Curl_share_unlock(data,<sp/>CURL_LOCK_DATA_SHARE);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;share<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>new<sp/>share<sp/>if<sp/>it<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;share<sp/>=<sp/>set;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;share)<sp/>{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Curl_share_lock(data,<sp/>CURL_LOCK_DATA_SHARE,<sp/>CURL_LOCK_ACCESS_SINGLE);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;share-&gt;dirty++;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;share-&gt;hostcache)<sp/>{</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>shared<sp/>host<sp/>cache,<sp/>first<sp/>free<sp/>own<sp/>one<sp/>if<sp/>any<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;hostcache)</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Curl_hash_destroy(data-&gt;hostcache);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;hostcache<sp/>=<sp/>data-&gt;share-&gt;hostcache;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;share-&gt;cookies)<sp/>{</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>shared<sp/>cookie<sp/>list,<sp/>first<sp/>free<sp/>own<sp/>one<sp/>if<sp/>any<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data-&gt;cookies)</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Curl_cookie_cleanup(data-&gt;cookies);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;cookies<sp/>=<sp/>data-&gt;share-&gt;cookies;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Curl_share_unlock(data,<sp/>CURL_LOCK_DATA_SHARE);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>cookie<sp/>list<sp/>is<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!data-&gt;cookies)</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;cookies<sp/>=<sp/>Curl_cookie_init(data,<sp/>NULL,<sp/>NULL,<sp/>TRUE<sp/>);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>host<sp/>cache<sp/>not<sp/>needed,</highlight></codeline>
<codeline lineno="1256"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>it<sp/>will<sp/>be<sp/>done<sp/>by<sp/>curl_easy_perform<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_PROXYTYPE:</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1262"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>proxy<sp/>type.<sp/>HTTP/SOCKS4/SOCKS5</highlight></codeline>
<codeline lineno="1263"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.proxytype<sp/>=<sp/>(curl_proxytype)va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_PRIVATE:</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1269"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>private<sp/>data<sp/>pointer.</highlight></codeline>
<codeline lineno="1270"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.private<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_HTTP200ALIASES:</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1276"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>a<sp/>list<sp/>of<sp/>aliases<sp/>for<sp/>HTTP<sp/>200<sp/>in<sp/>response<sp/>header</highlight></codeline>
<codeline lineno="1277"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.http200aliases<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcurl__slist" kindref="compound">curl_slist</ref><sp/>*);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_MAXFILESIZE:</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1283"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>the<sp/>maximum<sp/>size<sp/>of<sp/>a<sp/>file<sp/>to<sp/>download.</highlight></codeline>
<codeline lineno="1284"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.max_filesize<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_FTP_SSL:</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1290"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Make<sp/>FTP<sp/>transfers<sp/>attempt<sp/>to<sp/>use<sp/>SSL/TLS.</highlight></codeline>
<codeline lineno="1291"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.ftp_ssl<sp/>=<sp/>(curl_ftpssl)va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_IPRESOLVE:</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.ip_version<sp/>=<sp/>va_arg(param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLOPT_MAXFILESIZE_LARGE:</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1301"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>the<sp/>maximum<sp/>size<sp/>of<sp/>a<sp/>file<sp/>to<sp/>download.</highlight></codeline>
<codeline lineno="1302"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.max_filesize<sp/>=<sp/>va_arg(param,<sp/>curl_off_t);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unknown<sp/>tag<sp/>and<sp/>its<sp/>companion,<sp/>just<sp/>ignore:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_FAILED_INIT;<sp/></highlight><highlight class="comment">/*<sp/>correct<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal">CURLcode<sp/>Curl_disconnect(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn)</highlight></codeline>
<codeline lineno="1314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!conn)</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>closed<sp/>and<sp/>fine<sp/>already<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1319"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>range<sp/>string<sp/>is<sp/>usually<sp/>freed<sp/>in<sp/>curl_done(),<sp/>but<sp/>we<sp/>might</highlight></codeline>
<codeline lineno="1320"><highlight class="comment"><sp/><sp/><sp/>*<sp/>get<sp/>here<sp/>*instead*<sp/>if<sp/>we<sp/>fail<sp/>prematurely.<sp/>Thus<sp/>we<sp/>need<sp/>to<sp/>be<sp/>able</highlight></codeline>
<codeline lineno="1321"><highlight class="comment"><sp/><sp/><sp/>*<sp/>to<sp/>free<sp/>this<sp/>resource<sp/>here<sp/>as<sp/>well.</highlight></codeline>
<codeline lineno="1322"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;bits.rangestringalloc)<sp/>{</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/>free(conn-&gt;range);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;bits.rangestringalloc<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((conn-&gt;ntlm.state<sp/>!=<sp/>NTLMSTATE_NONE)<sp/>||</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(conn-&gt;proxyntlm.state<sp/>!=<sp/>NTLMSTATE_NONE))</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Authentication<sp/>data<sp/>is<sp/>a<sp/>mix<sp/>of<sp/>connection-related<sp/>and<sp/>sessionhandle-</highlight></codeline>
<codeline lineno="1331"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>related<sp/>stuff.<sp/>NTLM<sp/>is<sp/>connection-related<sp/>so<sp/>when<sp/>we<sp/>close<sp/>the<sp/>shop</highlight></codeline>
<codeline lineno="1332"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>we<sp/>shall<sp/>forget.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;data-&gt;state.authstage<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;curl_disconnect)</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>set<sp/>if<sp/>protocol-specific<sp/>cleanups<sp/>should<sp/>be<sp/>made<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;curl_disconnect(conn);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(-1<sp/>!=<sp/>conn-&gt;connectindex)<sp/>{</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unlink<sp/>ourselves!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>infof(conn-&gt;data,<sp/></highlight><highlight class="stringliteral">&quot;Closing<sp/>connection<sp/>#%d\n&quot;</highlight><highlight class="normal">,<sp/>conn-&gt;connectindex);</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;data-&gt;state.connects[conn-&gt;connectindex]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/>Curl_safefree(conn-&gt;proto.generic);</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/>Curl_safefree(conn-&gt;newurl);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/>Curl_safefree(conn-&gt;path);<sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>URL<sp/>path<sp/>part<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/>Curl_SSL_Close(conn);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>close<sp/>possibly<sp/>still<sp/>open<sp/>sockets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CURL_SOCKET_BAD<sp/>!=<sp/>conn-&gt;sock[SECONDARYSOCKET])</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>sclose(conn-&gt;sock[SECONDARYSOCKET]);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CURL_SOCKET_BAD<sp/>!=<sp/>conn-&gt;sock[FIRSTSOCKET])</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/>sclose(conn-&gt;sock[FIRSTSOCKET]);</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/>Curl_safefree(conn-&gt;user);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/>Curl_safefree(conn-&gt;passwd);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/>Curl_safefree(conn-&gt;proxyuser);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/>Curl_safefree(conn-&gt;proxypasswd);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/>Curl_safefree(conn-&gt;allocptr.proxyuserpwd);</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/>Curl_safefree(conn-&gt;allocptr.uagent);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/>Curl_safefree(conn-&gt;allocptr.userpwd);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/>Curl_safefree(conn-&gt;allocptr.accept_encoding);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/>Curl_safefree(conn-&gt;allocptr.rangeline);</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/>Curl_safefree(conn-&gt;allocptr.ref);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/>Curl_safefree(conn-&gt;allocptr.cookie);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/>Curl_safefree(conn-&gt;allocptr.host);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/>Curl_safefree(conn-&gt;allocptr.cookiehost);</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/>Curl_safefree(conn-&gt;proxyhost);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_ARES)<sp/>||<sp/>defined(USE_THREADING_GETHOSTBYNAME)</highlight></codeline>
<codeline lineno="1371"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>possible<sp/>left-overs<sp/>from<sp/>the<sp/>async<sp/>name<sp/>resolve<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/>Curl_safefree(conn-&gt;async.hostname);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/>Curl_safefree(conn-&gt;async.os_specific);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1375"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/>Curl_free_ssl_config(&amp;conn-&gt;ssl_config);</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/>free(conn);<sp/></highlight><highlight class="comment">/*<sp/>free<sp/>all<sp/>the<sp/>connection<sp/>oriented<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1384"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>should<sp/>return<sp/>TRUE<sp/>if<sp/>the<sp/>socket<sp/>is<sp/>to<sp/>be<sp/>assumed<sp/>to</highlight></codeline>
<codeline lineno="1385"><highlight class="comment"><sp/>*<sp/>be<sp/>dead.<sp/>Most<sp/>commonly<sp/>this<sp/>happens<sp/>when<sp/>the<sp/>server<sp/>has<sp/>closed<sp/>the</highlight></codeline>
<codeline lineno="1386"><highlight class="comment"><sp/>*<sp/>connection<sp/>due<sp/>to<sp/>inactivity.</highlight></codeline>
<codeline lineno="1387"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SocketIsDead(curl_socket_t<sp/>sock)</highlight></codeline>
<codeline lineno="1389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sval;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret_val<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/>fd_set<sp/>check_set;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtimeval" kindref="compound">timeval</ref><sp/>to;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/>FD_ZERO(&amp;check_set);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/>FD_SET(sock,<sp/>&amp;check_set);</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/>to.tv_sec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/>to.tv_usec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/>sval<sp/>=<sp/>select(sock<sp/>+<sp/>1,<sp/>&amp;check_set,<sp/>0,<sp/>0,<sp/>&amp;to);</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sval<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/>ret_val<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret_val;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1410"><highlight class="comment"><sp/>*<sp/>Given<sp/>one<sp/>filled<sp/>in<sp/>connection<sp/>struct<sp/>(named<sp/>needle),<sp/>this<sp/>function<sp/>should</highlight></codeline>
<codeline lineno="1411"><highlight class="comment"><sp/>*<sp/>detect<sp/>if<sp/>there<sp/>already<sp/>is<sp/>one<sp/>that<sp/>have<sp/>all<sp/>the<sp/>significant<sp/>details</highlight></codeline>
<codeline lineno="1412"><highlight class="comment"><sp/>*<sp/>exactly<sp/>the<sp/>same<sp/>and<sp/>thus<sp/>should<sp/>be<sp/>used<sp/>instead.</highlight></codeline>
<codeline lineno="1413"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal">ConnectionExists(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data,</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*needle,</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>**usethis)</highlight></codeline>
<codeline lineno="1418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*check;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;<sp/>data-&gt;state.numconnects;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>match<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1425"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Note<sp/>that<sp/>if<sp/>we<sp/>use<sp/>a<sp/>HTTP<sp/>proxy,<sp/>we<sp/>check<sp/>connections<sp/>to<sp/>that</highlight></codeline>
<codeline lineno="1426"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>proxy<sp/>and<sp/>not<sp/>to<sp/>the<sp/>actual<sp/>remote<sp/>server.</highlight></codeline>
<codeline lineno="1427"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/>check<sp/>=<sp/>data-&gt;state.connects[i];</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!check)</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NULL<sp/>pointer<sp/>means<sp/>not<sp/>filled-in<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((needle-&gt;protocol&amp;PROT_SSL)<sp/>!=<sp/>(check-&gt;protocol&amp;PROT_SSL))</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>do<sp/>mixed<sp/>SSL<sp/>and<sp/>non-SSL<sp/>connections<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!needle-&gt;bits.httpproxy<sp/>||<sp/>needle-&gt;protocol&amp;PROT_SSL)<sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>requested<sp/>connection<sp/>does<sp/>not<sp/>use<sp/>a<sp/>HTTP<sp/>proxy<sp/>or<sp/>it</highlight></codeline>
<codeline lineno="1439"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uses<sp/>SSL.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(needle-&gt;protocol&amp;PROT_SSL)<sp/>&amp;&amp;<sp/>check-&gt;bits.httpproxy)</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>don&apos;t<sp/>do<sp/>SSL<sp/>but<sp/>the<sp/>cached<sp/>connection<sp/>has<sp/>a<sp/>proxy,</highlight></codeline>
<codeline lineno="1443"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>then<sp/>don&apos;t<sp/>match<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strequal(needle-&gt;protostr,<sp/>check-&gt;protostr)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strequal(needle-&gt;name,<sp/>check-&gt;name)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(needle-&gt;remote_port<sp/>==<sp/>check-&gt;remote_port)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(needle-&gt;protocol<sp/>&amp;<sp/>PROT_SSL)<sp/>{</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>SSL,<sp/>verify<sp/>that<sp/>we&apos;re<sp/>using<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="1451"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssl<sp/>options<sp/>as<sp/>well<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!Curl_ssl_config_matches(&amp;needle-&gt;ssl_config,</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;check-&gt;ssl_config))<sp/>{</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((needle-&gt;protocol<sp/>&amp;<sp/>PROT_FTP)<sp/>||</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((needle-&gt;protocol<sp/>&amp;<sp/>PROT_HTTP)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(needle-&gt;data-&gt;state.authwant==CURLAUTH_NTLM)))<sp/>{</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>FTP<sp/>or<sp/>HTTP+NTLM,<sp/>verify<sp/>that<sp/>we&apos;re<sp/>using<sp/>the<sp/>same<sp/>name</highlight></codeline>
<codeline lineno="1461"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>password<sp/>as<sp/>well<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strequal(needle-&gt;user,<sp/>check-&gt;user)<sp/>||</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!strequal(needle-&gt;passwd,<sp/>check-&gt;passwd))<sp/>{</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>one<sp/>of<sp/>them<sp/>was<sp/>different<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>The<sp/>requested<sp/>needle<sp/>connection<sp/>is<sp/>using<sp/>a<sp/>proxy,</highlight></codeline>
<codeline lineno="1472"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>the<sp/>checked<sp/>one<sp/>using<sp/>the<sp/>same?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(check-&gt;bits.httpproxy<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strequal(needle-&gt;proxyhost,<sp/>check-&gt;proxyhost)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>needle-&gt;port<sp/>==<sp/>check-&gt;port)<sp/>{</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>same<sp/>proxy<sp/>connection,<sp/>use<sp/>it!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(match)<sp/>{</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dead<sp/>=<sp/>SocketIsDead(check-&gt;sock[FIRSTSOCKET]);</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dead)<sp/>{</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1485"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>%d<sp/>seems<sp/>to<sp/>be<sp/>dead!\n&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Curl_disconnect(check);<sp/></highlight><highlight class="comment">/*<sp/>disconnect<sp/>resources<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;state.connects[i]=NULL;<sp/></highlight><highlight class="comment">/*<sp/>nothing<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>There&apos;s<sp/>no<sp/>need<sp/>to<sp/>continue<sp/>searching,<sp/>because<sp/>we<sp/>only<sp/>store</highlight></codeline>
<codeline lineno="1491"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>one<sp/>connection<sp/>for<sp/>each<sp/>unique<sp/>set<sp/>of<sp/>identifiers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*usethis<sp/>=<sp/>check;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>yes,<sp/>we<sp/>found<sp/>one<sp/>to<sp/>use!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>matching<sp/>connecting<sp/>exists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1503"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>frees/closes<sp/>a<sp/>connection<sp/>in<sp/>the<sp/>connection<sp/>cache.<sp/>This</highlight></codeline>
<codeline lineno="1504"><highlight class="comment"><sp/>*<sp/>should<sp/>take<sp/>the<sp/>previously<sp/>set<sp/>policy<sp/>into<sp/>account<sp/>when<sp/>deciding<sp/>which</highlight></codeline>
<codeline lineno="1505"><highlight class="comment"><sp/>*<sp/>of<sp/>the<sp/>connections<sp/>to<sp/>kill.</highlight></codeline>
<codeline lineno="1506"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal">ConnectionKillOne(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data)</highlight></codeline>
<codeline lineno="1509"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>highscore=-1;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>connindex=-1;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtimeval" kindref="compound">timeval</ref><sp/>now;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/>now<sp/>=<sp/>Curl_tvnow();</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;<sp/>data-&gt;state.numconnects;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/>conn<sp/>=<sp/>data-&gt;state.connects[i];</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!conn)</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1526"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>By<sp/>using<sp/>the<sp/>set<sp/>policy,<sp/>we<sp/>score<sp/>each<sp/>connection.</highlight></codeline>
<codeline lineno="1527"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(data-&gt;set.closepolicy)<sp/>{</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLCLOSEPOLICY_LEAST_RECENTLY_USED:</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1532"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>higher<sp/>score<sp/>for<sp/>the<sp/>age<sp/>passed<sp/>since<sp/>the<sp/>connection</highlight></codeline>
<codeline lineno="1533"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>was<sp/>used.</highlight></codeline>
<codeline lineno="1534"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/>Curl_tvdiff(now,<sp/>conn-&gt;now);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CURLCLOSEPOLICY_OLDEST:</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1539"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>higher<sp/>score<sp/>for<sp/>the<sp/>age<sp/>passed<sp/>since<sp/>the<sp/>connection</highlight></codeline>
<codeline lineno="1540"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>was<sp/>created.</highlight></codeline>
<codeline lineno="1541"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/>Curl_tvdiff(now,<sp/>conn-&gt;created);</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(score<sp/>&gt;<sp/>highscore)<sp/>{</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>highscore<sp/>=<sp/>score;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>connindex<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(connindex<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>winner<sp/>gets<sp/>the<sp/>honour<sp/>of<sp/>being<sp/>disconnected<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>Curl_disconnect(data-&gt;state.connects[connindex]);</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clean<sp/>the<sp/>array<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;state.connects[connindex]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>connindex;<sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>available<sp/>index<sp/>or<sp/>-1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1564"><highlight class="comment"><sp/>*<sp/>The<sp/>given<sp/>input<sp/>connection<sp/>struct<sp/>pointer<sp/>is<sp/>to<sp/>be<sp/>stored.<sp/>If<sp/>the<sp/>&quot;cache&quot;</highlight></codeline>
<codeline lineno="1565"><highlight class="comment"><sp/>*<sp/>is<sp/>already<sp/>full,<sp/>we<sp/>must<sp/>clean<sp/>out<sp/>the<sp/>most<sp/>suitable<sp/>using<sp/>the<sp/>previously</highlight></codeline>
<codeline lineno="1566"><highlight class="comment"><sp/>*<sp/>set<sp/>policy.</highlight></codeline>
<codeline lineno="1567"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1568"><highlight class="comment"><sp/>*<sp/>The<sp/>given<sp/>connection<sp/>should<sp/>be<sp/>unique.<sp/>That<sp/>must&apos;ve<sp/>been<sp/>checked<sp/>prior<sp/>to</highlight></codeline>
<codeline lineno="1569"><highlight class="comment"><sp/>*<sp/>this<sp/>call.</highlight></codeline>
<codeline lineno="1570"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal">ConnectionStore(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data,</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn)</highlight></codeline>
<codeline lineno="1574"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;<sp/>data-&gt;state.numconnects;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!data-&gt;state.connects[i])</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>==<sp/>data-&gt;state.numconnects)<sp/>{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>there<sp/>was<sp/>no<sp/>room<sp/>available,<sp/>kill<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>ConnectionKillOne(data);</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>(#%d)<sp/>was<sp/>killed<sp/>to<sp/>make<sp/>room\n&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(-1<sp/>!=<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>only<sp/>do<sp/>this<sp/>if<sp/>a<sp/>true<sp/>index<sp/>was<sp/>returned,<sp/>if<sp/>-1<sp/>was<sp/>returned<sp/>there</highlight></codeline>
<codeline lineno="1588"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>no<sp/>room<sp/>in<sp/>the<sp/>cache<sp/>for<sp/>an<sp/>unknown<sp/>reason<sp/>and<sp/>we<sp/>cannot<sp/>store</highlight></codeline>
<codeline lineno="1589"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>there.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;state.connects[i]<sp/>=<sp/>conn;<sp/></highlight><highlight class="comment">/*<sp/>fill<sp/>in<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;connectindex<sp/>=<sp/>i;<sp/></highlight><highlight class="comment">/*<sp/>make<sp/>the<sp/>child<sp/>know<sp/>where<sp/>the<sp/>pointer<sp/>to<sp/>this</highlight></codeline>
<codeline lineno="1592"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>particular<sp/>data<sp/>is<sp/>stored<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1598"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>logs<sp/>in<sp/>to<sp/>a<sp/>SOCKS5<sp/>proxy<sp/>and<sp/>sends<sp/>the<sp/>specifies<sp/>the<sp/>final</highlight></codeline>
<codeline lineno="1599"><highlight class="comment"><sp/>*<sp/>desitination<sp/>server.</highlight></codeline>
<codeline lineno="1600"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>handleSock5Proxy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*proxy_name,</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*proxy_password,</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn)</highlight></codeline>
<codeline lineno="1604"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1606"><highlight class="comment"><sp/><sp/><sp/><sp/>According<sp/>to<sp/>the<sp/>RFC1928,<sp/>section<sp/>&quot;6.<sp/><sp/>Replies&quot;.<sp/>This<sp/>is<sp/>what<sp/>a<sp/>SOCK5</highlight></codeline>
<codeline lineno="1607"><highlight class="comment"><sp/><sp/><sp/><sp/>replies:</highlight></codeline>
<codeline lineno="1608"><highlight class="comment"></highlight></codeline>
<codeline lineno="1609"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+----+-----+-------+------+----------+----------+</highlight></codeline>
<codeline lineno="1610"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|VER<sp/>|<sp/>REP<sp/>|<sp/><sp/>RSV<sp/><sp/>|<sp/>ATYP<sp/>|<sp/>BND.ADDR<sp/>|<sp/>BND.PORT<sp/>|</highlight></codeline>
<codeline lineno="1611"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+----+-----+-------+------+----------+----------+</highlight></codeline>
<codeline lineno="1612"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>1<sp/><sp/>|<sp/><sp/>1<sp/><sp/>|<sp/>X&apos;00&apos;<sp/>|<sp/><sp/>1<sp/><sp/><sp/>|<sp/>Variable<sp/>|<sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1613"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+----+-----+-------+------+----------+----------+</highlight></codeline>
<codeline lineno="1614"><highlight class="comment"></highlight></codeline>
<codeline lineno="1615"><highlight class="comment"><sp/><sp/><sp/><sp/>Where:</highlight></codeline>
<codeline lineno="1616"><highlight class="comment"></highlight></codeline>
<codeline lineno="1617"><highlight class="comment"><sp/><sp/><sp/><sp/>o<sp/><sp/>VER<sp/><sp/><sp/><sp/>protocol<sp/>version:<sp/>X&apos;05&apos;</highlight></codeline>
<codeline lineno="1618"><highlight class="comment"><sp/><sp/><sp/><sp/>o<sp/><sp/>REP<sp/><sp/><sp/><sp/>Reply<sp/>field:</highlight></codeline>
<codeline lineno="1619"><highlight class="comment"><sp/><sp/><sp/><sp/>o<sp/><sp/>X&apos;00&apos;<sp/>succeeded</highlight></codeline>
<codeline lineno="1620"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>socksreq[600];<sp/></highlight><highlight class="comment">/*<sp/>room<sp/>for<sp/>large<sp/>user/pw<sp/>(255<sp/>max<sp/>each)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/>ssize_t<sp/>actualread;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/>ssize_t<sp/>written;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/>CURLcode<sp/>code;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock<sp/>=<sp/>conn-&gt;sock[FIRSTSOCKET];</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/>Curl_nonblock(sock,<sp/>FALSE);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/>socksreq[0]<sp/>=<sp/>5;<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/>socksreq[1]<sp/>=<sp/>(char)(proxy_name<sp/>?<sp/>2<sp/>:<sp/>1);<sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>methods<sp/>(below)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/>socksreq[2]<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>authentication<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/>socksreq[3]<sp/>=<sp/>2;<sp/></highlight><highlight class="comment">/*<sp/>username/password<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/>code<sp/>=<sp/>Curl_write(conn,<sp/>sock,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)socksreq,<sp/>(2<sp/>+<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)socksreq[1]),</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;written);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((code<sp/>!=<sp/>CURLE_OK)<sp/>||<sp/>(written<sp/>!=<sp/>(2<sp/>+<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)socksreq[1])))<sp/>{</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(conn-&gt;data,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>send<sp/>initial<sp/>SOCKS5<sp/>request.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/>result=Curl_read(conn,<sp/>sock,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)socksreq,<sp/>2,<sp/>&amp;actualread);</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>!=<sp/>CURLE_OK)<sp/>||<sp/>(actualread<sp/>!=<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(conn-&gt;data,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>receive<sp/>initial<sp/>SOCKS5<sp/>response.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socksreq[0]<sp/>!=<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(conn-&gt;data,<sp/></highlight><highlight class="stringliteral">&quot;Received<sp/>invalid<sp/>version<sp/>in<sp/>initial<sp/>SOCKS5<sp/>response.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socksreq[1]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do,<sp/>no<sp/>authentication<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socksreq[1]<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Needs<sp/>user<sp/>name<sp/>and<sp/>password<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>userlen,<sp/>pwlen,<sp/>len;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/>userlen<sp/>=<sp/>strlen(proxy_name);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/>pwlen<sp/>=<sp/>proxy_password?strlen(proxy_password):0;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>username/password<sp/>request<sp/>looks<sp/>like</highlight></codeline>
<codeline lineno="1665"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>+----+------+----------+------+----------+</highlight></codeline>
<codeline lineno="1666"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>|VER<sp/>|<sp/>ULEN<sp/>|<sp/><sp/>UNAME<sp/><sp/><sp/>|<sp/>PLEN<sp/>|<sp/><sp/>PASSWD<sp/><sp/>|</highlight></codeline>
<codeline lineno="1667"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>+----+------+----------+------+----------+</highlight></codeline>
<codeline lineno="1668"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>|<sp/>1<sp/><sp/>|<sp/><sp/>1<sp/><sp/><sp/>|<sp/>1<sp/>to<sp/>255<sp/>|<sp/><sp/>1<sp/><sp/><sp/>|<sp/>1<sp/>to<sp/>255<sp/>|</highlight></codeline>
<codeline lineno="1669"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>+----+------+----------+------+----------+</highlight></codeline>
<codeline lineno="1670"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/>socksreq[len++]<sp/>=<sp/>1;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>username/pw<sp/>subnegotiation<sp/>version<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/>socksreq[len++]<sp/>=<sp/>(char)<sp/>userlen;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(socksreq<sp/>+<sp/>len,<sp/>proxy_name,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>userlen);</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>+=<sp/>userlen;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/>socksreq[len++]<sp/>=<sp/>(char)<sp/>pwlen;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(socksreq<sp/>+<sp/>len,<sp/>proxy_password,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>pwlen);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>+=<sp/>pwlen;</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>=<sp/>Curl_write(conn,<sp/>sock,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)socksreq,<sp/>len,<sp/>&amp;written);</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((code<sp/>!=<sp/>CURLE_OK)<sp/>||<sp/>(len<sp/>!=<sp/>written))<sp/>{</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(conn-&gt;data,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>send<sp/>SOCKS5<sp/>sub-negotiation<sp/>request.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/>result=Curl_read(conn,<sp/>sock,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)socksreq,<sp/>2,<sp/>&amp;actualread);</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>!=<sp/>CURLE_OK)<sp/>||<sp/>(actualread<sp/>!=<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(conn-&gt;data,<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>receive<sp/>SOCKS5<sp/>sub-negotiation<sp/>response.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((socksreq[0]<sp/>!=<sp/>5)<sp/>||<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(socksreq[1]<sp/>!=<sp/>0))<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(conn-&gt;data,<sp/></highlight><highlight class="stringliteral">&quot;User<sp/>was<sp/>rejected<sp/>by<sp/>the<sp/>SOCKS5<sp/>server<sp/>(%d<sp/>%d).&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socksreq[0],<sp/>socksreq[1]);</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Everything<sp/>is<sp/>good<sp/>so<sp/>far,<sp/>user<sp/>was<sp/>authenticated!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socksreq[1]<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(conn-&gt;data,</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SOCKS5<sp/>GSSAPI<sp/>per-message<sp/>authentication<sp/>is<sp/>not<sp/>supported.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socksreq[1]<sp/>==<sp/>255)<sp/>{</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proxy_name[0]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(conn-&gt;data,</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;No<sp/>authentication<sp/>method<sp/>was<sp/>acceptable.<sp/>(It<sp/>is<sp/>quite<sp/>likely&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>that<sp/>the<sp/>SOCKS5<sp/>server<sp/>wanted<sp/>a<sp/>username/password,<sp/>since<sp/>none&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>was<sp/>supplied<sp/>to<sp/>the<sp/>server<sp/>on<sp/>this<sp/>connection.)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(conn-&gt;data,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>authentication<sp/>method<sp/>was<sp/>acceptable.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(conn-&gt;data,</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Undocumented<sp/>SOCKS5<sp/>mode<sp/>attempted<sp/>to<sp/>be<sp/>used<sp/>by<sp/>server.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Authentication<sp/>is<sp/>complete,<sp/>now<sp/>specify<sp/>destination<sp/>to<sp/>the<sp/>proxy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/>socksreq[0]<sp/>=<sp/>5;<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>(SOCKS5)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/>socksreq[1]<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>connect<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/>socksreq[2]<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>must<sp/>be<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/>socksreq[3]<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>IPv4<sp/>=<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ENABLE_IPV6</highlight></codeline>
<codeline lineno="1735"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_curl__dns__entry" kindref="compound">Curl_dns_entry</ref><sp/>*dns;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/>Curl_addrinfo<sp/>*hp=NULL;</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/>Curl_resolv(conn,<sp/>conn-&gt;hostname,<sp/>conn-&gt;remote_port,<sp/>&amp;dns);</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rc<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rc<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>requires<sp/>that<sp/>we&apos;re<sp/>in<sp/>&quot;wait<sp/>for<sp/>resolve&quot;<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>Curl_wait_for_resolv(conn,<sp/>&amp;dns);</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1747"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>We<sp/>cannot<sp/>use<sp/>&apos;hostent&apos;<sp/>as<sp/>a<sp/>struct<sp/>that<sp/>Curl_resolv()<sp/>returns.<sp/><sp/>It</highlight></codeline>
<codeline lineno="1748"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>returns<sp/>a<sp/>Curl_addrinfo<sp/>pointer<sp/>that<sp/>may<sp/>not<sp/>always<sp/>look<sp/>the<sp/>same.</highlight></codeline>
<codeline lineno="1749"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dns)</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hp=dns-&gt;addr;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hp<sp/>&amp;&amp;<sp/>hp-&gt;h_addr_list[0])<sp/>{</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>socksreq[4]<sp/>=<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)hp-&gt;h_addr_list[0])[0];</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>socksreq[5]<sp/>=<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)hp-&gt;h_addr_list[0])[1];</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>socksreq[6]<sp/>=<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)hp-&gt;h_addr_list[0])[2];</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>socksreq[7]<sp/>=<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)hp-&gt;h_addr_list[0])[3];</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Curl_resolv_unlock(conn-&gt;data,<sp/>dns);<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>used<sp/>anymore<sp/>from<sp/>now<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(conn-&gt;data,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>resolve<sp/>\&quot;%s\&quot;<sp/>for<sp/>SOCKS5<sp/>connect.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;hostname);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1766"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>failf(conn-&gt;data,</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s:%d<sp/>has<sp/>an<sp/>internal<sp/>error<sp/>an<sp/>needs<sp/>to<sp/>be<sp/>fixed<sp/>to<sp/>work&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__FILE__,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1771"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/>*((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*)&amp;socksreq[8])<sp/>=<sp/>htons(conn-&gt;remote_port);</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>packetsize<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/>code<sp/>=<sp/>Curl_write(conn,<sp/>sock,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)socksreq,<sp/>packetsize,<sp/>&amp;written);</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((code<sp/>!=<sp/>CURLE_OK)<sp/>||<sp/>(written<sp/>!=<sp/>packetsize))<sp/>{</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(conn-&gt;data,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>send<sp/>SOCKS5<sp/>connect<sp/>request.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_read(conn,<sp/>sock,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)socksreq,<sp/>packetsize,<sp/>&amp;actualread);</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>!=<sp/>CURLE_OK)<sp/>||<sp/>(actualread<sp/>!=<sp/>packetsize))<sp/>{</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(conn-&gt;data,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>receive<sp/>SOCKS5<sp/>connect<sp/>request<sp/>ack.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socksreq[0]<sp/>!=<sp/>5)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(conn-&gt;data,</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SOCKS5<sp/>reply<sp/>has<sp/>wrong<sp/>version,<sp/>version<sp/>should<sp/>be<sp/>5.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socksreq[1]<sp/>!=<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Anything<sp/>besides<sp/>0<sp/>is<sp/>an<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(conn-&gt;data,</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>complete<sp/>SOCKS5<sp/>connection<sp/>to<sp/>%d.%d.%d.%d:%d.<sp/>(%d)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)socksreq[4],<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)socksreq[5],</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)socksreq[6],<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)socksreq[7],</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ntohs(*(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*)(&amp;socksreq[8])),</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socksreq[1]);</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/>Curl_nonblock(sock,<sp/>TRUE);</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>Proxy<sp/>was<sp/>successful!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CURLcode<sp/>ConnectPlease(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn,</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_curl__dns__entry" kindref="compound">Curl_dns_entry</ref><sp/>*hostaddr,</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*connected)</highlight></codeline>
<codeline lineno="1813"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/>CURLcode<sp/>result;</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/>Curl_ipconnect<sp/>*addr;</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************</highlight></codeline>
<codeline lineno="1818"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Connect<sp/>to<sp/>server/proxy</highlight></codeline>
<codeline lineno="1819"><highlight class="comment"><sp/><sp/><sp/>*************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/>result=<sp/>Curl_connecthost(conn,</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostaddr,</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;port,</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;conn-&gt;sock[FIRSTSOCKET],</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;addr,</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connected);</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CURLE_OK<sp/>==<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>is<sp/>cool,<sp/>then<sp/>we<sp/>store<sp/>the<sp/>current<sp/>information<sp/>from<sp/>the<sp/>hostaddr</highlight></codeline>
<codeline lineno="1828"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>to<sp/>the<sp/>serv_addr,<sp/>as<sp/>it<sp/>might<sp/>be<sp/>needed<sp/>later.<sp/>The<sp/>address</highlight></codeline>
<codeline lineno="1829"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returned<sp/>from<sp/>the<sp/>function<sp/>above<sp/>is<sp/>crucial<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;connect_addr<sp/>=<sp/>hostaddr;</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_IPV6</highlight></codeline>
<codeline lineno="1833"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;serv_addr<sp/>=<sp/>addr;</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1835"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>memset((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;conn-&gt;serv_addr,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(conn-&gt;serv_addr));</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;(conn-&gt;serv_addr.sin_addr),</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>in_addr<sp/>*)addr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>in_addr));</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;serv_addr.sin_family<sp/>=<sp/>hostaddr-&gt;addr-&gt;h_addrtype;</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;serv_addr.sin_port<sp/>=<sp/>htons((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)conn-&gt;port);</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1841"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(conn-&gt;data-&gt;set.proxytype<sp/>==<sp/>CURLPROXY_SOCKS5)<sp/>{</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handleSock5Proxy(conn-&gt;proxyuser,</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;proxypasswd,</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn)<sp/>?</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CURLE_COULDNT_CONNECT<sp/>:<sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(conn-&gt;data-&gt;set.proxytype<sp/>==<sp/>CURLPROXY_HTTP)<sp/>{</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>nothing<sp/>here.<sp/>handled<sp/>later.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(conn-&gt;data,<sp/></highlight><highlight class="stringliteral">&quot;unknown<sp/>proxytype<sp/>option<sp/>given&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_COULDNT_CONNECT;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1861"><highlight class="comment"><sp/>*<sp/>ALERT!<sp/>The<sp/>&apos;dns&apos;<sp/>pointer<sp/>being<sp/>passed<sp/>in<sp/>here<sp/>might<sp/>be<sp/>NULL<sp/>at<sp/>times.</highlight></codeline>
<codeline lineno="1862"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>verboseconnect(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn,</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_curl__dns__entry" kindref="compound">Curl_dns_entry</ref><sp/>*dns)</highlight></codeline>
<codeline lineno="1865"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data<sp/>=<sp/>conn-&gt;data;</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Figure<sp/>out<sp/>the<sp/>ip-number<sp/>and<sp/>display<sp/>the<sp/>first<sp/>host<sp/>name<sp/>it<sp/>shows:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ENABLE_IPV6</highlight></codeline>
<codeline lineno="1870"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>hbuf[NI_MAXHOST];</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>NI_WITHSCOPEID</highlight></codeline>
<codeline lineno="1873"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>NIFLAGS<sp/>NI_NUMERICHOST<sp/>|<sp/>NI_WITHSCOPEID</highlight></codeline>
<codeline lineno="1874"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1875"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>NIFLAGS<sp/>NI_NUMERICHOST</highlight></codeline>
<codeline lineno="1876"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1877"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dns)<sp/>{</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">addrinfo<sp/>*ai<sp/>=<sp/>dns-&gt;addr;</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Lookup<sp/>the<sp/>name<sp/>of<sp/>the<sp/>given<sp/>address.<sp/>This<sp/>should<sp/>probably<sp/>be<sp/>remade</highlight></codeline>
<codeline lineno="1881"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>use<sp/>the<sp/>DNS<sp/>cache<sp/>instead,<sp/>as<sp/>the<sp/>host<sp/>name<sp/>is<sp/>most<sp/>likely<sp/>cached</highlight></codeline>
<codeline lineno="1882"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>already.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getnameinfo(ai-&gt;ai_addr,<sp/>ai-&gt;ai_addrlen,<sp/>hbuf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(hbuf),<sp/>NULL,<sp/>0,</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NIFLAGS))<sp/>{</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(hbuf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(hbuf),<sp/></highlight><highlight class="stringliteral">&quot;unknown&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ai-&gt;ai_canonname)<sp/>{</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;Connected<sp/>to<sp/>%s<sp/>(%s)<sp/>port<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>ai-&gt;ai_canonname,<sp/>hbuf,</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;port);</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(hbuf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(hbuf),<sp/></highlight><highlight class="stringliteral">&quot;same<sp/>host&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;Connected<sp/>to<sp/>%s<sp/>port<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>hbuf,<sp/>conn-&gt;port);</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1902"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_INET_NTOA_R</highlight></codeline>
<codeline lineno="1904"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ntoa_buf[64];</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1906"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Curl_addrinfo<sp/>*hostaddr=dns?dns-&gt;addr:NULL;</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">in_addr<sp/>in;</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>memcpy(&amp;in.s_addr,<sp/>&amp;conn-&gt;serv_addr.sin_addr,<sp/>sizeof<sp/>(in.s_addr));</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;Connected<sp/>to<sp/>%s<sp/>(%s)<sp/>port<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostaddr?hostaddr-&gt;h_name:</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1911"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>defined(HAVE_INET_NTOA_R)</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inet_ntoa_r(in,<sp/>ntoa_buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ntoa_buf)),</highlight></codeline>
<codeline lineno="1913"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inet_ntoa(in),</highlight></codeline>
<codeline lineno="1915"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;port);</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1919"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1922"><highlight class="comment"><sp/>*<sp/>We<sp/>have<sp/>discovered<sp/>that<sp/>the<sp/>TCP<sp/>connection<sp/>has<sp/>been<sp/>successful,<sp/>we<sp/>can<sp/>now</highlight></codeline>
<codeline lineno="1923"><highlight class="comment"><sp/>*<sp/>proceed<sp/>with<sp/>some<sp/>action.</highlight></codeline>
<codeline lineno="1924"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1925"><highlight class="comment"><sp/>*<sp/>If<sp/>we&apos;re<sp/>using<sp/>the<sp/>multi<sp/>interface,<sp/>this<sp/>host<sp/>address<sp/>pointer<sp/>is<sp/>most</highlight></codeline>
<codeline lineno="1926"><highlight class="comment"><sp/>*<sp/>likely<sp/>NULL<sp/>at<sp/>this<sp/>point<sp/>as<sp/>we<sp/>can&apos;t<sp/>keep<sp/>the<sp/>resolved<sp/>info<sp/>around.<sp/>This</highlight></codeline>
<codeline lineno="1927"><highlight class="comment"><sp/>*<sp/>may<sp/>call<sp/>for<sp/>some<sp/>reworking,<sp/>like<sp/>a<sp/>reference<sp/>counter<sp/>in<sp/>the<sp/>struct<sp/>or</highlight></codeline>
<codeline lineno="1928"><highlight class="comment"><sp/>*<sp/>something.<sp/>The<sp/>hostaddr<sp/>is<sp/>not<sp/>used<sp/>for<sp/>very<sp/>much<sp/>though,<sp/>we<sp/>have<sp/>the</highlight></codeline>
<codeline lineno="1929"><highlight class="comment"><sp/>*<sp/>&apos;serv_addr&apos;<sp/>field<sp/>in<sp/>the<sp/>connectdata<sp/>struct<sp/>for<sp/>most<sp/>of<sp/>it.</highlight></codeline>
<codeline lineno="1930"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal">CURLcode<sp/>Curl_protocol_connect(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn,</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_curl__dns__entry" kindref="compound">Curl_dns_entry</ref><sp/>*hostaddr)</highlight></codeline>
<codeline lineno="1933"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data<sp/>=<sp/>conn-&gt;data;</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/>CURLcode<sp/>result=CURLE_OK;</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;bits.tcpconnect)</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>already<sp/>are<sp/>connected,<sp/>get<sp/>back.<sp/>This<sp/>may<sp/>happen<sp/>when<sp/>the<sp/>connect</highlight></codeline>
<codeline lineno="1939"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worked<sp/>fine<sp/>in<sp/>the<sp/>first<sp/>call,<sp/>like<sp/>when<sp/>we<sp/>connect<sp/>to<sp/>a<sp/>local<sp/>server</highlight></codeline>
<codeline lineno="1940"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>proxy.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/>Curl_pgrsTime(data,<sp/>TIMER_CONNECT);<sp/></highlight><highlight class="comment">/*<sp/>connect<sp/>done<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.verbose)</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/>verboseconnect(conn,<sp/>hostaddr);</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;curl_connect)<sp/>{</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>is<sp/>there<sp/>a<sp/>protocol-specific<sp/>connect()<sp/>procedure?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1950"><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>start<sp/>time<sp/>here<sp/>for<sp/>timeout<sp/>purposes<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="1952"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>connect<sp/>procedure,<sp/>it<sp/>is<sp/>later<sp/>set<sp/>again<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="1953"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>progress<sp/>meter<sp/>purpose<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;now<sp/>=<sp/>Curl_tvnow();</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>the<sp/>protocol-specific<sp/>connect<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>conn-&gt;curl_connect(conn);</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;<sp/></highlight><highlight class="comment">/*<sp/>pass<sp/>back<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1964"><highlight class="comment"><sp/>*<sp/>CreateConnection()<sp/>sets<sp/>up<sp/>a<sp/>new<sp/>connectdata<sp/>struct,<sp/>or<sp/>re-uses<sp/>an<sp/>already</highlight></codeline>
<codeline lineno="1965"><highlight class="comment"><sp/>*<sp/>existing<sp/>one,<sp/>and<sp/>resolves<sp/>host<sp/>name.</highlight></codeline>
<codeline lineno="1966"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1967"><highlight class="comment"><sp/>*<sp/>if<sp/>this<sp/>function<sp/>returns<sp/>CURLE_OK<sp/>and<sp/>*async<sp/>is<sp/>set<sp/>to<sp/>TRUE,<sp/>the<sp/>resolve</highlight></codeline>
<codeline lineno="1968"><highlight class="comment"><sp/>*<sp/>response<sp/>will<sp/>be<sp/>coming<sp/>asynchronously.<sp/>If<sp/>*async<sp/>is<sp/>FALSE,<sp/>the<sp/>name<sp/>is</highlight></codeline>
<codeline lineno="1969"><highlight class="comment"><sp/>*<sp/>already<sp/>resolved.</highlight></codeline>
<codeline lineno="1970"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CURLcode<sp/>CreateConnection(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data,</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>**in_connect,</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_curl__dns__entry" kindref="compound">Curl_dns_entry</ref><sp/>**addr,</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*async)</highlight></codeline>
<codeline lineno="1976"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tmp;</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/>CURLcode<sp/>result=CURLE_OK;</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>resumerange[40]=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn;</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn_temp;</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>urllen;</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_curl__dns__entry" kindref="compound">Curl_dns_entry</ref><sp/>*hostaddr;</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_ALARM</highlight></codeline>
<codeline lineno="1985"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prev_alarm=0;</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1987"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>endbracket;</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>user[MAX_CURL_USER_LENGTH];</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>passwd[MAX_CURL_PASSWORD_LENGTH];</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reuse;</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SIGACTION</highlight></codeline>
<codeline lineno="1994"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sigaction<sp/>keep_sigact;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>store<sp/>the<sp/>old<sp/>struct<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keep_copysig=FALSE;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>did<sp/>copy<sp/>it?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1996"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1997"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SIGNAL</highlight></codeline>
<codeline lineno="1998"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*keep_sigact;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>store<sp/>the<sp/>old<sp/>handler<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1999"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2000"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2001"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/>*addr<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">/*<sp/>nothing<sp/>yet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/>*async<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************</highlight></codeline>
<codeline lineno="2006"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Check<sp/>input<sp/>data</highlight></codeline>
<codeline lineno="2007"><highlight class="comment"><sp/><sp/><sp/>*************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"></highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!data-&gt;change.url)</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_URL_MALFORMAT;</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"></highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>First,<sp/>split<sp/>up<sp/>the<sp/>current<sp/>URL<sp/>in<sp/>parts<sp/>so<sp/>that<sp/>we<sp/>can<sp/>use<sp/>the</highlight></codeline>
<codeline lineno="2013"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>parts<sp/>for<sp/>checking<sp/>against<sp/>the<sp/>already<sp/>present<sp/>connections.<sp/>In<sp/>order</highlight></codeline>
<codeline lineno="2014"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>to<sp/>not<sp/>have<sp/>to<sp/>modify<sp/>everything<sp/>at<sp/>once,<sp/>we<sp/>allocate<sp/>a<sp/>temporary</highlight></codeline>
<codeline lineno="2015"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>connection<sp/>data<sp/>struct<sp/>and<sp/>fill<sp/>in<sp/>for<sp/>comparison<sp/>purposes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/>conn<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref>));</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!conn)<sp/>{</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/>*in_connect<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>the<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OUT_OF_MEMORY;</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>must<sp/>set<sp/>the<sp/>return<sp/>variable<sp/>as<sp/>soon<sp/>as<sp/>possible,<sp/>so<sp/>that<sp/>our</highlight></codeline>
<codeline lineno="2023"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>parent<sp/>can<sp/>cleanup<sp/>any<sp/>possible<sp/>allocs<sp/>we<sp/>may<sp/>have<sp/>done<sp/>before</highlight></codeline>
<codeline lineno="2024"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>any<sp/>failure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/>*in_connect<sp/>=<sp/>conn;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>have<sp/>to<sp/>init<sp/>the<sp/>struct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/>memset(conn,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref>));</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>and<sp/>we<sp/>setup<sp/>a<sp/>few<sp/>fields<sp/>in<sp/>case<sp/>we<sp/>end<sp/>up<sp/>actually<sp/>using<sp/>this<sp/>struct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/>conn-&gt;data<sp/>=<sp/>data;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remember<sp/>our<sp/>daddy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/>conn-&gt;sock[FIRSTSOCKET]<sp/>=<sp/>CURL_SOCKET_BAD;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>file<sp/>descriptor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/>conn-&gt;sock[SECONDARYSOCKET]<sp/>=<sp/>CURL_SOCKET_BAD;<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>file<sp/>descriptor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/>conn-&gt;connectindex<sp/>=<sp/>-1;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/>conn-&gt;bits.httpproxy<sp/>=<sp/>(data-&gt;change.proxy<sp/>&amp;&amp;<sp/>*data-&gt;change.proxy<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(data-&gt;set.proxytype<sp/>==<sp/>CURLPROXY_HTTP))?</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/>TRUE:FALSE;<sp/></highlight><highlight class="comment">/*<sp/>http<sp/>proxy<sp/>or<sp/>not<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Default<sp/>protocol-independent<sp/>behavior<sp/>doesn&apos;t<sp/>support<sp/>persistant</highlight></codeline>
<codeline lineno="2040"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>connections,<sp/>so<sp/>we<sp/>set<sp/>this<sp/>to<sp/>force-close.<sp/>Protocols<sp/>that<sp/>support</highlight></codeline>
<codeline lineno="2041"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>this<sp/>need<sp/>to<sp/>set<sp/>this<sp/>to<sp/>FALSE<sp/>in<sp/>their<sp/>&quot;curl_do&quot;<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/>conn-&gt;bits.close<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>maxdownload<sp/>must<sp/>be<sp/>-1<sp/>on<sp/>init,<sp/>as<sp/>0<sp/>is<sp/>a<sp/>valid<sp/>value!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/>conn-&gt;maxdownload<sp/>=<sp/>-1;<sp/><sp/></highlight><highlight class="comment">/*<sp/>might<sp/>have<sp/>been<sp/>used<sp/>previously!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2046"><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>creation<sp/>time<sp/>to<sp/>help<sp/>future<sp/>close<sp/>decision<sp/>making<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/>conn-&gt;created<sp/>=<sp/>Curl_tvnow();</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/>conn-&gt;bits.use_range<sp/>=<sp/>data-&gt;set.set_range?TRUE:FALSE;<sp/></highlight><highlight class="comment">/*<sp/>range<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/>conn-&gt;range<sp/>=<sp/>data-&gt;set.set_range;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clone<sp/>the<sp/>range<sp/>setting<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/>conn-&gt;resume_from<sp/>=<sp/>data-&gt;set.set_resume_from;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>inherite<sp/>resume_from<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>start<sp/>time<sp/>temporary<sp/>to<sp/>this<sp/>creation<sp/>time<sp/>to<sp/>allow<sp/>easier</highlight></codeline>
<codeline lineno="2055"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>timeout<sp/>checks<sp/>before<sp/>the<sp/>transfer<sp/>has<sp/>started<sp/>for<sp/>real.<sp/>The<sp/>start<sp/>time</highlight></codeline>
<codeline lineno="2056"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>is<sp/>later<sp/>set<sp/>&quot;for<sp/>real&quot;<sp/>using<sp/>Curl_pgrsStartNow().<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/>conn-&gt;data-&gt;progress.start<sp/>=<sp/>conn-&gt;created;</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/>conn-&gt;bits.user_passwd<sp/>=<sp/>data-&gt;set.userpwd?1:0;</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/>conn-&gt;bits.proxy_user_passwd<sp/>=<sp/>data-&gt;set.proxyuserpwd?1:0;</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>initing<sp/>continues<sp/>below,<sp/>see<sp/>the<sp/>comment<sp/>&quot;Continue<sp/>connectdata</highlight></codeline>
<codeline lineno="2063"><highlight class="comment"><sp/><sp/><sp/>*<sp/>initialization<sp/>here&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/***********************************************************</highlight></codeline>
<codeline lineno="2066"><highlight class="comment"><sp/><sp/><sp/>*<sp/>We<sp/>need<sp/>to<sp/>allocate<sp/>memory<sp/>to<sp/>store<sp/>the<sp/>path<sp/>in.<sp/>We<sp/>get<sp/>the<sp/>size<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="2067"><highlight class="comment"><sp/><sp/><sp/>*<sp/>full<sp/>URL<sp/>to<sp/>be<sp/>sure,<sp/>and<sp/>we<sp/>need<sp/>to<sp/>make<sp/>it<sp/>at<sp/>least<sp/>256<sp/>bytes<sp/>since</highlight></codeline>
<codeline lineno="2068"><highlight class="comment"><sp/><sp/><sp/>*<sp/>other<sp/>parts<sp/>of<sp/>the<sp/>code<sp/>will<sp/>rely<sp/>on<sp/>this<sp/>fact</highlight></codeline>
<codeline lineno="2069"><highlight class="comment"><sp/><sp/><sp/>***********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LEAST_PATH_ALLOC<sp/>256</highlight></codeline>
<codeline lineno="2071"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>urllen=strlen(data-&gt;change.url);</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(urllen<sp/>&lt;<sp/>LEAST_PATH_ALLOC)</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/>urllen=LEAST_PATH_ALLOC;</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/>conn-&gt;path=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)malloc(urllen);</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>conn-&gt;path)</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OUT_OF_MEMORY;<sp/></highlight><highlight class="comment">/*<sp/>really<sp/>bad<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************</highlight></codeline>
<codeline lineno="2080"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Parse<sp/>the<sp/>URL.</highlight></codeline>
<codeline lineno="2081"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2082"><highlight class="comment"><sp/><sp/><sp/>*<sp/>We<sp/>need<sp/>to<sp/>parse<sp/>the<sp/>url<sp/>even<sp/>when<sp/>using<sp/>the<sp/>proxy,<sp/>because<sp/>we<sp/>will<sp/>need</highlight></codeline>
<codeline lineno="2083"><highlight class="comment"><sp/><sp/><sp/>*<sp/>the<sp/>hostname<sp/>and<sp/>port<sp/>in<sp/>case<sp/>we<sp/>are<sp/>trying<sp/>to<sp/>SSL<sp/>connect<sp/>through<sp/>the</highlight></codeline>
<codeline lineno="2084"><highlight class="comment"><sp/><sp/><sp/>*<sp/>proxy<sp/>--<sp/>and<sp/>we<sp/>don&apos;t<sp/>know<sp/>if<sp/>we<sp/>will<sp/>need<sp/>to<sp/>use<sp/>SSL<sp/>until<sp/>we<sp/>parse<sp/>the</highlight></codeline>
<codeline lineno="2085"><highlight class="comment"><sp/><sp/><sp/>*<sp/>url<sp/>...</highlight></codeline>
<codeline lineno="2086"><highlight class="comment"><sp/><sp/><sp/>************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((2<sp/>==<sp/>sscanf(data-&gt;change.url,<sp/></highlight><highlight class="stringliteral">&quot;%64[^:]:%[^\n]&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;protostr,</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;path))<sp/>&amp;&amp;<sp/>strequal(conn-&gt;protostr,<sp/></highlight><highlight class="stringliteral">&quot;file&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;path[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>conn-&gt;path[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allow<sp/>omitted<sp/>hostname<sp/>(e.g.<sp/>file:/&lt;path&gt;).<sp/><sp/>This<sp/>is<sp/>not<sp/>strictly</highlight></codeline>
<codeline lineno="2092"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>speaking<sp/>a<sp/>valid<sp/>file:<sp/>URL<sp/>by<sp/>RFC<sp/>1738,<sp/>but<sp/>treating<sp/>file:/&lt;path&gt;<sp/>as</highlight></codeline>
<codeline lineno="2093"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>file://localhost/&lt;path&gt;<sp/>is<sp/>similar<sp/>to<sp/>how<sp/>other<sp/>schemes<sp/>treat<sp/>missing</highlight></codeline>
<codeline lineno="2094"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>hostnames.<sp/><sp/>See<sp/>RFC<sp/>1808.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>cannot<sp/>be<sp/>done<sp/>with<sp/>strcpy()<sp/>in<sp/>a<sp/>portable<sp/>manner,<sp/>since<sp/>the</highlight></codeline>
<codeline lineno="2097"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory<sp/>areas<sp/>overlap!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memmove(conn-&gt;path,<sp/>conn-&gt;path<sp/>+<sp/>2,<sp/>strlen(conn-&gt;path<sp/>+<sp/>2)+1);</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>deal<sp/>with<sp/>file://&lt;host&gt;/&lt;path&gt;<sp/>differently<sp/>since<sp/>it<sp/>supports<sp/>no</highlight></codeline>
<codeline lineno="2102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>hostname<sp/>other<sp/>than<sp/>&quot;localhost&quot;<sp/>and<sp/>&quot;127.0.0.1&quot;,<sp/>which<sp/>is<sp/>unique<sp/>among</highlight></codeline>
<codeline lineno="2103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>URL<sp/>protocols<sp/>specified<sp/>in<sp/>RFC<sp/>1738</highlight></codeline>
<codeline lineno="2104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;path[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>URL<sp/>included<sp/>a<sp/>host<sp/>name,<sp/>we<sp/>ignore<sp/>host<sp/>names<sp/>in<sp/>file://<sp/>URLs</highlight></codeline>
<codeline lineno="2107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>the<sp/>standards<sp/>don&apos;t<sp/>define<sp/>what<sp/>to<sp/>do<sp/>with<sp/>them<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr=strchr(conn-&gt;path,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ptr)<sp/>{</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>there<sp/>was<sp/>a<sp/>slash<sp/>present</highlight></codeline>
<codeline lineno="2111"><highlight class="comment"></highlight></codeline>
<codeline lineno="2112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RFC1738<sp/>(section<sp/>3.1,<sp/>page<sp/>5)<sp/>says:</highlight></codeline>
<codeline lineno="2113"><highlight class="comment"></highlight></codeline>
<codeline lineno="2114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>rest<sp/>of<sp/>the<sp/>locator<sp/>consists<sp/>of<sp/>data<sp/>specific<sp/>to<sp/>the<sp/>scheme,</highlight></codeline>
<codeline lineno="2115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>is<sp/>known<sp/>as<sp/>the<sp/>&quot;url-path&quot;.<sp/>It<sp/>supplies<sp/>the<sp/>details<sp/>of<sp/>how<sp/>the</highlight></codeline>
<codeline lineno="2116"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specified<sp/>resource<sp/>can<sp/>be<sp/>accessed.<sp/>Note<sp/>that<sp/>the<sp/>&quot;/&quot;<sp/>between<sp/>the</highlight></codeline>
<codeline lineno="2117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host<sp/>(or<sp/>port)<sp/>and<sp/>the<sp/>url-path<sp/>is<sp/>NOT<sp/>part<sp/>of<sp/>the<sp/>url-path.</highlight></codeline>
<codeline lineno="2118"><highlight class="comment"></highlight></codeline>
<codeline lineno="2119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>As<sp/>most<sp/>agents<sp/>use<sp/>file://localhost/foo<sp/>to<sp/>get<sp/>&apos;/foo&apos;<sp/>although<sp/>the</highlight></codeline>
<codeline lineno="2120"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slash<sp/>preceeding<sp/>foo<sp/>is<sp/>a<sp/>separator<sp/>and<sp/>not<sp/>a<sp/>slash<sp/>for<sp/>the<sp/>path,</highlight></codeline>
<codeline lineno="2121"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>URL<sp/>as<sp/>file://localhost//foo<sp/>must<sp/>be<sp/>valid<sp/>as<sp/>well,<sp/>to<sp/>refer<sp/>to</highlight></codeline>
<codeline lineno="2122"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>same<sp/>file<sp/>with<sp/>an<sp/>absolute<sp/>path.</highlight></codeline>
<codeline lineno="2123"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2124"><highlight class="normal"></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ptr[1]<sp/>&amp;&amp;<sp/>(</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>==<sp/>ptr[1]))</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>there<sp/>was<sp/>two<sp/>slashes,<sp/>we<sp/>skip<sp/>the<sp/>first<sp/>one<sp/>as<sp/>that<sp/>is<sp/>then</highlight></codeline>
<codeline lineno="2127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>used<sp/>truly<sp/>as<sp/>a<sp/>separator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>cannot<sp/>be<sp/>made<sp/>with<sp/>strcpy,<sp/>as<sp/>the<sp/>memory<sp/>chunks<sp/>overlap!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memmove(conn-&gt;path,<sp/>ptr,<sp/>strlen(ptr)+1);</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(conn-&gt;protostr,<sp/></highlight><highlight class="stringliteral">&quot;file&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>store<sp/>protocol<sp/>string<sp/>lowercase<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>default<sp/>host<sp/>and<sp/>default<sp/>path<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(conn-&gt;gname,<sp/></highlight><highlight class="stringliteral">&quot;curl.haxx.se&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(conn-&gt;path,<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>need<sp/>to<sp/>search<sp/>for<sp/>&apos;/&apos;<sp/>OR<sp/>&apos;?&apos;<sp/>-<sp/>whichever<sp/>comes<sp/>first<sp/>after<sp/>host</highlight></codeline>
<codeline lineno="2142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>name<sp/>but<sp/>before<sp/>the<sp/>path.<sp/>We<sp/>need<sp/>to<sp/>change<sp/>that<sp/>to<sp/>handle<sp/>things<sp/>like</highlight></codeline>
<codeline lineno="2143"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>http://example.com?param=<sp/>(notice<sp/>the<sp/>missing<sp/>&apos;/&apos;).<sp/>Later<sp/>we&apos;ll<sp/>insert</highlight></codeline>
<codeline lineno="2144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>that<sp/>missing<sp/>slash<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>path.</highlight></codeline>
<codeline lineno="2145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(2<sp/>&gt;<sp/>sscanf(data-&gt;change.url,</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%64[^\n:]://%512[^\n/?]%[^\n]&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;protostr,<sp/>conn-&gt;gname,<sp/>conn-&gt;path))<sp/>{</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>URL<sp/>was<sp/>badly<sp/>formatted,<sp/>let&apos;s<sp/>try<sp/>the<sp/>browser-style<sp/>_without_</highlight></codeline>
<codeline lineno="2152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>protocol<sp/>specified<sp/>like<sp/>&apos;http://&apos;.</highlight></codeline>
<codeline lineno="2153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((1<sp/>&gt;<sp/>sscanf(data-&gt;change.url,<sp/></highlight><highlight class="stringliteral">&quot;%512[^\n/?]%[^\n]&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;gname,<sp/>conn-&gt;path))<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>We<sp/>couldn&apos;t<sp/>even<sp/>get<sp/>this<sp/>format.</highlight></codeline>
<codeline lineno="2158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;&lt;url&gt;<sp/>malformed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_URL_MALFORMAT;</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"></highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Since<sp/>there<sp/>was<sp/>no<sp/>protocol<sp/>part<sp/>specified,<sp/>we<sp/>guess<sp/>what<sp/>protocol<sp/>it</highlight></codeline>
<codeline lineno="2165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>is<sp/>based<sp/>on<sp/>the<sp/>first<sp/>letters<sp/>of<sp/>the<sp/>server<sp/>name.</highlight></codeline>
<codeline lineno="2166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note:<sp/>if<sp/>you<sp/>add<sp/>a<sp/>new<sp/>protocol,<sp/>please<sp/>update<sp/>the<sp/>list<sp/>in</highlight></codeline>
<codeline lineno="2169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>lib/version.c<sp/>too!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2170"><highlight class="normal"></highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(checkprefix(</highlight><highlight class="stringliteral">&quot;GOPHER&quot;</highlight><highlight class="normal">,<sp/>conn-&gt;gname))</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(conn-&gt;protostr,<sp/></highlight><highlight class="stringliteral">&quot;gopher&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SSLEAY</highlight></codeline>
<codeline lineno="2174"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(checkprefix(</highlight><highlight class="stringliteral">&quot;HTTPS&quot;</highlight><highlight class="normal">,<sp/>conn-&gt;gname))</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(conn-&gt;protostr,<sp/></highlight><highlight class="stringliteral">&quot;https&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(checkprefix(</highlight><highlight class="stringliteral">&quot;FTPS&quot;</highlight><highlight class="normal">,<sp/>conn-&gt;gname))</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(conn-&gt;protostr,<sp/></highlight><highlight class="stringliteral">&quot;ftps&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_SSLEAY<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="2179"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(checkprefix(</highlight><highlight class="stringliteral">&quot;FTP&quot;</highlight><highlight class="normal">,<sp/>conn-&gt;gname))</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(conn-&gt;protostr,<sp/></highlight><highlight class="stringliteral">&quot;ftp&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(checkprefix(</highlight><highlight class="stringliteral">&quot;TELNET&quot;</highlight><highlight class="normal">,<sp/>conn-&gt;gname))</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(conn-&gt;protostr,<sp/></highlight><highlight class="stringliteral">&quot;telnet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkprefix(</highlight><highlight class="stringliteral">&quot;DICT&quot;</highlight><highlight class="normal">,<sp/>conn-&gt;gname))</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(conn-&gt;protostr,<sp/></highlight><highlight class="stringliteral">&quot;DICT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkprefix(</highlight><highlight class="stringliteral">&quot;LDAP&quot;</highlight><highlight class="normal">,<sp/>conn-&gt;gname))</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(conn-&gt;protostr,<sp/></highlight><highlight class="stringliteral">&quot;LDAP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(conn-&gt;protostr,<sp/></highlight><highlight class="stringliteral">&quot;http&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;protocol<sp/>|=<sp/>PROT_MISSING;<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>given<sp/>in<sp/>URL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"></highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>URL<sp/>is<sp/>malformatted<sp/>(missing<sp/>a<sp/>&apos;/&apos;<sp/>after<sp/>hostname<sp/>before<sp/>path)<sp/>we</highlight></codeline>
<codeline lineno="2196"><highlight class="comment"><sp/><sp/><sp/>*<sp/>insert<sp/>a<sp/>slash<sp/>here.<sp/>The<sp/>only<sp/>letter<sp/>except<sp/>&apos;/&apos;<sp/>we<sp/>accept<sp/>to<sp/>start<sp/>a<sp/>path</highlight></codeline>
<codeline lineno="2197"><highlight class="comment"><sp/><sp/><sp/>*<sp/>is<sp/>&apos;?&apos;.</highlight></codeline>
<codeline lineno="2198"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;path[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>need<sp/>this<sp/>function<sp/>to<sp/>deal<sp/>with<sp/>overlapping<sp/>memory<sp/>areas.<sp/>We<sp/>know</highlight></codeline>
<codeline lineno="2201"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>the<sp/>memory<sp/>area<sp/>&apos;path&apos;<sp/>points<sp/>to<sp/>is<sp/>&apos;urllen&apos;<sp/>bytes<sp/>big<sp/>and<sp/>that</highlight></codeline>
<codeline lineno="2202"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>bigger<sp/>than<sp/>the<sp/>path.<sp/>Use<sp/>+1<sp/>to<sp/>move<sp/>the<sp/>zero<sp/>byte<sp/>too.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/>memmove(&amp;conn-&gt;path[1],<sp/>conn-&gt;path,<sp/>strlen(conn-&gt;path)+1);</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;path[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2208"><highlight class="comment"><sp/><sp/><sp/>*<sp/>So<sp/>if<sp/>the<sp/>URL<sp/>was<sp/>A://B/C,</highlight></codeline>
<codeline lineno="2209"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>conn-&gt;protostr<sp/>is<sp/>A</highlight></codeline>
<codeline lineno="2210"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>conn-&gt;gname<sp/>is<sp/>B</highlight></codeline>
<codeline lineno="2211"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>conn-&gt;path<sp/>is<sp/>/C</highlight></codeline>
<codeline lineno="2212"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2213"><highlight class="normal"></highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************</highlight></codeline>
<codeline lineno="2215"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Take<sp/>care<sp/>of<sp/>proxy<sp/>authentication<sp/>stuff</highlight></codeline>
<codeline lineno="2216"><highlight class="comment"><sp/><sp/><sp/>*************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;bits.proxy_user_passwd)<sp/>{</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>proxyuser[MAX_CURL_USER_LENGTH]=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>proxypasswd[MAX_CURL_PASSWORD_LENGTH]=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(data-&gt;set.proxyuserpwd,</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"><sp/>MAX_CURL_USER_LENGTH_TXT<sp/></highlight><highlight class="stringliteral">&quot;[^:]:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"><sp/>MAX_CURL_PASSWORD_LENGTH_TXT<sp/></highlight><highlight class="stringliteral">&quot;[^\n]&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proxyuser,<sp/>proxypasswd);</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;proxyuser<sp/>=<sp/>strdup(proxyuser);</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!conn-&gt;proxyuser)</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OUT_OF_MEMORY;</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;proxypasswd<sp/>=<sp/>strdup(proxypasswd);</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!conn-&gt;proxypasswd)</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OUT_OF_MEMORY;</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************</highlight></codeline>
<codeline lineno="2236"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Set<sp/>a<sp/>few<sp/>convenience<sp/>pointers</highlight></codeline>
<codeline lineno="2237"><highlight class="comment"><sp/><sp/><sp/>*************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/>conn-&gt;name<sp/>=<sp/>conn-&gt;gname;</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/>conn-&gt;ppath<sp/>=<sp/>conn-&gt;path;</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/>conn-&gt;hostname<sp/>=<sp/>conn-&gt;name;</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************</highlight></codeline>
<codeline lineno="2243"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Detect<sp/>what<sp/>(if<sp/>any)<sp/>proxy<sp/>to<sp/>use</highlight></codeline>
<codeline lineno="2244"><highlight class="comment"><sp/><sp/><sp/>*************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!data-&gt;change.proxy)<sp/>{</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>proxy<sp/>was<sp/>not<sp/>specified,<sp/>we<sp/>check<sp/>for<sp/>default<sp/>proxy<sp/>environment</highlight></codeline>
<codeline lineno="2247"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>variables,<sp/>to<sp/>enable<sp/>i.e<sp/>Lynx<sp/>compliance:</highlight></codeline>
<codeline lineno="2248"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2249"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>http_proxy=http://some.server.dom:port/</highlight></codeline>
<codeline lineno="2250"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>https_proxy=http://some.server.dom:port/</highlight></codeline>
<codeline lineno="2251"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>ftp_proxy=http://some.server.dom:port/</highlight></codeline>
<codeline lineno="2252"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>gopher_proxy=http://some.server.dom:port/</highlight></codeline>
<codeline lineno="2253"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>no_proxy=domain1.dom,host.domain2.dom</highlight></codeline>
<codeline lineno="2254"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>(a<sp/>comma-separated<sp/>list<sp/>of<sp/>hosts<sp/>which<sp/>should</highlight></codeline>
<codeline lineno="2255"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>not<sp/>be<sp/>proxied,<sp/>or<sp/>an<sp/>asterisk<sp/>to<sp/>override</highlight></codeline>
<codeline lineno="2256"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>all<sp/>proxy<sp/>variables)</highlight></codeline>
<codeline lineno="2257"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>all_proxy=http://some.server.dom:port/</highlight></codeline>
<codeline lineno="2258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>(seems<sp/>to<sp/>exist<sp/>for<sp/>the<sp/>CERN<sp/>www<sp/>lib.<sp/>Probably</highlight></codeline>
<codeline lineno="2259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>the<sp/>first<sp/>to<sp/>check<sp/>for.)</highlight></codeline>
<codeline lineno="2260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2261"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>For<sp/>compatibility,<sp/>the<sp/>all-uppercase<sp/>versions<sp/>of<sp/>these<sp/>variables<sp/>are</highlight></codeline>
<codeline lineno="2262"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>checked<sp/>if<sp/>the<sp/>lowercase<sp/>versions<sp/>don&apos;t<sp/>exist.</highlight></codeline>
<codeline lineno="2263"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*no_proxy=NULL;</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*no_proxy_tok_buf;</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*proxy=NULL;</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>proxy_env[128];</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/>no_proxy=curl_getenv(</highlight><highlight class="stringliteral">&quot;no_proxy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!no_proxy)</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>no_proxy=curl_getenv(</highlight><highlight class="stringliteral">&quot;NO_PROXY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!no_proxy<sp/>||<sp/>!strequal(</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,<sp/>no_proxy))<sp/>{</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NO_PROXY<sp/>wasn&apos;t<sp/>specified<sp/>or<sp/>it<sp/>wasn&apos;t<sp/>just<sp/>an<sp/>asterisk<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nope;</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nope=no_proxy?strtok_r(no_proxy,<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">,<sp/>&amp;no_proxy_tok_buf):NULL;</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(nope)<sp/>{</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>namelen;</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*endptr<sp/>=<sp/>strchr(conn-&gt;name,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(endptr)</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namelen=endptr-conn-&gt;name;</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namelen=strlen(conn-&gt;name);</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strlen(nope)<sp/>&lt;=<sp/>namelen)<sp/>{</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*checkn=</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;name<sp/>+<sp/>namelen<sp/>-<sp/>strlen(nope);</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(checkprefix(nope,<sp/>checkn))<sp/>{</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>proxy<sp/>for<sp/>this<sp/>host!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/>nope=strtok_r(NULL,<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">,<sp/>&amp;no_proxy_tok_buf);</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!nope)<sp/>{</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It<sp/>was<sp/>not<sp/>listed<sp/>as<sp/>without<sp/>proxy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*protop<sp/>=<sp/>conn-&gt;protostr;</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*envp<sp/>=<sp/>proxy_env;</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*prox;</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now,<sp/>build<sp/>&lt;protocol&gt;_proxy<sp/>and<sp/>check<sp/>for<sp/>such<sp/>a<sp/>one<sp/>to<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*protop)</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*envp++<sp/>=<sp/>tolower(*protop++);</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>append<sp/>_proxy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(envp,<sp/></highlight><highlight class="stringliteral">&quot;_proxy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>protocol<sp/>proxy:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/>prox=curl_getenv(proxy_env);</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"></highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>We<sp/>don&apos;t<sp/>try<sp/>the<sp/>uppercase<sp/>version<sp/>of<sp/>HTTP_PROXY<sp/>because<sp/>of</highlight></codeline>
<codeline lineno="2314"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>security<sp/>reasons:</highlight></codeline>
<codeline lineno="2315"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2316"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>When<sp/>curl<sp/>is<sp/>used<sp/>in<sp/>a<sp/>webserver<sp/>application</highlight></codeline>
<codeline lineno="2317"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>environment<sp/>(cgi<sp/>or<sp/>php),<sp/>this<sp/>environment<sp/>variable<sp/>can</highlight></codeline>
<codeline lineno="2318"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>be<sp/>controlled<sp/>by<sp/>the<sp/>web<sp/>server<sp/>user<sp/>by<sp/>setting<sp/>the</highlight></codeline>
<codeline lineno="2319"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>http<sp/>header<sp/>&apos;Proxy:&apos;<sp/>to<sp/>some<sp/>value.</highlight></codeline>
<codeline lineno="2320"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2321"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>can<sp/>cause<sp/>&apos;internal&apos;<sp/>http/ftp<sp/>requests<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="2322"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>arbitrarily<sp/>redirected<sp/>by<sp/>any<sp/>external<sp/>attacker.</highlight></codeline>
<codeline lineno="2323"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!prox<sp/>&amp;&amp;<sp/>!strequal(</highlight><highlight class="stringliteral">&quot;http_proxy&quot;</highlight><highlight class="normal">,<sp/>proxy_env))<sp/>{</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>There<sp/>was<sp/>no<sp/>lowercase<sp/>variable,<sp/>try<sp/>the<sp/>uppercase<sp/>version:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(envp<sp/>=<sp/>proxy_env;<sp/>*envp;<sp/>envp++)</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*envp<sp/>=<sp/>toupper(*envp);</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prox=curl_getenv(proxy_env);</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"></highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(prox<sp/>&amp;&amp;<sp/>*prox)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>count<sp/>&quot;&quot;<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>proxy<sp/>=<sp/>prox;<sp/></highlight><highlight class="comment">/*<sp/>use<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>proxy<sp/>=<sp/>curl_getenv(</highlight><highlight class="stringliteral">&quot;all_proxy&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>default<sp/>proxy<sp/>to<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!proxy)</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proxy=curl_getenv(</highlight><highlight class="stringliteral">&quot;ALL_PROXY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"></highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(proxy<sp/>&amp;&amp;<sp/>*proxy)<sp/>{</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>have<sp/>a<sp/>proxy<sp/>here<sp/>to<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr;</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>proxyuser[MAX_CURL_USER_LENGTH];</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>proxypasswd[MAX_CURL_PASSWORD_LENGTH];</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>the<sp/>possible<sp/>protocol<sp/>piece<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr=strstr(proxy,<sp/></highlight><highlight class="stringliteral">&quot;://&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ptr)</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>proxy;</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"></highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>an<sp/>@-letter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>strchr(ptr,<sp/></highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ptr<sp/>&amp;&amp;<sp/>(2<sp/>==<sp/>sscanf(proxy,<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"><sp/>MAX_CURL_USER_LENGTH_TXT</highlight><highlight class="stringliteral">&quot;[^:]:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"><sp/>MAX_CURL_PASSWORD_LENGTH_TXT<sp/></highlight><highlight class="stringliteral">&quot;[^@]&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proxyuser,<sp/>proxypasswd)))<sp/>{</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>found<sp/>user<sp/>and<sp/>password,<sp/>rip<sp/>them<sp/>out<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Curl_safefree(conn-&gt;proxyuser);</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;proxyuser<sp/>=<sp/>strdup(proxyuser);</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!conn-&gt;proxyuser)</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OUT_OF_MEMORY;</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Curl_safefree(conn-&gt;proxypasswd);</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;proxypasswd<sp/>=<sp/>strdup(proxypasswd);</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"></highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!conn-&gt;proxypasswd)</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OUT_OF_MEMORY;</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;bits.proxy_user_passwd<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2372"><highlight class="normal"></highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>strdup(ptr+1);</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(proxy);<sp/></highlight><highlight class="comment">/*<sp/>free<sp/>the<sp/>former<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proxy<sp/>=<sp/>ptr;<sp/></highlight><highlight class="comment">/*<sp/>now<sp/>use<sp/>this<sp/>instead<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"></highlight></codeline>
<codeline lineno="2378"><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;change.proxy<sp/>=<sp/>proxy;</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;change.proxy_alloc=TRUE;<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>needs<sp/>to<sp/>be<sp/>freed<sp/>later<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;bits.httpproxy<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>if<sp/>(!nope)<sp/>-<sp/>it<sp/>wasn&apos;t<sp/>specified<sp/>non-proxy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>NO_PROXY<sp/>wasn&apos;t<sp/>specified<sp/>or<sp/>&apos;*&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(no_proxy)</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(no_proxy);</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>if<sp/>not<sp/>using<sp/>proxy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2388"><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************</highlight></codeline>
<codeline lineno="2390"><highlight class="comment"><sp/><sp/><sp/>*<sp/>No<sp/>protocol<sp/>part<sp/>in<sp/>URL<sp/>was<sp/>used,<sp/>add<sp/>it!</highlight></codeline>
<codeline lineno="2391"><highlight class="comment"><sp/><sp/><sp/>*************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;protocol&amp;PROT_MISSING)<sp/>{</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We&apos;re<sp/>guessing<sp/>prefixes<sp/>here<sp/>and<sp/>if<sp/>we&apos;re<sp/>told<sp/>to<sp/>use<sp/>a<sp/>proxy<sp/>or<sp/>if</highlight></codeline>
<codeline lineno="2394"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>we&apos;re<sp/>gonna<sp/>follow<sp/>a<sp/>Location:<sp/>later<sp/>or...<sp/>then<sp/>we<sp/>need<sp/>the<sp/>protocol</highlight></codeline>
<codeline lineno="2395"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part<sp/>added<sp/>so<sp/>that<sp/>we<sp/>have<sp/>a<sp/>valid<sp/>URL.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*reurl;</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"></highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/>reurl<sp/>=<sp/>aprintf(</highlight><highlight class="stringliteral">&quot;%s://%s&quot;</highlight><highlight class="normal">,<sp/>conn-&gt;protostr,<sp/>data-&gt;change.url);</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"></highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!reurl)</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OUT_OF_MEMORY;</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"></highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;change.url<sp/>=<sp/>reurl;</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;change.url_alloc<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>free<sp/>this<sp/>later<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;protocol<sp/>&amp;=<sp/>~PROT_MISSING;<sp/></highlight><highlight class="comment">/*<sp/>switch<sp/>that<sp/>one<sp/>off<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"></highlight></codeline>
<codeline lineno="2408"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CURL_DISABLE_HTTP</highlight></codeline>
<codeline lineno="2409"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/************************************************************</highlight></codeline>
<codeline lineno="2410"><highlight class="comment"><sp/><sp/><sp/>*<sp/>RESUME<sp/>on<sp/>a<sp/>HTTP<sp/>page<sp/>is<sp/>a<sp/>tricky<sp/>business.<sp/>First,<sp/>let&apos;s<sp/>just<sp/>check<sp/>that</highlight></codeline>
<codeline lineno="2411"><highlight class="comment"><sp/><sp/><sp/>*<sp/>&apos;range&apos;<sp/>isn&apos;t<sp/>used,<sp/>then<sp/>set<sp/>the<sp/>range<sp/>parameter<sp/>and<sp/>leave<sp/>the<sp/>resume<sp/>as</highlight></codeline>
<codeline lineno="2412"><highlight class="comment"><sp/><sp/><sp/>*<sp/>it<sp/>is<sp/>to<sp/>inform<sp/>about<sp/>this<sp/>situation<sp/>for<sp/>later<sp/>use.<sp/>We<sp/>will<sp/>then</highlight></codeline>
<codeline lineno="2413"><highlight class="comment"><sp/><sp/><sp/>*<sp/>&quot;attempt&quot;<sp/>to<sp/>resume,<sp/>and<sp/>if<sp/>we&apos;re<sp/>talking<sp/>to<sp/>a<sp/>HTTP/1.1<sp/>(or<sp/>later)</highlight></codeline>
<codeline lineno="2414"><highlight class="comment"><sp/><sp/><sp/>*<sp/>server,<sp/>we<sp/>will<sp/>get<sp/>the<sp/>document<sp/>resumed.<sp/>If<sp/>we<sp/>talk<sp/>to<sp/>a<sp/>HTTP/1.0</highlight></codeline>
<codeline lineno="2415"><highlight class="comment"><sp/><sp/><sp/>*<sp/>server,<sp/>we<sp/>just<sp/>fail<sp/>since<sp/>we<sp/>can&apos;t<sp/>rewind<sp/>the<sp/>file<sp/>writing<sp/>from<sp/>within</highlight></codeline>
<codeline lineno="2416"><highlight class="comment"><sp/><sp/><sp/>*<sp/>this<sp/>function.</highlight></codeline>
<codeline lineno="2417"><highlight class="comment"><sp/><sp/><sp/>***********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;resume_from)<sp/>{</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!conn-&gt;bits.use_range)<sp/>{</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>it<sp/>already<sp/>was<sp/>in<sp/>use,<sp/>we<sp/>just<sp/>skip<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(resumerange,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(resumerange),<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;resume_from);</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;range=strdup(resumerange);<sp/></highlight><highlight class="comment">/*<sp/>tell<sp/>ourselves<sp/>to<sp/>fetch<sp/>this<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;bits.rangestringalloc<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>mark<sp/>as<sp/>allocated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;bits.use_range<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>switch<sp/>on<sp/>range<sp/>usage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2429"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************</highlight></codeline>
<codeline lineno="2430"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Setup<sp/>internals<sp/>depending<sp/>on<sp/>protocol</highlight></codeline>
<codeline lineno="2431"><highlight class="comment"><sp/><sp/><sp/>*************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2432"><highlight class="normal"></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strequal(conn-&gt;protostr,<sp/></highlight><highlight class="stringliteral">&quot;HTTP&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CURL_DISABLE_HTTP</highlight></codeline>
<codeline lineno="2435"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;port<sp/>=<sp/>(data-&gt;set.use_port<sp/>&amp;&amp;<sp/>data-&gt;state.allow_port)?</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.use_port:PORT_HTTP;</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;remote_port<sp/>=<sp/>PORT_HTTP;</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;protocol<sp/>|=<sp/>PROT_HTTP;</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;curl_do<sp/>=<sp/>Curl_http;</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;curl_do_more<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;curl_done<sp/>=<sp/>Curl_http_done;</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;curl_connect<sp/>=<sp/>Curl_http_connect;</highlight></codeline>
<codeline lineno="2443"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(data,<sp/>LIBCURL_NAME</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>was<sp/>built<sp/>with<sp/>HTTP<sp/>disabled,<sp/>http:<sp/>not<sp/>supported!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_UNSUPPORTED_PROTOCOL;</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2448"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strequal(conn-&gt;protostr,<sp/></highlight><highlight class="stringliteral">&quot;HTTPS&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_SSLEAY)<sp/>&amp;&amp;<sp/>!defined(CURL_DISABLE_HTTP)</highlight></codeline>
<codeline lineno="2451"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;port<sp/>=<sp/>(data-&gt;set.use_port<sp/>&amp;&amp;<sp/>data-&gt;state.allow_port)?</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.use_port:PORT_HTTPS;</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;remote_port<sp/>=<sp/>PORT_HTTPS;</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;protocol<sp/>|=<sp/>PROT_HTTP|PROT_HTTPS|PROT_SSL;</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;curl_do<sp/>=<sp/>Curl_http;</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;curl_do_more<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;curl_done<sp/>=<sp/>Curl_http_done;</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;curl_connect<sp/>=<sp/>Curl_http_connect;</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"></highlight></codeline>
<codeline lineno="2462"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>USE_SSLEAY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(data,<sp/>LIBCURL_NAME</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>was<sp/>built<sp/>with<sp/>SSL<sp/>disabled,<sp/>https:<sp/>not<sp/>supported!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_UNSUPPORTED_PROTOCOL;</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!USE_SSLEAY<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="2467"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strequal(conn-&gt;protostr,<sp/></highlight><highlight class="stringliteral">&quot;GOPHER&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CURL_DISABLE_GOPHER</highlight></codeline>
<codeline lineno="2470"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;port<sp/>=<sp/>(data-&gt;set.use_port<sp/>&amp;&amp;<sp/>data-&gt;state.allow_port)?</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.use_port:PORT_GOPHER;</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;remote_port<sp/>=<sp/>PORT_GOPHER;</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>/&lt;item-type&gt;/<sp/>in<sp/>path<sp/>if<sp/>present<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(isdigit((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)conn-&gt;path[1]))<sp/>{</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;ppath<sp/>=<sp/>strchr(&amp;conn-&gt;path[1],<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(conn-&gt;ppath<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;ppath<sp/>=<sp/>conn-&gt;path;</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;protocol<sp/>|=<sp/>PROT_GOPHER;</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;curl_do<sp/>=<sp/>Curl_http;</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;curl_do_more<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;curl_done<sp/>=<sp/>Curl_http_done;</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="2484"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>failf(data,<sp/>LIBCURL_NAME</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>was<sp/>built<sp/>with<sp/>GOPHER<sp/>disabled,<sp/>gopher:<sp/>not<sp/>supported!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2487"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strequal(conn-&gt;protostr,<sp/></highlight><highlight class="stringliteral">&quot;FTP&quot;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strequal(conn-&gt;protostr,<sp/></highlight><highlight class="stringliteral">&quot;FTPS&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MN<sp/>06/07/02<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CURL_DISABLE_FTP</highlight></codeline>
<codeline lineno="2493"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*type;</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port<sp/>=<sp/>PORT_FTP;</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"></highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strequal(conn-&gt;protostr,<sp/></highlight><highlight class="stringliteral">&quot;FTPS&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SSLEAY</highlight></codeline>
<codeline lineno="2498"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;protocol<sp/>|=<sp/>PROT_FTPS|PROT_SSL;</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;ssl[SECONDARYSOCKET].use<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>send<sp/>data<sp/>securely<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>port<sp/>=<sp/>PORT_FTPS;</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="2502"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/>LIBCURL_NAME</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>was<sp/>built<sp/>with<sp/>SSL<sp/>disabled,<sp/>ftps:<sp/>not<sp/>supported!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_UNSUPPORTED_PROTOCOL;</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!USE_SSLEAY<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="2506"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"></highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;port<sp/>=<sp/>(data-&gt;set.use_port<sp/>&amp;&amp;<sp/>data-&gt;state.allow_port)?</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.use_port:port;</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;remote_port<sp/>=<sp/>port;</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;protocol<sp/>|=<sp/>PROT_FTP;</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"></highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;change.proxy<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data-&gt;change.proxy<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!data-&gt;set.tunnel_thru_httpproxy)<sp/>{</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unless<sp/>we<sp/>have<sp/>asked<sp/>to<sp/>tunnel<sp/>ftp<sp/>operations<sp/>through<sp/>the<sp/>proxy,<sp/>we</highlight></codeline>
<codeline lineno="2517"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>and<sp/>use<sp/>HTTP<sp/>operations<sp/>only<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;protocol<sp/>&amp;<sp/>PROT_FTPS)<sp/>{</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FTPS<sp/>is<sp/>a<sp/>hacked<sp/>protocol<sp/>and<sp/>does<sp/>not<sp/>work<sp/>through<sp/>your</highlight></codeline>
<codeline lineno="2520"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ordinary<sp/>http<sp/>proxy!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;ftps<sp/>does<sp/>not<sp/>work<sp/>through<sp/>http<sp/>proxy!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_UNSUPPORTED_PROTOCOL;</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CURL_DISABLE_HTTP</highlight></codeline>
<codeline lineno="2525"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;curl_do<sp/>=<sp/>Curl_http;</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;curl_done<sp/>=<sp/>Curl_http_done;</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="2528"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;FTP<sp/>over<sp/>http<sp/>proxy<sp/>requires<sp/>HTTP<sp/>support<sp/>built-in!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_UNSUPPORTED_PROTOCOL;</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2531"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;curl_do<sp/>=<sp/>Curl_ftp;</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;curl_do_more<sp/>=<sp/>Curl_ftp_nextconnect;</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;curl_done<sp/>=<sp/>Curl_ftp_done;</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;curl_connect<sp/>=<sp/>Curl_ftp_connect;</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;curl_disconnect<sp/>=<sp/>Curl_ftp_disconnect;</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;ppath++;<sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>include<sp/>the<sp/>initial<sp/>slash<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2541"><highlight class="normal"></highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FTP<sp/>URLs<sp/>support<sp/>an<sp/>extension<sp/>like<sp/>&quot;;type=&lt;typecode&gt;&quot;<sp/>that</highlight></codeline>
<codeline lineno="2543"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>we&apos;ll<sp/>try<sp/>to<sp/>get<sp/>now!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/>type=strstr(conn-&gt;ppath,<sp/></highlight><highlight class="stringliteral">&quot;;type=&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!type)<sp/>{</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type=strstr(conn-&gt;gname,<sp/></highlight><highlight class="stringliteral">&quot;;type=&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type)<sp/>{</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>command;</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*type=0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>it<sp/>was<sp/>in<sp/>the<sp/>middle<sp/>of<sp/>the<sp/>hostname<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>command<sp/>=<sp/>toupper(type[6]);</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(command)<sp/>{</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>ASCII<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.ftp_ascii<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>directory<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.ftp_list_only<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>binary<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>switch<sp/>off<sp/>ASCII<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;set.ftp_ascii<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"></highlight></codeline>
<codeline lineno="2567"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MN<sp/>06/07/02<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>CURL_DISABLE_FTP<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="2569"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>failf(data,<sp/>LIBCURL_NAME</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>was<sp/>built<sp/>with<sp/>FTP<sp/>disabled,<sp/>ftp/ftps:<sp/>not<sp/>supported!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_UNSUPPORTED_PROTOCOL;</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2573"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strequal(conn-&gt;protostr,<sp/></highlight><highlight class="stringliteral">&quot;TELNET&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CURL_DISABLE_TELNET</highlight></codeline>
<codeline lineno="2576"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>telnet<sp/>testing<sp/>factory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;protocol<sp/>|=<sp/>PROT_TELNET;</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"></highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;port<sp/>=<sp/>(data-&gt;set.use_port<sp/>&amp;&amp;<sp/>data-&gt;state.allow_port)?</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.use_port:<sp/>PORT_TELNET;</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;remote_port<sp/>=<sp/>PORT_TELNET;</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;curl_do<sp/>=<sp/>Curl_telnet;</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;curl_done<sp/>=<sp/>Curl_telnet_done;</highlight></codeline>
<codeline lineno="2584"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(data,<sp/>LIBCURL_NAME</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>was<sp/>built<sp/>with<sp/>TELNET<sp/>disabled!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2588"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strequal(conn-&gt;protostr,<sp/></highlight><highlight class="stringliteral">&quot;DICT&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CURL_DISABLE_DICT</highlight></codeline>
<codeline lineno="2591"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;protocol<sp/>|=<sp/>PROT_DICT;</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;port<sp/>=<sp/>(data-&gt;set.use_port<sp/>&amp;&amp;<sp/>data-&gt;state.allow_port)?</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.use_port:PORT_DICT;</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;remote_port<sp/>=<sp/>PORT_DICT;</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;curl_do<sp/>=<sp/>Curl_dict;</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;curl_done<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>DICT-specific<sp/>done<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2597"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(data,<sp/>LIBCURL_NAME</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>was<sp/>built<sp/>with<sp/>DICT<sp/>disabled!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2601"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strequal(conn-&gt;protostr,<sp/></highlight><highlight class="stringliteral">&quot;LDAP&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CURL_DISABLE_LDAP</highlight></codeline>
<codeline lineno="2604"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;protocol<sp/>|=<sp/>PROT_LDAP;</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;port<sp/>=<sp/>(data-&gt;set.use_port<sp/>&amp;&amp;<sp/>data-&gt;state.allow_port)?</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.use_port:PORT_LDAP;</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;remote_port<sp/>=<sp/>PORT_LDAP;</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;curl_do<sp/>=<sp/>Curl_ldap;</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;curl_done<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>LDAP-specific<sp/>done<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2610"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(data,<sp/>LIBCURL_NAME</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>was<sp/>built<sp/>with<sp/>LDAP<sp/>disabled!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2614"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strequal(conn-&gt;protostr,<sp/></highlight><highlight class="stringliteral">&quot;FILE&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CURL_DISABLE_FILE</highlight></codeline>
<codeline lineno="2617"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;protocol<sp/>|=<sp/>PROT_FILE;</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"></highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;curl_do<sp/>=<sp/>Curl_file;</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>done()<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2621"><highlight class="normal"></highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>anyway,<sp/>this<sp/>is<sp/>supposed<sp/>to<sp/>be<sp/>the<sp/>connect<sp/>function<sp/>so<sp/>we<sp/>better</highlight></codeline>
<codeline lineno="2623"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>at<sp/>least<sp/>check<sp/>that<sp/>the<sp/>file<sp/>is<sp/>present<sp/>here!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_file_connect(conn);</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"></highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Setup<sp/>a<sp/>&quot;faked&quot;<sp/>transfer<sp/>that&apos;ll<sp/>do<sp/>nothing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CURLE_OK<sp/>==<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;bits.tcpconnect<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>we<sp/>are<sp/>&quot;connected<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_Transfer(conn,<sp/>-1,<sp/>-1,<sp/>FALSE,<sp/>NULL,<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>download<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1,<sp/>NULL);<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>upload<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"></highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="2635"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>failf(data,<sp/>LIBCURL_NAME</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>was<sp/>built<sp/>with<sp/>FILE<sp/>disabled!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2638"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>fell<sp/>through<sp/>all<sp/>checks<sp/>and<sp/>thus<sp/>we<sp/>don&apos;t<sp/>support<sp/>the<sp/>specified</highlight></codeline>
<codeline lineno="2641"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>protocol<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>protocol:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>conn-&gt;protostr);</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_UNSUPPORTED_PROTOCOL;</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"></highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************</highlight></codeline>
<codeline lineno="2647"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Figure<sp/>out<sp/>the<sp/>remote<sp/>port<sp/>number</highlight></codeline>
<codeline lineno="2648"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2649"><highlight class="comment"><sp/><sp/><sp/>*<sp/>No<sp/>matter<sp/>if<sp/>we<sp/>use<sp/>a<sp/>proxy<sp/>or<sp/>not,<sp/>we<sp/>have<sp/>to<sp/>figure<sp/>out<sp/>the<sp/>remote</highlight></codeline>
<codeline lineno="2650"><highlight class="comment"><sp/><sp/><sp/>*<sp/>port<sp/>number<sp/>of<sp/>various<sp/>reasons.</highlight></codeline>
<codeline lineno="2651"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2652"><highlight class="comment"><sp/><sp/><sp/>*<sp/>To<sp/>be<sp/>able<sp/>to<sp/>detect<sp/>port<sp/>number<sp/>flawlessly,<sp/>we<sp/>must<sp/>not<sp/>confuse<sp/>them</highlight></codeline>
<codeline lineno="2653"><highlight class="comment"><sp/><sp/><sp/>*<sp/>IPv6-specified<sp/>addresses<sp/>in<sp/>the<sp/>[0::1]<sp/>style.<sp/>(RFC2732)</highlight></codeline>
<codeline lineno="2654"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2655"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>conn-&gt;name<sp/>is<sp/>currently<sp/>[user:passwd@]host[:port]<sp/>where<sp/>host<sp/>could</highlight></codeline>
<codeline lineno="2656"><highlight class="comment"><sp/><sp/><sp/>*<sp/>be<sp/>a<sp/>hostname,<sp/>IPv4<sp/>address<sp/>or<sp/>IPv6<sp/>address.</highlight></codeline>
<codeline lineno="2657"><highlight class="comment"><sp/><sp/><sp/>*************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((1<sp/>==<sp/>sscanf(conn-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;[%*39[0-9a-fA-F:.]%c&quot;</highlight><highlight class="normal">,<sp/>&amp;endbracket))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal"><sp/>==<sp/>endbracket))<sp/>{</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>a<sp/>RFC2732-style<sp/>specified<sp/>IP-address<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;bits.ipv6_ip<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;name++;<sp/></highlight><highlight class="comment">/*<sp/>pass<sp/>the<sp/>starting<sp/>bracket<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;hostname++;</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>strchr(conn-&gt;name,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/>*tmp<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>zero<sp/>terminate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp++;<sp/></highlight><highlight class="comment">/*<sp/>pass<sp/>the<sp/>ending<sp/>bracket<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>!=<sp/>*tmp)</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>port<sp/>number<sp/>available<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>strrchr(conn-&gt;name,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"></highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp)<sp/>{</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*rest;</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>port;</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"></highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/>port=strtoul(tmp+1,<sp/>&amp;rest,<sp/>10);<sp/><sp/></highlight><highlight class="comment">/*<sp/>Port<sp/>number<sp/>must<sp/>be<sp/>decimal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2679"><highlight class="normal"></highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rest<sp/>!=<sp/>(tmp+1)<sp/>&amp;&amp;<sp/>*rest<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>colon<sp/>really<sp/>did<sp/>have<sp/>only<sp/>digits<sp/>after<sp/>it,</highlight></codeline>
<codeline lineno="2682"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>so<sp/>it<sp/>is<sp/>either<sp/>a<sp/>port<sp/>number<sp/>or<sp/>a<sp/>mistake<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2683"><highlight class="normal"></highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port<sp/>&gt;<sp/>0xffff)<sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Single<sp/>unix<sp/>standard<sp/>says<sp/>port<sp/>numbers<sp/>are</highlight></codeline>
<codeline lineno="2685"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>16<sp/>bits<sp/>long<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Port<sp/>number<sp/>too<sp/>large:<sp/>%lu&quot;</highlight><highlight class="normal">,<sp/>port);</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_URL_MALFORMAT;</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"></highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*tmp<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>cut<sp/>off<sp/>the<sp/>name<sp/>there<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;remote_port<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)port;</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"></highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;change.proxy<sp/>&amp;&amp;<sp/>*data-&gt;change.proxy)<sp/>{</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>supposed<sp/>to<sp/>use<sp/>a<sp/>proxy,<sp/>we<sp/>need<sp/>to<sp/>figure<sp/>out<sp/>the<sp/>proxy</highlight></codeline>
<codeline lineno="2697"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host<sp/>name<sp/>name,<sp/>so<sp/>that<sp/>we<sp/>can<sp/>re-use<sp/>an<sp/>existing<sp/>connection</highlight></codeline>
<codeline lineno="2698"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>may<sp/>exist<sp/>registered<sp/>to<sp/>the<sp/>same<sp/>proxy<sp/>host.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2699"><highlight class="normal"></highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*prox_portno;</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*endofprot;</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"></highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>need<sp/>to<sp/>make<sp/>a<sp/>duplicate<sp/>of<sp/>the<sp/>proxy<sp/>so<sp/>that<sp/>we<sp/>can<sp/>modify<sp/>the</highlight></codeline>
<codeline lineno="2704"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>safely.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*proxydup=strdup(data-&gt;change.proxy);</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"></highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>use<sp/>&apos;proxyptr&apos;<sp/>to<sp/>point<sp/>to<sp/>the<sp/>proxy<sp/>name<sp/>from<sp/>now<sp/>on...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*proxyptr=proxydup;</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"></highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>proxydup)<sp/>{</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;memory<sp/>shortage&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OUT_OF_MEMORY;</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"></highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Daniel<sp/>Dec<sp/>10,<sp/>1998:</highlight></codeline>
<codeline lineno="2716"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>We<sp/>do<sp/>the<sp/>proxy<sp/>host<sp/>string<sp/>parsing<sp/>here.<sp/>We<sp/>want<sp/>the<sp/>host<sp/>name<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="2717"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port<sp/>name.<sp/>Accept<sp/>a<sp/>protocol://<sp/>prefix,<sp/>even<sp/>though<sp/>it<sp/>should<sp/>just<sp/>be</highlight></codeline>
<codeline lineno="2718"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ignored.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2719"><highlight class="normal"></highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1.<sp/>skip<sp/>the<sp/>protocol<sp/>part<sp/>if<sp/>present<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/>endofprot=strstr(proxyptr,<sp/></highlight><highlight class="stringliteral">&quot;://&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(endofprot)<sp/>{</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>proxyptr<sp/>=<sp/>endofprot+3;</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"></highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allow<sp/>user<sp/>to<sp/>specify<sp/>proxy.server.com:1080<sp/>if<sp/>desired<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/>prox_portno<sp/>=<sp/>strchr<sp/>(proxyptr,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prox_portno)<sp/>{</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*prox_portno<sp/>=<sp/>0x0;<sp/></highlight><highlight class="comment">/*<sp/>cut<sp/>off<sp/>number<sp/>from<sp/>host<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prox_portno<sp/>++;</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>set<sp/>the<sp/>local<sp/>port<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;port<sp/>=<sp/>atoi(prox_portno);</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.proxyport)<sp/>{</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>None<sp/>given<sp/>in<sp/>the<sp/>proxy<sp/>string,<sp/>then<sp/>get<sp/>the<sp/>default<sp/>one<sp/>if<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="2736"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>given<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;port<sp/>=<sp/>data-&gt;set.proxyport;</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"></highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now,<sp/>clone<sp/>the<sp/>cleaned<sp/>proxy<sp/>host<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;proxyhost<sp/>=<sp/>strdup(proxyptr);</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"></highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/>free(proxydup);<sp/></highlight><highlight class="comment">/*<sp/>free<sp/>the<sp/>duplicate<sp/>pointer<sp/>and<sp/>not<sp/>the<sp/>modified<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"></highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************</highlight></codeline>
<codeline lineno="2747"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Take<sp/>care<sp/>of<sp/>user<sp/>and<sp/>password<sp/>authentication<sp/>stuff</highlight></codeline>
<codeline lineno="2748"><highlight class="comment"><sp/><sp/><sp/>*************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2749"><highlight class="normal"></highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2751"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Inputs:<sp/>data-&gt;set.userpwd<sp/><sp/><sp/>(CURLOPT_USERPWD)</highlight></codeline>
<codeline lineno="2752"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.fpasswd<sp/><sp/><sp/>(CURLOPT_PASSWDFUNCTION)</highlight></codeline>
<codeline lineno="2753"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.use_netrc<sp/>(CURLOPT_NETRC)</highlight></codeline>
<codeline lineno="2754"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;hostname</highlight></codeline>
<codeline lineno="2755"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>netrc<sp/>file</highlight></codeline>
<codeline lineno="2756"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hard-coded<sp/>defaults</highlight></codeline>
<codeline lineno="2757"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2758"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Outputs:<sp/>(almost<sp/>:-<sp/>all<sp/>currently<sp/>undefined)</highlight></codeline>
<codeline lineno="2759"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;bits.user_passwd<sp/><sp/>-<sp/>non-zero<sp/>if<sp/>non-default<sp/>passwords<sp/>exist</highlight></codeline>
<codeline lineno="2760"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;user<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>non-zero<sp/>length<sp/>if<sp/>defined</highlight></codeline>
<codeline lineno="2761"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;passwd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/><sp/><sp/>ditto</highlight></codeline>
<codeline lineno="2762"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;hostname<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>remove<sp/>user<sp/>name<sp/>and<sp/>password</highlight></codeline>
<codeline lineno="2763"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2764"><highlight class="normal"></highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>At<sp/>this<sp/>point,<sp/>we&apos;re<sp/>hoping<sp/>all<sp/>the<sp/>other<sp/>special<sp/>cases<sp/>have</highlight></codeline>
<codeline lineno="2766"><highlight class="comment"><sp/><sp/><sp/>*<sp/>been<sp/>taken<sp/>care<sp/>of,<sp/>so<sp/>conn-&gt;hostname<sp/>is<sp/>at<sp/>most</highlight></codeline>
<codeline lineno="2767"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>[user[:password]]@]hostname</highlight></codeline>
<codeline lineno="2768"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2769"><highlight class="comment"><sp/><sp/><sp/>*<sp/>We<sp/>need<sp/>somewhere<sp/>to<sp/>put<sp/>the<sp/>embedded<sp/>details,<sp/>so<sp/>do<sp/>that<sp/>first.</highlight></codeline>
<codeline lineno="2770"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2771"><highlight class="normal"></highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/>user[0]<sp/>=0;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>to<sp/>make<sp/>everything<sp/>well-defined<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/>passwd[0]=0;</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"></highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(conn-&gt;protocol<sp/>&amp;<sp/>(PROT_FTP|PROT_HTTP))<sp/>{</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>a<sp/>FTP<sp/>or<sp/>HTTP<sp/>URL,<sp/>we<sp/>will<sp/>now<sp/>try<sp/>to<sp/>extract<sp/>the<sp/>possible</highlight></codeline>
<codeline lineno="2777"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>user+password<sp/>pair<sp/>in<sp/>a<sp/>string<sp/>like:</highlight></codeline>
<codeline lineno="2778"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>ftp://user:password@ftp.my.site:8021/README<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr=strchr(conn-&gt;name,<sp/></highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*userpass<sp/>=<sp/>conn-&gt;name;</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ptr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>there&apos;s<sp/>a<sp/>user+password<sp/>given<sp/>here,<sp/>to<sp/>the<sp/>left<sp/>of<sp/>the<sp/>@<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2783"><highlight class="normal"></highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;name<sp/>=<sp/>conn-&gt;hostname<sp/>=<sp/>++ptr;</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"></highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>So<sp/>the<sp/>hostname<sp/>is<sp/>sane.<sp/><sp/>Only<sp/>bother<sp/>interpreting<sp/>the</highlight></codeline>
<codeline lineno="2787"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>results<sp/>if<sp/>we<sp/>could<sp/>care.<sp/><sp/>It<sp/>could<sp/>still<sp/>be<sp/>wasted</highlight></codeline>
<codeline lineno="2788"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>work<sp/>because<sp/>it<sp/>might<sp/>be<sp/>overtaken<sp/>by<sp/>the<sp/>programmatically</highlight></codeline>
<codeline lineno="2789"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>set<sp/>user/passwd,<sp/>but<sp/>doing<sp/>that<sp/>first<sp/>adds<sp/>more<sp/>cases<sp/>here<sp/>:-(</highlight></codeline>
<codeline lineno="2790"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2791"><highlight class="normal"></highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data-&gt;set.use_netrc<sp/>!=<sp/>CURL_NETRC_REQUIRED)<sp/>{</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>could<sp/>use<sp/>the<sp/>one<sp/>in<sp/>the<sp/>URL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2794"><highlight class="normal"></highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;bits.user_passwd<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>user+password<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2796"><highlight class="normal"></highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*userpass<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>name<sp/>is<sp/>given,<sp/>get<sp/>user+password<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(userpass,<sp/></highlight><highlight class="stringliteral">&quot;%127[^:@]:%127[^@]&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user,<sp/>passwd);</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>name<sp/>given,<sp/>get<sp/>the<sp/>password<sp/>only<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(userpass,<sp/></highlight><highlight class="stringliteral">&quot;:%127[^@]&quot;</highlight><highlight class="normal">,<sp/>passwd);</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"></highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(user[0])<sp/>{</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*newname=curl_unescape(user,<sp/>0);</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strlen(newname)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(user))<sp/>{</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(user,<sp/>newname);</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>the<sp/>new<sp/>name<sp/>is<sp/>longer<sp/>than<sp/>accepted,<sp/>then<sp/>just<sp/>use</highlight></codeline>
<codeline lineno="2812"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>unconverted<sp/>name,<sp/>it&apos;ll<sp/>be<sp/>wrong<sp/>but<sp/>what<sp/>the<sp/>heck<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(newname);</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(passwd[0])<sp/>{</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>have<sp/>a<sp/>password<sp/>found<sp/>in<sp/>the<sp/>URL,<sp/>decode<sp/>it!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*newpasswd=curl_unescape(passwd,<sp/>0);</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strlen(newpasswd)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(passwd))<sp/>{</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(passwd,<sp/>newpasswd);</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(newpasswd);</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"></highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Programmatically<sp/>set<sp/>password:</highlight></codeline>
<codeline lineno="2828"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>always<sp/>applies,<sp/>if<sp/>available</highlight></codeline>
<codeline lineno="2829"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>takes<sp/>precedence<sp/>over<sp/>the<sp/>values<sp/>we<sp/>just<sp/>set<sp/>above</highlight></codeline>
<codeline lineno="2830"><highlight class="comment"><sp/><sp/><sp/>*<sp/>so<sp/>scribble<sp/>it<sp/>over<sp/>the<sp/>top.</highlight></codeline>
<codeline lineno="2831"><highlight class="comment"><sp/><sp/><sp/>*<sp/>User-supplied<sp/>passwords<sp/>are<sp/>assumed<sp/>not<sp/>to<sp/>need<sp/>unescaping.</highlight></codeline>
<codeline lineno="2832"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2833"><highlight class="comment"><sp/><sp/><sp/>*<sp/>user_password<sp/>is<sp/>set<sp/>in<sp/>&quot;inherite<sp/>initial<sp/>knowledge&apos;<sp/>above,</highlight></codeline>
<codeline lineno="2834"><highlight class="comment"><sp/><sp/><sp/>*<sp/>so<sp/>it<sp/>doesn&apos;t<sp/>have<sp/>to<sp/>be<sp/>set<sp/>in<sp/>this<sp/>block</highlight></codeline>
<codeline lineno="2835"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data-&gt;set.userpwd<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>name<sp/>is<sp/>given,<sp/>get<sp/>user+password<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(data-&gt;set.userpwd,</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"><sp/>MAX_CURL_USER_LENGTH_TXT<sp/></highlight><highlight class="stringliteral">&quot;[^:]:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"><sp/>MAX_CURL_PASSWORD_LENGTH_TXT<sp/></highlight><highlight class="stringliteral">&quot;[^\n]&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user,<sp/>passwd);</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"></highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data-&gt;set.use_netrc<sp/>!=<sp/>CURL_NETRC_IGNORED)<sp/>{</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Curl_parsenetrc(conn-&gt;hostname,</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user,<sp/>passwd,</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.netrc_file))<sp/>{</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>find<sp/>host<sp/>%s<sp/>in<sp/>the<sp/>.netrc<sp/>file,<sp/>using<sp/>defaults\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;hostname);</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;bits.user_passwd<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>user+password<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"></highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>our<sp/>protocol<sp/>needs<sp/>a<sp/>password<sp/>and<sp/>we<sp/>have<sp/>none,<sp/>use<sp/>the<sp/>defaults<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(conn-&gt;protocol<sp/>&amp;<sp/>PROT_FTP)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!conn-&gt;bits.user_passwd)<sp/>{</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"></highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;user<sp/>=<sp/>strdup(CURL_DEFAULT_USER);</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;passwd<sp/>=<sp/>strdup(CURL_DEFAULT_PASSWORD);</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"></highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>default<sp/>password,<sp/>so<sp/>DON&apos;T<sp/>set<sp/>conn-&gt;bits.user_passwd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>store<sp/>user<sp/>+<sp/>password,<sp/>zero-length<sp/>if<sp/>not<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;user<sp/>=<sp/>strdup(user);</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;passwd<sp/>=<sp/>strdup(passwd);</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"></highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************</highlight></codeline>
<codeline lineno="2871"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Check<sp/>the<sp/>current<sp/>list<sp/>of<sp/>connections<sp/>to<sp/>see<sp/>if<sp/>we<sp/>can</highlight></codeline>
<codeline lineno="2872"><highlight class="comment"><sp/><sp/><sp/>*<sp/>re-use<sp/>an<sp/>already<sp/>existing<sp/>one<sp/>or<sp/>if<sp/>we<sp/>have<sp/>to<sp/>create<sp/>a</highlight></codeline>
<codeline lineno="2873"><highlight class="comment"><sp/><sp/><sp/>*<sp/>new<sp/>one.</highlight></codeline>
<codeline lineno="2874"><highlight class="comment"><sp/><sp/><sp/>*************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2875"><highlight class="normal"></highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>a<sp/>cloned<sp/>copy<sp/>of<sp/>the<sp/>SSL<sp/>config<sp/>situation<sp/>stored<sp/>in<sp/>the<sp/></highlight></codeline>
<codeline lineno="2877"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>connection<sp/>struct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!Curl_clone_ssl_config(&amp;data-&gt;set.ssl,<sp/>&amp;conn-&gt;ssl_config))</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OUT_OF_MEMORY;</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"></highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>reuse_fresh<sp/>is<sp/>TRUE<sp/>if<sp/>we<sp/>are<sp/>told<sp/>to<sp/>use<sp/>a<sp/>new<sp/>connection<sp/>by<sp/>force,<sp/>but</highlight></codeline>
<codeline lineno="2882"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>we<sp/>only<sp/>acknowledge<sp/>this<sp/>option<sp/>if<sp/>this<sp/>is<sp/>not<sp/>a<sp/>re-used<sp/>connection</highlight></codeline>
<codeline lineno="2883"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>already<sp/>(which<sp/>happens<sp/>due<sp/>to<sp/>follow-location<sp/>or<sp/>during<sp/>a<sp/>HTTP</highlight></codeline>
<codeline lineno="2884"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>authentication<sp/>phase).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.reuse_fresh<sp/>&amp;&amp;<sp/>!data-&gt;state.this_is_a_follow)</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/>reuse<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/>reuse<sp/>=<sp/>ConnectionExists(data,<sp/>conn,<sp/>&amp;conn_temp);</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"></highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(reuse)<sp/>{</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2892"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>We<sp/>already<sp/>have<sp/>a<sp/>connection<sp/>for<sp/>this,<sp/>we<sp/>got<sp/>the<sp/>former<sp/>connection</highlight></codeline>
<codeline lineno="2893"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>in<sp/>the<sp/>conn_temp<sp/>variable<sp/>and<sp/>thus<sp/>we<sp/>need<sp/>to<sp/>cleanup<sp/>the<sp/>one<sp/>we</highlight></codeline>
<codeline lineno="2894"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>just<sp/>allocated<sp/>before<sp/>we<sp/>can<sp/>move<sp/>along<sp/>and<sp/>use<sp/>the<sp/>previously</highlight></codeline>
<codeline lineno="2895"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>existing<sp/>one.</highlight></codeline>
<codeline lineno="2896"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*old_conn<sp/>=<sp/>conn;</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path<sp/>=<sp/>old_conn-&gt;path;<sp/></highlight><highlight class="comment">/*<sp/>setup<sp/>the<sp/>current<sp/>path<sp/>pointer<sp/>properly<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ppath<sp/>=<sp/>old_conn-&gt;ppath;<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>the<sp/>modified<sp/>path<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(old_conn-&gt;proxyhost)</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(old_conn-&gt;proxyhost);</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"></highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>the<sp/>SSL<sp/>config<sp/>struct<sp/>from<sp/>this<sp/>connection<sp/>struct<sp/>as<sp/>this<sp/>was</highlight></codeline>
<codeline lineno="2904"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocated<sp/>in<sp/>vain<sp/>and<sp/>is<sp/>targeted<sp/>for<sp/>destruction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/>Curl_free_ssl_config(&amp;conn-&gt;ssl_config);</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"></highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/>conn<sp/>=<sp/>conn_temp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>this<sp/>connection<sp/>from<sp/>now<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2908"><highlight class="normal"></highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>user+password<sp/>information<sp/>from<sp/>the<sp/>old_conn<sp/>struct<sp/>since<sp/>it<sp/>may</highlight></codeline>
<codeline lineno="2910"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>be<sp/>new<sp/>for<sp/>this<sp/>request<sp/>even<sp/>when<sp/>we<sp/>re-use<sp/>an<sp/>existing<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;bits.user_passwd<sp/>=<sp/>old_conn-&gt;bits.user_passwd;</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;bits.proxy_user_passwd<sp/>=<sp/>old_conn-&gt;bits.proxy_user_passwd;</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"></highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>speak<sp/>over<sp/>a<sp/>proxy,<sp/>we<sp/>need<sp/>to<sp/>copy<sp/>the<sp/>host<sp/>name<sp/>too,<sp/>as<sp/>it</highlight></codeline>
<codeline lineno="2915"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>might<sp/>be<sp/>another<sp/>remote<sp/>host<sp/>even<sp/>when<sp/>re-using<sp/>a<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(conn-&gt;gname,<sp/>old_conn-&gt;gname);<sp/></highlight><highlight class="comment">/*<sp/>safe<sp/>strcpy()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2917"><highlight class="normal"></highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>need<sp/>these<sp/>pointers<sp/>if<sp/>we<sp/>speak<sp/>over<sp/>a<sp/>proxy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;hostname<sp/>=<sp/>conn-&gt;gname;</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;name<sp/>=<sp/>&amp;conn-&gt;gname[old_conn-&gt;name<sp/>-<sp/>old_conn-&gt;gname];</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"></highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/>free(conn-&gt;path);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>the<sp/>previously<sp/>allocated<sp/>path<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2923"><highlight class="normal"></highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&apos;path&apos;<sp/>points<sp/>to<sp/>the<sp/>allocated<sp/>data,<sp/>&apos;ppath&apos;<sp/>may<sp/>have<sp/>been<sp/>advanced</highlight></codeline>
<codeline lineno="2925"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>point<sp/>somewhere<sp/>within<sp/>the<sp/>&apos;path&apos;<sp/>area.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;path<sp/>=<sp/>path;</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;ppath<sp/>=<sp/>ppath;</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"></highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>re-use<sp/>init<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;bits.reuse<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>yes,<sp/>we&apos;re<sp/>re-using<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;bits.chunk<sp/>=<sp/>FALSE;<sp/></highlight><highlight class="comment">/*<sp/>always<sp/>assume<sp/>not<sp/>chunked<sp/>unless<sp/>told</highlight></codeline>
<codeline lineno="2932"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherwise<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;maxdownload<sp/>=<sp/>-1;<sp/><sp/></highlight><highlight class="comment">/*<sp/>might<sp/>have<sp/>been<sp/>used<sp/>previously!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2934"><highlight class="normal"></highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/>Curl_safefree(old_conn-&gt;user);</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/>Curl_safefree(old_conn-&gt;passwd);</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/>Curl_safefree(old_conn-&gt;proxyuser);</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/>Curl_safefree(old_conn-&gt;proxypasswd);</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"></highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(old_conn-&gt;bits.rangestringalloc)</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(old_conn-&gt;range);</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"></highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/>free(old_conn);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>don&apos;t<sp/>need<sp/>this<sp/>anymore<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2944"><highlight class="normal"></highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2946"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>we&apos;re<sp/>doing<sp/>a<sp/>resumed<sp/>transfer,<sp/>we<sp/>need<sp/>to<sp/>setup<sp/>our<sp/>stuff</highlight></codeline>
<codeline lineno="2947"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>properly.</highlight></codeline>
<codeline lineno="2948"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;resume_from<sp/>=<sp/>data-&gt;set.set_resume_from;</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(conn-&gt;resume_from)<sp/>{</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(resumerange,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(resumerange),<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"><sp/>FORMAT_OFF_T<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;resume_from);</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(conn-&gt;bits.rangestringalloc<sp/>==<sp/>TRUE)</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(conn-&gt;range);</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"></highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>tell<sp/>ourselves<sp/>to<sp/>fetch<sp/>this<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;range<sp/>=<sp/>strdup(resumerange);</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;bits.use_range<sp/>=<sp/>TRUE;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>range<sp/>download<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;bits.rangestringalloc<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>mark<sp/>range<sp/>string<sp/>allocated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data-&gt;set.set_range)<sp/>{</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>There<sp/>is<sp/>a<sp/>range,<sp/>but<sp/>is<sp/>not<sp/>a<sp/>resume,<sp/>useful<sp/>for<sp/>random<sp/>ftp<sp/>access<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;range<sp/>=<sp/>strdup(data-&gt;set.set_range);</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;bits.rangestringalloc<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>mark<sp/>range<sp/>string<sp/>allocated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;bits.use_range<sp/>=<sp/>TRUE;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>range<sp/>download<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;bits.use_range<sp/>=<sp/>FALSE;<sp/></highlight><highlight class="comment">/*<sp/>disable<sp/>range<sp/>download<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2969"><highlight class="normal"></highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/>*in_connect<sp/>=<sp/>conn;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>this<sp/>instead!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2971"><highlight class="normal"></highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;Re-using<sp/>existing<sp/>connection!<sp/>(#%d)\n&quot;</highlight><highlight class="normal">,<sp/>conn-&gt;connectindex);</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2976"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>is<sp/>a<sp/>brand<sp/>new<sp/>connection,<sp/>so<sp/>let&apos;s<sp/>store<sp/>it<sp/>in<sp/>the<sp/>connection</highlight></codeline>
<codeline lineno="2977"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>cache<sp/>of<sp/>ours!</highlight></codeline>
<codeline lineno="2978"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/>ConnectionStore(data,<sp/>conn);</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"></highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Continue<sp/>connectdata<sp/>initialization<sp/>here.</highlight></codeline>
<codeline lineno="2983"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2984"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Inherit<sp/>the<sp/>proper<sp/>values<sp/>from<sp/>the<sp/>urldata<sp/>struct<sp/>AFTER<sp/>we<sp/>have<sp/>arranged</highlight></codeline>
<codeline lineno="2985"><highlight class="comment"><sp/><sp/><sp/>*<sp/>the<sp/>persistant<sp/>conncetion<sp/>stuff<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/>conn-&gt;fread<sp/>=<sp/>data-&gt;set.fread;</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/>conn-&gt;fread_in<sp/>=<sp/>data-&gt;set.in;</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"></highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/>conn-&gt;bits.upload_chunky<sp/>=</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/>((conn-&gt;protocol&amp;PROT_HTTP)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>data-&gt;set.upload<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(data-&gt;set.infilesize<sp/>==<sp/>-1)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(data-&gt;set.httpversion<sp/>!=<sp/>CURL_HTTP_VERSION_1_0))?</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HTTP,<sp/>upload,<sp/>unknown<sp/>file<sp/>size<sp/>and<sp/>not<sp/>HTTP<sp/>1.0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/>TRUE:</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>else,<sp/>no<sp/>chunky<sp/>upload<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/>FALSE;</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"></highlight></codeline>
<codeline lineno="2999"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_ARES</highlight></codeline>
<codeline lineno="3000"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************</highlight></codeline>
<codeline lineno="3001"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Set<sp/>timeout<sp/>if<sp/>that<sp/>is<sp/>being<sp/>used,<sp/>and<sp/>we&apos;re<sp/>not<sp/>using<sp/>an<sp/>asynchronous</highlight></codeline>
<codeline lineno="3002"><highlight class="comment"><sp/><sp/><sp/>*<sp/>name<sp/>resolve.</highlight></codeline>
<codeline lineno="3003"><highlight class="comment"><sp/><sp/><sp/>*************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((data-&gt;set.timeout<sp/>||<sp/>data-&gt;set.connecttimeout)<sp/>&amp;&amp;<sp/>!data-&gt;set.no_signal)<sp/>{</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*************************************************************</highlight></codeline>
<codeline lineno="3006"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>signal<sp/>handler<sp/>to<sp/>catch<sp/>SIGALRM</highlight></codeline>
<codeline lineno="3007"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Store<sp/>the<sp/>old<sp/>value<sp/>to<sp/>be<sp/>able<sp/>to<sp/>set<sp/>it<sp/>back<sp/>later!</highlight></codeline>
<codeline lineno="3008"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3009"><highlight class="normal"></highlight></codeline>
<codeline lineno="3010"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SIGALRM</highlight></codeline>
<codeline lineno="3011"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SIGACTION</highlight></codeline>
<codeline lineno="3012"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sigaction<sp/>sigact;</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/>sigaction(SIGALRM,<sp/>NULL,<sp/>&amp;sigact);</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/>keep_sigact<sp/>=<sp/>sigact;</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/>keep_copysig<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>yes,<sp/>we<sp/>have<sp/>a<sp/>copy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/>sigact.sa_handler<sp/>=<sp/>alarmfunc;</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SA_RESTART</highlight></codeline>
<codeline lineno="3018"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HPUX<sp/>doesn&apos;t<sp/>have<sp/>SA_RESTART<sp/>but<sp/>defaults<sp/>to<sp/>that<sp/>behaviour!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/>sigact.sa_flags<sp/>&amp;=<sp/>~SA_RESTART;</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3021"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>set<sp/>the<sp/>new<sp/>struct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/>sigaction(SIGALRM,<sp/>&amp;sigact,<sp/>NULL);</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>HAVE_SIGACTION<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="3024"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>sigaction(),<sp/>revert<sp/>to<sp/>the<sp/>much<sp/>lamer<sp/>signal()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3025"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SIGNAL</highlight></codeline>
<codeline lineno="3026"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>keep_sigact<sp/>=<sp/>signal(SIGALRM,<sp/>alarmfunc);</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3028"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HAVE_SIGACTION<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="3029"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>set<sp/>the<sp/>timeout<sp/>on<sp/>the<sp/>name<sp/>resolving<sp/>phase<sp/>first,<sp/>separately<sp/>from</highlight></codeline>
<codeline lineno="3031"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>download/upload<sp/>part<sp/>to<sp/>allow<sp/>a<sp/>maximum<sp/>time<sp/>on<sp/>everything.<sp/>This<sp/>is</highlight></codeline>
<codeline lineno="3032"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>signal-based<sp/>timeout,<sp/>why<sp/>it<sp/>won&apos;t<sp/>work<sp/>and<sp/>shouldn&apos;t<sp/>be<sp/>used<sp/>in</highlight></codeline>
<codeline lineno="3033"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>multi-threaded<sp/>environments.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3034"><highlight class="normal"></highlight></codeline>
<codeline lineno="3035"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_ALARM</highlight></codeline>
<codeline lineno="3036"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>alarm()<sp/>makes<sp/>a<sp/>signal<sp/>get<sp/>sent<sp/>when<sp/>the<sp/>timeout<sp/>fires<sp/>off,<sp/>and<sp/>that</highlight></codeline>
<codeline lineno="3037"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>abort<sp/>system<sp/>calls<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_alarm<sp/>=<sp/>alarm(data-&gt;set.connecttimeout?</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.connecttimeout:</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;set.timeout);</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>can<sp/>expect<sp/>the<sp/>conn-&gt;created<sp/>time<sp/>to<sp/>be<sp/>&quot;now&quot;,<sp/>as<sp/>that<sp/>was<sp/>just</highlight></codeline>
<codeline lineno="3042"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recently<sp/>set<sp/>in<sp/>the<sp/>beginning<sp/>of<sp/>this<sp/>function<sp/>and<sp/>nothing<sp/>slow</highlight></codeline>
<codeline lineno="3043"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has<sp/>been<sp/>done<sp/>since<sp/>then<sp/>until<sp/>now.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3044"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3045"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SIGALRM<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="3046"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USE_ARES<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="3048"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************</highlight></codeline>
<codeline lineno="3050"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Resolve<sp/>the<sp/>name<sp/>of<sp/>the<sp/>server<sp/>or<sp/>proxy</highlight></codeline>
<codeline lineno="3051"><highlight class="comment"><sp/><sp/><sp/>*************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;bits.reuse)<sp/>{</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>re-used<sp/>connection,<sp/>no<sp/>resolving<sp/>is<sp/>necessary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/>hostaddr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;connect_addr<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">/*<sp/>we<sp/>don&apos;t<sp/>connect<sp/>now<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>any</highlight></codeline>
<codeline lineno="3056"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fresh<sp/>connect_addr<sp/>struct<sp/>to<sp/>point<sp/>to<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!data-&gt;change.proxy<sp/>||<sp/>!*data-&gt;change.proxy)<sp/>{</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>not<sp/>connecting<sp/>via<sp/>a<sp/>proxy,<sp/>extract<sp/>the<sp/>port<sp/>from<sp/>the<sp/>URL,<sp/>if<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="3060"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>there,<sp/>thus<sp/>overriding<sp/>any<sp/>defaults<sp/>that<sp/>might<sp/>have<sp/>been<sp/>set<sp/>above.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;port<sp/>=<sp/><sp/>conn-&gt;remote_port;<sp/></highlight><highlight class="comment">/*<sp/>it<sp/>is<sp/>the<sp/>same<sp/>port<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3062"><highlight class="normal"></highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Resolve<sp/>target<sp/>host<sp/>right<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>Curl_resolv(conn,<sp/>conn-&gt;name,<sp/>conn-&gt;port,<sp/>&amp;hostaddr);</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rc<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*async<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"></highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!hostaddr)<sp/>{</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>resolve<sp/>host<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>conn-&gt;name);</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><sp/>CURLE_COULDNT_RESOLVE_HOST;</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>return<sp/>yet,<sp/>we<sp/>need<sp/>to<sp/>clean<sp/>up<sp/>the<sp/>timeout<sp/>first<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>a<sp/>proxy<sp/>that<sp/>hasn&apos;t<sp/>been<sp/>resolved<sp/>yet.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3076"><highlight class="normal"></highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>resolve<sp/>proxy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>Curl_resolv(conn,<sp/>conn-&gt;proxyhost,<sp/>conn-&gt;port,<sp/>&amp;hostaddr);</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"></highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rc<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*async<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"></highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!hostaddr)<sp/>{</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>resolve<sp/>proxy<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>conn-&gt;proxyhost);</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>CURLE_COULDNT_RESOLVE_PROXY;</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>return<sp/>yet,<sp/>we<sp/>need<sp/>to<sp/>clean<sp/>up<sp/>the<sp/>timeout<sp/>first<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/>*addr<sp/>=<sp/>hostaddr;</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"></highlight></codeline>
<codeline lineno="3091"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HAVE_ALARM)<sp/>&amp;&amp;<sp/>defined(SIGALRM)</highlight></codeline>
<codeline lineno="3092"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((data-&gt;set.timeout<sp/>||<sp/>data-&gt;set.connecttimeout)<sp/>&amp;&amp;<sp/>!data-&gt;set.no_signal)<sp/>{</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SIGACTION</highlight></codeline>
<codeline lineno="3094"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(keep_copysig)<sp/>{</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>got<sp/>a<sp/>struct<sp/>as<sp/>it<sp/>looked<sp/>before,<sp/>now<sp/>put<sp/>that<sp/>one<sp/>back<sp/>nice</highlight></codeline>
<codeline lineno="3096"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>clean<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sigaction(SIGALRM,<sp/>&amp;keep_sigact,<sp/>NULL);<sp/></highlight><highlight class="comment">/*<sp/>put<sp/>it<sp/>back<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="3100"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SIGNAL</highlight></codeline>
<codeline lineno="3101"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>the<sp/>previous<sp/>SIGALRM<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/><sp/>signal(SIGALRM,<sp/>keep_sigact);</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3104"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HAVE_SIGACTION<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="3105"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>switch<sp/>back<sp/>the<sp/>alarm()<sp/>to<sp/>either<sp/>zero<sp/>or<sp/>to<sp/>what<sp/>it<sp/>was<sp/>before<sp/>minus</highlight></codeline>
<codeline lineno="3107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>time<sp/>we<sp/>spent<sp/>until<sp/>now!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(prev_alarm)<sp/>{</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>there<sp/>was<sp/>an<sp/>alarm()<sp/>set<sp/>before<sp/>us,<sp/>now<sp/>put<sp/>it<sp/>back<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>elapsed_ms<sp/>=<sp/>Curl_tvdiff(Curl_tvnow(),<sp/>conn-&gt;created);</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>alarm_set;</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"></highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>alarm<sp/>period<sp/>is<sp/>counted<sp/>in<sp/>even<sp/>number<sp/>of<sp/>seconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alarm_set<sp/>=<sp/>prev_alarm<sp/>-<sp/>elapsed_ms/1000;</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"></highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(alarm_set&lt;=0)<sp/>{</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>it<sp/>turned<sp/>negative,<sp/>we<sp/>should<sp/>fire<sp/>off<sp/>a<sp/>SIGALRM<sp/>here,<sp/>but<sp/>we</highlight></codeline>
<codeline lineno="3118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>won&apos;t,<sp/>and<sp/>zero<sp/>would<sp/>be<sp/>to<sp/>switch<sp/>it<sp/>off<sp/>so<sp/>we<sp/>never<sp/>set<sp/>it<sp/>to</highlight></codeline>
<codeline lineno="3119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>less<sp/>than<sp/>1!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alarm(1);</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>CURLE_OPERATION_TIMEOUTED;</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failf(data,<sp/></highlight><highlight class="stringliteral">&quot;Previous<sp/>alarm<sp/>fired<sp/>off!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alarm(alarm_set);</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alarm(0);<sp/></highlight><highlight class="comment">/*<sp/>just<sp/>shut<sp/>it<sp/>off<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3131"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"></highlight></codeline>
<codeline lineno="3135"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SetupConnection()<sp/>should<sp/>be<sp/>called<sp/>after<sp/>the<sp/>name<sp/>resolve<sp/>initiated<sp/>in</highlight></codeline>
<codeline lineno="3136"><highlight class="comment"><sp/>*<sp/>CreateConnection()<sp/>is<sp/>all<sp/>done.</highlight></codeline>
<codeline lineno="3137"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="3139"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CURLcode<sp/>SetupConnection(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn,</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_curl__dns__entry" kindref="compound">Curl_dns_entry</ref><sp/>*hostaddr)</highlight></codeline>
<codeline lineno="3141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data<sp/>=<sp/>conn-&gt;data;</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/>CURLcode<sp/>result=CURLE_OK;</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"></highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/>Curl_pgrsTime(data,<sp/>TIMER_NAMELOOKUP);</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"></highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;protocol<sp/>&amp;<sp/>PROT_FILE)</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>There&apos;s<sp/>nothing<sp/>in<sp/>this<sp/>function<sp/>to<sp/>setup<sp/>if<sp/>we&apos;re<sp/>only<sp/>doing</highlight></codeline>
<codeline lineno="3149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>file://<sp/>transfer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"></highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*************************************************************</highlight></codeline>
<codeline lineno="3153"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Send<sp/>user-agent<sp/>to<sp/>HTTP<sp/>proxies<sp/>even<sp/>if<sp/>the<sp/>target<sp/>protocol</highlight></codeline>
<codeline lineno="3154"><highlight class="comment"><sp/><sp/><sp/>*<sp/>isn&apos;t<sp/>HTTP.</highlight></codeline>
<codeline lineno="3155"><highlight class="comment"><sp/><sp/><sp/>*************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((conn-&gt;protocol&amp;PROT_HTTP)<sp/>||</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(data-&gt;change.proxy<sp/>&amp;&amp;<sp/>*data-&gt;change.proxy))<sp/>{</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.useragent)<sp/>{</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Curl_safefree(conn-&gt;allocptr.uagent);</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;allocptr.uagent<sp/>=</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aprintf(</highlight><highlight class="stringliteral">&quot;User-Agent:<sp/>%s\015\012&quot;</highlight><highlight class="normal">,<sp/>data-&gt;set.useragent);</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"></highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.encoding)<sp/>{</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/>Curl_safefree(conn-&gt;allocptr.accept_encoding);</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;allocptr.accept_encoding<sp/>=</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aprintf(</highlight><highlight class="stringliteral">&quot;Accept-Encoding:<sp/>%s\015\012&quot;</highlight><highlight class="normal">,<sp/>data-&gt;set.encoding);</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"></highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/>conn-&gt;bytecount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/>conn-&gt;headerbytecount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"></highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CURL_SOCKET_BAD<sp/>==<sp/>conn-&gt;sock[FIRSTSOCKET])<sp/>{</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>connected;</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"></highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Connect<sp/>only<sp/>if<sp/>not<sp/>already<sp/>connected!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ConnectPlease(conn,<sp/>hostaddr,<sp/>&amp;connected);</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"></highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(connected)<sp/>{</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_protocol_connect(conn,<sp/>hostaddr);</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CURLE_OK<sp/>==<sp/>result)</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;bits.tcpconnect<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;bits.tcpconnect<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"></highlight></codeline>
<codeline lineno="3188"><highlight class="normal"></highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CURLE_OK<sp/>!=<sp/>result)</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/>Curl_pgrsTime(data,<sp/>TIMER_CONNECT);<sp/></highlight><highlight class="comment">/*<sp/>we&apos;re<sp/>connected<sp/>already<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;bits.tcpconnect<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.verbose)</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>verboseconnect(conn,<sp/>hostaddr);</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"></highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/>conn-&gt;now<sp/>=<sp/>Curl_tvnow();<sp/></highlight><highlight class="comment">/*<sp/>time<sp/>this<sp/>*after*<sp/>the<sp/>connect<sp/>is<sp/>done,<sp/>we</highlight></codeline>
<codeline lineno="3200"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set<sp/>this<sp/>here<sp/>perhaps<sp/>a<sp/>second<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3201"><highlight class="normal"></highlight></codeline>
<codeline lineno="3202"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__EMX__</highlight></codeline>
<codeline lineno="3203"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>20000330<sp/>mgs</highlight></codeline>
<codeline lineno="3204"><highlight class="comment"><sp/><sp/><sp/>*<sp/>the<sp/>check<sp/>is<sp/>quite<sp/>a<sp/>hack...</highlight></codeline>
<codeline lineno="3205"><highlight class="comment"><sp/><sp/><sp/>*<sp/>we&apos;re<sp/>calling<sp/>_fsetmode<sp/>to<sp/>fix<sp/>the<sp/>problem<sp/>with<sp/>fwrite<sp/>converting<sp/>newline</highlight></codeline>
<codeline lineno="3206"><highlight class="comment"><sp/><sp/><sp/>*<sp/>characters<sp/>(you<sp/>get<sp/>mangled<sp/>text<sp/>files,<sp/>and<sp/>corrupted<sp/>binary<sp/>files<sp/>when</highlight></codeline>
<codeline lineno="3207"><highlight class="comment"><sp/><sp/><sp/>*<sp/>you<sp/>download<sp/>to<sp/>stdout<sp/>and<sp/>redirect<sp/>it<sp/>to<sp/>a<sp/>file).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3208"><highlight class="normal"></highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((data-&gt;set.out)-&gt;_handle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/>_fsetmode(stdout,<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3213"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="3215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"></highlight></codeline>
<codeline lineno="3217"><highlight class="normal">CURLcode<sp/>Curl_connect(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data,</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>**in_connect,</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*asyncp)</highlight></codeline>
<codeline lineno="3220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/>CURLcode<sp/>code;</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_curl__dns__entry" kindref="compound">Curl_dns_entry</ref><sp/>*dns;</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"></highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/>*asyncp<sp/>=<sp/>FALSE;<sp/></highlight><highlight class="comment">/*<sp/>assume<sp/>synchronous<sp/>resolves<sp/>by<sp/>default<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>call<sp/>the<sp/>stuff<sp/>that<sp/>needs<sp/>to<sp/>be<sp/>called<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/>code<sp/>=<sp/>CreateConnection(data,<sp/>in_connect,<sp/>&amp;dns,<sp/>asyncp);</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"></highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CURLE_OK<sp/>==<sp/>code)<sp/>{</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dns<sp/>||<sp/>!*asyncp)</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>an<sp/>address<sp/>is<sp/>available<sp/>it<sp/>means<sp/>that<sp/>we<sp/>already<sp/>have<sp/>the<sp/>name</highlight></codeline>
<codeline lineno="3233"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resolved,<sp/>OR<sp/>it<sp/>isn&apos;t<sp/>async.</highlight></codeline>
<codeline lineno="3234"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>so<sp/>=&gt;<sp/>continue<sp/>connecting<sp/>from<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>SetupConnection(*in_connect,<sp/>dns);</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>else</highlight></codeline>
<codeline lineno="3237"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response<sp/>will<sp/>be<sp/>received<sp/>and<sp/>treated<sp/>async<sp/>wise<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CURLE_OK<sp/>!=<sp/>code)<sp/>{</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We&apos;re<sp/>not<sp/>allowed<sp/>to<sp/>return<sp/>failure<sp/>with<sp/>memory<sp/>left<sp/>allocated</highlight></codeline>
<codeline lineno="3242"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>connectdata<sp/>struct,<sp/>free<sp/>those<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*in_connect)<sp/>{</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Curl_disconnect(*in_connect);<sp/></highlight><highlight class="comment">/*<sp/>close<sp/>the<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*in_connect<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>a<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"></highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>code;</highlight></codeline>
<codeline lineno="3250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"></highlight></codeline>
<codeline lineno="3252"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Call<sp/>this<sp/>function<sp/>after<sp/>Curl_connect()<sp/>has<sp/>returned<sp/>async=TRUE<sp/>and</highlight></codeline>
<codeline lineno="3253"><highlight class="comment"><sp/><sp/><sp/>then<sp/>a<sp/>successful<sp/>name<sp/>resolve<sp/>has<sp/>been<sp/>received<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3254"><highlight class="normal">CURLcode<sp/>Curl_async_resolved(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn)</highlight></codeline>
<codeline lineno="3255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_ARES)<sp/>||<sp/>defined(USE_THREADING_GETHOSTBYNAME)</highlight></codeline>
<codeline lineno="3257"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>CURLcode<sp/>code<sp/>=<sp/>SetupConnection(conn,<sp/>conn-&gt;async.dns);</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"></highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(code)</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We&apos;re<sp/>not<sp/>allowed<sp/>to<sp/>return<sp/>failure<sp/>with<sp/>memory<sp/>left<sp/>allocated</highlight></codeline>
<codeline lineno="3261"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>connectdata<sp/>struct,<sp/>free<sp/>those<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/>Curl_disconnect(conn);<sp/></highlight><highlight class="comment">/*<sp/>close<sp/>the<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3263"><highlight class="normal"></highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>code;</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="3266"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>(void)conn;</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3269"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"></highlight></codeline>
<codeline lineno="3271"><highlight class="normal"></highlight></codeline>
<codeline lineno="3272"><highlight class="normal">CURLcode<sp/>Curl_done(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn)</highlight></codeline>
<codeline lineno="3273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data=conn-&gt;data;</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/>CURLcode<sp/>result;</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"></highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>cleanups<sp/>done<sp/>even<sp/>if<sp/>the<sp/>connection<sp/>is<sp/>re-used<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3278"><highlight class="normal"></highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;bits.rangestringalloc)<sp/>{</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/>free(conn-&gt;range);</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;bits.rangestringalloc<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"></highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cleanup<sp/>possible<sp/>redirect<sp/>junk<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;newurl)<sp/>{</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/>free(conn-&gt;newurl);</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/>conn-&gt;newurl<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"></highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;connect_addr)</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/>Curl_resolv_unlock(conn-&gt;data,<sp/>conn-&gt;connect_addr);<sp/></highlight><highlight class="comment">/*<sp/>done<sp/>with<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3292"><highlight class="normal"></highlight></codeline>
<codeline lineno="3293"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CURLDEBUG)<sp/>&amp;&amp;<sp/>defined(AGGRESIVE_TEST)</highlight></codeline>
<codeline lineno="3294"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>scan<sp/>for<sp/>DNS<sp/>cache<sp/>entries<sp/>still<sp/>marked<sp/>as<sp/>in<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/>Curl_hash_apply(data-&gt;hostcache,</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>Curl_scan_cache_used);</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="3298"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/>Curl_hostcache_prune(data);<sp/></highlight><highlight class="comment">/*<sp/>kill<sp/>old<sp/>DNS<sp/>cache<sp/>entries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3300"><highlight class="normal"></highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>calls<sp/>the<sp/>protocol-specific<sp/>function<sp/>pointer<sp/>previously<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;curl_done)</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>conn-&gt;curl_done(conn);</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>CURLE_OK;</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"></highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/>Curl_pgrsDone(conn);<sp/></highlight><highlight class="comment">/*<sp/>done<sp/>with<sp/>the<sp/>operation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3308"><highlight class="normal"></highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>data-&gt;set.reuse_forbid<sp/>is<sp/>TRUE,<sp/>it<sp/>means<sp/>the<sp/>libcurl<sp/>client<sp/>has</highlight></codeline>
<codeline lineno="3310"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>forced<sp/>us<sp/>to<sp/>close<sp/>this<sp/>no<sp/>matter<sp/>what<sp/>we<sp/>think.</highlight></codeline>
<codeline lineno="3311"><highlight class="comment"></highlight></codeline>
<codeline lineno="3312"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>if<sp/>conn-&gt;bits.close<sp/>is<sp/>TRUE,<sp/>it<sp/>means<sp/>that<sp/>the<sp/>connection<sp/>should<sp/>be</highlight></codeline>
<codeline lineno="3313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>closed<sp/>in<sp/>spite<sp/>of<sp/>all<sp/>our<sp/>efforts<sp/>to<sp/>be<sp/>nice,<sp/>due<sp/>to<sp/>protocol</highlight></codeline>
<codeline lineno="3314"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>restrictions<sp/>in<sp/>our<sp/>or<sp/>the<sp/>server&apos;s<sp/>end<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;set.reuse_forbid<sp/>||<sp/>conn-&gt;bits.close)<sp/>{</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><sp/>CURLcode<sp/>res2;</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/><sp/>res2<sp/>=<sp/>Curl_disconnect(conn);<sp/></highlight><highlight class="comment">/*<sp/>close<sp/>the<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3318"><highlight class="normal"></highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>had<sp/>an<sp/>error<sp/>already,<sp/>make<sp/>sure<sp/>we<sp/>return<sp/>that<sp/>one.<sp/>But</highlight></codeline>
<codeline lineno="3320"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>we<sp/>got<sp/>a<sp/>new<sp/>error,<sp/>return<sp/>that.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!result<sp/>&amp;&amp;<sp/>res2)</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>res2;</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>#%d<sp/>left<sp/>intact\n&quot;</highlight><highlight class="normal">,<sp/>conn-&gt;connectindex);</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"></highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"></highlight></codeline>
<codeline lineno="3330"><highlight class="normal">CURLcode<sp/>Curl_do(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>**connp)</highlight></codeline>
<codeline lineno="3331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/>CURLcode<sp/>result=CURLE_OK;</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn<sp/>=<sp/>*connp;</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data=conn-&gt;data;</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"></highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/>conn-&gt;bits.do_more<sp/>=<sp/>FALSE;<sp/></highlight><highlight class="comment">/*<sp/>by<sp/>default<sp/>there&apos;s<sp/>no<sp/>curl_do_more()<sp/>to<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3337"><highlight class="normal"></highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;curl_do)<sp/>{</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>generic<sp/>protocol-specific<sp/>function<sp/>pointer<sp/>set<sp/>in<sp/>curl_connect()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>conn-&gt;curl_do(conn);</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"></highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>was<sp/>formerly<sp/>done<sp/>in<sp/>transfer.c,<sp/>but<sp/>we<sp/>better<sp/>do<sp/>it<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3343"><highlight class="normal"></highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((CURLE_SEND_ERROR<sp/>==<sp/>result)<sp/>&amp;&amp;<sp/>conn-&gt;bits.reuse)<sp/>{</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>was<sp/>a<sp/>re-use<sp/>of<sp/>a<sp/>connection<sp/>and<sp/>we<sp/>got<sp/>a<sp/>write<sp/>error<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="3346"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>DO-phase.<sp/>Then<sp/>we<sp/>DISCONNECT<sp/>this<sp/>connection<sp/>and<sp/>have<sp/>another<sp/>attempt</highlight></codeline>
<codeline lineno="3347"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>CONNECT<sp/>and<sp/>then<sp/>DO<sp/>again!<sp/>The<sp/>retry<sp/>cannot<sp/>possibly<sp/>find<sp/>another</highlight></codeline>
<codeline lineno="3348"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>connection<sp/>to<sp/>re-use,<sp/>since<sp/>we<sp/>only<sp/>keep<sp/>one<sp/>possible<sp/>connection<sp/>for</highlight></codeline>
<codeline lineno="3349"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>each.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3350"><highlight class="normal"></highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>infof(data,<sp/></highlight><highlight class="stringliteral">&quot;Re-used<sp/>connection<sp/>seems<sp/>dead,<sp/>get<sp/>a<sp/>new<sp/>one\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"></highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>conn-&gt;bits.close<sp/>=<sp/>TRUE;<sp/></highlight><highlight class="comment">/*<sp/>enforce<sp/>close<sp/>of<sp/>this<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_done(conn);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>are<sp/>so<sp/>done<sp/>with<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3355"><highlight class="normal"></highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>conn<sp/>is<sp/>no<sp/>longer<sp/>a<sp/>good<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3357"><highlight class="normal"></highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CURLE_OK<sp/>==<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>async;</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now,<sp/>redo<sp/>the<sp/>connect<sp/>and<sp/>get<sp/>a<sp/>new<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_connect(data,<sp/>connp,<sp/>&amp;async);</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CURLE_OK<sp/>==<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>have<sp/>connected<sp/>or<sp/>sent<sp/>away<sp/>a<sp/>name<sp/>resolve<sp/>query<sp/>fine<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3364"><highlight class="normal"></highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conn<sp/>=<sp/>*connp;<sp/></highlight><highlight class="comment">/*<sp/>setup<sp/>conn<sp/>to<sp/>again<sp/>point<sp/>to<sp/>something<sp/>nice<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(async)<sp/>{</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now,<sp/>if<sp/>async<sp/>is<sp/>TRUE<sp/>here,<sp/>we<sp/>need<sp/>to<sp/>wait<sp/>for<sp/>the<sp/>name</highlight></codeline>
<codeline lineno="3368"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>resolve<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_wait_for_resolv(conn,<sp/>NULL);</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Resolved,<sp/>continue<sp/>with<sp/>the<sp/>connection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>Curl_async_resolved(conn);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result)</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>...<sp/>finally<sp/>back<sp/>to<sp/>actually<sp/>retry<sp/>the<sp/>DO<sp/>phase<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>conn-&gt;curl_do(conn);</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"></highlight></codeline>
<codeline lineno="3388"><highlight class="normal">CURLcode<sp/>Curl_do_more(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn)</highlight></codeline>
<codeline lineno="3389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/>CURLcode<sp/>result=CURLE_OK;</highlight></codeline>
<codeline lineno="3391"><highlight class="normal"></highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conn-&gt;curl_do_more)</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>conn-&gt;curl_do_more(conn);</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"></highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"></highlight></codeline>
<codeline lineno="3398"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>safe_strequal(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str1,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str2)</highlight></codeline>
<codeline lineno="3399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(str1<sp/>&amp;&amp;<sp/>str2)</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>both<sp/>pointers<sp/>point<sp/>to<sp/>something<sp/>then<sp/>compare<sp/>them<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strequal(str1,<sp/>str2);</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>both<sp/>pointers<sp/>are<sp/>NULL<sp/>then<sp/>treat<sp/>them<sp/>as<sp/>equal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(!str1<sp/>&amp;&amp;<sp/>!str2);</highlight></codeline>
<codeline lineno="3406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"></highlight></codeline>
<codeline lineno="3408"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3409"><highlight class="normal">Curl_ssl_config_matches(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssl__config__data" kindref="compound">ssl_config_data</ref>*<sp/>data,</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssl__config__data" kindref="compound">ssl_config_data</ref>*<sp/>needle)</highlight></codeline>
<codeline lineno="3411"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((data-&gt;version<sp/>==<sp/>needle-&gt;version)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(data-&gt;verifypeer<sp/>==<sp/>needle-&gt;verifypeer)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(data-&gt;verifyhost<sp/>==<sp/>needle-&gt;verifyhost)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>safe_strequal(data-&gt;CApath,<sp/>needle-&gt;CApath)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>safe_strequal(data-&gt;CAfile,<sp/>needle-&gt;CAfile)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>safe_strequal(data-&gt;random_file,<sp/>needle-&gt;random_file)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>safe_strequal(data-&gt;egdsocket,<sp/>needle-&gt;egdsocket)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>safe_strequal(data-&gt;cipher_list,<sp/>needle-&gt;cipher_list))</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"></highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="3423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"></highlight></codeline>
<codeline lineno="3425"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3426"><highlight class="normal">Curl_clone_ssl_config(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssl__config__data" kindref="compound">ssl_config_data</ref><sp/>*source,</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssl__config__data" kindref="compound">ssl_config_data</ref><sp/>*dest)</highlight></codeline>
<codeline lineno="3428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/>dest-&gt;verifyhost<sp/>=<sp/>source-&gt;verifyhost;</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/>dest-&gt;verifypeer<sp/>=<sp/>source-&gt;verifypeer;</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/>dest-&gt;version<sp/>=<sp/>source-&gt;version;</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"></highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(source-&gt;CAfile)<sp/>{</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/>dest-&gt;CAfile<sp/>=<sp/>strdup(source-&gt;CAfile);</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!dest-&gt;CAfile)</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"></highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(source-&gt;CApath)<sp/>{</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/>dest-&gt;CApath<sp/>=<sp/>strdup(source-&gt;CApath);</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!dest-&gt;CApath)</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"></highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(source-&gt;cipher_list)<sp/>{</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/>dest-&gt;cipher_list<sp/>=<sp/>strdup(source-&gt;cipher_list);</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!dest-&gt;cipher_list)</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"></highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(source-&gt;egdsocket)<sp/>{</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/><sp/><sp/>dest-&gt;egdsocket<sp/>=<sp/>strdup(source-&gt;egdsocket);</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!dest-&gt;egdsocket)</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"></highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(source-&gt;random_file)<sp/>{</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/>dest-&gt;random_file<sp/>=<sp/>strdup(source-&gt;random_file);</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!dest-&gt;random_file)</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"></highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="3464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"></highlight></codeline>
<codeline lineno="3466"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Curl_free_ssl_config(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssl__config__data" kindref="compound">ssl_config_data</ref>*<sp/>sslc)</highlight></codeline>
<codeline lineno="3467"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sslc-&gt;CAfile)</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><sp/><sp/>free(sslc-&gt;CAfile);</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"></highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sslc-&gt;CApath)</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/><sp/><sp/>free(sslc-&gt;CApath);</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"></highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sslc-&gt;cipher_list)</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><sp/>free(sslc-&gt;cipher_list);</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"></highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sslc-&gt;egdsocket)</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/>free(sslc-&gt;egdsocket);</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"></highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sslc-&gt;random_file)</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/>free(sslc-&gt;random_file);</highlight></codeline>
<codeline lineno="3482"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c"/>
  </compounddef>
</doxygen>
