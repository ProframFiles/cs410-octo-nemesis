<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="url_8h" kind="file">
    <compoundname>url.h</compoundname>
    <includedby refid="easy_8c" local="yes">E:/sources/3rd_party/DOOM/neo/curl/lib/easy.c</includedby>
    <includedby refid="hostip_8c" local="yes">E:/sources/3rd_party/DOOM/neo/curl/lib/hostip.c</includedby>
    <includedby refid="http_8c" local="yes">E:/sources/3rd_party/DOOM/neo/curl/lib/http.c</includedby>
    <includedby refid="multi_8c" local="yes">E:/sources/3rd_party/DOOM/neo/curl/lib/multi.c</includedby>
    <includedby refid="ssluse_8c" local="yes">E:/sources/3rd_party/DOOM/neo/curl/lib/ssluse.c</includedby>
    <includedby refid="transfer_8c" local="yes">E:/sources/3rd_party/DOOM/neo/curl/lib/transfer.c</includedby>
    <includedby refid="url_8c" local="yes">E:/sources/3rd_party/DOOM/neo/curl/lib/url.c</includedby>
      <sectiondef kind="func">
      <memberdef kind="function" id="url_8h_1a88321662adcbfeafcca0b3df235b4aa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_open</definition>
        <argsstring>(struct SessionHandle **curl)</argsstring>
        <name>Curl_open</name>
        <param>
          <type>struct <ref refid="struct_session_handle" kindref="compound">SessionHandle</ref> **</type>
          <declname>curl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.h" line="30" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="249" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="url_8h_1a5b0a4cd8ac014c90962deaf5926db53d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_setopt</definition>
        <argsstring>(struct SessionHandle *data, CURLoption option,...)</argsstring>
        <name>Curl_setopt</name>
        <param>
          <type>struct <ref refid="struct_session_handle" kindref="compound">SessionHandle</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>CURLoption</type>
          <declname>option</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.h" line="31" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="343" bodyend="1311"/>
      </memberdef>
      <memberdef kind="function" id="url_8h_1a36ff583e44d9c573263d7a9a6d606ed9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_close</definition>
        <argsstring>(struct SessionHandle *data)</argsstring>
        <name>Curl_close</name>
        <param>
          <type>struct <ref refid="struct_session_handle" kindref="compound">SessionHandle</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.h" line="32" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="187" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="url_8h_1a3a884091f5a95aede645cef021c7c9a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_connect</definition>
        <argsstring>(struct SessionHandle *, struct connectdata **, bool *async)</argsstring>
        <name>Curl_connect</name>
        <param>
          <type>struct <ref refid="struct_session_handle" kindref="compound">SessionHandle</ref> *</type>
        </param>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> **</type>
        </param>
        <param>
          <type>bool *</type>
          <declname>async</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.h" line="33" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="3217" bodyend="3250"/>
      </memberdef>
      <memberdef kind="function" id="url_8h_1aece5bb798be6876eb0b470fc12615a9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_async_resolved</definition>
        <argsstring>(struct connectdata *conn)</argsstring>
        <name>Curl_async_resolved</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.h" line="35" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="3254" bodyend="3269"/>
      </memberdef>
      <memberdef kind="function" id="url_8h_1ae43c7a91c5204a8820473d7431d0f43c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_do</definition>
        <argsstring>(struct connectdata **)</argsstring>
        <name>Curl_do</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> **</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.h" line="36" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="3330" bodyend="3386"/>
      </memberdef>
      <memberdef kind="function" id="url_8h_1a77f497985dc23614bea559403c644da2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_do_more</definition>
        <argsstring>(struct connectdata *)</argsstring>
        <name>Curl_do_more</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.h" line="37" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="3388" bodyend="3396"/>
      </memberdef>
      <memberdef kind="function" id="url_8h_1a72f9030812044323e2a2388c60274afe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_done</definition>
        <argsstring>(struct connectdata *)</argsstring>
        <name>Curl_done</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.h" line="38" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="3272" bodyend="3328"/>
      </memberdef>
      <memberdef kind="function" id="url_8h_1afbbdf9fae50e6106abb0ca68b002f58c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_disconnect</definition>
        <argsstring>(struct connectdata *)</argsstring>
        <name>Curl_disconnect</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.h" line="39" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="1313" bodyend="1381"/>
      </memberdef>
      <memberdef kind="function" id="url_8h_1a13817ac67c2d1e176680ce2ebdcf7f63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CURLcode</type>
        <definition>CURLcode Curl_protocol_connect</definition>
        <argsstring>(struct connectdata *conn, struct Curl_dns_entry *dns)</argsstring>
        <name>Curl_protocol_connect</name>
        <param>
          <type>struct <ref refid="structconnectdata" kindref="compound">connectdata</ref> *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>struct <ref refid="struct_curl__dns__entry" kindref="compound">Curl_dns_entry</ref> *</type>
          <declname>dns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.h" line="40" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="1931" bodyend="1961"/>
      </memberdef>
      <memberdef kind="function" id="url_8h_1a06da8e6460e0f4079e1c85e3869baeb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Curl_ssl_config_matches</definition>
        <argsstring>(struct ssl_config_data *data, struct ssl_config_data *needle)</argsstring>
        <name>Curl_ssl_config_matches</name>
        <param>
          <type>struct <ref refid="structssl__config__data" kindref="compound">ssl_config_data</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct <ref refid="structssl__config__data" kindref="compound">ssl_config_data</ref> *</type>
          <declname>needle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.h" line="42" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="3409" bodyend="3423"/>
      </memberdef>
      <memberdef kind="function" id="url_8h_1ab8b58b9d0a3cdb3aacd3d1af8eac48ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Curl_clone_ssl_config</definition>
        <argsstring>(struct ssl_config_data *source, struct ssl_config_data *dest)</argsstring>
        <name>Curl_clone_ssl_config</name>
        <param>
          <type>struct <ref refid="structssl__config__data" kindref="compound">ssl_config_data</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>struct <ref refid="structssl__config__data" kindref="compound">ssl_config_data</ref> *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.h" line="44" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="3426" bodyend="3464"/>
      </memberdef>
      <memberdef kind="function" id="url_8h_1ad24c499f8d94f6e66257b2e3a3fa2405" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Curl_free_ssl_config</definition>
        <argsstring>(struct ssl_config_data *sslc)</argsstring>
        <name>Curl_free_ssl_config</name>
        <param>
          <type>struct <ref refid="structssl__config__data" kindref="compound">ssl_config_data</ref> *</type>
          <declname>sslc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.h" line="46" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="3466" bodyend="3482"/>
      </memberdef>
      <memberdef kind="function" id="url_8h_1acf70c870cde4729e5879d698a9375ae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Curl_safefree</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>Curl_safefree</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.h" line="47" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/curl/lib/url.c" bodystart="172" bodyend="176"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__URL_H</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__URL_H</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_<sp/><sp/><sp/>_<sp/>____<sp/><sp/>_<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Project<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>___|<sp/>|<sp/>|<sp/>|<sp/><sp/>_<sp/>\|<sp/>|<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>__|<sp/>|<sp/>|<sp/>|<sp/>|_)<sp/>|<sp/>|<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(__|<sp/>|_|<sp/>|<sp/><sp/>_<sp/>&lt;|<sp/>|___<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\___|\___/|_|<sp/>\_\_____|</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1998<sp/>-<sp/>2004,<sp/>Daniel<sp/>Stenberg,<sp/>&lt;daniel@haxx.se&gt;,<sp/>et<sp/>al.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>is<sp/>licensed<sp/>as<sp/>described<sp/>in<sp/>the<sp/>file<sp/>COPYING,<sp/>which</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>you<sp/>should<sp/>have<sp/>received<sp/>as<sp/>part<sp/>of<sp/>this<sp/>distribution.<sp/>The<sp/>terms</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>are<sp/>also<sp/>available<sp/>at<sp/>http://curl.haxx.se/docs/copyright.html.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>opt<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>COPYING<sp/>file.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>basis,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>url.h,v<sp/>1.17<sp/>2004/01/07<sp/>09:19:35<sp/>bagder<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>Prototypes<sp/>for<sp/>library-wide<sp/>functions<sp/>provided<sp/>by<sp/>url.c</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">CURLcode<sp/>Curl_open(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>**curl);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">CURLcode<sp/>Curl_setopt(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data,<sp/>CURLoption<sp/>option,<sp/>...);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">CURLcode<sp/>Curl_close(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*data);<sp/></highlight><highlight class="comment">/*<sp/>opposite<sp/>of<sp/>curl_open()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">CURLcode<sp/>Curl_connect(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_session_handle" kindref="compound">SessionHandle</ref><sp/>*,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>**,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*async);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">CURLcode<sp/>Curl_async_resolved(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">CURLcode<sp/>Curl_do(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>**);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">CURLcode<sp/>Curl_do_more(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*);</highlight></codeline>
<codeline lineno="38"><highlight class="normal">CURLcode<sp/>Curl_done(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">CURLcode<sp/>Curl_disconnect(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">CURLcode<sp/>Curl_protocol_connect(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structconnectdata" kindref="compound">connectdata</ref><sp/>*conn,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_curl__dns__entry" kindref="compound">Curl_dns_entry</ref><sp/>*dns);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Curl_ssl_config_matches(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssl__config__data" kindref="compound">ssl_config_data</ref>*<sp/>data,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssl__config__data" kindref="compound">ssl_config_data</ref>*<sp/>needle);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Curl_clone_ssl_config(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssl__config__data" kindref="compound">ssl_config_data</ref>*<sp/>source,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssl__config__data" kindref="compound">ssl_config_data</ref>*<sp/>dest);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Curl_free_ssl_config(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structssl__config__data" kindref="compound">ssl_config_data</ref>*<sp/>sslc);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Curl_safefree(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/curl/lib/url.h"/>
  </compounddef>
</doxygen>
