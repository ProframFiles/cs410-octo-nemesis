<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="vorbisenc_8c" kind="file">
    <compoundname>vorbisenc.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="_math_8h" local="no">math.h</includes>
    <includes refid="sound_2_ogg_vorbis_2vorbis_2codec_8h" local="yes">../vorbis/codec.h</includes>
    <includes refid="vorbisenc_8h" local="yes">../vorbis/vorbisenc.h</includes>
    <includes refid="codec__internal_8h" local="yes">codec_internal.h</includes>
    <includes refid="os_8h" local="yes">os.h</includes>
    <includes refid="sound_2_ogg_vorbis_2vorbissrc_2_misc_8h" local="yes">misc.h</includes>
    <includes refid="setup__44_8h" local="yes">modes/setup_44.h</includes>
    <includes refid="setup__44u_8h" local="yes">modes/setup_44u.h</includes>
    <includes refid="setup__32_8h" local="yes">modes/setup_32.h</includes>
    <includes refid="setup__8_8h" local="yes">modes/setup_8.h</includes>
    <includes refid="setup__11_8h" local="yes">modes/setup_11.h</includes>
    <includes refid="setup__16_8h" local="yes">modes/setup_16.h</includes>
    <includes refid="setup__22_8h" local="yes">modes/setup_22.h</includes>
    <includes refid="setup___x_8h" local="yes">modes/setup_X.h</includes>
    <incdepgraph>
      <node id="2168">
        <label>stdlib.h</label>
      </node>
      <node id="2169">
        <label>string.h</label>
      </node>
      <node id="2167">
        <label>E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c</label>
        <link refid="vorbisenc.c"/>
        <childnode refid="2168" relation="include">
        </childnode>
        <childnode refid="2169" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structstatic__bookblock" prot="public">static_bookblock</innerclass>
    <innerclass refid="structvorbis__residue__template" prot="public">vorbis_residue_template</innerclass>
    <innerclass refid="structvorbis__mapping__template" prot="public">vorbis_mapping_template</innerclass>
    <innerclass refid="structvp__adjblock" prot="public">vp_adjblock</innerclass>
    <innerclass refid="structcompandblock" prot="public">compandblock</innerclass>
    <innerclass refid="structatt3" prot="public">att3</innerclass>
    <innerclass refid="structadj3" prot="public">adj3</innerclass>
    <innerclass refid="structadj__stereo" prot="public">adj_stereo</innerclass>
    <innerclass refid="structnoiseguard" prot="public">noiseguard</innerclass>
    <innerclass refid="structnoise3" prot="public">noise3</innerclass>
    <innerclass refid="structve__setup__data__template" prot="public">ve_setup_data_template</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="vorbisenc_8c_1a3f75775ea06e75038641b7fb881bf550" prot="public" static="no">
        <type>struct <ref refid="structvp__adjblock" kindref="compound">vp_adjblock</ref></type>
        <definition>typedef struct vp_adjblock  vp_adjblock</definition>
        <argsstring></argsstring>
        <name>vp_adjblock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="55" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="vorbisenc_8c_1ad71250ff2dcd50df01cc064a78f61ee7" prot="public" static="yes" mutable="no">
        <type><ref refid="structvorbis__info__mode" kindref="compound">vorbis_info_mode</ref></type>
        <definition>vorbis_info_mode _mode_template[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_mode_template</name>
        <initializer>={
  {0,0,0,0},
  {1,0,0,1}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="144" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="vorbisenc_8c_1ad643c1ef19269b6e84686db71dfa6d47" prot="public" static="yes" mutable="no">
        <type><ref refid="structvorbis__info__mapping0" kindref="compound">vorbis_info_mapping0</ref></type>
        <definition>vorbis_info_mapping0 _map_nominal[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_map_nominal</name>
        <initializer>={
  {1, {0,0}, {0}, {0}, 1,{0},{1}},
  {1, {0,0}, {1}, {1}, 1,{0},{1}}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="149" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="vorbisenc_8c_1ac60dbdd784a19eea2177ae39f7c67855" prot="public" static="yes" mutable="no">
        <type><ref refid="structve__setup__data__template" kindref="compound">ve_setup_data_template</ref> *</type>
        <definition>ve_setup_data_template* setup_list[]</definition>
        <argsstring>[]</argsstring>
        <name>setup_list</name>
        <initializer>={
  &amp;ve_setup_44_stereo,
  &amp;ve_setup_44_stereo_low,
  &amp;ve_setup_44_uncoupled,
  &amp;ve_setup_44_uncoupled_low,

  &amp;ve_setup_32_stereo,
  &amp;ve_setup_32_stereo_low,
  &amp;ve_setup_32_uncoupled,
  &amp;ve_setup_32_uncoupled_low,

  &amp;ve_setup_22_stereo,
  &amp;ve_setup_22_uncoupled,
  &amp;ve_setup_16_stereo,
  &amp;ve_setup_16_uncoupled,

  &amp;ve_setup_11_stereo,
  &amp;ve_setup_11_uncoupled,
  &amp;ve_setup_8_stereo,
  &amp;ve_setup_8_uncoupled,

  &amp;ve_setup_X_stereo,
  &amp;ve_setup_X_uncoupled,
  &amp;ve_setup_X_stereo_low,
  &amp;ve_setup_X_uncoupled_low,
  &amp;ve_setup_XX_stereo,
  &amp;ve_setup_XX_uncoupled,
  0
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="163" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="163" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="vorbisenc_8c_1a0d0886a988737073a09a58482903690b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int vorbis_encode_toplevel_setup</definition>
        <argsstring>(vorbis_info *vi, int ch, long rate)</argsstring>
        <name>vorbis_encode_toplevel_setup</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>long</type>
          <declname>rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="193" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="193" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="vorbisenc_8c_1ab97a738197d49186fea8b26eeb1970dd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void vorbis_encode_floor_setup</definition>
        <argsstring>(vorbis_info *vi, double s, int block, static_codebook ***books, vorbis_info_floor1 *in, int *x)</argsstring>
        <name>vorbis_encode_floor_setup</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>block</declname>
        </param>
        <param>
          <type><ref refid="structstatic__codebook" kindref="compound">static_codebook</ref> ***</type>
          <declname>books</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__info__floor1" kindref="compound">vorbis_info_floor1</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="205" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="205" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="vorbisenc_8c_1a8297e4dfa8cec0031dcc92738af31df2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void vorbis_encode_global_psych_setup</definition>
        <argsstring>(vorbis_info *vi, double s, vorbis_info_psy_global *in, double *x)</argsstring>
        <name>vorbis_encode_global_psych_setup</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__info__psy__global" kindref="compound">vorbis_info_psy_global</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="245" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="245" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="vorbisenc_8c_1abb345255c750abb302d221dba1178b34" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void vorbis_encode_global_stereo</definition>
        <argsstring>(vorbis_info *vi, highlevel_encode_setup *hi, adj_stereo *p)</argsstring>
        <name>vorbis_encode_global_stereo</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type><ref refid="structhighlevel__encode__setup" kindref="compound">highlevel_encode_setup</ref> *</type>
          <declname>hi</declname>
        </param>
        <param>
          <type><ref refid="structadj__stereo" kindref="compound">adj_stereo</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="272" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="272" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="vorbisenc_8c_1a4fce6a8456157471d1ee30003492b06f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void vorbis_encode_psyset_setup</definition>
        <argsstring>(vorbis_info *vi, double s, int *nn_start, int *nn_partition, double *nn_thresh, int block)</argsstring>
        <name>vorbis_encode_psyset_setup</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>nn_start</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>nn_partition</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>nn_thresh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="321" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="321" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="vorbisenc_8c_1adafa9995390cda3d0ca95feb6be24a4b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void vorbis_encode_tonemask_setup</definition>
        <argsstring>(vorbis_info *vi, double s, int block, att3 *att, int *max, vp_adjblock *in)</argsstring>
        <name>vorbis_encode_tonemask_setup</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>block</declname>
        </param>
        <param>
          <type><ref refid="structatt3" kindref="compound">att3</ref> *</type>
          <declname>att</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>max</declname>
        </param>
        <param>
          <type><ref refid="structvp__adjblock" kindref="compound">vp_adjblock</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="352" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="352" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="vorbisenc_8c_1a62b0429307a8c68d85689c48ed3f3a18" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void vorbis_encode_compand_setup</definition>
        <argsstring>(vorbis_info *vi, double s, int block, compandblock *in, double *x)</argsstring>
        <name>vorbis_encode_compand_setup</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>block</declname>
        </param>
        <param>
          <type><ref refid="structcompandblock" kindref="compound">compandblock</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="377" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="377" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="vorbisenc_8c_1a614cbbca15f5e4bf6e7ead7b193bedc9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void vorbis_encode_peak_setup</definition>
        <argsstring>(vorbis_info *vi, double s, int block, int *suppress)</argsstring>
        <name>vorbis_encode_peak_setup</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>block</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>suppress</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="398" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="398" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="vorbisenc_8c_1aa3826d25ee846fd52d4ccd639e88de18" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void vorbis_encode_noisebias_setup</definition>
        <argsstring>(vorbis_info *vi, double s, int block, int *suppress, noise3 *in, noiseguard *guard, double userbias)</argsstring>
        <name>vorbis_encode_noisebias_setup</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>block</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>suppress</declname>
        </param>
        <param>
          <type><ref refid="structnoise3" kindref="compound">noise3</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structnoiseguard" kindref="compound">noiseguard</ref> *</type>
          <declname>guard</declname>
        </param>
        <param>
          <type>double</type>
          <declname>userbias</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="410" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="410" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="vorbisenc_8c_1ab52d253d3297adba31a7c04332cca8c5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void vorbis_encode_ath_setup</definition>
        <argsstring>(vorbis_info *vi, int block)</argsstring>
        <name>vorbis_encode_ath_setup</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="442" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="442" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="vorbisenc_8c_1a6f24d7607836ca8b3300a0f39d7153eb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int book_dup_or_new</definition>
        <argsstring>(codec_setup_info *ci, static_codebook *book)</argsstring>
        <name>book_dup_or_new</name>
        <param>
          <type><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref> *</type>
          <declname>ci</declname>
        </param>
        <param>
          <type><ref refid="structstatic__codebook" kindref="compound">static_codebook</ref> *</type>
          <declname>book</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="452" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="452" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="vorbisenc_8c_1a1765f8abafb8f1b57890f6f410a545ca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void vorbis_encode_blocksize_setup</definition>
        <argsstring>(vorbis_info *vi, double s, int *shortb, int *longb)</argsstring>
        <name>vorbis_encode_blocksize_setup</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>shortb</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>longb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="460" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="460" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="vorbisenc_8c_1a434be06eb108d8fe0e5b03810e1ac8bc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void vorbis_encode_residue_setup</definition>
        <argsstring>(vorbis_info *vi, int number, int block, vorbis_residue_template *res)</argsstring>
        <name>vorbis_encode_residue_setup</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <param>
          <type>int</type>
          <declname>block</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__residue__template" kindref="compound">vorbis_residue_template</ref> *</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="473" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="473" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="vorbisenc_8c_1aeebf981a18a54f2f7ebd3f535226a7d5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void vorbis_encode_map_n_res_setup</definition>
        <argsstring>(vorbis_info *vi, double s, vorbis_mapping_template *maps)</argsstring>
        <name>vorbis_encode_map_n_res_setup</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__mapping__template" kindref="compound">vorbis_mapping_template</ref> *</type>
          <declname>maps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="584" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="584" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="vorbisenc_8c_1a4d0d2dcc6b1cbbe1ab362d751d01dcd9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double setting_to_approx_bitrate</definition>
        <argsstring>(vorbis_info *vi)</argsstring>
        <name>setting_to_approx_bitrate</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="613" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="613" bodyend="626"/>
      </memberdef>
      <memberdef kind="function" id="vorbisenc_8c_1a16ca730b671a8028d462bac4172bc2bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void get_setup_template</definition>
        <argsstring>(vorbis_info *vi, long ch, long srate, double req, int q_or_bitrate)</argsstring>
        <name>get_setup_template</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type>long</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>long</type>
          <declname>srate</declname>
        </param>
        <param>
          <type>double</type>
          <declname>req</declname>
        </param>
        <param>
          <type>int</type>
          <declname>q_or_bitrate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="628" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="628" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="vorbisenc_8c_1ac3953ff69d05864e78d1858a544ed619" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vorbis_encode_setup_init</definition>
        <argsstring>(vorbis_info *vi)</argsstring>
        <name>vorbis_encode_setup_init</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="678" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="678" bodyend="851"/>
      </memberdef>
      <memberdef kind="function" id="vorbisenc_8c_1a94619cc07f2cb3b60475a7e9a83983ca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int vorbis_encode_setup_setting</definition>
        <argsstring>(vorbis_info *vi, long channels, long rate)</argsstring>
        <name>vorbis_encode_setup_setting</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type>long</type>
          <declname>channels</declname>
        </param>
        <param>
          <type>long</type>
          <declname>rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="853" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="853" bodyend="896"/>
      </memberdef>
      <memberdef kind="function" id="vorbisenc_8c_1a0f7677f216936a6cd7fa28ddbccada74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vorbis_encode_setup_vbr</definition>
        <argsstring>(vorbis_info *vi, long channels, long rate, float quality)</argsstring>
        <name>vorbis_encode_setup_vbr</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type>long</type>
          <declname>channels</declname>
        </param>
        <param>
          <type>long</type>
          <declname>rate</declname>
        </param>
        <param>
          <type>float</type>
          <declname>quality</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="898" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="898" bodyend="912"/>
      </memberdef>
      <memberdef kind="function" id="vorbisenc_8c_1ab4e3d96c3008a29c615271d1f551c2a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vorbis_encode_init_vbr</definition>
        <argsstring>(vorbis_info *vi, long channels, long rate, float base_quality)</argsstring>
        <name>vorbis_encode_init_vbr</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type>long</type>
          <declname>channels</declname>
        </param>
        <param>
          <type>long</type>
          <declname>rate</declname>
        </param>
        <param>
          <type>float</type>
          <declname>base_quality</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="914" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="914" bodyend="932"/>
      </memberdef>
      <memberdef kind="function" id="vorbisenc_8c_1ac73714f24500e18024e83104e9e09485" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vorbis_encode_setup_managed</definition>
        <argsstring>(vorbis_info *vi, long channels, long rate, long max_bitrate, long nominal_bitrate, long min_bitrate)</argsstring>
        <name>vorbis_encode_setup_managed</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type>long</type>
          <declname>channels</declname>
        </param>
        <param>
          <type>long</type>
          <declname>rate</declname>
        </param>
        <param>
          <type>long</type>
          <declname>max_bitrate</declname>
        </param>
        <param>
          <type>long</type>
          <declname>nominal_bitrate</declname>
        </param>
        <param>
          <type>long</type>
          <declname>min_bitrate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="934" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="934" bodyend="981"/>
      </memberdef>
      <memberdef kind="function" id="vorbisenc_8c_1a6571d9c349c540491256f1083e1ede71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vorbis_encode_init</definition>
        <argsstring>(vorbis_info *vi, long channels, long rate, long max_bitrate, long nominal_bitrate, long min_bitrate)</argsstring>
        <name>vorbis_encode_init</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type>long</type>
          <declname>channels</declname>
        </param>
        <param>
          <type>long</type>
          <declname>rate</declname>
        </param>
        <param>
          <type>long</type>
          <declname>max_bitrate</declname>
        </param>
        <param>
          <type>long</type>
          <declname>nominal_bitrate</declname>
        </param>
        <param>
          <type>long</type>
          <declname>min_bitrate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="983" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="983" bodyend="1004"/>
      </memberdef>
      <memberdef kind="function" id="vorbisenc_8c_1a5f398a378e20b8ce5e3341a582e773bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vorbis_encode_ctl</definition>
        <argsstring>(vorbis_info *vi, int number, void *arg)</argsstring>
        <name>vorbis_encode_ctl</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" line="1006" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c" bodystart="1006" bodyend="1134"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>THIS<sp/>FILE<sp/>IS<sp/>PART<sp/>OF<sp/>THE<sp/>OggVorbis<sp/>SOFTWARE<sp/>CODEC<sp/>SOURCE<sp/>CODE.<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>USE,<sp/>DISTRIBUTION<sp/>AND<sp/>REPRODUCTION<sp/>OF<sp/>THIS<sp/>LIBRARY<sp/>SOURCE<sp/>IS<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>GOVERNED<sp/>BY<sp/>A<sp/>BSD-STYLE<sp/>SOURCE<sp/>LICENSE<sp/>INCLUDED<sp/>WITH<sp/>THIS<sp/>SOURCE<sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>IN<sp/>&apos;COPYING&apos;.<sp/>PLEASE<sp/>READ<sp/>THESE<sp/>TERMS<sp/>BEFORE<sp/>DISTRIBUTING.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>THE<sp/>OggVorbis<sp/>SOURCE<sp/>CODE<sp/>IS<sp/>(C)<sp/>COPYRIGHT<sp/>1994-2002<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>by<sp/>the<sp/>XIPHOPHORUS<sp/>Company<sp/>http://www.xiph.org/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>********************************************************************</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>function:<sp/>simple<sp/>programmatic<sp/>interface<sp/>for<sp/>encoder<sp/>mode<sp/>setup</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>last<sp/>mod:<sp/>$Id:<sp/>vorbisenc.c,v<sp/>1.47<sp/>2002/07/11<sp/>06:40:50<sp/>xiphmont<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../vorbis/codec.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../vorbis/vorbisenc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;codec_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;os.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;misc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>careful<sp/>with<sp/>this;<sp/>it&apos;s<sp/>using<sp/>static<sp/>array<sp/>sizing<sp/>to<sp/>make<sp/>managing</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/>all<sp/>the<sp/>modes<sp/>a<sp/>little<sp/>less<sp/>annoying.<sp/><sp/>If<sp/>we<sp/>use<sp/>a<sp/>residue<sp/>backend</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/>with<sp/>&gt;<sp/>12<sp/>partition<sp/>types,<sp/>or<sp/>a<sp/>different<sp/>division<sp/>of<sp/>iteration,</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/><sp/>this<sp/>needs<sp/>to<sp/>be<sp/>updated.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="structstatic__bookblock" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="structstatic__codebook" kindref="compound">static_codebook</ref><sp/>*books[12][3];</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}<sp/><ref refid="structstatic__bookblock" kindref="compound">static_bookblock</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structvorbis__residue__template" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res_type;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit_type;<sp/></highlight><highlight class="comment">/*<sp/>0<sp/>lowpass<sp/>limited,<sp/>1<sp/>point<sp/>stereo<sp/>limited<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__residue0" kindref="compound">vorbis_info_residue0</ref><sp/>*res;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="structstatic__codebook" kindref="compound">static_codebook</ref><sp/><sp/>*book_aux;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="structstatic__codebook" kindref="compound">static_codebook</ref><sp/><sp/>*book_aux_managed;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="structstatic__bookblock" kindref="compound">static_bookblock</ref><sp/>*books_base;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="structstatic__bookblock" kindref="compound">static_bookblock</ref><sp/>*books_base_managed;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}<sp/><ref refid="structvorbis__residue__template" kindref="compound">vorbis_residue_template</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="structvorbis__mapping__template" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__mapping0" kindref="compound">vorbis_info_mapping0</ref><sp/><sp/><sp/><sp/>*map;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__residue__template" kindref="compound">vorbis_residue_template</ref><sp/>*res;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}<sp/><ref refid="structvorbis__mapping__template" kindref="compound">vorbis_mapping_template</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structvp__adjblock" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvp__adjblock" kindref="compound">vp_adjblock</ref>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block[P_BANDS];</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}<sp/><ref refid="structvp__adjblock" kindref="compound">vp_adjblock</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="structcompandblock" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data[NOISE_COMPAND_LEVELS];</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}<sp/><ref refid="structcompandblock" kindref="compound">compandblock</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>high<sp/>level<sp/>configuration<sp/>information<sp/>for<sp/>setting<sp/>things<sp/>up</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/>step-by-step<sp/>with<sp/>the<sp/>detailed<sp/>vorbis_encode_ctl<sp/>interface.</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/>There&apos;s<sp/>a<sp/>fair<sp/>amount<sp/>of<sp/>redundancy<sp/>such<sp/>that<sp/>interactive<sp/>setup</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/>does<sp/>not<sp/>directly<sp/>deal<sp/>with<sp/>any<sp/>vorbis_info<sp/>or<sp/>codec_setup_info</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/>initialization;<sp/>it&apos;s<sp/>all<sp/>stored<sp/>(until<sp/>full<sp/>init)<sp/>in<sp/>this<sp/>highlevel</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/>setup,<sp/>then<sp/>flushed<sp/>out<sp/>to<sp/>the<sp/>real<sp/>codec<sp/>setup<sp/>structs<sp/>later.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="structatt3" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>att[P_NOISECURVES];</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>boost;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>decay;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}<sp/><ref refid="structatt3" kindref="compound">att3</ref>;</highlight></codeline>
<codeline lineno="73" refid="structadj3" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data[P_NOISECURVES];<sp/>}<sp/><ref refid="structadj3" kindref="compound">adj3</ref>;<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="structadj__stereo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>pre[PACKETBLOBS];</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>post[PACKETBLOBS];</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kHz[PACKETBLOBS];</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lowpasskHz[PACKETBLOBS];</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}<sp/><ref refid="structadj__stereo" kindref="compound">adj_stereo</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="structnoiseguard" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lo;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hi;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fixed;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}<sp/><ref refid="structnoiseguard" kindref="compound">noiseguard</ref>;</highlight></codeline>
<codeline lineno="87" refid="structnoise3" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data[P_NOISECURVES][17];</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}<sp/><ref refid="structnoise3" kindref="compound">noise3</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="structve__setup__data__template" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mappings;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>*rate_mapping;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>*quality_mapping;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>coupling_restriction;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>samplerate_min_restriction;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>samplerate_max_restriction;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*blocksize_short;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*blocksize_long;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="structatt3" kindref="compound">att3</ref><sp/><sp/><sp/><sp/>*psy_tone_masteratt;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*psy_tone_0dB;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*psy_tone_dBsuppress;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="structvp__adjblock" kindref="compound">vp_adjblock</ref><sp/>*psy_tone_adj_impulse;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="structvp__adjblock" kindref="compound">vp_adjblock</ref><sp/>*psy_tone_adj_long;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="structvp__adjblock" kindref="compound">vp_adjblock</ref><sp/>*psy_tone_adj_other;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><ref refid="structnoiseguard" kindref="compound">noiseguard</ref><sp/><sp/>*psy_noiseguards;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><ref refid="structnoise3" kindref="compound">noise3</ref><sp/><sp/><sp/><sp/><sp/><sp/>*psy_noise_bias_impulse;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="structnoise3" kindref="compound">noise3</ref><sp/><sp/><sp/><sp/><sp/><sp/>*psy_noise_bias_padding;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="structnoise3" kindref="compound">noise3</ref><sp/><sp/><sp/><sp/><sp/><sp/>*psy_noise_bias_trans;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><ref refid="structnoise3" kindref="compound">noise3</ref><sp/><sp/><sp/><sp/><sp/><sp/>*psy_noise_bias_long;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*psy_noise_dBsuppress;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="structcompandblock" kindref="compound">compandblock</ref><sp/><sp/>*psy_noise_compand;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*psy_noise_compand_short_mapping;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*psy_noise_compand_long_mapping;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*psy_noise_normal_start[2];</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*psy_noise_normal_partition[2];</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/>*psy_noise_normal_thresh;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*psy_ath_float;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*psy_ath_abs;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/>*psy_lowpass;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__psy__global" kindref="compound">vorbis_info_psy_global</ref><sp/>*global_params;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*global_mapping;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="structadj__stereo" kindref="compound">adj_stereo</ref><sp/>*stereo_modes;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="structstatic__codebook" kindref="compound">static_codebook</ref><sp/>***floor_books;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__floor1" kindref="compound">vorbis_info_floor1</ref><sp/>*floor_params;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*floor_short_mapping;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*floor_long_mapping;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__mapping__template" kindref="compound">vorbis_mapping_template</ref><sp/>*maps;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}<sp/><ref refid="structve__setup__data__template" kindref="compound">ve_setup_data_template</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>a<sp/>few<sp/>static<sp/>coder<sp/>conventions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structvorbis__info__mode" kindref="compound">vorbis_info_mode</ref><sp/>_mode_template[2]={</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>{0,0,0,0},</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>{1,0,0,1}</highlight></codeline>
<codeline lineno="147"><highlight class="normal">};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structvorbis__info__mapping0" kindref="compound">vorbis_info_mapping0</ref><sp/>_map_nominal[2]={</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>{1,<sp/>{0,0},<sp/>{0},<sp/>{0},<sp/>1,{0},{1}},</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>{1,<sp/>{0,0},<sp/>{1},<sp/>{1},<sp/>1,{0},{1}}</highlight></codeline>
<codeline lineno="152"><highlight class="normal">};</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;modes/setup_44.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;modes/setup_44u.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;modes/setup_32.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;modes/setup_8.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;modes/setup_11.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;modes/setup_16.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;modes/setup_22.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;modes/setup_X.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structve__setup__data__template" kindref="compound">ve_setup_data_template</ref><sp/>*setup_list[]={</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>&amp;ve_setup_44_stereo,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>&amp;ve_setup_44_stereo_low,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>&amp;ve_setup_44_uncoupled,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>&amp;ve_setup_44_uncoupled_low,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>&amp;ve_setup_32_stereo,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>&amp;ve_setup_32_stereo_low,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>&amp;ve_setup_32_uncoupled,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>&amp;ve_setup_32_uncoupled_low,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>&amp;ve_setup_22_stereo,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>&amp;ve_setup_22_uncoupled,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>&amp;ve_setup_16_stereo,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>&amp;ve_setup_16_uncoupled,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>&amp;ve_setup_11_stereo,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>&amp;ve_setup_11_uncoupled,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>&amp;ve_setup_8_stereo,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>&amp;ve_setup_8_uncoupled,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>&amp;ve_setup_X_stereo,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>&amp;ve_setup_X_uncoupled,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>&amp;ve_setup_X_stereo_low,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>&amp;ve_setup_X_uncoupled_low,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>&amp;ve_setup_XX_stereo,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>&amp;ve_setup_XX_uncoupled,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>0</highlight></codeline>
<codeline lineno="191"><highlight class="normal">};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vorbis_encode_toplevel_setup(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>rate){</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vi<sp/>&amp;&amp;<sp/>vi-&gt;codec_setup){</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>vi-&gt;version=0;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>vi-&gt;channels=ch;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>vi-&gt;rate=rate;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vorbis_encode_floor_setup(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstatic__codebook" kindref="compound">static_codebook</ref><sp/><sp/><sp/><sp/>***books,<sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvorbis__info__floor1" kindref="compound">vorbis_info_floor1</ref><sp/>*in,<sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*x){</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,k,is=s;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__floor1" kindref="compound">vorbis_info_floor1</ref><sp/>*f=_ogg_calloc(1,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*f));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>memcpy(f,in+x[is],</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*f));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>fill<sp/>in<sp/>the<sp/>lowpass<sp/>field,<sp/>even<sp/>if<sp/>it&apos;s<sp/>temporary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>f-&gt;n=ci-&gt;blocksizes[block]&gt;&gt;1;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>books<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>partitions=f-&gt;partitions;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxclass=-1;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxbook=-1;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;partitions;i++)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(f-&gt;partitionclass[i]&gt;maxclass)maxclass=f-&gt;partitionclass[i];</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;=maxclass;i++){</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(f-&gt;class_book[i]&gt;maxbook)maxbook=f-&gt;class_book[i];</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f-&gt;class_book[i]+=ci-&gt;books;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;(1&lt;&lt;f-&gt;class_subs[i]);k++){</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(f-&gt;class_subbook[i][k]&gt;maxbook)maxbook=f-&gt;class_subbook[i][k];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(f-&gt;class_subbook[i][k]&gt;=0)f-&gt;class_subbook[i][k]+=ci-&gt;books;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;=maxbook;i++)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ci-&gt;book_param[ci-&gt;books++]=books[x[is]][i];</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>now,<sp/>we&apos;re<sp/>only<sp/>using<sp/>floor<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>ci-&gt;floor_type[ci-&gt;floors]=1;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>ci-&gt;floor_param[ci-&gt;floors]=f;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>ci-&gt;floors++;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vorbis_encode_global_psych_setup(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvorbis__info__psy__global" kindref="compound">vorbis_info_psy_global</ref><sp/>*in,<sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x){</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,is=s;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ds=s-is;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__psy__global" kindref="compound">vorbis_info_psy_global</ref><sp/>*g=&amp;ci-&gt;psy_g_param;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>memcpy(g,in+(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)x[is],</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*g));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>ds=x[is]*(1.-ds)+x[is+1]*ds;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>is=(int)ds;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>ds-=is;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ds==0<sp/>&amp;&amp;<sp/>is&gt;0){</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>is--;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>ds=1.;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>interpolate<sp/>the<sp/>trigger<sp/>threshholds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;4;i++){</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>g-&gt;preecho_thresh[i]=in[is].preecho_thresh[i]*(1.-ds)+in[is+1].preecho_thresh[i]*ds;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>g-&gt;postecho_thresh[i]=in[is].postecho_thresh[i]*(1.-ds)+in[is+1].postecho_thresh[i]*ds;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>g-&gt;ampmax_att_per_sec=ci-&gt;hi.amplitude_track_dBpersec;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vorbis_encode_global_stereo(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhighlevel__encode__setup" kindref="compound">highlevel_encode_setup</ref><sp/>*hi,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structadj__stereo" kindref="compound">adj_stereo</ref><sp/>*p){</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s=hi-&gt;stereo_point_setting;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,is=s;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ds=s-is;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__psy__global" kindref="compound">vorbis_info_psy_global</ref><sp/>*g=&amp;ci-&gt;psy_g_param;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p){</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(g-&gt;coupling_prepointamp,p[is].pre,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p[is].pre)*PACKETBLOBS);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(g-&gt;coupling_postpointamp,p[is].post,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p[is].post)*PACKETBLOBS);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hi-&gt;managed){</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>interpolate<sp/>the<sp/>kHz<sp/>threshholds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;PACKETBLOBS;i++){</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kHz=p[is].kHz[i]*(1.-ds)+p[is+1].kHz[i]*ds;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>g-&gt;coupling_pointlimit[0][i]=kHz*1000./vi-&gt;rate*ci-&gt;blocksizes[0];</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>g-&gt;coupling_pointlimit[1][i]=kHz*1000./vi-&gt;rate*ci-&gt;blocksizes[1];</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>g-&gt;coupling_pkHz[i]=kHz;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>kHz=p[is].lowpasskHz[i]*(1.-ds)+p[is+1].lowpasskHz[i]*ds;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>g-&gt;sliding_lowpass[0][i]=kHz*1000./vi-&gt;rate*ci-&gt;blocksizes[0];</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>g-&gt;sliding_lowpass[1][i]=kHz*1000./vi-&gt;rate*ci-&gt;blocksizes[1];</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kHz=p[is].kHz[PACKETBLOBS/2]*(1.-ds)+p[is+1].kHz[PACKETBLOBS/2]*ds;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;PACKETBLOBS;i++){</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>g-&gt;coupling_pointlimit[0][i]=kHz*1000./vi-&gt;rate*ci-&gt;blocksizes[0];</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>g-&gt;coupling_pointlimit[1][i]=kHz*1000./vi-&gt;rate*ci-&gt;blocksizes[1];</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>g-&gt;coupling_pkHz[i]=kHz;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kHz=p[is].lowpasskHz[PACKETBLOBS/2]*(1.-ds)+p[is+1].lowpasskHz[PACKETBLOBS/2]*ds;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;PACKETBLOBS;i++){</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>g-&gt;sliding_lowpass[0][i]=kHz*1000./vi-&gt;rate*ci-&gt;blocksizes[0];</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>g-&gt;sliding_lowpass[1][i]=kHz*1000./vi-&gt;rate*ci-&gt;blocksizes[1];</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;PACKETBLOBS;i++){</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;sliding_lowpass[0][i]=ci-&gt;blocksizes[0];</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;sliding_lowpass[1][i]=ci-&gt;blocksizes[1];</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vorbis_encode_psyset_setup(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*nn_start,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*nn_partition,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*nn_thresh,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block){</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__psy" kindref="compound">vorbis_info_psy</ref><sp/>*p=ci-&gt;psy_param[block];</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><ref refid="structhighlevel__encode__setup" kindref="compound">highlevel_encode_setup</ref><sp/>*hi=&amp;ci-&gt;hi;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is=s;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(block&gt;=ci-&gt;psys)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;psys=block+1;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!p){</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>p=_ogg_calloc(1,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p));</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;psy_param[block]=p;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>memcpy(p,&amp;_psy_info_template,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p));</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>p-&gt;blockflag=block&gt;&gt;1;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hi-&gt;noise_normalize_p){</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;normal_channel_p=1;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;normal_point_p=1;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;normal_start=nn_start[is];</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;normal_partition=nn_partition[is];</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;normal_thresh=nn_thresh[is];</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vorbis_encode_tonemask_setup(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structatt3" kindref="compound">att3</ref><sp/>*att,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>*max,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvp__adjblock" kindref="compound">vp_adjblock</ref><sp/>*in){</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,is=s;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ds=s-is;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__psy" kindref="compound">vorbis_info_psy</ref><sp/>*p=ci-&gt;psy_param[block];</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>0<sp/>and<sp/>2<sp/>are<sp/>only<sp/>used<sp/>by<sp/>bitmanagement,<sp/>but<sp/>there&apos;s<sp/>no<sp/>harm<sp/>to<sp/>always</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>filling<sp/>the<sp/>values<sp/>in<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>p-&gt;tone_masteratt[0]=att[is].att[0]*(1.-ds)+att[is+1].att[0]*ds;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>p-&gt;tone_masteratt[1]=att[is].att[1]*(1.-ds)+att[is+1].att[1]*ds;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>p-&gt;tone_masteratt[2]=att[is].att[2]*(1.-ds)+att[is+1].att[2]*ds;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>p-&gt;tone_centerboost=att[is].boost*(1.-ds)+att[is+1].boost*ds;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>p-&gt;tone_decay=att[is].decay*(1.-ds)+att[is+1].decay*ds;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>p-&gt;max_curve_dB=max[is]*(1.-ds)+max[is+1]*ds;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;P_BANDS;i++)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;toneatt[i]=in[is].block[i]*(1.-ds)+in[is+1].block[i]*ds;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vorbis_encode_compand_setup(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcompandblock" kindref="compound">compandblock</ref><sp/>*in,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x){</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,is=s;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ds=s-is;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__psy" kindref="compound">vorbis_info_psy</ref><sp/>*p=ci-&gt;psy_param[block];</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>ds=x[is]*(1.-ds)+x[is+1]*ds;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>is=(int)ds;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>ds-=is;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ds==0<sp/>&amp;&amp;<sp/>is&gt;0){</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>is--;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>ds=1.;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>interpolate<sp/>the<sp/>compander<sp/>settings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;NOISE_COMPAND_LEVELS;i++)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;noisecompand[i]=in[is].data[i]*(1.-ds)+in[is+1].data[i]*ds;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vorbis_encode_peak_setup(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block,</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*suppress){</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is=s;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ds=s-is;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__psy" kindref="compound">vorbis_info_psy</ref><sp/>*p=ci-&gt;psy_param[block];</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>p-&gt;tone_abs_limit=suppress[is]*(1.-ds)+suppress[is+1]*ds;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vorbis_encode_noisebias_setup(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*suppress,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnoise3" kindref="compound">noise3</ref><sp/>*in,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnoiseguard" kindref="compound">noiseguard</ref><sp/>*guard,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>userbias){</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,is=s,j;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ds=s-is;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__psy" kindref="compound">vorbis_info_psy</ref><sp/>*p=ci-&gt;psy_param[block];</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>p-&gt;noisemaxsupp=suppress[is]*(1.-ds)+suppress[is+1]*ds;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>p-&gt;noisewindowlomin=guard[block].lo;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>p-&gt;noisewindowhimin=guard[block].hi;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>p-&gt;noisewindowfixed=guard[block].fixed;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;P_NOISECURVES;j++)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;P_BANDS;i++)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;noiseoff[j][i]=in[is].data[j][i]*(1.-ds)+in[is+1].data[j][i]*ds;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>impulse<sp/>blocks<sp/>may<sp/>take<sp/>a<sp/>user<sp/>specified<sp/>bias<sp/>to<sp/>boost<sp/>the</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>nominal/high<sp/>noise<sp/>encoding<sp/>depth<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;P_NOISECURVES;j++){</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min=p-&gt;noiseoff[j][0]+6;<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>lowest<sp/>it<sp/>can<sp/>go<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;P_BANDS;i++){</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;noiseoff[j][i]+=userbias;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p-&gt;noiseoff[j][i]&lt;min)p-&gt;noiseoff[j][i]=min;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vorbis_encode_ath_setup(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block){</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__psy" kindref="compound">vorbis_info_psy</ref><sp/>*p=ci-&gt;psy_param[block];</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>p-&gt;ath_adjatt=ci-&gt;hi.ath_floating_dB;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>p-&gt;ath_maxatt=ci-&gt;hi.ath_absolute_dB;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>book_dup_or_new(<ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci,<ref refid="structstatic__codebook" kindref="compound">static_codebook</ref><sp/>*book){</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ci-&gt;books;i++)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ci-&gt;book_param[i]==book)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(i);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ci-&gt;books++);</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vorbis_encode_blocksize_setup(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*shortb,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*longb){</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is=s;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockshort=shortb[is];</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blocklong=longb[is];</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>ci-&gt;blocksizes[0]=blockshort;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>ci-&gt;blocksizes[1]=blocklong;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vorbis_encode_residue_setup(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block,</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvorbis__residue__template" kindref="compound">vorbis_residue_template</ref><sp/>*res){</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,n;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__residue0" kindref="compound">vorbis_info_residue0</ref><sp/>*r=ci-&gt;residue_param[number]=</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>_ogg_malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*r));</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>memcpy(r,res-&gt;res,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*r));</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ci-&gt;residues&lt;=number)ci-&gt;residues=number+1;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(ci-&gt;blocksizes[block]){</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>64:</highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>128:</highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>256:</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;grouping=16;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;grouping=32;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>ci-&gt;residue_type[number]=res-&gt;res_type;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>to<sp/>be<sp/>adjusted<sp/>by<sp/>lowpass/pointlimit<sp/>later<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>n=r-&gt;end=ci-&gt;blocksizes[block]&gt;&gt;1;<sp/></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(res-&gt;res_type==2)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>n=r-&gt;end*=vi-&gt;channels;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>fill<sp/>in<sp/>all<sp/>the<sp/>books<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>booklist=0,k;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ci-&gt;hi.managed){</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;r-&gt;partitions;i++)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;3;k++)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(res-&gt;books_base_managed-&gt;books[i][k])</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;secondstages[i]|=(1&lt;&lt;k);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;groupbook=book_dup_or_new(ci,res-&gt;book_aux_managed);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ci-&gt;book_param[r-&gt;groupbook]=res-&gt;book_aux_managed;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;r-&gt;partitions;i++){</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;3;k++){</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(res-&gt;books_base_managed-&gt;books[i][k]){</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bookid=book_dup_or_new(ci,res-&gt;books_base_managed-&gt;books[i][k]);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;booklist[booklist++]=bookid;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci-&gt;book_param[bookid]=res-&gt;books_base_managed-&gt;books[i][k];</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;r-&gt;partitions;i++)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;3;k++)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(res-&gt;books_base-&gt;books[i][k])</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;secondstages[i]|=(1&lt;&lt;k);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;groupbook=book_dup_or_new(ci,res-&gt;book_aux);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ci-&gt;book_param[r-&gt;groupbook]=res-&gt;book_aux;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;r-&gt;partitions;i++){</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;3;k++){</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(res-&gt;books_base-&gt;books[i][k]){</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bookid=book_dup_or_new(ci,res-&gt;books_base-&gt;books[i][k]);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;booklist[booklist++]=bookid;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci-&gt;book_param[bookid]=res-&gt;books_base-&gt;books[i][k];</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>lowpass<sp/>setup/pointlimit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freq=ci-&gt;hi.lowpass_kHz*1000.;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structvorbis__info__floor1" kindref="compound">vorbis_info_floor1</ref><sp/>*f=ci-&gt;floor_param[block];<sp/></highlight><highlight class="comment">/*<sp/>by<sp/>convention<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nyq=vi-&gt;rate/2.;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>blocksize=ci-&gt;blocksizes[block]&gt;&gt;1;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>lowpass<sp/>needs<sp/>to<sp/>be<sp/>set<sp/>in<sp/>the<sp/>floor<sp/>and<sp/>the<sp/>residue.<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(freq&gt;nyq)freq=nyq;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>in<sp/>the<sp/>floor,<sp/>the<sp/>granularity<sp/>can<sp/>be<sp/>very<sp/>fine;<sp/>it<sp/>doesn&apos;t<sp/>alter</highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>encoding<sp/>structure,<sp/>only<sp/>the<sp/>samples<sp/>used<sp/>to<sp/>fit<sp/>the<sp/>floor</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>approximation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>f-&gt;n=freq/nyq*blocksize;<sp/></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>res<sp/>may<sp/>by<sp/>limited<sp/>by<sp/>the<sp/>maximum<sp/>pointlimit<sp/>of<sp/>the<sp/>mode,</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>not<sp/>the<sp/>lowpass.<sp/>the<sp/>floor<sp/>is<sp/>always<sp/>lowpass<sp/>limited.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(res-&gt;limit_type){</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ci-&gt;hi.managed)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>freq=ci-&gt;psy_g_param.coupling_pkHz[PACKETBLOBS-1]*1000.;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>freq=ci-&gt;psy_g_param.coupling_pkHz[PACKETBLOBS/2]*1000.;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(freq&gt;nyq)freq=nyq;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>in<sp/>the<sp/>residue,<sp/>we&apos;re<sp/>constrained,<sp/>physically,<sp/>by<sp/>partition</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boundaries.<sp/><sp/>We<sp/>still<sp/>lowpass<sp/>&apos;wherever&apos;,<sp/>but<sp/>we<sp/>have<sp/>to<sp/>round<sp/>up</highlight></codeline>
<codeline lineno="572"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>here<sp/>to<sp/>next<sp/>boundary,<sp/>or<sp/>the<sp/>vorbis<sp/>spec<sp/>will<sp/>round<sp/>it<sp/>*down*<sp/>to</highlight></codeline>
<codeline lineno="573"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous<sp/>boundary<sp/>in<sp/>encode/decode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ci-&gt;residue_type[block]==2)</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;end=(int)((freq/nyq*blocksize*2)/r-&gt;grouping+.9)*<sp/></highlight><highlight class="comment">/*<sp/>round<sp/>up<sp/>only<sp/>if<sp/>we&apos;re<sp/>well<sp/>past<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;grouping;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;end=(int)((freq/nyq*blocksize)/r-&gt;grouping+.9)*<sp/></highlight><highlight class="comment">/*<sp/>round<sp/>up<sp/>only<sp/>if<sp/>we&apos;re<sp/>well<sp/>past<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;grouping;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>we<sp/>assume<sp/>two<sp/>maps<sp/>in<sp/>this<sp/>encoder<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vorbis_encode_map_n_res_setup(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvorbis__mapping__template" kindref="compound">vorbis_mapping_template</ref><sp/>*maps){</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j,is=s,modes=2;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__mapping0" kindref="compound">vorbis_info_mapping0</ref><sp/>*map=maps[is].map;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__mode" kindref="compound">vorbis_info_mode</ref><sp/>*mode=_mode_template;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__residue__template" kindref="compound">vorbis_residue_template</ref><sp/>*res=maps[is].res;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ci-&gt;blocksizes[0]==ci-&gt;blocksizes[1])modes=1;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;modes;i++){</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;map_param[i]=_ogg_calloc(1,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*map));</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;mode_param[i]=_ogg_calloc(1,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*mode));</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(ci-&gt;mode_param[i],mode+i,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*_mode_template));</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i&gt;=ci-&gt;modes)ci-&gt;modes=i+1;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;map_type[i]=0;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(ci-&gt;map_param[i],map+i,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*map));</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i&gt;=ci-&gt;maps)ci-&gt;maps=i+1;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;map[i].submaps;j++)</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_encode_residue_setup(vi,map[i].residuesubmap[j],i</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,res+map[i].residuesubmap[j]);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>setting_to_approx_bitrate(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi){</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><ref refid="structhighlevel__encode__setup" kindref="compound">highlevel_encode_setup</ref><sp/>*hi=&amp;ci-&gt;hi;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><ref refid="structve__setup__data__template" kindref="compound">ve_setup_data_template</ref><sp/>*setup=(<ref refid="structve__setup__data__template" kindref="compound">ve_setup_data_template</ref><sp/>*)hi-&gt;setup;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is=hi-&gt;base_setting;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ds=hi-&gt;base_setting-is;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch=vi-&gt;channels;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*r=setup-&gt;rate_mapping;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r==NULL)</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">((r[is]*(1.-ds)+r[is+1]*ds)*ch);<sp/><sp/></highlight></codeline>
<codeline lineno="626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_setup_template(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ch,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>srate,</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>req,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q_or_bitrate){</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0,j;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><ref refid="structhighlevel__encode__setup" kindref="compound">highlevel_encode_setup</ref><sp/>*hi=&amp;ci-&gt;hi;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(q_or_bitrate)req/=ch;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(setup_list[i]){</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(setup_list[i]-&gt;coupling_restriction==-1<sp/>||</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup_list[i]-&gt;coupling_restriction==ch){</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(srate&gt;=setup_list[i]-&gt;samplerate_min_restriction<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>srate&lt;=setup_list[i]-&gt;samplerate_max_restriction){</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mappings=setup_list[i]-&gt;mappings;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*map=(q_or_bitrate?</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup_list[i]-&gt;rate_mapping:</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup_list[i]-&gt;quality_mapping);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>template<sp/>matches.<sp/><sp/>Does<sp/>the<sp/>requested<sp/>quality<sp/>mode</highlight></codeline>
<codeline lineno="647"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fall<sp/>within<sp/>this<sp/>template&apos;s<sp/>modes?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(req&lt;map[0]){++i;</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(req&gt;map[setup_list[i]-&gt;mappings]){++i;</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;mappings;j++)</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(req&gt;=map[j]<sp/>&amp;&amp;<sp/>req&lt;map[j+1])</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>an<sp/>all-points<sp/>match<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>hi-&gt;setup=setup_list[i];</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j==mappings)</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hi-&gt;base_setting=j-.001;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>low=map[j];</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>high=map[j+1];</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>del=(req-low)/(high-low);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hi-&gt;base_setting=j+del;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>hi-&gt;setup=NULL;</highlight></codeline>
<codeline lineno="669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>encoders<sp/>will<sp/>need<sp/>to<sp/>use<sp/>vorbis_info_init<sp/>beforehand<sp/>and<sp/>call</highlight></codeline>
<codeline lineno="672"><highlight class="comment"><sp/><sp/><sp/>vorbis_info<sp/>clear<sp/>when<sp/>all<sp/>done<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>two<sp/>interfaces;<sp/>this,<sp/>more<sp/>detailed<sp/>one,<sp/>and<sp/>later<sp/>a<sp/>convenience</highlight></codeline>
<codeline lineno="675"><highlight class="comment"><sp/><sp/><sp/>layer<sp/>on<sp/>top<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>the<sp/>final<sp/>setup<sp/>call<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vorbis_encode_setup_init(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi){</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i0=0,singleblock=0;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><ref refid="structve__setup__data__template" kindref="compound">ve_setup_data_template</ref><sp/>*setup=NULL;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><ref refid="structhighlevel__encode__setup" kindref="compound">highlevel_encode_setup</ref><sp/>*hi=&amp;ci-&gt;hi;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ci==NULL)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!hi-&gt;impulse_block_p)i0=1;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>too<sp/>low/high<sp/>an<sp/>ATH<sp/>floater<sp/>is<sp/>nonsensical,<sp/>but<sp/>doesn&apos;t<sp/>break<sp/>anything<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hi-&gt;ath_floating_dB&gt;-80)hi-&gt;ath_floating_dB=-80;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hi-&gt;ath_floating_dB&lt;-200)hi-&gt;ath_floating_dB=-200;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>again,<sp/>bound<sp/>this<sp/>to<sp/>avoid<sp/>the<sp/>app<sp/>shooting<sp/>itself<sp/>int<sp/>he<sp/>foot</highlight></codeline>
<codeline lineno="692"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>too<sp/>badly<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hi-&gt;amplitude_track_dBpersec&gt;0.)hi-&gt;amplitude_track_dBpersec=0.;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hi-&gt;amplitude_track_dBpersec&lt;-99999.)hi-&gt;amplitude_track_dBpersec=-99999.;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>appropriate<sp/>setup<sp/>template;<sp/>matches<sp/>the<sp/>fetch<sp/>in<sp/>previous</highlight></codeline>
<codeline lineno="697"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>stages<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/>setup=(<ref refid="structve__setup__data__template" kindref="compound">ve_setup_data_template</ref><sp/>*)hi-&gt;setup;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(setup==NULL)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/>hi-&gt;set_in_stone=1;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>choose<sp/>block<sp/>sizes<sp/>from<sp/>configured<sp/>sizes<sp/>as<sp/>well<sp/>as<sp/>paying</highlight></codeline>
<codeline lineno="703"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>attention<sp/>to<sp/>long_block_p<sp/>and<sp/>short_block_p.<sp/><sp/>If<sp/>the<sp/>configured</highlight></codeline>
<codeline lineno="704"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>short<sp/>and<sp/>long<sp/>blocks<sp/>are<sp/>the<sp/>same<sp/>length,<sp/>we<sp/>set<sp/>long_block_p</highlight></codeline>
<codeline lineno="705"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>and<sp/>unset<sp/>short_block_p<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/>vorbis_encode_blocksize_setup(vi,hi-&gt;base_setting,</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;blocksize_short,</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;blocksize_long);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ci-&gt;blocksizes[0]==ci-&gt;blocksizes[1])singleblock=1;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>floor<sp/>setup;<sp/>choose<sp/>proper<sp/>floor<sp/>params.<sp/><sp/>Allocated<sp/>on<sp/>the<sp/>floor</highlight></codeline>
<codeline lineno="712"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>stack<sp/>in<sp/>order;<sp/>if<sp/>we<sp/>alloc<sp/>only<sp/>long<sp/>floor,<sp/>it&apos;s<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/>vorbis_encode_floor_setup(vi,hi-&gt;short_setting,0,</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;floor_books,</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;floor_params,</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;floor_short_mapping);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!singleblock)</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_encode_floor_setup(vi,hi-&gt;long_setting,1,</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;floor_books,</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;floor_params,</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;floor_long_mapping);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>setup<sp/>of<sp/>[mostly]<sp/>short<sp/>block<sp/>detection<sp/>and<sp/>stereo*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/>vorbis_encode_global_psych_setup(vi,hi-&gt;trigger_setting,</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;global_params,</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;global_mapping);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/>vorbis_encode_global_stereo(vi,hi,setup-&gt;stereo_modes);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>basic<sp/>psych<sp/>setup<sp/>and<sp/>noise<sp/>normalization<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/>vorbis_encode_psyset_setup(vi,hi-&gt;short_setting,</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_normal_start[0],</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_normal_partition[0],<sp/><sp/></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_normal_thresh,<sp/><sp/></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>vorbis_encode_psyset_setup(vi,hi-&gt;short_setting,</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_normal_start[0],</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_normal_partition[0],<sp/><sp/></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_normal_thresh,<sp/><sp/></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!singleblock){</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_encode_psyset_setup(vi,hi-&gt;long_setting,</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_normal_start[1],</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_normal_partition[1],<sp/><sp/></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_normal_thresh,<sp/><sp/></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_encode_psyset_setup(vi,hi-&gt;long_setting,</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_normal_start[1],</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_normal_partition[1],<sp/><sp/></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_normal_thresh,<sp/><sp/></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>tone<sp/>masking<sp/>setup<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>vorbis_encode_tonemask_setup(vi,hi-&gt;block[i0].tone_mask_setting,0,</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_tone_masteratt,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_tone_0dB,</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_tone_adj_impulse);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>vorbis_encode_tonemask_setup(vi,hi-&gt;block[1].tone_mask_setting,1,</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_tone_masteratt,</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_tone_0dB,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_tone_adj_other);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!singleblock){</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_encode_tonemask_setup(vi,hi-&gt;block[2].tone_mask_setting,2,</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_tone_masteratt,</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_tone_0dB,</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_tone_adj_other);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_encode_tonemask_setup(vi,hi-&gt;block[3].tone_mask_setting,3,</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_tone_masteratt,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_tone_0dB,</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_tone_adj_long);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>noise<sp/>companding<sp/>setup<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>vorbis_encode_compand_setup(vi,hi-&gt;block[i0].noise_compand_setting,0,</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_compand,</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_compand_short_mapping);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/>vorbis_encode_compand_setup(vi,hi-&gt;block[1].noise_compand_setting,1,</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_compand,</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_compand_short_mapping);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!singleblock){</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_encode_compand_setup(vi,hi-&gt;block[2].noise_compand_setting,2,</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_compand,</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_compand_long_mapping);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_encode_compand_setup(vi,hi-&gt;block[3].noise_compand_setting,3,</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_compand,</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_compand_long_mapping);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>peak<sp/>guarding<sp/>setup<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/>vorbis_encode_peak_setup(vi,hi-&gt;block[i0].tone_peaklimit_setting,0,</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_tone_dBsuppress);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/>vorbis_encode_peak_setup(vi,hi-&gt;block[1].tone_peaklimit_setting,1,</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_tone_dBsuppress);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!singleblock){</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_encode_peak_setup(vi,hi-&gt;block[2].tone_peaklimit_setting,2,</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_tone_dBsuppress);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_encode_peak_setup(vi,hi-&gt;block[3].tone_peaklimit_setting,3,</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_tone_dBsuppress);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>noise<sp/>bias<sp/>setup<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/>vorbis_encode_noisebias_setup(vi,hi-&gt;block[i0].noise_bias_setting,0,</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_dBsuppress,</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_bias_impulse,</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noiseguards,</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i0==0?hi-&gt;impulse_noisetune:0.));</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/>vorbis_encode_noisebias_setup(vi,hi-&gt;block[1].noise_bias_setting,1,</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_dBsuppress,</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_bias_padding,</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noiseguards,0.);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!singleblock){</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_encode_noisebias_setup(vi,hi-&gt;block[2].noise_bias_setting,2,</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_dBsuppress,</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_bias_trans,</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noiseguards,0.);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_encode_noisebias_setup(vi,hi-&gt;block[3].noise_bias_setting,3,</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_dBsuppress,</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noise_bias_long,</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup-&gt;psy_noiseguards,0.);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/>vorbis_encode_ath_setup(vi,0);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/>vorbis_encode_ath_setup(vi,1);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!singleblock){</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_encode_ath_setup(vi,2);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_encode_ath_setup(vi,3);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>vorbis_encode_map_n_res_setup(vi,hi-&gt;base_setting,setup-&gt;maps);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>bitrate<sp/>readonlies<sp/>and<sp/>management<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/>vi-&gt;bitrate_nominal=setting_to_approx_bitrate(vi);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/>vi-&gt;bitrate_lower=hi-&gt;bitrate_min;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/>vi-&gt;bitrate_upper=hi-&gt;bitrate_max;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/>vi-&gt;bitrate_window=hi-&gt;bitrate_limit_window;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hi-&gt;managed){</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;bi.queue_avg_time=hi-&gt;bitrate_av_window;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;bi.queue_avg_center=hi-&gt;bitrate_av_window_center;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;bi.queue_minmax_time=hi-&gt;bitrate_limit_window;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;bi.queue_hardmin=hi-&gt;bitrate_min;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;bi.queue_hardmax=hi-&gt;bitrate_max;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;bi.queue_avgmin=hi-&gt;bitrate_av_lo;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;bi.queue_avgmax=hi-&gt;bitrate_av_hi;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;bi.avgfloat_downslew_max=-999999.f;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>ci-&gt;bi.avgfloat_upslew_max=999999.f;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vorbis_encode_setup_setting(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/>channels,</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/>rate){</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=0,i,is;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><ref refid="structhighlevel__encode__setup" kindref="compound">highlevel_encode_setup</ref><sp/>*hi=&amp;ci-&gt;hi;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><ref refid="structve__setup__data__template" kindref="compound">ve_setup_data_template</ref><sp/>*setup=hi-&gt;setup;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ds;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/>ret=vorbis_encode_toplevel_setup(vi,channels,rate);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/>is=hi-&gt;base_setting;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/>ds=hi-&gt;base_setting-is;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/>hi-&gt;short_setting=hi-&gt;base_setting;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>hi-&gt;long_setting=hi-&gt;base_setting;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/>hi-&gt;managed=0;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/>hi-&gt;impulse_block_p=1;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/>hi-&gt;noise_normalize_p=1;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/>hi-&gt;stereo_point_setting=hi-&gt;base_setting;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/>hi-&gt;lowpass_kHz=</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>setup-&gt;psy_lowpass[is]*(1.-ds)+setup-&gt;psy_lowpass[is+1]*ds;<sp/><sp/></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/>hi-&gt;ath_floating_dB=setup-&gt;psy_ath_float[is]*(1.-ds)+</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>setup-&gt;psy_ath_float[is+1]*ds;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>hi-&gt;ath_absolute_dB=setup-&gt;psy_ath_abs[is]*(1.-ds)+</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>setup-&gt;psy_ath_abs[is+1]*ds;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/>hi-&gt;amplitude_track_dBpersec=-6.;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/>hi-&gt;trigger_setting=hi-&gt;base_setting;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;4;i++){</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>hi-&gt;block[i].tone_mask_setting=hi-&gt;base_setting;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>hi-&gt;block[i].tone_peaklimit_setting=hi-&gt;base_setting;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>hi-&gt;block[i].noise_bias_setting=hi-&gt;base_setting;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>hi-&gt;block[i].noise_compand_setting=hi-&gt;base_setting;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="896"><highlight class="normal">}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vorbis_encode_setup_vbr(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/>channels,</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/>rate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>quality){</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><ref refid="structhighlevel__encode__setup" kindref="compound">highlevel_encode_setup</ref><sp/>*hi=&amp;ci-&gt;hi;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/>quality+=.00001;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(quality&gt;=1.)quality=.9999;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/>get_setup_template(vi,channels,rate,quality,0);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!hi-&gt;setup)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OV_EIMPL;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vorbis_encode_setup_setting(vi,channels,rate);</highlight></codeline>
<codeline lineno="912"><highlight class="normal">}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vorbis_encode_init_vbr(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>channels,</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>rate,</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>base_quality<sp/></highlight><highlight class="comment">/*<sp/>0.<sp/>to<sp/>1.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>){</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=0;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/>ret=vorbis_encode_setup_vbr(vi,channels,rate,base_quality);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret){</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_info_clear(vi);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;<sp/></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/>ret=vorbis_encode_setup_init(vi);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret)</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_info_clear(vi);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="932"><highlight class="normal">}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vorbis_encode_setup_managed(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>channels,</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>rate,</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>max_bitrate,</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nominal_bitrate,</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>min_bitrate){</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><ref refid="structhighlevel__encode__setup" kindref="compound">highlevel_encode_setup</ref><sp/>*hi=&amp;ci-&gt;hi;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tnominal=nominal_bitrate;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=0;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nominal_bitrate&lt;=0.){</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(max_bitrate&gt;0.){</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nominal_bitrate=max_bitrate*.875;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(min_bitrate&gt;0.){</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>nominal_bitrate=min_bitrate;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/>get_setup_template(vi,channels,rate,nominal_bitrate,1);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!hi-&gt;setup)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OV_EIMPL;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/>ret=vorbis_encode_setup_setting(vi,channels,rate);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret){</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_info_clear(vi);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;<sp/></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>management<sp/>with<sp/>sane<sp/>defaults<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>management<sp/>with<sp/>sane<sp/>defaults<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/>hi-&gt;managed=1;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/>hi-&gt;bitrate_av_window=4.;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/>hi-&gt;bitrate_av_window_center=.5;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/>hi-&gt;bitrate_limit_window=2.;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/>hi-&gt;bitrate_min=min_bitrate;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/>hi-&gt;bitrate_max=max_bitrate;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/>hi-&gt;bitrate_av_lo=tnominal;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/>hi-&gt;bitrate_av_hi=tnominal;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal">}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vorbis_encode_init(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>channels,</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>rate,</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>max_bitrate,</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nominal_bitrate,</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>min_bitrate){</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=vorbis_encode_setup_managed(vi,channels,rate,</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_bitrate,</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nominal_bitrate,</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_bitrate);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret){</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_info_clear(vi);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/>ret=vorbis_encode_setup_init(vi);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret)</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_info_clear(vi);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vorbis_encode_ctl(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg){</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vi){</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;codec_setup;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhighlevel__encode__setup" kindref="compound">highlevel_encode_setup</ref><sp/>*hi=&amp;ci-&gt;hi;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>setp=(number&amp;0xf);<sp/></highlight><highlight class="comment">/*<sp/>a<sp/>read<sp/>request<sp/>has<sp/>a<sp/>low<sp/>nibble<sp/>of<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(setp<sp/>&amp;&amp;<sp/>hi-&gt;set_in_stone)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(number){</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OV_ECTL_RATEMANAGE_GET:</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structovectl__ratemanage__arg" kindref="compound">ovectl_ratemanage_arg</ref><sp/>*ai=</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structovectl__ratemanage__arg" kindref="compound">ovectl_ratemanage_arg</ref><sp/>*)arg;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>ai-&gt;management_active=hi-&gt;managed;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>ai-&gt;bitrate_av_window=hi-&gt;bitrate_av_window;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>ai-&gt;bitrate_av_window_center=hi-&gt;bitrate_av_window_center;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>ai-&gt;bitrate_hard_window=hi-&gt;bitrate_limit_window;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>ai-&gt;bitrate_hard_min=hi-&gt;bitrate_min;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>ai-&gt;bitrate_hard_max=hi-&gt;bitrate_max;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>ai-&gt;bitrate_av_lo=hi-&gt;bitrate_av_lo;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>ai-&gt;bitrate_av_hi=hi-&gt;bitrate_av_hi;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OV_ECTL_RATEMANAGE_SET:</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structovectl__ratemanage__arg" kindref="compound">ovectl_ratemanage_arg</ref><sp/>*ai=</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structovectl__ratemanage__arg" kindref="compound">ovectl_ratemanage_arg</ref><sp/>*)arg;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ai==NULL){</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hi-&gt;managed=0;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hi-&gt;managed=ai-&gt;management_active;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_encode_ctl(vi,OV_ECTL_RATEMANAGE_AVG,arg);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_encode_ctl(vi,OV_ECTL_RATEMANAGE_HARD,arg);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OV_ECTL_RATEMANAGE_AVG:</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structovectl__ratemanage__arg" kindref="compound">ovectl_ratemanage_arg</ref><sp/>*ai=</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structovectl__ratemanage__arg" kindref="compound">ovectl_ratemanage_arg</ref><sp/>*)arg;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ai==NULL){</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hi-&gt;bitrate_av_lo=0;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hi-&gt;bitrate_av_hi=0;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hi-&gt;bitrate_av_window=0;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hi-&gt;bitrate_av_window=ai-&gt;bitrate_av_window;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hi-&gt;bitrate_av_window_center=ai-&gt;bitrate_av_window_center;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hi-&gt;bitrate_av_lo=ai-&gt;bitrate_av_lo;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hi-&gt;bitrate_av_hi=ai-&gt;bitrate_av_hi;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hi-&gt;bitrate_av_window&lt;.25)hi-&gt;bitrate_av_window=.25;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hi-&gt;bitrate_av_window&gt;10.)hi-&gt;bitrate_av_window=10.;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hi-&gt;bitrate_av_window_center&lt;0.)hi-&gt;bitrate_av_window=0.;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hi-&gt;bitrate_av_window_center&gt;1.)hi-&gt;bitrate_av_window=1.;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>(hi-&gt;bitrate_av_lo&lt;=0<sp/>&amp;&amp;<sp/>hi-&gt;bitrate_av_hi&lt;=0)||</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(hi-&gt;bitrate_av_window&lt;=0)<sp/>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(hi-&gt;bitrate_min&lt;=0<sp/>&amp;&amp;<sp/>hi-&gt;bitrate_max&lt;=0)||</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(hi-&gt;bitrate_limit_window&lt;=0)<sp/>))</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hi-&gt;managed=0;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OV_ECTL_RATEMANAGE_HARD:</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structovectl__ratemanage__arg" kindref="compound">ovectl_ratemanage_arg</ref><sp/>*ai=</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structovectl__ratemanage__arg" kindref="compound">ovectl_ratemanage_arg</ref><sp/>*)arg;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ai==NULL){</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hi-&gt;bitrate_min=0;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hi-&gt;bitrate_max=0;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hi-&gt;bitrate_limit_window=0;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hi-&gt;bitrate_limit_window=ai-&gt;bitrate_hard_window;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hi-&gt;bitrate_min=ai-&gt;bitrate_hard_min;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hi-&gt;bitrate_max=ai-&gt;bitrate_hard_max;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hi-&gt;bitrate_limit_window&lt;0.)hi-&gt;bitrate_limit_window=0.;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hi-&gt;bitrate_limit_window&gt;10.)hi-&gt;bitrate_limit_window=10.;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>(hi-&gt;bitrate_av_lo&lt;=0<sp/>&amp;&amp;<sp/>hi-&gt;bitrate_av_hi&lt;=0)||</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(hi-&gt;bitrate_av_window&lt;=0)<sp/>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(hi-&gt;bitrate_min&lt;=0<sp/>&amp;&amp;<sp/>hi-&gt;bitrate_max&lt;=0)||</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(hi-&gt;bitrate_limit_window&lt;=0)<sp/>))</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hi-&gt;managed=0;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OV_ECTL_LOWPASS_GET:</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*farg=(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)arg;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>*farg=hi-&gt;lowpass_kHz;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OV_ECTL_LOWPASS_SET:</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*farg=(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)arg;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>hi-&gt;lowpass_kHz=*farg;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hi-&gt;lowpass_kHz&lt;2.)hi-&gt;lowpass_kHz=2.;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hi-&gt;lowpass_kHz&gt;99.)hi-&gt;lowpass_kHz=99.;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OV_ECTL_IBLOCK_GET:</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*farg=(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)arg;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>*farg=hi-&gt;impulse_noisetune;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OV_ECTL_IBLOCK_SET:</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*farg=(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*)arg;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>hi-&gt;impulse_noisetune=*farg;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hi-&gt;impulse_noisetune&gt;0.)hi-&gt;impulse_noisetune=0.;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hi-&gt;impulse_noisetune&lt;-15.)hi-&gt;impulse_noisetune=-15.;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EIMPL);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisenc.c"/>
  </compounddef>
</doxygen>
