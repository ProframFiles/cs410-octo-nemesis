<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="vorbisfile_8c" kind="file">
    <compoundname>vorbisfile.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="_math_8h" local="no">math.h</includes>
    <includes refid="sound_2_ogg_vorbis_2vorbis_2codec_8h" local="yes">../vorbis/codec.h</includes>
    <includes refid="vorbisfile_8h" local="yes">../vorbis/vorbisfile.h</includes>
    <includes refid="os_8h" local="yes">os.h</includes>
    <includes refid="sound_2_ogg_vorbis_2vorbissrc_2_misc_8h" local="yes">misc.h</includes>
    <incdepgraph>
      <node id="2172">
        <label>stdlib.h</label>
      </node>
      <node id="2174">
        <label>errno.h</label>
      </node>
      <node id="2175">
        <label>string.h</label>
      </node>
      <node id="2171">
        <label>E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c</label>
        <link refid="vorbisfile.c"/>
        <childnode refid="2172" relation="include">
        </childnode>
        <childnode refid="2173" relation="include">
        </childnode>
        <childnode refid="2174" relation="include">
        </childnode>
        <childnode refid="2175" relation="include">
        </childnode>
      </node>
      <node id="2173">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="vorbisfile_8c_1a239bebe1697b474e6f84945e9fb9faee" prot="public" static="no">
        <name>CHUNKSIZE</name>
        <initializer>8500 /* a shade over 8k; anyone using pages well
                          over 8k gets what they deserve */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="62" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="vorbisfile_8c_1a54bdd69f8a8dc9169732adfbe5ce1a50" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>static long _get_data</definition>
        <argsstring>(OggVorbis_File *vf)</argsstring>
        <name>_get_data</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="63" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="63" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a8204d5c2fdcef3385e591f484bba494e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _seek_helper</definition>
        <argsstring>(OggVorbis_File *vf, ogg_int64_t offset)</argsstring>
        <name>_seek_helper</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>ogg_int64_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="76" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="76" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a0c08b023a57f88cf2eb3ae6752bae82d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ogg_int64_t</type>
        <definition>static ogg_int64_t _get_next_page</definition>
        <argsstring>(OggVorbis_File *vf, ogg_page *og, ogg_int64_t boundary)</argsstring>
        <name>_get_next_page</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type><ref refid="structogg__page" kindref="compound">ogg_page</ref> *</type>
          <declname>og</declname>
        </param>
        <param>
          <type>ogg_int64_t</type>
          <declname>boundary</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="100" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="100" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1ac261963886e487116d3aebfa0210ec11" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ogg_int64_t</type>
        <definition>static ogg_int64_t _get_prev_page</definition>
        <argsstring>(OggVorbis_File *vf, ogg_page *og)</argsstring>
        <name>_get_prev_page</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type><ref refid="structogg__page" kindref="compound">ogg_page</ref> *</type>
          <declname>og</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="138" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="138" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a93b0db4af06f78158597411a371afed9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int _bisect_forward_serialno</definition>
        <argsstring>(OggVorbis_File *vf, ogg_int64_t begin, ogg_int64_t searched, ogg_int64_t end, long currentno, long m)</argsstring>
        <name>_bisect_forward_serialno</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>ogg_int64_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>ogg_int64_t</type>
          <declname>searched</declname>
        </param>
        <param>
          <type>ogg_int64_t</type>
          <declname>end</declname>
        </param>
        <param>
          <type>long</type>
          <declname>currentno</declname>
        </param>
        <param>
          <type>long</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="174" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="174" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a459caecd8f5a0db7e17a599e340f9a31" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int _fetch_headers</definition>
        <argsstring>(OggVorbis_File *vf, vorbis_info *vi, vorbis_comment *vc, long *serialno, ogg_page *og_ptr)</argsstring>
        <name>_fetch_headers</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref> *</type>
          <declname>vc</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>serialno</declname>
        </param>
        <param>
          <type><ref refid="structogg__page" kindref="compound">ogg_page</ref> *</type>
          <declname>og_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="229" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="229" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a9ead48ce22fe20928ea4f49f69bf57c6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _prefetch_all_headers</definition>
        <argsstring>(OggVorbis_File *vf, ogg_int64_t dataoffset)</argsstring>
        <name>_prefetch_all_headers</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>ogg_int64_t</type>
          <declname>dataoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="292" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="292" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1ae56f1a26a03ddf3418156ad3112fc454" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int _make_decode_ready</definition>
        <argsstring>(OggVorbis_File *vf)</argsstring>
        <name>_make_decode_ready</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="390" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="390" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1aaf932e490f1329b45eb63ef8bcff6cbf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int _open_seekable2</definition>
        <argsstring>(OggVorbis_File *vf)</argsstring>
        <name>_open_seekable2</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="407" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="407" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1ae6d5ad6e43ca1da2f725fd9e7c9a0fb2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _decode_clear</definition>
        <argsstring>(OggVorbis_File *vf)</argsstring>
        <name>_decode_clear</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="443" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="443" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1ab816963b7fad20eb738d0f6de9efeea2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int _fetch_and_process_packet</definition>
        <argsstring>(OggVorbis_File *vf, ogg_packet *op_in, int readp, int spanp)</argsstring>
        <name>_fetch_and_process_packet</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type><ref refid="structogg__packet" kindref="compound">ogg_packet</ref> *</type>
          <declname>op_in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>readp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>spanp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="460" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="460" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a9f600c46252ad362c1bd21a14b4817da" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int _fseek64_wrap</definition>
        <argsstring>(FILE *f, ogg_int64_t off, int whence)</argsstring>
        <name>_fseek64_wrap</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>ogg_int64_t</type>
          <declname>off</declname>
        </param>
        <param>
          <type>int</type>
          <declname>whence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="628" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="628" bodyend="631"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a0e7abe14c62acd6777fad2f832c67b5a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int _ov_open1</definition>
        <argsstring>(void *f, OggVorbis_File *vf, char *initial, long ibytes, ov_callbacks callbacks)</argsstring>
        <name>_ov_open1</name>
        <param>
          <type>void *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>initial</declname>
        </param>
        <param>
          <type>long</type>
          <declname>ibytes</declname>
        </param>
        <param>
          <type><ref refid="structov__callbacks" kindref="compound">ov_callbacks</ref></type>
          <declname>callbacks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="633" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="633" bodyend="672"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1af919c4abb35eafff551049f09f8f1a70" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int _ov_open2</definition>
        <argsstring>(OggVorbis_File *vf)</argsstring>
        <name>_ov_open2</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="674" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="674" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a3add994772dbc946a44909559ba3fdef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ov_clear</definition>
        <argsstring>(OggVorbis_File *vf)</argsstring>
        <name>ov_clear</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="692" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="692" bodyend="719"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a2cd2b3be983916064a9f410302a9c5db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ov_open_callbacks</definition>
        <argsstring>(void *f, OggVorbis_File *vf, char *initial, long ibytes, ov_callbacks callbacks)</argsstring>
        <name>ov_open_callbacks</name>
        <param>
          <type>void *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>initial</declname>
        </param>
        <param>
          <type>long</type>
          <declname>ibytes</declname>
        </param>
        <param>
          <type><ref refid="structov__callbacks" kindref="compound">ov_callbacks</ref></type>
          <declname>callbacks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="729" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="729" bodyend="734"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a4b1c1e69b632c153a7e3c3d8f2c6de04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ov_open</definition>
        <argsstring>(FILE *f, OggVorbis_File *vf, char *initial, long ibytes)</argsstring>
        <name>ov_open</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>initial</declname>
        </param>
        <param>
          <type>long</type>
          <declname>ibytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="736" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="736" bodyend="745"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1ace67cdf6531919e05b3bb164db45181a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ov_halfrate</definition>
        <argsstring>(OggVorbis_File *vf, int flag)</argsstring>
        <name>ov_halfrate</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="750" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="750" bodyend="768"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1adc4f36cb355bb7ab7a62c2133e315208" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ov_halfrate_p</definition>
        <argsstring>(OggVorbis_File *vf)</argsstring>
        <name>ov_halfrate_p</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="770" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="770" bodyend="773"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1ae40ec849f7091c714c859680631ecb78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ov_test_callbacks</definition>
        <argsstring>(void *f, OggVorbis_File *vf, char *initial, long ibytes, ov_callbacks callbacks)</argsstring>
        <name>ov_test_callbacks</name>
        <param>
          <type>void *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>initial</declname>
        </param>
        <param>
          <type>long</type>
          <declname>ibytes</declname>
        </param>
        <param>
          <type><ref refid="structov__callbacks" kindref="compound">ov_callbacks</ref></type>
          <declname>callbacks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="780" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="780" bodyend="784"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a04365e93aa47fe5305f320987990e3ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ov_test</definition>
        <argsstring>(FILE *f, OggVorbis_File *vf, char *initial, long ibytes)</argsstring>
        <name>ov_test</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>initial</declname>
        </param>
        <param>
          <type>long</type>
          <declname>ibytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="786" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="786" bodyend="795"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a876a2b5584ef4070e3b6fd4b79d20b49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ov_test_open</definition>
        <argsstring>(OggVorbis_File *vf)</argsstring>
        <name>ov_test_open</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="797" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="797" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a6670a0d98e113d00f8501c512eb9154a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long ov_streams</definition>
        <argsstring>(OggVorbis_File *vf)</argsstring>
        <name>ov_streams</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="803" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="803" bodyend="805"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a5a62d840710076235d1cbab5318f6399" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long ov_seekable</definition>
        <argsstring>(OggVorbis_File *vf)</argsstring>
        <name>ov_seekable</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="808" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="808" bodyend="810"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1af1456db1cb141046519ee6b4db0fcf3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long ov_bitrate</definition>
        <argsstring>(OggVorbis_File *vf, int i)</argsstring>
        <name>ov_bitrate</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="821" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="821" bodyend="857"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1abaab72dcf7bd5c2f4c20e39dc4d782d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long ov_bitrate_instant</definition>
        <argsstring>(OggVorbis_File *vf)</argsstring>
        <name>ov_bitrate_instant</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="863" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="863" bodyend="872"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a1f8e5bd99e125408a14c1bc654f92760" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long ov_serialnumber</definition>
        <argsstring>(OggVorbis_File *vf, int i)</argsstring>
        <name>ov_serialnumber</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="875" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="875" bodyend="883"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a052f63d189dd8563022c1c1796b683a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ogg_int64_t</type>
        <definition>ogg_int64_t ov_raw_total</definition>
        <argsstring>(OggVorbis_File *vf, int i)</argsstring>
        <name>ov_raw_total</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="890" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="890" bodyend="902"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a87bb18020fd1bb2916187d13d7652663" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ogg_int64_t</type>
        <definition>ogg_int64_t ov_pcm_total</definition>
        <argsstring>(OggVorbis_File *vf, int i)</argsstring>
        <name>ov_pcm_total</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="909" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="909" bodyend="921"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1afc90aaafc472664b4ffdbb3df5819d32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ov_TIME_Total</definition>
        <argsstring>(OggVorbis_File *vf, int i)</argsstring>
        <name>ov_TIME_Total</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="928" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="928" bodyend="940"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1ac7e8d23aa742cbff39425fa620f56f30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ov_raw_seek</definition>
        <argsstring>(OggVorbis_File *vf, ogg_int64_t pos)</argsstring>
        <name>ov_raw_seek</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>ogg_int64_t</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="949" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="949" bodyend="1086"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a033abf32795dd65412acb65ec9813172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ov_pcm_seek_page</definition>
        <argsstring>(OggVorbis_File *vf, ogg_int64_t pos)</argsstring>
        <name>ov_pcm_seek_page</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>ogg_int64_t</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1094" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="1094" bodyend="1260"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a10f51fe54d7334136cca8927602ba277" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ov_pcm_seek</definition>
        <argsstring>(OggVorbis_File *vf, ogg_int64_t pos)</argsstring>
        <name>ov_pcm_seek</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>ogg_int64_t</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1265" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="1265" bodyend="1355"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a98df39341f065f080bf0d853c8643522" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ov_time_seek</definition>
        <argsstring>(OggVorbis_File *vf, double seconds)</argsstring>
        <name>ov_time_seek</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>double</type>
          <declname>seconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1359" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="1359" bodyend="1382"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a89a82f2c974248fca09ef21522c05b17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ov_time_seek_page</definition>
        <argsstring>(OggVorbis_File *vf, double seconds)</argsstring>
        <name>ov_time_seek_page</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>double</type>
          <declname>seconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1386" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="1386" bodyend="1409"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1ab9f8fc1f688c012349271253a9dd8c73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ogg_int64_t</type>
        <definition>ogg_int64_t ov_raw_tell</definition>
        <argsstring>(OggVorbis_File *vf)</argsstring>
        <name>ov_raw_tell</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1413" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="1413" bodyend="1416"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a8ff88076c7b368ad976df08b7a08e693" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ogg_int64_t</type>
        <definition>ogg_int64_t ov_pcm_tell</definition>
        <argsstring>(OggVorbis_File *vf)</argsstring>
        <name>ov_pcm_tell</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1419" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="1419" bodyend="1422"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a4c000efdce7e8d27401ae6d7e5dc0142" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ov_TIME_Tell</definition>
        <argsstring>(OggVorbis_File *vf)</argsstring>
        <name>ov_TIME_Tell</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1425" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="1425" bodyend="1444"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a361c3a0cebdc25c7be81aaa8f441ddf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
        <definition>vorbis_info* ov_info</definition>
        <argsstring>(OggVorbis_File *vf, int link)</argsstring>
        <name>ov_info</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1454" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="1454" bodyend="1469"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a6d60a05f848ddc44c065cbe4b0c1e3f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref> *</type>
        <definition>vorbis_comment* ov_comment</definition>
        <argsstring>(OggVorbis_File *vf, int link)</argsstring>
        <name>ov_comment</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1472" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="1472" bodyend="1487"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a533af28325b7ed17c9d5054fe4e6d98d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int host_is_big_endian</definition>
        <argsstring>()</argsstring>
        <name>host_is_big_endian</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1489" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="1489" bodyend="1494"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a208c65166b8d9c868167dc9d389fdba8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long ov_read</definition>
        <argsstring>(OggVorbis_File *vf, char *buffer, int length, int bigendianp, int word, int sgned, int *bitstream)</argsstring>
        <name>ov_read</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bigendianp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>word</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sgned</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>bitstream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1527" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="1527" bodyend="1656"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a7e04b1a692ef489e7ee60abaafafcc65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long ov_read_float</definition>
        <argsstring>(OggVorbis_File *vf, float ***pcm_channels, int length, int *bitstream)</argsstring>
        <name>ov_read_float</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>float ***</type>
          <declname>pcm_channels</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>bitstream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1672" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="1672" bodyend="1700"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a3982773142635b2266cad2475ea2b837" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>float* vorbis_window</definition>
        <argsstring>(vorbis_dsp_state *v, int W)</argsstring>
        <name>vorbis_window</name>
        <param>
          <type><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>W</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1702" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/block.c" bodystart="962" bodyend="970"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a2e8f752952a7e0abc21b48166b3cd138" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _analysis_output_always</definition>
        <argsstring>(char *base, int i, float *v, int n, int bark, int dB, ogg_int64_t off)</argsstring>
        <name>_analysis_output_always</name>
        <param>
          <type>char *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bark</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dB</declname>
        </param>
        <param>
          <type>ogg_int64_t</type>
          <declname>off</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1703" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/analysis.c" bodystart="67" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a99cf8f964808a8cda10677af28ed115d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _ov_splice</definition>
        <argsstring>(float **pcm, float **lappcm, int n1, int n2, int ch1, int ch2, float *w1, float *w2)</argsstring>
        <name>_ov_splice</name>
        <param>
          <type>float **</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>float **</type>
          <declname>lappcm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ch1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ch2</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>w2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1706" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="1706" bodyend="1739"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a0a11684d0370e90736df59b3e68a7fb7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int _ov_initset</definition>
        <argsstring>(OggVorbis_File *vf)</argsstring>
        <name>_ov_initset</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1742" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="1742" bodyend="1752"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1ac8fd7bac64278a87312678ec01b4bd6f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int _ov_initprime</definition>
        <argsstring>(OggVorbis_File *vf)</argsstring>
        <name>_ov_initprime</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1757" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="1757" bodyend="1770"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1ae6e3e1f66ed1c33de34ad0cbb1d33b72" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _ov_getlap</definition>
        <argsstring>(OggVorbis_File *vf, vorbis_info *vi, vorbis_dsp_state *vd, float **lappcm, int lapsize)</argsstring>
        <name>_ov_getlap</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref> *</type>
          <declname>vd</declname>
        </param>
        <param>
          <type>float **</type>
          <declname>lappcm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lapsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1775" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="1775" bodyend="1811"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1aebae91900bda92038fb9c14f3f6ec28c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ov_crosslap</definition>
        <argsstring>(OggVorbis_File *vf1, OggVorbis_File *vf2)</argsstring>
        <name>ov_crosslap</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf1</declname>
        </param>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1815" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="1815" bodyend="1863"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a64ea65a7cb16fb2d82078e8ff0160a2a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int _ov_64_seek_lap</definition>
        <argsstring>(OggVorbis_File *vf, ogg_int64_t pos, int(*localseek)(OggVorbis_File *, ogg_int64_t))</argsstring>
        <name>_ov_64_seek_lap</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>ogg_int64_t</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>int(*)(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *, ogg_int64_t)</type>
          <declname>localseek</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1865" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="1865" bodyend="1912"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a53777ca05e1557139fa47693471fb531" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ov_raw_seek_lap</definition>
        <argsstring>(OggVorbis_File *vf, ogg_int64_t pos)</argsstring>
        <name>ov_raw_seek_lap</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>ogg_int64_t</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1914" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="1914" bodyend="1916"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a88868174d5c99bbfea1ecf27b5987a1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ov_pcm_seek_lap</definition>
        <argsstring>(OggVorbis_File *vf, ogg_int64_t pos)</argsstring>
        <name>ov_pcm_seek_lap</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>ogg_int64_t</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1918" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="1918" bodyend="1920"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a991451d1859ba8b998db7e005cb3b87b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ov_pcm_seek_page_lap</definition>
        <argsstring>(OggVorbis_File *vf, ogg_int64_t pos)</argsstring>
        <name>ov_pcm_seek_page_lap</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>ogg_int64_t</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1922" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="1922" bodyend="1924"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a36d06c0a6810bbea192f033adc284bd7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int _ov_d_seek_lap</definition>
        <argsstring>(OggVorbis_File *vf, double pos, int(*localseek)(OggVorbis_File *, double))</argsstring>
        <name>_ov_d_seek_lap</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>int(*)(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *, double)</type>
          <declname>localseek</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1926" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="1926" bodyend="1973"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1ac6957ebd8b9d2477507eb1c23f904bec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ov_time_seek_lap</definition>
        <argsstring>(OggVorbis_File *vf, double pos)</argsstring>
        <name>ov_time_seek_lap</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1975" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="1975" bodyend="1977"/>
      </memberdef>
      <memberdef kind="function" id="vorbisfile_8c_1a48b714260279171536078483bbaee682" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ov_time_seek_page_lap</definition>
        <argsstring>(OggVorbis_File *vf, double pos)</argsstring>
        <name>ov_time_seek_page_lap</name>
        <param>
          <type><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref> *</type>
          <declname>vf</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" line="1979" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c" bodystart="1979" bodyend="1981"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>THIS<sp/>FILE<sp/>IS<sp/>PART<sp/>OF<sp/>THE<sp/>OggVorbis<sp/>SOFTWARE<sp/>CODEC<sp/>SOURCE<sp/>CODE.<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>USE,<sp/>DISTRIBUTION<sp/>AND<sp/>REPRODUCTION<sp/>OF<sp/>THIS<sp/>LIBRARY<sp/>SOURCE<sp/>IS<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>GOVERNED<sp/>BY<sp/>A<sp/>BSD-STYLE<sp/>SOURCE<sp/>LICENSE<sp/>INCLUDED<sp/>WITH<sp/>THIS<sp/>SOURCE<sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>IN<sp/>&apos;COPYING&apos;.<sp/>PLEASE<sp/>READ<sp/>THESE<sp/>TERMS<sp/>BEFORE<sp/>DISTRIBUTING.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>THE<sp/>OggVorbis<sp/>SOURCE<sp/>CODE<sp/>IS<sp/>(C)<sp/>COPYRIGHT<sp/>1994-2002<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>by<sp/>the<sp/>XIPHOPHORUS<sp/>Company<sp/>http://www.xiph.org/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>********************************************************************</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>function:<sp/>stdio-based<sp/>convenience<sp/>library<sp/>for<sp/>opening/seeking/decoding</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>last<sp/>mod:<sp/>$Id:<sp/>vorbisfile.c,v<sp/>1.75<sp/>2003/09/16<sp/>20:28:14<sp/>xiphmont<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../vorbis/codec.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../vorbis/vorbisfile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;os.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;misc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>A<sp/>&apos;chained<sp/>bitstream&apos;<sp/>is<sp/>a<sp/>Vorbis<sp/>bitstream<sp/>that<sp/>contains<sp/>more<sp/>than</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/>one<sp/>logical<sp/>bitstream<sp/>arranged<sp/>end<sp/>to<sp/>end<sp/>(the<sp/>only<sp/>form<sp/>of<sp/>Ogg</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/>multiplexing<sp/>allowed<sp/>in<sp/>a<sp/>Vorbis<sp/>bitstream;<sp/>grouping<sp/>[parallel</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/><sp/>multiplexing]<sp/>is<sp/>not<sp/>allowed<sp/>in<sp/>Vorbis)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>A<sp/>Vorbis<sp/>file<sp/>can<sp/>be<sp/>played<sp/>beginning<sp/>to<sp/>end<sp/>(streamed)<sp/>without</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/>worrying<sp/>ahead<sp/>of<sp/>time<sp/>about<sp/>chaining<sp/>(see<sp/>decoder_example.c).<sp/><sp/>If</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/>we<sp/>have<sp/>the<sp/>whole<sp/>file,<sp/>however,<sp/>and<sp/>want<sp/>random<sp/>access</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/>(seeking/scrubbing)<sp/>or<sp/>desire<sp/>to<sp/>know<sp/>the<sp/>total<sp/>length/time<sp/>of<sp/>a</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/>file,<sp/>we<sp/>need<sp/>to<sp/>account<sp/>for<sp/>the<sp/>possibility<sp/>of<sp/>chaining.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>We<sp/>can<sp/>handle<sp/>things<sp/>a<sp/>number<sp/>of<sp/>ways;<sp/>we<sp/>can<sp/>determine<sp/>the<sp/>entire</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/>bitstream<sp/>structure<sp/>right<sp/>off<sp/>the<sp/>bat,<sp/>or<sp/>find<sp/>pieces<sp/>on<sp/>demand.</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/>This<sp/>example<sp/>determines<sp/>and<sp/>caches<sp/>structure<sp/>for<sp/>the<sp/>entire</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/>bitstream,<sp/>but<sp/>builds<sp/>a<sp/>virtual<sp/>decoder<sp/>on<sp/>the<sp/>fly<sp/>when<sp/>moving</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/>between<sp/>links<sp/>in<sp/>the<sp/>chain.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>There<sp/>are<sp/>also<sp/>different<sp/>ways<sp/>to<sp/>implement<sp/>seeking.<sp/><sp/>Enough</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/>information<sp/>exists<sp/>in<sp/>an<sp/>Ogg<sp/>bitstream<sp/>to<sp/>seek<sp/>to</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/>sample-granularity<sp/>positions<sp/>in<sp/>the<sp/>output.<sp/><sp/>Or,<sp/>one<sp/>can<sp/>seek<sp/>by</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/>picking<sp/>some<sp/>portion<sp/>of<sp/>the<sp/>stream<sp/>roughly<sp/>in<sp/>the<sp/>desired<sp/>area<sp/>if</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/>we<sp/>only<sp/>want<sp/>coarse<sp/>navigation<sp/>through<sp/>the<sp/>stream.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>Many,<sp/>many<sp/>internal<sp/>helpers.<sp/><sp/>The<sp/>intention<sp/>is<sp/>not<sp/>to<sp/>be<sp/>confusing;<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>rampant<sp/>duplication<sp/>and<sp/>monolithic<sp/>function<sp/>implementation<sp/>would<sp/>be<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>harder<sp/>to<sp/>understand<sp/>anyway.<sp/><sp/>The<sp/>high<sp/>level<sp/>functions<sp/>are<sp/>last.<sp/><sp/>Begin</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>grokking<sp/>near<sp/>the<sp/>end<sp/>of<sp/>the<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>little<sp/>more<sp/>data<sp/>from<sp/>the<sp/>file/pipe<sp/>into<sp/>the<sp/>ogg_sync<sp/>framer</highlight></codeline>
<codeline lineno="60"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHUNKSIZE<sp/>8500<sp/></highlight><highlight class="comment">/*<sp/>a<sp/>shade<sp/>over<sp/>8k;<sp/>anyone<sp/>using<sp/>pages<sp/>well</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>over<sp/>8k<sp/>gets<sp/>what<sp/>they<sp/>deserve<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>_get_data(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf){</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>errno=0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;datasource){</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer=ogg_sync_buffer(&amp;vf-&gt;oy,CHUNKSIZE);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>bytes=(vf-&gt;callbacks.read_func)(buffer,1,CHUNKSIZE,vf-&gt;datasource);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bytes&gt;0)ogg_sync_wrote(&amp;vf-&gt;oy,bytes);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bytes==0<sp/>&amp;&amp;<sp/>errno)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(bytes);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>save<sp/>a<sp/>tiny<sp/>smidge<sp/>of<sp/>verbosity<sp/>to<sp/>make<sp/>the<sp/>code<sp/>more<sp/>readable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_seek_helper(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,ogg_int64_t<sp/>offset){</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;datasource){<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>(vf-&gt;callbacks.seek_func)(vf-&gt;datasource,<sp/>offset,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;offset=offset;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_sync_reset(&amp;vf-&gt;oy);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shouldn&apos;t<sp/>happen<sp/>unless<sp/>someone<sp/>writes<sp/>a<sp/>broken<sp/>callback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>read/seek<sp/>functions<sp/>track<sp/>absolute<sp/>position<sp/>within<sp/>the<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>from<sp/>the<sp/>head<sp/>of<sp/>the<sp/>stream,<sp/>get<sp/>the<sp/>next<sp/>page.<sp/><sp/>boundary<sp/>specifies</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/>if<sp/>the<sp/>function<sp/>is<sp/>allowed<sp/>to<sp/>fetch<sp/>more<sp/>data<sp/>from<sp/>the<sp/>stream<sp/>(and</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/>how<sp/>much)<sp/>or<sp/>only<sp/>use<sp/>internally<sp/>buffered<sp/>data.</highlight></codeline>
<codeline lineno="92"><highlight class="comment"></highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/>boundary:<sp/>-1)<sp/>unbounded<sp/>search</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0)<sp/>read<sp/>no<sp/>additional<sp/>data;<sp/>use<sp/>cached<sp/>only</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n)<sp/>search<sp/>for<sp/>a<sp/>new<sp/>page<sp/>beginning<sp/>for<sp/>n<sp/>bytes</highlight></codeline>
<codeline lineno="96"><highlight class="comment"></highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/>return:<sp/><sp/><sp/>&lt;0)<sp/>did<sp/>not<sp/>find<sp/>a<sp/>page<sp/>(OV_FALSE,<sp/>OV_EOF,<sp/>OV_EREAD)</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n)<sp/>found<sp/>a<sp/>page<sp/>at<sp/>absolute<sp/>offset<sp/>n<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ogg_int64_t<sp/>_get_next_page(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,<ref refid="structogg__page" kindref="compound">ogg_page</ref><sp/>*og,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>boundary){</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(boundary&gt;0)boundary+=vf-&gt;offset;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1){</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>more;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(boundary&gt;0<sp/>&amp;&amp;<sp/>vf-&gt;offset&gt;=boundary)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_FALSE);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>more=ogg_sync_pageseek(&amp;vf-&gt;oy,og);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(more&lt;0){</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>skipped<sp/>n<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vf-&gt;offset-=more;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(more==0){</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>send<sp/>more<sp/>paramedics<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!boundary)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_FALSE);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ret=_get_data(vf);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret==0)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EOF);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret&lt;0)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EREAD);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>got<sp/>a<sp/>page.<sp/><sp/>Return<sp/>the<sp/>offset<sp/>at<sp/>the<sp/>page<sp/>beginning,</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>advance<sp/>the<sp/>internal<sp/>offset<sp/>past<sp/>the<sp/>page<sp/>end<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>ret=vf-&gt;offset;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;offset+=more;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>find<sp/>the<sp/>latest<sp/>page<sp/>beginning<sp/>before<sp/>the<sp/>current<sp/>stream<sp/>cursor</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/>position.<sp/>Much<sp/>dirtier<sp/>than<sp/>the<sp/>above<sp/>as<sp/>Ogg<sp/>doesn&apos;t<sp/>have<sp/>any</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/>backward<sp/>search<sp/>linkage.<sp/><sp/>no<sp/>&apos;readp&apos;<sp/>as<sp/>it<sp/>will<sp/>certainly<sp/>have<sp/>to</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/>read.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>returns<sp/>offset<sp/>or<sp/>OV_EREAD,<sp/>OV_FAULT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ogg_int64_t<sp/>_get_prev_page(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,<ref refid="structogg__page" kindref="compound">ogg_page</ref><sp/>*og){</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>ogg_int64_t<sp/>begin=vf-&gt;offset;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>ogg_int64_t<sp/>end=begin;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>ogg_int64_t<sp/>ret;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>ogg_int64_t<sp/>offset=-1;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(offset==-1){</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>begin-=CHUNKSIZE;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(begin&lt;0)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>begin=0;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>_seek_helper(vf,begin);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(vf-&gt;offset&lt;end){</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret=_get_next_page(vf,og,end-vf-&gt;offset);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret==OV_EREAD)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EREAD);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret&lt;0){</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>offset=ret;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>have<sp/>the<sp/>offset.<sp/><sp/>Actually<sp/>snork<sp/>and<sp/>hold<sp/>the<sp/>page<sp/>now<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>_seek_helper(vf,offset);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>ret=_get_next_page(vf,og,CHUNKSIZE);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret&lt;0)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>shouldn&apos;t<sp/>be<sp/>possible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EFAULT);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(offset);</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>finds<sp/>each<sp/>bitstream<sp/>link<sp/>one<sp/>at<sp/>a<sp/>time<sp/>using<sp/>a<sp/>bisection<sp/>search</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/>(has<sp/>to<sp/>begin<sp/>by<sp/>knowing<sp/>the<sp/>offset<sp/>of<sp/>the<sp/>lb&apos;s<sp/>initial<sp/>page).</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/>Recurses<sp/>for<sp/>each<sp/>link<sp/>so<sp/>it<sp/>can<sp/>alloc<sp/>the<sp/>link<sp/>storage<sp/>after</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/>finding<sp/>them<sp/>all,<sp/>then<sp/>unroll<sp/>and<sp/>fill<sp/>the<sp/>cache<sp/>at<sp/>the<sp/>same<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_bisect_forward_serialno(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>begin,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>searched,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>end,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentno,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>m){</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>ogg_int64_t<sp/>endsearched=end;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>ogg_int64_t<sp/>next=end;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><ref refid="structogg__page" kindref="compound">ogg_page</ref><sp/>og;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>ogg_int64_t<sp/>ret;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>below<sp/>guards<sp/>against<sp/>garbage<sp/>seperating<sp/>the<sp/>last<sp/>and</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>first<sp/>pages<sp/>of<sp/>two<sp/>links.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(searched&lt;endsearched){</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>bisect;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(endsearched-searched&lt;CHUNKSIZE){</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bisect=searched;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bisect=(searched+endsearched)/2;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>_seek_helper(vf,bisect);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>ret=_get_next_page(vf,&amp;og,-1);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret==OV_EREAD)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EREAD);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret&lt;0<sp/>||<sp/>ogg_page_serialno(&amp;og)!=currentno){</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endsearched=bisect;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret&gt;=0)next=ret;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>searched=ret+og.header_len+og.body_len;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>_seek_helper(vf,next);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>ret=_get_next_page(vf,&amp;og,-1);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret==OV_EREAD)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EREAD);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(searched&gt;=end<sp/>||<sp/>ret&lt;0){</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;links=m+1;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;offsets=_ogg_malloc((vf-&gt;links+1)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*vf-&gt;offsets));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;serialnos=_ogg_malloc(vf-&gt;links*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*vf-&gt;serialnos));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;offsets[m+1]=searched;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>ret=_bisect_forward_serialno(vf,next,vf-&gt;offset,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end,ogg_page_serialno(&amp;og),m+1);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret==OV_EREAD)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EREAD);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>vf-&gt;offsets[m]=begin;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>vf-&gt;serialnos[m]=currentno;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>uses<sp/>the<sp/>local<sp/>ogg_stream<sp/>storage<sp/>in<sp/>vf;<sp/>this<sp/>is<sp/>important<sp/>for</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/>non-streaming<sp/>input<sp/>sources<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_fetch_headers(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,<ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref><sp/>*vc,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*serialno,<ref refid="structogg__page" kindref="compound">ogg_page</ref><sp/>*og_ptr){</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><ref refid="structogg__page" kindref="compound">ogg_page</ref><sp/>og;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><ref refid="structogg__packet" kindref="compound">ogg_packet</ref><sp/>op;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,ret;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!og_ptr){</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>llret=_get_next_page(vf,&amp;og,CHUNKSIZE);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(llret==OV_EREAD)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EREAD);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(llret&lt;0)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OV_ENOTVORBIS;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>og_ptr=&amp;og;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>ogg_stream_reset_serialno(&amp;vf-&gt;os,ogg_page_serialno(og_ptr));</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(serialno)*serialno=vf-&gt;os.serialno;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>vf-&gt;ready_state=STREAMSET;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>extract<sp/>the<sp/>initial<sp/>header<sp/>from<sp/>the<sp/>first<sp/>page<sp/>and<sp/>verify<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Ogg<sp/>bitstream<sp/>is<sp/>in<sp/>fact<sp/>Vorbis<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>vorbis_info_init(vi);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>vorbis_comment_init(vc);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>i=0;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(i&lt;3){</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_stream_pagein(&amp;vf-&gt;os,og_ptr);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(i&lt;3){</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result=ogg_stream_packetout(&amp;vf-&gt;os,&amp;op);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result==0)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result==-1){</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>ret=OV_EBADHEADER;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bail_header;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((ret=vorbis_synthesis_headerin(vi,vc,&amp;op))){</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bail_header;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i&lt;3)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_get_next_page(vf,og_ptr,CHUNKSIZE)&lt;0){</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>ret=OV_EBADHEADER;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>bail_header;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/>bail_header:</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>vorbis_info_clear(vi);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>vorbis_comment_clear(vc);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>vf-&gt;ready_state=OPENED;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>last<sp/>step<sp/>of<sp/>the<sp/>OggVorbis_File<sp/>initialization;<sp/>get<sp/>all<sp/>the</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/>vorbis_info<sp/>structs<sp/>and<sp/>PCM<sp/>positions.<sp/><sp/>Only<sp/>called<sp/>by<sp/>the<sp/>seekable</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/><sp/><sp/>initialization<sp/>(local<sp/>stream<sp/>storage<sp/>is<sp/>hacked<sp/>slightly;<sp/>pay</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/>attention<sp/>to<sp/>how<sp/>that&apos;s<sp/>done)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>void<sp/>and<sp/>does<sp/>not<sp/>propogate<sp/>errors<sp/>up<sp/>because<sp/>we<sp/>want<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/>able<sp/>to<sp/>open<sp/>and<sp/>use<sp/>damaged<sp/>bitstreams<sp/>as<sp/>well<sp/>as<sp/>we<sp/>can.<sp/><sp/>Just</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/>watch<sp/>out<sp/>for<sp/>missing<sp/>information<sp/>for<sp/>links<sp/>in<sp/>the<sp/>OggVorbis_File</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/><sp/>struct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_prefetch_all_headers(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,<sp/>ogg_int64_t<sp/>dataoffset){</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><ref refid="structogg__page" kindref="compound">ogg_page</ref><sp/>og;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>ogg_int64_t<sp/>ret;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>vf-&gt;vi=_ogg_realloc(vf-&gt;vi,vf-&gt;links*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*vf-&gt;vi));</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>vf-&gt;vc=_ogg_realloc(vf-&gt;vc,vf-&gt;links*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*vf-&gt;vc));</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>vf-&gt;dataoffsets=_ogg_malloc(vf-&gt;links*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*vf-&gt;dataoffsets));</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>vf-&gt;pcmlengths=_ogg_malloc(vf-&gt;links*2*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*vf-&gt;pcmlengths));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vf-&gt;links;i++){</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==0){</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>already<sp/>grabbed<sp/>the<sp/>initial<sp/>header<sp/>earlier.<sp/><sp/>Just<sp/>set<sp/>the<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vf-&gt;dataoffsets[i]=dataoffset;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_seek_helper(vf,dataoffset);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>seek<sp/>to<sp/>the<sp/>location<sp/>of<sp/>the<sp/>initial<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_seek_helper(vf,vf-&gt;offsets[i]);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_fetch_headers(vf,vf-&gt;vi+i,vf-&gt;vc+i,NULL,NULL)&lt;0){</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vf-&gt;dataoffsets[i]=-1;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;dataoffsets[i]=vf-&gt;offset;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fetch<sp/>beginning<sp/>PCM<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;dataoffsets[i]!=-1){</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>accumulated=0;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastblock=-1;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ogg_stream_reset_serialno(&amp;vf-&gt;os,vf-&gt;serialnos[i]);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1){</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structogg__packet" kindref="compound">ogg_packet</ref><sp/>op;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>ret=_get_next_page(vf,&amp;og,-1);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret&lt;0)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>should<sp/>not<sp/>be<sp/>possible<sp/>unless<sp/>the<sp/>file<sp/>is</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>truncated/mangled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ogg_page_serialno(&amp;og)!=vf-&gt;serialnos[i])</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>count<sp/>blocksizes<sp/>of<sp/>all<sp/>frames<sp/>in<sp/>the<sp/>page<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_stream_pagein(&amp;vf-&gt;os,&amp;og);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((result=ogg_stream_packetout(&amp;vf-&gt;os,&amp;op))){</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result&gt;0){<sp/></highlight><highlight class="comment">/*<sp/>ignore<sp/>holes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>thisblock=vorbis_packet_blocksize(vf-&gt;vi+i,&amp;op);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lastblock!=-1)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accumulated+=(lastblock+thisblock)&gt;&gt;2;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastblock=thisblock;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ogg_page_granulepos(&amp;og)!=-1){</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pcm<sp/>offset<sp/>of<sp/>last<sp/>packet<sp/>on<sp/>the<sp/>first<sp/>audio<sp/>page<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>accumulated=<sp/>ogg_page_granulepos(&amp;og)-accumulated;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>less<sp/>than<sp/>zero?<sp/><sp/>This<sp/>is<sp/>a<sp/>stream<sp/>with<sp/>samples<sp/>trimmed<sp/>off</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>beginning,<sp/>a<sp/>normal<sp/>occurrence;<sp/>set<sp/>the<sp/>offset<sp/>to<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(accumulated&lt;0)accumulated=0;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vf-&gt;pcmlengths[i*2]=accumulated;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>PCM<sp/>length<sp/>of<sp/>this<sp/>link.<sp/>To<sp/>do<sp/>this,</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get<sp/>the<sp/>last<sp/>page<sp/>of<sp/>the<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>end=vf-&gt;offsets[i+1];</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_seek_helper(vf,end);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1){</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>ret=_get_prev_page(vf,&amp;og);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret&lt;0){</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>should<sp/>not<sp/>be<sp/>possible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_info_clear(vf-&gt;vi+i);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_comment_clear(vf-&gt;vc+i);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ogg_page_granulepos(&amp;og)!=-1){</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vf-&gt;pcmlengths[i*2+1]=ogg_page_granulepos(&amp;og)-vf-&gt;pcmlengths[i*2];</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;offset=ret;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_make_decode_ready(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf){</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&gt;STREAMSET)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&lt;STREAMSET)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OV_EFAULT;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;seekable){</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vorbis_synthesis_init(&amp;vf-&gt;vd,vf-&gt;vi+vf-&gt;current_link))</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OV_EBADLINK;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vorbis_synthesis_init(&amp;vf-&gt;vd,vf-&gt;vi))</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OV_EBADLINK;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>vorbis_block_init(&amp;vf-&gt;vd,&amp;vf-&gt;vb);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>vf-&gt;ready_state=INITSET;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>vf-&gt;bittrack=0.f;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>vf-&gt;samptrack=0.f;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_open_seekable2(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf){</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>serialno=vf-&gt;current_serialno;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>ogg_int64_t<sp/>dataoffset=vf-&gt;offset,<sp/>end;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><ref refid="structogg__page" kindref="compound">ogg_page</ref><sp/>og;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>we&apos;re<sp/>partially<sp/>open<sp/>and<sp/>have<sp/>a<sp/>first<sp/>link<sp/>header<sp/>state<sp/>in</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>storage<sp/>in<sp/>vf<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>can<sp/>seek,<sp/>so<sp/>set<sp/>out<sp/>learning<sp/>all<sp/>about<sp/>this<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>(vf-&gt;callbacks.seek_func)(vf-&gt;datasource,0,SEEK_END);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>vf-&gt;offset=vf-&gt;end=(vf-&gt;callbacks.tell_func)(vf-&gt;datasource);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>get<sp/>the<sp/>offset<sp/>for<sp/>the<sp/>last<sp/>page<sp/>of<sp/>the<sp/>physical<sp/>bitstream.</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Most<sp/>OggVorbis<sp/>files<sp/>will<sp/>contain<sp/>a<sp/>single<sp/>logical<sp/>bitstream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>end=_get_prev_page(vf,&amp;og);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(end&lt;0)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(end);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>more<sp/>than<sp/>one<sp/>logical<sp/>bitstream?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ogg_page_serialno(&amp;og)!=serialno){</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Chained<sp/>bitstream.<sp/>Bisect-search<sp/>each<sp/>logical<sp/>bitstream</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>section.<sp/><sp/>Do<sp/>so<sp/>based<sp/>on<sp/>serial<sp/>number<sp/>only<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_bisect_forward_serialno(vf,0,0,end+1,serialno,0)&lt;0)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EREAD);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Only<sp/>one<sp/>logical<sp/>bitstream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_bisect_forward_serialno(vf,0,end,end+1,serialno,0))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EREAD);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>initial<sp/>header<sp/>memory<sp/>is<sp/>referenced<sp/>by<sp/>vf<sp/>after;<sp/>don&apos;t<sp/>free<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>_prefetch_all_headers(vf,dataoffset);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ov_raw_seek(vf,0));</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>clear<sp/>out<sp/>the<sp/>current<sp/>logical<sp/>bitstream<sp/>decoder<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_decode_clear(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf){</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>vorbis_dsp_clear(&amp;vf-&gt;vd);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>vorbis_block_clear(&amp;vf-&gt;vb);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>vf-&gt;ready_state=OPENED;</highlight></codeline>
<codeline lineno="447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fetch<sp/>and<sp/>process<sp/>a<sp/>packet.<sp/><sp/>Handles<sp/>the<sp/>case<sp/>where<sp/>we&apos;re<sp/>at<sp/>a</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/><sp/><sp/>bitstream<sp/>boundary<sp/>and<sp/>dumps<sp/>the<sp/>decoding<sp/>machine.<sp/><sp/>If<sp/>the<sp/>decoding</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/><sp/><sp/>machine<sp/>is<sp/>unloaded,<sp/>it<sp/>loads<sp/>it.<sp/><sp/>It<sp/>also<sp/>keeps<sp/>pcm_offset<sp/>up<sp/>to</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/><sp/><sp/>date<sp/>(seek<sp/>and<sp/>read<sp/>both<sp/>use<sp/>this.<sp/><sp/>seek<sp/>uses<sp/>a<sp/>special<sp/>hack<sp/>with</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/><sp/><sp/>readp).<sp/></highlight></codeline>
<codeline lineno="454"><highlight class="comment"></highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/><sp/><sp/>return:<sp/>&lt;0)<sp/>error,<sp/>OV_HOLE<sp/>(lost<sp/>packet)<sp/>or<sp/>OV_EOF</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0)<sp/>need<sp/>more<sp/>data<sp/>(only<sp/>if<sp/>readp==0)</highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1)<sp/>got<sp/>a<sp/>packet<sp/></highlight></codeline>
<codeline lineno="458"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_fetch_and_process_packet(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structogg__packet" kindref="compound">ogg_packet</ref><sp/>*op_in,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>readp,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spanp){</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><ref refid="structogg__page" kindref="compound">ogg_page</ref><sp/>og;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>handle<sp/>one<sp/>packet.<sp/><sp/>Try<sp/>to<sp/>fetch<sp/>it<sp/>from<sp/>current<sp/>stream<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>extract<sp/>packets<sp/>from<sp/>page<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1){</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>process<sp/>a<sp/>packet<sp/>if<sp/>we<sp/>can.<sp/><sp/>If<sp/>the<sp/>machine<sp/>isn&apos;t<sp/>loaded,</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neither<sp/>is<sp/>a<sp/>page<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state==INITSET){</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structogg__packet" kindref="compound">ogg_packet</ref><sp/>op;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structogg__packet" kindref="compound">ogg_packet</ref><sp/>*op_ptr=(op_in?op_in:&amp;op);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result=ogg_stream_packetout(&amp;vf-&gt;os,op_ptr);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>granulepos;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>op_in=NULL;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result==-1)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_HOLE);<sp/></highlight><highlight class="comment">/*<sp/>hole<sp/>in<sp/>the<sp/>data.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result&gt;0){</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>got<sp/>a<sp/>packet.<sp/><sp/>process<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>granulepos=op_ptr-&gt;granulepos;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!vorbis_synthesis(&amp;vf-&gt;vb,op_ptr)){<sp/></highlight><highlight class="comment">/*<sp/>lazy<sp/>check<sp/>for<sp/>lazy</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>handling.<sp/><sp/>The</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>packets<sp/>aren&apos;t</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>audio,<sp/>so<sp/>if/when<sp/>we</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>submit<sp/>them,</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_synthesis<sp/>will</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reject<sp/>them<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>suck<sp/>in<sp/>the<sp/>synthesis<sp/>data<sp/>and<sp/>track<sp/>bitrate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldsamples=vorbis_synthesis_pcmout(&amp;vf-&gt;vd,NULL);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>proper<sp/>use<sp/>of<sp/>libvorbis<sp/>within<sp/>libvorbisfile,</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldsamples<sp/>will<sp/>always<sp/>be<sp/>zero.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(oldsamples)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EFAULT);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_synthesis_blockin(&amp;vf-&gt;vd,&amp;vf-&gt;vb);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vf-&gt;samptrack+=vorbis_synthesis_pcmout(&amp;vf-&gt;vd,NULL)-oldsamples;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vf-&gt;bittrack+=op_ptr-&gt;bytes*8;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>update<sp/>the<sp/>pcm<sp/>offset.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(granulepos!=-1<sp/>&amp;&amp;<sp/>!op_ptr-&gt;e_o_s){</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>link=(vf-&gt;seekable?vf-&gt;current_link:0);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,samples;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>packet<sp/>has<sp/>a<sp/>pcm_offset<sp/>on<sp/>it<sp/>(the<sp/>last<sp/>packet</highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>completed<sp/>on<sp/>a<sp/>page<sp/>carries<sp/>the<sp/>offset)<sp/>After<sp/>processing</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(above),<sp/>we<sp/>know<sp/>the<sp/>pcm<sp/>position<sp/>of<sp/>the<sp/>*last*<sp/>sample</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ready<sp/>to<sp/>be<sp/>returned.<sp/>Find<sp/>the<sp/>offset<sp/>of<sp/>the<sp/>*first*</highlight></codeline>
<codeline lineno="513"><highlight class="comment"></highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>As<sp/>an<sp/>aside,<sp/>this<sp/>trick<sp/>is<sp/>inaccurate<sp/>if<sp/>we<sp/>begin</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reading<sp/>anew<sp/>right<sp/>at<sp/>the<sp/>last<sp/>page;<sp/>the<sp/>end-of-stream</highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>granulepos<sp/>declares<sp/>the<sp/>last<sp/>frame<sp/>in<sp/>the<sp/>stream,<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>packet<sp/>of<sp/>the<sp/>last<sp/>page<sp/>may<sp/>be<sp/>a<sp/>partial<sp/>frame.</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>So,<sp/>we<sp/>need<sp/>a<sp/>previous<sp/>granulepos<sp/>from<sp/>an<sp/>in-sequence<sp/>page</highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>have<sp/>a<sp/>reference<sp/>point.<sp/><sp/>Thus<sp/>the<sp/>!op_ptr-&gt;e_o_s<sp/>clause</highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>above<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;seekable<sp/>&amp;&amp;<sp/>link&gt;0)</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>granulepos-=vf-&gt;pcmlengths[link*2];</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(granulepos&lt;0)granulepos=0;<sp/></highlight><highlight class="comment">/*<sp/>actually,<sp/>this</highlight></codeline>
<codeline lineno="525"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shouldn&apos;t<sp/>be<sp/>possible</highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>here<sp/>unless<sp/>the<sp/>stream</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>very<sp/>broken<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples=vorbis_synthesis_pcmout(&amp;vf-&gt;vd,NULL);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>granulepos-=samples;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;link;i++)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>granulepos+=vf-&gt;pcmlengths[i*2+1];</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vf-&gt;pcm_offset=granulepos;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(1);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&gt;=OPENED){</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!readp)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((ret=_get_next_page(vf,&amp;og,-1))&lt;0){</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EOF);<sp/></highlight><highlight class="comment">/*<sp/>eof.<sp/></highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leave<sp/>unitialized<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bitrate<sp/>tracking;<sp/>add<sp/>the<sp/>header&apos;s<sp/>bytes<sp/>here,<sp/>the<sp/>body<sp/>bytes</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>are<sp/>done<sp/>by<sp/>packet<sp/>above<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vf-&gt;bittrack+=og.header_len*8;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>has<sp/>our<sp/>decoding<sp/>just<sp/>traversed<sp/>a<sp/>bitstream<sp/>boundary?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state==INITSET){</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;current_serialno!=ogg_page_serialno(&amp;og)){</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!spanp)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EOF);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_decode_clear(vf);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!vf-&gt;seekable){</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_info_clear(vf-&gt;vi);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_comment_clear(vf-&gt;vc);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>we<sp/>need<sp/>to<sp/>load<sp/>a<sp/>new<sp/>machine<sp/>before<sp/>submitting<sp/>the<sp/>page?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>different<sp/>in<sp/>the<sp/>seekable<sp/>and<sp/>non-seekable<sp/>cases.<sp/><sp/></highlight></codeline>
<codeline lineno="574"><highlight class="comment"></highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>the<sp/>seekable<sp/>case,<sp/>we<sp/>already<sp/>have<sp/>all<sp/>the<sp/>header</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>information<sp/>loaded<sp/>and<sp/>cached;<sp/>we<sp/>just<sp/>initialize<sp/>the<sp/>machine</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>it<sp/>and<sp/>continue<sp/>on<sp/>our<sp/>merry<sp/>way.</highlight></codeline>
<codeline lineno="578"><highlight class="comment"></highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>the<sp/>non-seekable<sp/>(streaming)<sp/>case,<sp/>we&apos;ll<sp/>only<sp/>be<sp/>at<sp/>a</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boundary<sp/>if<sp/>we<sp/>just<sp/>left<sp/>the<sp/>previous<sp/>logical<sp/>bitstream<sp/>and</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>we&apos;re<sp/>now<sp/>nominally<sp/>at<sp/>the<sp/>header<sp/>of<sp/>the<sp/>next<sp/>bitstream</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state!=INITSET){<sp/></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>link;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&lt;STREAMSET){</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;seekable){</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vf-&gt;current_serialno=ogg_page_serialno(&amp;og);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>match<sp/>the<sp/>serialno<sp/>to<sp/>bitstream<sp/>section.<sp/><sp/>We<sp/>use<sp/>this<sp/>rather<sp/>than</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>positions<sp/>to<sp/>avoid<sp/>problems<sp/>near<sp/>logical<sp/>bitstream</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boundaries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(link=0;link&lt;vf-&gt;links;link++)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;serialnos[link]==vf-&gt;current_serialno)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(link==vf-&gt;links)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EBADLINK);<sp/></highlight><highlight class="comment">/*<sp/>sign<sp/>of<sp/>a<sp/>bogus</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream.<sp/><sp/>error<sp/>out,</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leave<sp/>machine</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uninitialized<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vf-&gt;current_link=link;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ogg_stream_reset_serialno(&amp;vf-&gt;os,vf-&gt;current_serialno);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vf-&gt;ready_state=STREAMSET;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we&apos;re<sp/>streaming<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fetch<sp/>the<sp/>three<sp/>header<sp/>packets,<sp/>build<sp/>the<sp/>info<sp/>struct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=_fetch_headers(vf,vf-&gt;vi,vf-&gt;vc,&amp;vf-&gt;current_serialno,&amp;og);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vf-&gt;current_link++;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>link=0;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=_make_decode_ready(vf);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret&lt;0)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_stream_pagein(&amp;vf-&gt;os,&amp;og);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>if,<sp/>eg,<sp/>64<sp/>bit<sp/>stdio<sp/>is<sp/>configured<sp/>by<sp/>default,<sp/>this<sp/>will<sp/>build<sp/>with</highlight></codeline>
<codeline lineno="627"><highlight class="comment"><sp/><sp/><sp/>fseek64<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_fseek64_wrap(FILE<sp/>*f,ogg_int64_t<sp/>off,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whence){</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(f==NULL)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fseek(f,off,whence);</highlight></codeline>
<codeline lineno="631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_ov_open1(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*f,<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*initial,</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ibytes,<sp/><ref refid="structov__callbacks" kindref="compound">ov_callbacks</ref><sp/>callbacks){</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offsettest=(f?callbacks.seek_func(f,0,SEEK_CUR):-1);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>memset(vf,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*vf));</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/>vf-&gt;datasource=f;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>vf-&gt;callbacks<sp/>=<sp/>callbacks;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>init<sp/>the<sp/>framing<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>ogg_sync_init(&amp;vf-&gt;oy);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>perhaps<sp/>some<sp/>data<sp/>was<sp/>previously<sp/>read<sp/>into<sp/>a<sp/>buffer<sp/>for<sp/>testing</highlight></codeline>
<codeline lineno="646"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>against<sp/>other<sp/>stream<sp/>types.<sp/><sp/>Allow<sp/>initialization<sp/>from<sp/>this</highlight></codeline>
<codeline lineno="647"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>previously<sp/>read<sp/>data<sp/>(as<sp/>we<sp/>may<sp/>be<sp/>reading<sp/>from<sp/>a<sp/>non-seekable</highlight></codeline>
<codeline lineno="648"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>stream)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(initial){</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer=ogg_sync_buffer(&amp;vf-&gt;oy,ibytes);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(buffer,initial,ibytes);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_sync_wrote(&amp;vf-&gt;oy,ibytes);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>can<sp/>we<sp/>seek?<sp/>Stevens<sp/>suggests<sp/>the<sp/>seek<sp/>test<sp/>was<sp/>portable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(offsettest!=-1)vf-&gt;seekable=1;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>seeking<sp/>yet;<sp/>Set<sp/>up<sp/>a<sp/>&apos;single&apos;<sp/>(current)<sp/>logical<sp/>bitstream</highlight></codeline>
<codeline lineno="659"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>entry<sp/>for<sp/>partial<sp/>open<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>vf-&gt;links=1;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>vf-&gt;vi=_ogg_calloc(vf-&gt;links,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*vf-&gt;vi));</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>vf-&gt;vc=_ogg_calloc(vf-&gt;links,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*vf-&gt;vc));</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/>ogg_stream_init(&amp;vf-&gt;os,-1);<sp/></highlight><highlight class="comment">/*<sp/>fill<sp/>in<sp/>the<sp/>serialno<sp/>later<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>to<sp/>fetch<sp/>the<sp/>headers,<sp/>maintaining<sp/>all<sp/>the<sp/>storage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((ret=_fetch_headers(vf,vf-&gt;vi,vf-&gt;vc,&amp;vf-&gt;current_serialno,NULL))&lt;0){</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;datasource=NULL;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>ov_clear(vf);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;ready_state=PARTOPEN;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="672"><highlight class="normal">}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_ov_open2(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf){</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state<sp/>!=<sp/>PARTOPEN)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OV_EINVAL;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>vf-&gt;ready_state=OPENED;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;seekable){</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=_open_seekable2(vf);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret){</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vf-&gt;datasource=NULL;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ov_clear(vf);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;ready_state=STREAMSET;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>clear<sp/>out<sp/>the<sp/>OggVorbis_File<sp/>struct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ov_clear(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf){</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf){</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_block_clear(&amp;vf-&gt;vb);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_dsp_clear(&amp;vf-&gt;vd);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_stream_clear(&amp;vf-&gt;os);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;vi<sp/>&amp;&amp;<sp/>vf-&gt;links){</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vf-&gt;links;i++){</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_info_clear(vf-&gt;vi+i);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_comment_clear(vf-&gt;vc+i);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_ogg_free(vf-&gt;vi);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_ogg_free(vf-&gt;vc);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;dataoffsets)_ogg_free(vf-&gt;dataoffsets);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;pcmlengths)_ogg_free(vf-&gt;pcmlengths);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;serialnos)_ogg_free(vf-&gt;serialnos);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;offsets)_ogg_free(vf-&gt;offsets);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_sync_clear(&amp;vf-&gt;oy);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;datasource)(vf-&gt;callbacks.close_func)(vf-&gt;datasource);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(vf,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*vf));</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_LEAKS</highlight></codeline>
<codeline lineno="716"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>_VDBG_dump();</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="718"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inspects<sp/>the<sp/>OggVorbis<sp/>file<sp/>and<sp/>finds/documents<sp/>all<sp/>the<sp/>logical</highlight></codeline>
<codeline lineno="722"><highlight class="comment"><sp/><sp/><sp/>bitstreams<sp/>contained<sp/>in<sp/>it.<sp/><sp/>Tries<sp/>to<sp/>be<sp/>tolerant<sp/>of<sp/>logical</highlight></codeline>
<codeline lineno="723"><highlight class="comment"><sp/><sp/><sp/>bitstream<sp/>sections<sp/>that<sp/>are<sp/>truncated/woogie.<sp/></highlight></codeline>
<codeline lineno="724"><highlight class="comment"></highlight></codeline>
<codeline lineno="725"><highlight class="comment"><sp/><sp/><sp/>return:<sp/>-1)<sp/>error</highlight></codeline>
<codeline lineno="726"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0)<sp/>OK</highlight></codeline>
<codeline lineno="727"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ov_open_callbacks(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*f,<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*initial,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ibytes,</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structov__callbacks" kindref="compound">ov_callbacks</ref><sp/>callbacks){</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=_ov_open1(f,vf,initial,ibytes,callbacks);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ov_open2(vf);</highlight></codeline>
<codeline lineno="734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ov_open(FILE<sp/>*f,<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*initial,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ibytes){</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><ref refid="structov__callbacks" kindref="compound">ov_callbacks</ref><sp/>callbacks<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>(size_t<sp/>(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/>size_t,<sp/>size_t,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*))<sp/><sp/>fread,</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>(int<sp/>(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/>ogg_int64_t,<sp/>int))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_fseek64_wrap,</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose,</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ftell</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/>return<sp/>ov_open_callbacks((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)f,<sp/>vf,<sp/>initial,<sp/>ibytes,<sp/>callbacks);</highlight></codeline>
<codeline lineno="745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>cheap<sp/>hack<sp/>for<sp/>game<sp/>usage<sp/>where<sp/>downsampling<sp/>is<sp/>desirable;<sp/>there&apos;s</highlight></codeline>
<codeline lineno="748"><highlight class="comment"><sp/><sp/><sp/>no<sp/>need<sp/>for<sp/>SRC<sp/>as<sp/>we<sp/>can<sp/>just<sp/>do<sp/>it<sp/>cheaply<sp/>in<sp/>libvorbis.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ov_halfrate(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag){</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;vi==NULL)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OV_EINVAL;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!vf-&gt;seekable)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OV_EINVAL;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&gt;=STREAMSET)</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>_decode_clear(vf);<sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>out<sp/>stream<sp/>state;<sp/>later<sp/>on<sp/>libvorbis</highlight></codeline>
<codeline lineno="756"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>be<sp/>able<sp/>to<sp/>swap<sp/>this<sp/>on<sp/>the<sp/>fly,<sp/>but</highlight></codeline>
<codeline lineno="757"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>now<sp/>dumping<sp/>the<sp/>decode<sp/>machine<sp/>is<sp/>needed</highlight></codeline>
<codeline lineno="758"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>reinit<sp/>the<sp/>MDCT<sp/>lookups.<sp/><sp/>1.1<sp/>libvorbis</highlight></codeline>
<codeline lineno="759"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>planned<sp/>to<sp/>be<sp/>able<sp/>to<sp/>switch<sp/>on<sp/>the<sp/>fly<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vf-&gt;links;i++){</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vorbis_synthesis_halfrate(vf-&gt;vi+i,flag)){</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ov_halfrate(vf,0);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OV_EINVAL;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ov_halfrate_p(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf){</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;vi==NULL)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OV_EINVAL;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vorbis_synthesis_halfrate_p(vf-&gt;vi);</highlight></codeline>
<codeline lineno="773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Only<sp/>partially<sp/>open<sp/>the<sp/>vorbis<sp/>file;<sp/>test<sp/>for<sp/>Vorbisness,<sp/>and<sp/>load</highlight></codeline>
<codeline lineno="776"><highlight class="comment"><sp/><sp/><sp/>the<sp/>headers<sp/>for<sp/>the<sp/>first<sp/>chain.<sp/><sp/>Do<sp/>not<sp/>seek<sp/>(although<sp/>test<sp/>for</highlight></codeline>
<codeline lineno="777"><highlight class="comment"><sp/><sp/><sp/>seekability).<sp/><sp/>Use<sp/>ov_test_open<sp/>to<sp/>finish<sp/>opening<sp/>the<sp/>file,<sp/>else</highlight></codeline>
<codeline lineno="778"><highlight class="comment"><sp/><sp/><sp/>ov_clear<sp/>to<sp/>close/free<sp/>it.<sp/>Same<sp/>return<sp/>codes<sp/>as<sp/>open.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ov_test_callbacks(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*f,<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*initial,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ibytes,</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structov__callbacks" kindref="compound">ov_callbacks</ref><sp/>callbacks)</highlight></codeline>
<codeline lineno="782"><highlight class="normal">{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ov_open1(f,vf,initial,ibytes,callbacks);</highlight></codeline>
<codeline lineno="784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ov_test(FILE<sp/>*f,<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*initial,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ibytes){</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><ref refid="structov__callbacks" kindref="compound">ov_callbacks</ref><sp/>callbacks<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>(size_t<sp/>(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/>size_t,<sp/>size_t,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*))<sp/><sp/>fread,</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>(int<sp/>(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/>ogg_int64_t,<sp/>int))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_fseek64_wrap,</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose,</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ftell</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>return<sp/>ov_test_callbacks((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)f,<sp/>vf,<sp/>initial,<sp/>ibytes,<sp/>callbacks);</highlight></codeline>
<codeline lineno="795"><highlight class="normal">}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ov_test_open(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf){</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state!=PARTOPEN)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ov_open2(vf);</highlight></codeline>
<codeline lineno="800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>How<sp/>many<sp/>logical<sp/>bitstreams<sp/>in<sp/>this<sp/>physical<sp/>bitstream?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ov_streams(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf){</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vf-&gt;links;</highlight></codeline>
<codeline lineno="805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Is<sp/>the<sp/>FILE<sp/>*<sp/>associated<sp/>with<sp/>vf<sp/>seekable?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ov_seekable(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf){</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vf-&gt;seekable;</highlight></codeline>
<codeline lineno="810"><highlight class="normal">}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>returns<sp/>the<sp/>bitrate<sp/>for<sp/>a<sp/>given<sp/>logical<sp/>bitstream<sp/>or<sp/>the<sp/>entire</highlight></codeline>
<codeline lineno="813"><highlight class="comment"><sp/><sp/><sp/>physical<sp/>bitstream.<sp/><sp/>If<sp/>the<sp/>file<sp/>is<sp/>open<sp/>for<sp/>random<sp/>access,<sp/>it<sp/>will</highlight></codeline>
<codeline lineno="814"><highlight class="comment"><sp/><sp/><sp/>find<sp/>the<sp/>*actual*<sp/>average<sp/>bitrate.<sp/><sp/>If<sp/>the<sp/>file<sp/>is<sp/>streaming,<sp/>it</highlight></codeline>
<codeline lineno="815"><highlight class="comment"><sp/><sp/><sp/>returns<sp/>the<sp/>nominal<sp/>bitrate<sp/>(if<sp/>set)<sp/>else<sp/>the<sp/>average<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="816"><highlight class="comment"><sp/><sp/><sp/>upper/lower<sp/>bounds<sp/>(if<sp/>set)<sp/>else<sp/>-1<sp/>(unset).</highlight></codeline>
<codeline lineno="817"><highlight class="comment"></highlight></codeline>
<codeline lineno="818"><highlight class="comment"><sp/><sp/><sp/>If<sp/>you<sp/>want<sp/>the<sp/>actual<sp/>bitrate<sp/>field<sp/>settings,<sp/>get<sp/>them<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="819"><highlight class="comment"><sp/><sp/><sp/>vorbis_info<sp/>structs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ov_bitrate(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i){</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&lt;OPENED)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i&gt;=vf-&gt;links)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!vf-&gt;seekable<sp/>&amp;&amp;<sp/>i!=0)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ov_bitrate(vf,0));</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i&lt;0){</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>bits=0;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>br;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vf-&gt;links;i++)</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bits+=(vf-&gt;offsets[i+1]-vf-&gt;dataoffsets[i])*8;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>once<sp/>read:<sp/>return(rint(bits/ov_TIME_Total(vf,-1)));</highlight></codeline>
<codeline lineno="832"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>gcc<sp/>3.x<sp/>on<sp/>x86<sp/>miscompiled<sp/>this<sp/>at<sp/>optimisation<sp/>level<sp/>2<sp/>and<sp/>above,</highlight></codeline>
<codeline lineno="833"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>so<sp/>this<sp/>is<sp/>slightly<sp/>transformed<sp/>to<sp/>make<sp/>it<sp/>work.</highlight></codeline>
<codeline lineno="834"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>br<sp/>=<sp/>bits/ov_TIME_Total(vf,-1);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(rint(br));</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;seekable){</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>actual<sp/>bitrate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(rint((vf-&gt;offsets[i+1]-vf-&gt;dataoffsets[i])*8/ov_TIME_Total(vf,i)));</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>nominal<sp/>if<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;vi[i].bitrate_nominal&gt;0){</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vf-&gt;vi[i].bitrate_nominal;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;vi[i].bitrate_upper&gt;0){</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;vi[i].bitrate_lower&gt;0){</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(vf-&gt;vi[i].bitrate_upper+vf-&gt;vi[i].bitrate_lower)/2;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vf-&gt;vi[i].bitrate_upper;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_FALSE);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal">}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>returns<sp/>the<sp/>actual<sp/>bitrate<sp/>since<sp/>last<sp/>call.<sp/><sp/>returns<sp/>-1<sp/>if<sp/>no</highlight></codeline>
<codeline lineno="860"><highlight class="comment"><sp/><sp/><sp/>additional<sp/>data<sp/>to<sp/>offer<sp/>since<sp/>last<sp/>call<sp/>(or<sp/>at<sp/>beginning<sp/>of<sp/>stream),</highlight></codeline>
<codeline lineno="861"><highlight class="comment"><sp/><sp/><sp/>EINVAL<sp/>if<sp/>stream<sp/>is<sp/>only<sp/>partially<sp/>open<sp/></highlight></codeline>
<codeline lineno="862"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ov_bitrate_instant(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf){</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>link=(vf-&gt;seekable?vf-&gt;current_link:0);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&lt;OPENED)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;samptrack==0)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_FALSE);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/>ret=vf-&gt;bittrack/vf-&gt;samptrack*vf-&gt;vi[link].rate+.5;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>vf-&gt;bittrack=0.f;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/>vf-&gt;samptrack=0.f;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Guess<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ov_serialnumber(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i){</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i&gt;=vf-&gt;links)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ov_serialnumber(vf,vf-&gt;links-1));</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!vf-&gt;seekable<sp/>&amp;&amp;<sp/>i&gt;=0)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ov_serialnumber(vf,-1));</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i&lt;0){</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(vf-&gt;current_serialno);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(vf-&gt;serialnos[i]);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>returns:<sp/>total<sp/>raw<sp/>(compressed)<sp/>length<sp/>of<sp/>content<sp/>if<sp/>i==-1</highlight></codeline>
<codeline lineno="886"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw<sp/>(compressed)<sp/>length<sp/>of<sp/>that<sp/>logical<sp/>bitstream<sp/>for<sp/>i==0<sp/>to<sp/>n</highlight></codeline>
<codeline lineno="887"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OV_EINVAL<sp/>if<sp/>the<sp/>stream<sp/>is<sp/>not<sp/>seekable<sp/>(we<sp/>can&apos;t<sp/>know<sp/>the<sp/>length)</highlight></codeline>
<codeline lineno="888"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>if<sp/>stream<sp/>is<sp/>only<sp/>partially<sp/>open</highlight></codeline>
<codeline lineno="889"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal">ogg_int64_t<sp/>ov_raw_total(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i){</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&lt;OPENED)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!vf-&gt;seekable<sp/>||<sp/>i&gt;=vf-&gt;links)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i&lt;0){</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>acc=0;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vf-&gt;links;i++)</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>acc+=ov_raw_total(vf,i);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(acc);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(vf-&gt;offsets[i+1]-vf-&gt;offsets[i]);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>returns:<sp/>total<sp/>PCM<sp/>length<sp/>(samples)<sp/>of<sp/>content<sp/>if<sp/>i==-1<sp/>PCM<sp/>length</highlight></codeline>
<codeline lineno="905"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(samples)<sp/>of<sp/>that<sp/>logical<sp/>bitstream<sp/>for<sp/>i==0<sp/>to<sp/>n</highlight></codeline>
<codeline lineno="906"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OV_EINVAL<sp/>if<sp/>the<sp/>stream<sp/>is<sp/>not<sp/>seekable<sp/>(we<sp/>can&apos;t<sp/>know<sp/>the</highlight></codeline>
<codeline lineno="907"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length)<sp/>or<sp/>only<sp/>partially<sp/>open<sp/></highlight></codeline>
<codeline lineno="908"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal">ogg_int64_t<sp/>ov_pcm_total(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i){</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&lt;OPENED)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!vf-&gt;seekable<sp/>||<sp/>i&gt;=vf-&gt;links)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i&lt;0){</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>acc=0;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vf-&gt;links;i++)</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>acc+=ov_pcm_total(vf,i);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(acc);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(vf-&gt;pcmlengths[i*2+1]);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>returns:<sp/>total<sp/>seconds<sp/>of<sp/>content<sp/>if<sp/>i==-1</highlight></codeline>
<codeline lineno="924"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seconds<sp/>in<sp/>that<sp/>logical<sp/>bitstream<sp/>for<sp/>i==0<sp/>to<sp/>n</highlight></codeline>
<codeline lineno="925"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OV_EINVAL<sp/>if<sp/>the<sp/>stream<sp/>is<sp/>not<sp/>seekable<sp/>(we<sp/>can&apos;t<sp/>know<sp/>the</highlight></codeline>
<codeline lineno="926"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length)<sp/>or<sp/>only<sp/>partially<sp/>open<sp/></highlight></codeline>
<codeline lineno="927"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ov_TIME_Total(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i){</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&lt;OPENED)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!vf-&gt;seekable<sp/>||<sp/>i&gt;=vf-&gt;links)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i&lt;0){</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>acc=0;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vf-&gt;links;i++)</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>acc+=ov_TIME_Total(vf,i);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(acc);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(vf-&gt;pcmlengths[i*2+1])/vf-&gt;vi[i].rate);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal">}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>seek<sp/>to<sp/>an<sp/>offset<sp/>relative<sp/>to<sp/>the<sp/>*compressed*<sp/>data.<sp/>This<sp/>also</highlight></codeline>
<codeline lineno="943"><highlight class="comment"><sp/><sp/><sp/>scans<sp/>packets<sp/>to<sp/>update<sp/>the<sp/>PCM<sp/>cursor.<sp/>It<sp/>will<sp/>cross<sp/>a<sp/>logical</highlight></codeline>
<codeline lineno="944"><highlight class="comment"><sp/><sp/><sp/>bitstream<sp/>boundary,<sp/>but<sp/>only<sp/>if<sp/>it<sp/>can&apos;t<sp/>get<sp/>any<sp/>packets<sp/>out<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="945"><highlight class="comment"><sp/><sp/><sp/>tail<sp/>of<sp/>the<sp/>bitstream<sp/>we<sp/>seek<sp/>to<sp/>(so<sp/>no<sp/>surprises).</highlight></codeline>
<codeline lineno="946"><highlight class="comment"></highlight></codeline>
<codeline lineno="947"><highlight class="comment"><sp/><sp/><sp/>returns<sp/>zero<sp/>on<sp/>success,<sp/>nonzero<sp/>on<sp/>failure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ov_raw_seek(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,ogg_int64_t<sp/>pos){</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><ref refid="structogg__stream__state" kindref="compound">ogg_stream_state</ref><sp/>work_os;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&lt;OPENED)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!vf-&gt;seekable)</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_ENOSEEK);<sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>dump<sp/>machine<sp/>if<sp/>we<sp/>can&apos;t<sp/>seek<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pos&lt;0<sp/>||<sp/>pos&gt;vf-&gt;end)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>yet<sp/>clear<sp/>out<sp/>decoding<sp/>machine<sp/>(if<sp/>it&apos;s<sp/>initialized),<sp/>in</highlight></codeline>
<codeline lineno="959"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>the<sp/>case<sp/>we&apos;re<sp/>in<sp/>the<sp/>same<sp/>link.<sp/><sp/>Restart<sp/>the<sp/>decode<sp/>lapping,<sp/>and</highlight></codeline>
<codeline lineno="960"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>let<sp/>_fetch_and_process_packet<sp/>deal<sp/>with<sp/>a<sp/>potential<sp/>bitstream</highlight></codeline>
<codeline lineno="961"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>boundary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/>vf-&gt;pcm_offset=-1;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/>ogg_stream_reset_serialno(&amp;vf-&gt;os,</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vf-&gt;current_serialno);<sp/></highlight><highlight class="comment">/*<sp/>must<sp/>set<sp/>serialno<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/>vorbis_synthesis_restart(&amp;vf-&gt;vd);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/>_seek_helper(vf,pos);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>need<sp/>to<sp/>make<sp/>sure<sp/>the<sp/>pcm_offset<sp/>is<sp/>set,<sp/>but<sp/>we<sp/>don&apos;t<sp/>want<sp/>to</highlight></codeline>
<codeline lineno="970"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>advance<sp/>the<sp/>raw<sp/>cursor<sp/>past<sp/>good<sp/>packets<sp/>just<sp/>to<sp/>get<sp/>to<sp/>the<sp/>first</highlight></codeline>
<codeline lineno="971"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>with<sp/>a<sp/>granulepos.<sp/><sp/>That&apos;s<sp/>not<sp/>equivalent<sp/>behavior<sp/>to<sp/>beginning</highlight></codeline>
<codeline lineno="972"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>decoding<sp/>as<sp/>immediately<sp/>after<sp/>the<sp/>seek<sp/>position<sp/>as<sp/>possible.</highlight></codeline>
<codeline lineno="973"><highlight class="comment"></highlight></codeline>
<codeline lineno="974"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>So,<sp/>a<sp/>hack.<sp/><sp/>We<sp/>use<sp/>two<sp/>stream<sp/>states;<sp/>a<sp/>local<sp/>scratch<sp/>state<sp/>and</highlight></codeline>
<codeline lineno="975"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>the<sp/>shared<sp/>vf-&gt;os<sp/>stream<sp/>state.<sp/><sp/>We<sp/>use<sp/>the<sp/>local<sp/>state<sp/>to</highlight></codeline>
<codeline lineno="976"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>scan,<sp/>and<sp/>the<sp/>shared<sp/>state<sp/>as<sp/>a<sp/>buffer<sp/>for<sp/>later<sp/>decode.<sp/></highlight></codeline>
<codeline lineno="977"><highlight class="comment"></highlight></codeline>
<codeline lineno="978"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Unfortuantely,<sp/>on<sp/>the<sp/>last<sp/>page<sp/>we<sp/>still<sp/>advance<sp/>to<sp/>last<sp/>packet</highlight></codeline>
<codeline lineno="979"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>because<sp/>the<sp/>granulepos<sp/>on<sp/>the<sp/>last<sp/>page<sp/>is<sp/>not<sp/>necessarily<sp/>on<sp/>a</highlight></codeline>
<codeline lineno="980"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>packet<sp/>boundary,<sp/>and<sp/>we<sp/>need<sp/>to<sp/>make<sp/>sure<sp/>the<sp/>granpos<sp/>is</highlight></codeline>
<codeline lineno="981"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>correct.<sp/></highlight></codeline>
<codeline lineno="982"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structogg__page" kindref="compound">ogg_page</ref><sp/>og;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structogg__packet" kindref="compound">ogg_packet</ref><sp/>op;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastblock=0;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>accblock=0;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thisblock;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eosflag;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_stream_init(&amp;work_os,vf-&gt;current_serialno);<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>memory<sp/>ready<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_stream_reset(&amp;work_os);<sp/></highlight><highlight class="comment">/*<sp/>eliminate<sp/>the<sp/>spurious<sp/>OV_HOLE</highlight></codeline>
<codeline lineno="994"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>from<sp/>not<sp/>necessarily</highlight></codeline>
<codeline lineno="995"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>starting<sp/>from<sp/>the<sp/>beginning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1){</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&gt;=STREAMSET){</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>snarf/scan<sp/>a<sp/>packet<sp/>if<sp/>we<sp/>can<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result=ogg_stream_packetout(&amp;work_os,&amp;op);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result&gt;0){</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;vi[vf-&gt;current_link].codec_setup){</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thisblock=vorbis_packet_blocksize(vf-&gt;vi+vf-&gt;current_link,&amp;op);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(thisblock&lt;0){</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ogg_stream_packetout(&amp;vf-&gt;os,NULL);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thisblock=0;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eosflag)</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ogg_stream_packetout(&amp;vf-&gt;os,NULL);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lastblock)accblock+=(lastblock+thisblock)&gt;&gt;2;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(op.granulepos!=-1){</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,link=vf-&gt;current_link;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>granulepos=op.granulepos-vf-&gt;pcmlengths[link*2];</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(granulepos&lt;0)granulepos=0;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;link;i++)</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>granulepos+=vf-&gt;pcmlengths[i*2+1];</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vf-&gt;pcm_offset=granulepos-accblock;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastblock=thisblock;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ogg_stream_packetout(&amp;vf-&gt;os,NULL);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!lastblock){</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_get_next_page(vf,&amp;og,-1)&lt;0){</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vf-&gt;pcm_offset=ov_pcm_total(vf,-1);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>huh?<sp/><sp/>Bogus<sp/>stream<sp/>with<sp/>packets<sp/>but<sp/>no<sp/>granulepos<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;pcm_offset=-1;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>has<sp/>our<sp/>decoding<sp/>just<sp/>traversed<sp/>a<sp/>bitstream<sp/>boundary?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&gt;=STREAMSET)</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;current_serialno!=ogg_page_serialno(&amp;og)){</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_decode_clear(vf);<sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>out<sp/>stream<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ogg_stream_clear(&amp;work_os);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&lt;STREAMSET){</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>link;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;current_serialno=ogg_page_serialno(&amp;og);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(link=0;link&lt;vf-&gt;links;link++)</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;serialnos[link]==vf-&gt;current_serialno)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(link==vf-&gt;links)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>seek_error;<sp/></highlight><highlight class="comment">/*<sp/>sign<sp/>of<sp/>a<sp/>bogus<sp/>stream.</highlight></codeline>
<codeline lineno="1059"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>out,<sp/>leave</highlight></codeline>
<codeline lineno="1060"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>machine<sp/>uninitialized<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;current_link=link;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_stream_reset_serialno(&amp;vf-&gt;os,vf-&gt;current_serialno);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_stream_reset_serialno(&amp;work_os,vf-&gt;current_serialno);<sp/></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;ready_state=STREAMSET;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ogg_stream_pagein(&amp;vf-&gt;os,&amp;og);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ogg_stream_pagein(&amp;work_os,&amp;og);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosflag=ogg_page_eos(&amp;og);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/>ogg_stream_clear(&amp;work_os);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/>vf-&gt;bittrack=0.f;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/>vf-&gt;samptrack=0.f;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/>seek_error:</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>dump<sp/>the<sp/>machine<sp/>so<sp/>we&apos;re<sp/>in<sp/>a<sp/>known<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/>vf-&gt;pcm_offset=-1;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/>ogg_stream_clear(&amp;work_os);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/>_decode_clear(vf);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OV_EBADLINK;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Page<sp/>granularity<sp/>seek<sp/>(faster<sp/>than<sp/>sample<sp/>granularity<sp/>because<sp/>we</highlight></codeline>
<codeline lineno="1089"><highlight class="comment"><sp/><sp/><sp/>don&apos;t<sp/>do<sp/>the<sp/>last<sp/>bit<sp/>of<sp/>decode<sp/>to<sp/>find<sp/>a<sp/>specific<sp/>sample).</highlight></codeline>
<codeline lineno="1090"><highlight class="comment"></highlight></codeline>
<codeline lineno="1091"><highlight class="comment"><sp/><sp/><sp/>Seek<sp/>to<sp/>the<sp/>last<sp/>[granule<sp/>marked]<sp/>page<sp/>preceeding<sp/>the<sp/>specified<sp/>pos</highlight></codeline>
<codeline lineno="1092"><highlight class="comment"><sp/><sp/><sp/>location,<sp/>such<sp/>that<sp/>decoding<sp/>past<sp/>the<sp/>returned<sp/>point<sp/>will<sp/>quickly</highlight></codeline>
<codeline lineno="1093"><highlight class="comment"><sp/><sp/><sp/>arrive<sp/>at<sp/>the<sp/>requested<sp/>position.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ov_pcm_seek_page(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,ogg_int64_t<sp/>pos){</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>link=-1;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/>ogg_int64_t<sp/>result=0;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/>ogg_int64_t<sp/>total=ov_pcm_total(vf,-1);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&lt;OPENED)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!vf-&gt;seekable)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_ENOSEEK);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pos&lt;0<sp/>||<sp/>pos&gt;total)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>which<sp/>bitstream<sp/>section<sp/>does<sp/>this<sp/>pcm<sp/>offset<sp/>occur<sp/>in?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(link=vf-&gt;links-1;link&gt;=0;link--){</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>total-=vf-&gt;pcmlengths[link*2+1];</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pos&gt;=total)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>search<sp/>within<sp/>the<sp/>logical<sp/>bitstream<sp/>for<sp/>the<sp/>page<sp/>with<sp/>the<sp/>highest</highlight></codeline>
<codeline lineno="1111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>pcm_pos<sp/>preceeding<sp/>(or<sp/>equal<sp/>to)<sp/>pos.<sp/><sp/>There<sp/>is<sp/>a<sp/>danger<sp/>here;</highlight></codeline>
<codeline lineno="1112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>missing<sp/>pages<sp/>or<sp/>incorrect<sp/>frame<sp/>number<sp/>information<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="1113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>bitstream<sp/>could<sp/>make<sp/>our<sp/>task<sp/>impossible.<sp/><sp/>Account<sp/>for<sp/>that<sp/>(it</highlight></codeline>
<codeline lineno="1114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>would<sp/>be<sp/>an<sp/>error<sp/>condition)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>new<sp/>search<sp/>algorithm<sp/>by<sp/>HB<sp/>(Nicholas<sp/>Vinen)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>end=vf-&gt;offsets[link+1];</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>begin=vf-&gt;offsets[link];</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>begintime<sp/>=<sp/>vf-&gt;pcmlengths[link*2];</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>endtime<sp/>=<sp/>vf-&gt;pcmlengths[link*2+1]+begintime;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>target=pos-total+begintime;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>best=begin;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structogg__page" kindref="compound">ogg_page</ref><sp/>og;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(begin&lt;end){</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>bisect;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(end-begin&lt;CHUNKSIZE){</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>bisect=begin;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>take<sp/>a<sp/>(pretty<sp/>decent)<sp/>guess.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/>bisect=begin<sp/>+<sp/></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(target-begintime)*(end-begin)/(endtime-begintime)<sp/>-<sp/>CHUNKSIZE;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bisect&lt;=begin)</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bisect=begin+1;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_seek_helper(vf,bisect);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(begin&lt;end){</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>result=_get_next_page(vf,&amp;og,end-vf-&gt;offset);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result==OV_EREAD)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>seek_error;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result&lt;0){</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bisect&lt;=begin+1)</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end=begin;<sp/></highlight><highlight class="comment">/*<sp/>found<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bisect==0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>seek_error;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bisect-=CHUNKSIZE;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bisect&lt;=begin)bisect=begin+1;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_seek_helper(vf,bisect);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>granulepos=ogg_page_granulepos(&amp;og);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(granulepos==-1)</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(granulepos&lt;target){</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best=result;<sp/><sp/></highlight><highlight class="comment">/*<sp/>raw<sp/>offset<sp/>of<sp/>packet<sp/>with<sp/>granulepos<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin=vf-&gt;offset;<sp/></highlight><highlight class="comment">/*<sp/>raw<sp/>offset<sp/>of<sp/>next<sp/>page<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begintime=granulepos;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(target-begintime&gt;44100)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bisect=begin;<sp/></highlight><highlight class="comment">/*<sp/>*not*<sp/>begin<sp/>+<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bisect&lt;=begin+1)</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end=begin;<sp/><sp/></highlight><highlight class="comment">/*<sp/>found<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(end==vf-&gt;offset){<sp/></highlight><highlight class="comment">/*<sp/>we&apos;re<sp/>pretty<sp/>close<sp/>-<sp/>we&apos;d<sp/>be<sp/>stuck<sp/>in<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end=result;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bisect-=CHUNKSIZE;<sp/></highlight><highlight class="comment">/*<sp/>an<sp/>endless<sp/>loop<sp/>otherwise.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bisect&lt;=begin)bisect=begin+1;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_seek_helper(vf,bisect);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end=result;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endtime=granulepos;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>found<sp/>our<sp/>page.<sp/>seek<sp/>to<sp/>it,<sp/>update<sp/>pcm<sp/>offset.<sp/>Easier<sp/>case<sp/>than</highlight></codeline>
<codeline lineno="1184"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_seek,<sp/>don&apos;t<sp/>keep<sp/>packets<sp/>preceeding<sp/>granulepos.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structogg__page" kindref="compound">ogg_page</ref><sp/>og;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structogg__packet" kindref="compound">ogg_packet</ref><sp/>op;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>seek<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_seek_helper(vf,best);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vf-&gt;pcm_offset=-1;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_get_next_page(vf,&amp;og,-1)&lt;0)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EOF);<sp/></highlight><highlight class="comment">/*<sp/>shouldn&apos;t<sp/>happen<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(link!=vf-&gt;current_link){</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Different<sp/>link;<sp/>dump<sp/>entire<sp/>decode<sp/>machine<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>_decode_clear(vf);<sp/><sp/></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;current_link=link;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;current_serialno=ogg_page_serialno(&amp;og);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;ready_state=STREAMSET;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_synthesis_restart(&amp;vf-&gt;vd);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ogg_stream_reset_serialno(&amp;vf-&gt;os,vf-&gt;current_serialno);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ogg_stream_pagein(&amp;vf-&gt;os,&amp;og);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pull<sp/>out<sp/>all<sp/>but<sp/>last<sp/>packet;<sp/>the<sp/>one<sp/>with<sp/>granulepos<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1){</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/>result=ogg_stream_packetpeek(&amp;vf-&gt;os,&amp;op);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result==0){</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>!!!<sp/>the<sp/>packet<sp/>finishing<sp/>this<sp/>page<sp/>originated<sp/>on<sp/>a</highlight></codeline>
<codeline lineno="1215"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preceeding<sp/>page.<sp/>Keep<sp/>fetching<sp/>previous<sp/>pages<sp/>until<sp/>we</highlight></codeline>
<codeline lineno="1216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get<sp/>one<sp/>with<sp/>a<sp/>granulepos<sp/>or<sp/>without<sp/>the<sp/>&apos;continued&apos;<sp/>flag</highlight></codeline>
<codeline lineno="1217"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set.<sp/><sp/>Then<sp/>just<sp/>use<sp/>raw_seek<sp/>for<sp/>simplicity.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_seek_helper(vf,best);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1){</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result=_get_prev_page(vf,&amp;og);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result&lt;0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>seek_error;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ogg_page_granulepos(&amp;og)&gt;-1<sp/>||</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!ogg_page_continued(&amp;og)){</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ov_raw_seek(vf,result);</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vf-&gt;offset=result;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result&lt;0){</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>OV_EBADPACKET;<sp/></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>seek_error;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(op.granulepos!=-1){</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vf-&gt;pcm_offset=op.granulepos-vf-&gt;pcmlengths[vf-&gt;current_link*2];</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;pcm_offset&lt;0)vf-&gt;pcm_offset=0;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vf-&gt;pcm_offset+=total;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result=ogg_stream_packetout(&amp;vf-&gt;os,NULL);</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>verify<sp/>result<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;pcm_offset&gt;pos<sp/>||<sp/>pos&gt;ov_pcm_total(vf,-1)){</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>result=OV_EFAULT;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>seek_error;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/>vf-&gt;bittrack=0.f;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/>vf-&gt;samptrack=0.f;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/>seek_error:</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>dump<sp/>machine<sp/>so<sp/>we&apos;re<sp/>in<sp/>a<sp/>known<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/>vf-&gt;pcm_offset=-1;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/>_decode_clear(vf);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)result;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>seek<sp/>to<sp/>a<sp/>sample<sp/>offset<sp/>relative<sp/>to<sp/>the<sp/>decompressed<sp/>pcm<sp/>stream<sp/></highlight></codeline>
<codeline lineno="1263"><highlight class="comment"><sp/><sp/><sp/>returns<sp/>zero<sp/>on<sp/>success,<sp/>nonzero<sp/>on<sp/>failure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ov_pcm_seek(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,ogg_int64_t<sp/>pos){</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thisblock,lastblock=0;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=ov_pcm_seek_page(vf,pos);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret&lt;0)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((ret=_make_decode_ready(vf)))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>discard<sp/>leading<sp/>packets<sp/>we<sp/>don&apos;t<sp/>need<sp/>for<sp/>the<sp/>lapping<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="1272"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>position<sp/>we<sp/>want;<sp/>don&apos;t<sp/>decode<sp/>them<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1){</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structogg__packet" kindref="compound">ogg_packet</ref><sp/>op;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structogg__page" kindref="compound">ogg_page</ref><sp/>og;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=ogg_stream_packetpeek(&amp;vf-&gt;os,&amp;op);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret&gt;0){</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thisblock=vorbis_packet_blocksize(vf-&gt;vi+vf-&gt;current_link,&amp;op);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(thisblock&lt;0){</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_stream_packetout(&amp;vf-&gt;os,NULL);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>non<sp/>audio<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lastblock)vf-&gt;pcm_offset+=(lastblock+thisblock)&gt;&gt;2;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;pcm_offset+((thisblock+</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_info_blocksize(vf-&gt;vi,1))&gt;&gt;2)&gt;=pos)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>the<sp/>packet<sp/>from<sp/>packet<sp/>queue<sp/>and<sp/>track<sp/>its<sp/>granulepos<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ogg_stream_packetout(&amp;vf-&gt;os,NULL);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_synthesis_trackonly(&amp;vf-&gt;vb,&amp;op);<sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>up<sp/>a<sp/>vb<sp/>with</highlight></codeline>
<codeline lineno="1293"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>only<sp/>tracking,<sp/>no</highlight></codeline>
<codeline lineno="1294"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcm_decode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_synthesis_blockin(&amp;vf-&gt;vd,&amp;vf-&gt;vb);<sp/></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>logical<sp/>stream<sp/>case<sp/>is<sp/>hard,<sp/>especially<sp/>with<sp/>exact</highlight></codeline>
<codeline lineno="1298"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>length<sp/>positioning.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(op.granulepos&gt;-1){</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>always<sp/>believe<sp/>the<sp/>stream<sp/>markers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;pcm_offset=op.granulepos-vf-&gt;pcmlengths[vf-&gt;current_link*2];</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;pcm_offset&lt;0)vf-&gt;pcm_offset=0;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vf-&gt;current_link;i++)</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vf-&gt;pcm_offset+=vf-&gt;pcmlengths[i*2+1];</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastblock=thisblock;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret&lt;0<sp/>&amp;&amp;<sp/>ret!=OV_HOLE)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>suck<sp/>in<sp/>a<sp/>new<sp/>page<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_get_next_page(vf,&amp;og,-1)&lt;0)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;current_serialno!=ogg_page_serialno(&amp;og))_decode_clear(vf);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&lt;STREAMSET){</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>link;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;current_serialno=ogg_page_serialno(&amp;og);</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(link=0;link&lt;vf-&gt;links;link++)</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;serialnos[link]==vf-&gt;current_serialno)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(link==vf-&gt;links)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EBADLINK);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;current_link=link;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_stream_reset_serialno(&amp;vf-&gt;os,vf-&gt;current_serialno);<sp/></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;ready_state=STREAMSET;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>ret=_make_decode_ready(vf);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/>lastblock=0;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ogg_stream_pagein(&amp;vf-&gt;os,&amp;og);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/>vf-&gt;bittrack=0.f;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/>vf-&gt;samptrack=0.f;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>discard<sp/>samples<sp/>until<sp/>we<sp/>reach<sp/>the<sp/>desired<sp/>position.<sp/>Crossing<sp/>a</highlight></codeline>
<codeline lineno="1341"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>logical<sp/>bitstream<sp/>boundary<sp/>with<sp/>abandon<sp/>is<sp/>OK.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(vf-&gt;pcm_offset&lt;pos){</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>target=pos-vf-&gt;pcm_offset;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>samples=vorbis_synthesis_pcmout(&amp;vf-&gt;vd,NULL);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(samples&gt;target)samples=target;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_synthesis_read(&amp;vf-&gt;vd,samples);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;pcm_offset+=samples;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(samples&lt;target)</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_fetch_and_process_packet(vf,NULL,1,1)&lt;=0)</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;pcm_offset=ov_pcm_total(vf,-1);<sp/></highlight><highlight class="comment">/*<sp/>eof<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>seek<sp/>to<sp/>a<sp/>playback<sp/>time<sp/>relative<sp/>to<sp/>the<sp/>decompressed<sp/>pcm<sp/>stream<sp/></highlight></codeline>
<codeline lineno="1358"><highlight class="comment"><sp/><sp/><sp/>returns<sp/>zero<sp/>on<sp/>success,<sp/>nonzero<sp/>on<sp/>failure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ov_time_seek(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>seconds){</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>translate<sp/>time<sp/>to<sp/>PCM<sp/>position<sp/>and<sp/>call<sp/>ov_pcm_seek<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>link=-1;</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/>ogg_int64_t<sp/>pcm_total=ov_pcm_total(vf,-1);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TIME_Total=ov_TIME_Total(vf,-1);</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&lt;OPENED)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!vf-&gt;seekable)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_ENOSEEK);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(seconds&lt;0<sp/>||<sp/>seconds&gt;TIME_Total)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>which<sp/>bitstream<sp/>section<sp/>does<sp/>this<sp/>time<sp/>offset<sp/>occur<sp/>in?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(link=vf-&gt;links-1;link&gt;=0;link--){</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>pcm_total-=vf-&gt;pcmlengths[link*2+1];</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/>TIME_Total-=ov_TIME_Total(vf,link);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(seconds&gt;=TIME_Total)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>enough<sp/>information<sp/>to<sp/>convert<sp/>time<sp/>offset<sp/>to<sp/>pcm<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>target=pcm_total+(seconds-TIME_Total)*vf-&gt;vi[link].rate;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ov_pcm_seek(vf,target));</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>page-granularity<sp/>version<sp/>of<sp/>ov_time_seek<sp/></highlight></codeline>
<codeline lineno="1385"><highlight class="comment"><sp/><sp/><sp/>returns<sp/>zero<sp/>on<sp/>success,<sp/>nonzero<sp/>on<sp/>failure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ov_time_seek_page(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>seconds){</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>translate<sp/>time<sp/>to<sp/>PCM<sp/>position<sp/>and<sp/>call<sp/>ov_pcm_seek<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>link=-1;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/>ogg_int64_t<sp/>pcm_total=ov_pcm_total(vf,-1);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TIME_Total=ov_TIME_Total(vf,-1);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&lt;OPENED)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!vf-&gt;seekable)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_ENOSEEK);</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(seconds&lt;0<sp/>||<sp/>seconds&gt;TIME_Total)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>which<sp/>bitstream<sp/>section<sp/>does<sp/>this<sp/>time<sp/>offset<sp/>occur<sp/>in?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(link=vf-&gt;links-1;link&gt;=0;link--){</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/>pcm_total-=vf-&gt;pcmlengths[link*2+1];</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/>TIME_Total-=ov_TIME_Total(vf,link);</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(seconds&gt;=TIME_Total)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>enough<sp/>information<sp/>to<sp/>convert<sp/>time<sp/>offset<sp/>to<sp/>pcm<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>target=pcm_total+(seconds-TIME_Total)*vf-&gt;vi[link].rate;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ov_pcm_seek_page(vf,target));</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>tell<sp/>the<sp/>current<sp/>stream<sp/>offset<sp/>cursor.<sp/><sp/>Note<sp/>that<sp/>seek<sp/>followed<sp/>by</highlight></codeline>
<codeline lineno="1412"><highlight class="comment"><sp/><sp/><sp/>tell<sp/>will<sp/>likely<sp/>not<sp/>give<sp/>the<sp/>set<sp/>offset<sp/>due<sp/>to<sp/>caching<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal">ogg_int64_t<sp/>ov_raw_tell(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf){</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&lt;OPENED)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(vf-&gt;offset);</highlight></codeline>
<codeline lineno="1416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>return<sp/>PCM<sp/>offset<sp/>(sample)<sp/>of<sp/>next<sp/>PCM<sp/>sample<sp/>to<sp/>be<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal">ogg_int64_t<sp/>ov_pcm_tell(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf){</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&lt;OPENED)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(vf-&gt;pcm_offset);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>return<sp/>time<sp/>offset<sp/>(seconds)<sp/>of<sp/>next<sp/>PCM<sp/>sample<sp/>to<sp/>be<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ov_TIME_Tell(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf){</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>link=0;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/>ogg_int64_t<sp/>pcm_total=0;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TIME_Total=0.f;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&lt;OPENED)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;seekable){</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>pcm_total=ov_pcm_total(vf,-1);</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/>TIME_Total=ov_TIME_Total(vf,-1);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>which<sp/>bitstream<sp/>section<sp/>does<sp/>this<sp/>time<sp/>offset<sp/>occur<sp/>in?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(link=vf-&gt;links-1;link&gt;=0;link--){</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pcm_total-=vf-&gt;pcmlengths[link*2+1];</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TIME_Total-=ov_TIME_Total(vf,link);</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;pcm_offset&gt;=pcm_total)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)TIME_Total+(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(vf-&gt;pcm_offset-pcm_total)/vf-&gt;vi[link].rate);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>link:<sp/><sp/><sp/>-1)<sp/>return<sp/>the<sp/>vorbis_info<sp/>struct<sp/>for<sp/>the<sp/>bitstream<sp/>section</highlight></codeline>
<codeline lineno="1447"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currently<sp/>being<sp/>decoded</highlight></codeline>
<codeline lineno="1448"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-n)<sp/>to<sp/>request<sp/>information<sp/>for<sp/>a<sp/>specific<sp/>bitstream<sp/>section</highlight></codeline>
<codeline lineno="1449"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1450"><highlight class="comment"><sp/><sp/><sp/><sp/>In<sp/>the<sp/>case<sp/>of<sp/>a<sp/>non-seekable<sp/>bitstream,<sp/>any<sp/>call<sp/>returns<sp/>the</highlight></codeline>
<codeline lineno="1451"><highlight class="comment"><sp/><sp/><sp/><sp/>current<sp/>bitstream.<sp/><sp/>NULL<sp/>in<sp/>the<sp/>case<sp/>that<sp/>the<sp/>machine<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="1452"><highlight class="comment"><sp/><sp/><sp/><sp/>initialized<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*ov_info(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>link){</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;seekable){</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(link&lt;0)</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&gt;=STREAMSET)</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vf-&gt;vi+vf-&gt;current_link;</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vf-&gt;vi;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(link&gt;=vf-&gt;links)</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vf-&gt;vi+link;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vf-&gt;vi;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>grr,<sp/>strong<sp/>typing,<sp/>grr,<sp/>no<sp/>templates/inheritence,<sp/>grr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref><sp/>*ov_comment(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>link){</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;seekable){</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(link&lt;0)</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&gt;=STREAMSET)</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vf-&gt;vc+vf-&gt;current_link;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vf-&gt;vc;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(link&gt;=vf-&gt;links)</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vf-&gt;vc+link;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vf-&gt;vc;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>host_is_big_endian()<sp/>{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/>ogg_int32_t<sp/>pattern<sp/>=<sp/>0xfeedface;<sp/></highlight><highlight class="comment">/*<sp/>deadbeef<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bytewise<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;pattern;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytewise[0]<sp/>==<sp/>0xfe)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>up<sp/>to<sp/>this<sp/>point,<sp/>everything<sp/>could<sp/>more<sp/>or<sp/>less<sp/>hide<sp/>the<sp/>multiple</highlight></codeline>
<codeline lineno="1497"><highlight class="comment"><sp/><sp/><sp/>logical<sp/>bitstream<sp/>nature<sp/>of<sp/>chaining<sp/>from<sp/>the<sp/>toplevel<sp/>application</highlight></codeline>
<codeline lineno="1498"><highlight class="comment"><sp/><sp/><sp/>if<sp/>the<sp/>toplevel<sp/>application<sp/>didn&apos;t<sp/>particularly<sp/>care.<sp/><sp/>However,<sp/>at</highlight></codeline>
<codeline lineno="1499"><highlight class="comment"><sp/><sp/><sp/>the<sp/>point<sp/>that<sp/>we<sp/>actually<sp/>read<sp/>audio<sp/>back,<sp/>the<sp/>multiple-section</highlight></codeline>
<codeline lineno="1500"><highlight class="comment"><sp/><sp/><sp/>nature<sp/>must<sp/>surface:<sp/>Multiple<sp/>bitstream<sp/>sections<sp/>do<sp/>not<sp/>necessarily</highlight></codeline>
<codeline lineno="1501"><highlight class="comment"><sp/><sp/><sp/>have<sp/>to<sp/>have<sp/>the<sp/>same<sp/>number<sp/>of<sp/>channels<sp/>or<sp/>sampling<sp/>rate.</highlight></codeline>
<codeline lineno="1502"><highlight class="comment"></highlight></codeline>
<codeline lineno="1503"><highlight class="comment"><sp/><sp/><sp/>ov_read<sp/>returns<sp/>the<sp/>sequential<sp/>logical<sp/>bitstream<sp/>number<sp/>currently</highlight></codeline>
<codeline lineno="1504"><highlight class="comment"><sp/><sp/><sp/>being<sp/>decoded<sp/>along<sp/>with<sp/>the<sp/>PCM<sp/>data<sp/>in<sp/>order<sp/>that<sp/>the<sp/>toplevel</highlight></codeline>
<codeline lineno="1505"><highlight class="comment"><sp/><sp/><sp/>application<sp/>can<sp/>take<sp/>action<sp/>on<sp/>channel/sample<sp/>rate<sp/>changes.<sp/><sp/>This</highlight></codeline>
<codeline lineno="1506"><highlight class="comment"><sp/><sp/><sp/>number<sp/>will<sp/>be<sp/>incremented<sp/>even<sp/>for<sp/>streamed<sp/>(non-seekable)<sp/>streams</highlight></codeline>
<codeline lineno="1507"><highlight class="comment"><sp/><sp/><sp/>(for<sp/>seekable<sp/>streams,<sp/>it<sp/>represents<sp/>the<sp/>actual<sp/>logical<sp/>bitstream</highlight></codeline>
<codeline lineno="1508"><highlight class="comment"><sp/><sp/><sp/>index<sp/>within<sp/>the<sp/>physical<sp/>bitstream.<sp/><sp/>Note<sp/>that<sp/>the<sp/>accessor</highlight></codeline>
<codeline lineno="1509"><highlight class="comment"><sp/><sp/><sp/>functions<sp/>above<sp/>are<sp/>aware<sp/>of<sp/>this<sp/>dichotomy).</highlight></codeline>
<codeline lineno="1510"><highlight class="comment"></highlight></codeline>
<codeline lineno="1511"><highlight class="comment"><sp/><sp/><sp/>input<sp/>values:<sp/>buffer)<sp/>a<sp/>buffer<sp/>to<sp/>hold<sp/>packed<sp/>PCM<sp/>data<sp/>for<sp/>return</highlight></codeline>
<codeline lineno="1512"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length)<sp/>the<sp/>byte<sp/>length<sp/>requested<sp/>to<sp/>be<sp/>placed<sp/>into<sp/>buffer</highlight></codeline>
<codeline lineno="1513"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bigendianp)<sp/>should<sp/>the<sp/>data<sp/>be<sp/>packed<sp/>LSB<sp/>first<sp/>(0)<sp/>or</highlight></codeline>
<codeline lineno="1514"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MSB<sp/>first<sp/>(1)</highlight></codeline>
<codeline lineno="1515"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word)<sp/>word<sp/>size<sp/>for<sp/>output.<sp/><sp/>currently<sp/>1<sp/>(byte)<sp/>or<sp/></highlight></codeline>
<codeline lineno="1516"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>(16<sp/>bit<sp/>short)</highlight></codeline>
<codeline lineno="1517"><highlight class="comment"></highlight></codeline>
<codeline lineno="1518"><highlight class="comment"><sp/><sp/><sp/>return<sp/>values:<sp/>&lt;0)<sp/>error/hole<sp/>in<sp/>data<sp/>(OV_HOLE),<sp/>partial<sp/>open<sp/>(OV_EINVAL)</highlight></codeline>
<codeline lineno="1519"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0)<sp/>EOF</highlight></codeline>
<codeline lineno="1520"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n)<sp/>number<sp/>of<sp/>bytes<sp/>of<sp/>PCM<sp/>actually<sp/>returned.<sp/><sp/>The</highlight></codeline>
<codeline lineno="1521"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>below<sp/>works<sp/>on<sp/>a<sp/>packet-by-packet<sp/>basis,<sp/>so<sp/>the</highlight></codeline>
<codeline lineno="1522"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>length<sp/>is<sp/>not<sp/>related<sp/>to<sp/>the<sp/>&apos;length&apos;<sp/>passed</highlight></codeline>
<codeline lineno="1523"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in,<sp/>just<sp/>guaranteed<sp/>to<sp/>fit.</highlight></codeline>
<codeline lineno="1524"><highlight class="comment"></highlight></codeline>
<codeline lineno="1525"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*section)<sp/>set<sp/>to<sp/>the<sp/>logical<sp/>bitstream<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ov_read(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length,</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bigendianp,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>word,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sgned,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*bitstream){</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>host_endian<sp/>=<sp/>host_is_big_endian();</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>**pcm;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>samples;</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&lt;OPENED)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1){</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state==INITSET){</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>samples=vorbis_synthesis_pcmout(&amp;vf-&gt;vd,&amp;pcm);</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(samples)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>suck<sp/>in<sp/>another<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=_fetch_and_process_packet(vf,NULL,1,1);</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret==OV_EOF)</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret&lt;=0)</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(samples&gt;0){</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>yay!<sp/>proceed<sp/>to<sp/>pack<sp/>data<sp/>into<sp/>the<sp/>byte<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>channels=ov_info(vf,-1)-&gt;channels;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>bytespersample=word<sp/>*<sp/>channels;</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_fpu_control<sp/>fpu;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(samples&gt;length/bytespersample)samples=length/bytespersample;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(samples<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OV_EINVAL;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>a<sp/>tight<sp/>loop<sp/>to<sp/>pack<sp/>each<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(word==1){</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off=(sgned?0:128);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_fpu_setround(&amp;fpu);</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;samples;j++)</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;channels;i++){</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val=vorbis_ftoi(pcm[i][j]*128.f);</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(val&gt;127)val=127;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(val&lt;-128)val=-128;</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buffer++=val+off;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_fpu_restore(fpu);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>off=(sgned?0:32768);</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(host_endian==bigendianp){</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sgned){</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_fpu_setround(&amp;fpu);</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;channels;i++)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>It&apos;s<sp/>faster<sp/>in<sp/>this<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*src=pcm[i];</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*dest=((</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)buffer)+i;</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;samples;j++)<sp/>{</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val=vorbis_ftoi(src[j]*32768.f);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(val&gt;32767)val=32767;</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(val&lt;-32768)val=-32768;</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dest=val;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest+=channels;</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_fpu_restore(fpu);</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_fpu_setround(&amp;fpu);</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;channels;i++)<sp/>{</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*src=pcm[i];</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*dest=((</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)buffer)+i;</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;samples;j++)<sp/>{</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val=vorbis_ftoi(src[j]*32768.f);</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(val&gt;32767)val=32767;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(val&lt;-32768)val=-32768;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dest=val+off;</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest+=channels;</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_fpu_restore(fpu);</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bigendianp){</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_fpu_setround(&amp;fpu);</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;samples;j++)</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;channels;i++){</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val=vorbis_ftoi(pcm[i][j]*32768.f);</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(val&gt;32767)val=32767;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(val&lt;-32768)val=-32768;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val+=off;</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buffer++=(val&gt;&gt;8);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buffer++=(val&amp;0xff);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_fpu_restore(fpu);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_fpu_setround(&amp;fpu);</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;samples;j++)</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;channels;i++){</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val=vorbis_ftoi(pcm[i][j]*32768.f);</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(val&gt;32767)val=32767;</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(val&lt;-32768)val=-32768;</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val+=off;</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buffer++=(val&amp;0xff);</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buffer++=(val&gt;&gt;8);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_fpu_restore(fpu);<sp/><sp/></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_synthesis_read(&amp;vf-&gt;vd,samples);</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;pcm_offset+=samples;</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bitstream)*bitstream=vf-&gt;current_link;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(samples*bytespersample);</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(samples);</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>input<sp/>values:<sp/>pcm_channels)<sp/>a<sp/>float<sp/>vector<sp/>per<sp/>channel<sp/>of<sp/>output</highlight></codeline>
<codeline lineno="1659"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length)<sp/>the<sp/>sample<sp/>length<sp/>being<sp/>read<sp/>by<sp/>the<sp/>app</highlight></codeline>
<codeline lineno="1660"><highlight class="comment"></highlight></codeline>
<codeline lineno="1661"><highlight class="comment"><sp/><sp/><sp/>return<sp/>values:<sp/>&lt;0)<sp/>error/hole<sp/>in<sp/>data<sp/>(OV_HOLE),<sp/>partial<sp/>open<sp/>(OV_EINVAL)</highlight></codeline>
<codeline lineno="1662"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0)<sp/>EOF</highlight></codeline>
<codeline lineno="1663"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n)<sp/>number<sp/>of<sp/>samples<sp/>of<sp/>PCM<sp/>actually<sp/>returned.<sp/><sp/>The</highlight></codeline>
<codeline lineno="1664"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>below<sp/>works<sp/>on<sp/>a<sp/>packet-by-packet<sp/>basis,<sp/>so<sp/>the</highlight></codeline>
<codeline lineno="1665"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>length<sp/>is<sp/>not<sp/>related<sp/>to<sp/>the<sp/>&apos;length&apos;<sp/>passed</highlight></codeline>
<codeline lineno="1666"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in,<sp/>just<sp/>guaranteed<sp/>to<sp/>fit.</highlight></codeline>
<codeline lineno="1667"><highlight class="comment"></highlight></codeline>
<codeline lineno="1668"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*section)<sp/>set<sp/>to<sp/>the<sp/>logical<sp/>bitstream<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ov_read_float(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>***pcm_channels,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length,</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*bitstream){</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&lt;OPENED)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1){</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state==INITSET){</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>**pcm;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>samples=vorbis_synthesis_pcmout(&amp;vf-&gt;vd,&amp;pcm);</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(samples){</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pcm_channels)*pcm_channels=pcm;</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(samples&gt;length)samples=length;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/>vorbis_synthesis_read(&amp;vf-&gt;vd,samples);</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/>vf-&gt;pcm_offset+=samples;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bitstream)*bitstream=vf-&gt;current_link;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>samples;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>suck<sp/>in<sp/>another<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=_fetch_and_process_packet(vf,NULL,1,1);</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret==OV_EOF)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret&lt;=0)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1700"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*vorbis_window(<ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/>*v,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>W);</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_analysis_output_always(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*base,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*v,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bark,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dB,</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ogg_int64_t<sp/>off);</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_ov_splice(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>**pcm,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>**lappcm,</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n2,</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch2,</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*w1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*w2){</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*w=w1;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n=n1;</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n1&gt;n2){</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/>n=n2;</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/>w=w2;</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>splice<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;ch1<sp/>&amp;&amp;<sp/>j&lt;ch2;j++){</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*s=lappcm[j];</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*d=pcm[j];</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;i++){</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wd=w[i]*w[i];</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ws=1.-wd;</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d[i]=d[i]*wd<sp/>+<sp/>s[i]*ws;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>window<sp/>from<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;j&lt;ch2;j++){</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*d=pcm[j];</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;i++){</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wd=w[i]*w[i];</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d[i]=d[i]*wd;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>vf<sp/>is<sp/>INITSET<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_ov_initset(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf){</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1){</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state==INITSET)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>suck<sp/>in<sp/>another<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=_fetch_and_process_packet(vf,NULL,1,0);</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret&lt;0<sp/>&amp;&amp;<sp/>ret!=OV_HOLE)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>vf<sp/>is<sp/>INITSET<sp/>and<sp/>that<sp/>we<sp/>have<sp/>a<sp/>primed<sp/>buffer;<sp/>if</highlight></codeline>
<codeline lineno="1755"><highlight class="comment"><sp/><sp/><sp/>we&apos;re<sp/>crosslapping<sp/>at<sp/>a<sp/>stream<sp/>section<sp/>boundary,<sp/>this<sp/>also<sp/>makes</highlight></codeline>
<codeline lineno="1756"><highlight class="comment"><sp/><sp/><sp/>sure<sp/>we&apos;re<sp/>sanity<sp/>checking<sp/>against<sp/>the<sp/>right<sp/>stream<sp/>information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_ov_initprime(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf){</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/>*vd=&amp;vf-&gt;vd;</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1){</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state==INITSET)</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vorbis_synthesis_pcmout(vd,NULL))</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>suck<sp/>in<sp/>another<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=_fetch_and_process_packet(vf,NULL,1,0);</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret&lt;0<sp/>&amp;&amp;<sp/>ret!=OV_HOLE)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>grab<sp/>enough<sp/>data<sp/>for<sp/>lapping<sp/>from<sp/>vf;<sp/>this<sp/>may<sp/>be<sp/>in<sp/>the<sp/>form<sp/>of</highlight></codeline>
<codeline lineno="1773"><highlight class="comment"><sp/><sp/><sp/>unreturned,<sp/>already-decoded<sp/>pcm,<sp/>remaining<sp/>PCM<sp/>we<sp/>will<sp/>need<sp/>to</highlight></codeline>
<codeline lineno="1774"><highlight class="comment"><sp/><sp/><sp/>decode,<sp/>or<sp/>synthetic<sp/>postextrapolation<sp/>from<sp/>last<sp/>packets.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_ov_getlap(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi,<ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/>*vd,</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>**lappcm,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lapsize){</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lapcount=0,i;</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>**pcm;</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>try<sp/>first<sp/>to<sp/>decode<sp/>the<sp/>lapping<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(lapcount&lt;lapsize){</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>samples=vorbis_synthesis_pcmout(vd,&amp;pcm);</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(samples){</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(samples&gt;lapsize-lapcount)samples=lapsize-lapcount;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vi-&gt;channels;i++)</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(lappcm[i]+lapcount,pcm[i],</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**pcm)*samples);</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lapcount+=samples;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_synthesis_read(vd,samples);</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>suck<sp/>in<sp/>another<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=_fetch_and_process_packet(vf,NULL,1,0);<sp/></highlight><highlight class="comment">/*<sp/>do<sp/>*not*<sp/>span<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret==OV_EOF)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lapcount&lt;lapsize){</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>failed<sp/>to<sp/>get<sp/>lapping<sp/>data<sp/>from<sp/>normal<sp/>decode;<sp/>pry<sp/>it<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="1797"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>postextrapolation<sp/>buffering,<sp/>or<sp/>the<sp/>second<sp/>half<sp/>of<sp/>the<sp/>MDCT</highlight></codeline>
<codeline lineno="1798"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>the<sp/>last<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>samples=vorbis_synthesis_lapout(&amp;vf-&gt;vd,&amp;pcm);</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(samples==0){</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vi-&gt;channels;i++)</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(lappcm[i]+lapcount,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**pcm)*lapsize-lapcount);</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lapcount=lapsize;</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(samples&gt;lapsize-lapcount)samples=lapsize-lapcount;</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vi-&gt;channels;i++)</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(lappcm[i]+lapcount,pcm[i],</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**pcm)*samples);</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lapcount+=samples;</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1811"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>sets<sp/>up<sp/>crosslapping<sp/>of<sp/>a<sp/>sample<sp/>by<sp/>using<sp/>trailing<sp/>data<sp/>from</highlight></codeline>
<codeline lineno="1814"><highlight class="comment"><sp/><sp/><sp/>sample<sp/>1<sp/>and<sp/>lapping<sp/>it<sp/>into<sp/>the<sp/>windowing<sp/>buffer<sp/>of<sp/>sample<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ov_crosslap(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf1,<sp/><ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf2){</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi1,*vi2;</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>**lappcm;</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>**pcm;</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*w1,*w2;</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n1,n2,i,ret,hs1,hs2;</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf1==vf2)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);<sp/></highlight><highlight class="comment">/*<sp/>degenerate<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf1-&gt;ready_state&lt;OPENED)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf2-&gt;ready_state&lt;OPENED)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>relevant<sp/>overlap<sp/>buffers<sp/>must<sp/>be<sp/>pre-checked<sp/>and<sp/>pre-primed</highlight></codeline>
<codeline lineno="1827"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>before<sp/>looking<sp/>at<sp/>settings<sp/>in<sp/>the<sp/>event<sp/>that<sp/>priming<sp/>would<sp/>cross</highlight></codeline>
<codeline lineno="1828"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>a<sp/>bitstream<sp/>boundary.<sp/><sp/>So,<sp/>do<sp/>it<sp/>now<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/>ret=_ov_initset(vf1);</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/>ret=_ov_initprime(vf2);</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/>vi1=ov_info(vf1,-1);</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/>vi2=ov_info(vf2,-1);</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/>hs1=ov_halfrate_p(vf1);</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/>hs2=ov_halfrate_p(vf2);</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/>lappcm=alloca(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*lappcm)*vi1-&gt;channels);</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/>n1=vorbis_info_blocksize(vi1,0)&gt;&gt;(1+hs1);</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/>n2=vorbis_info_blocksize(vi2,0)&gt;&gt;(1+hs2);</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/>w1=vorbis_window(&amp;vf1-&gt;vd,0);</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/>w2=vorbis_window(&amp;vf2-&gt;vd,0);</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vi1-&gt;channels;i++)</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/>lappcm[i]=alloca(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**lappcm)*n1);</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/>_ov_getlap(vf1,vi1,&amp;vf1-&gt;vd,lappcm,n1);</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>have<sp/>a<sp/>lapping<sp/>buffer<sp/>from<sp/>vf1;<sp/>now<sp/>to<sp/>splice<sp/>it<sp/>into<sp/>the<sp/>lapping</highlight></codeline>
<codeline lineno="1852"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>buffer<sp/>of<sp/>vf2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>consolidate<sp/>and<sp/>expose<sp/>the<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/>vorbis_synthesis_lapout(&amp;vf2-&gt;vd,&amp;pcm);</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/>_analysis_output_always(</highlight><highlight class="stringliteral">&quot;pcmL&quot;</highlight><highlight class="normal">,0,pcm[0],n1*2,0,0,0);</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/>_analysis_output_always(</highlight><highlight class="stringliteral">&quot;pcmR&quot;</highlight><highlight class="normal">,0,pcm[1],n1*2,0,0,0);</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>splice<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/>_ov_splice(pcm,lappcm,n1,n2,vi1-&gt;channels,vi2-&gt;channels,w1,w2);</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>done<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="1863"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_ov_64_seek_lap(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,ogg_int64_t<sp/>pos,</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*localseek)(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*,ogg_int64_t)){</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi;</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>**lappcm;</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>**pcm;</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*w1,*w2;</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n1,n2,ch1,ch2,hs;</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,ret;</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&lt;OPENED)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/>ret=_ov_initset(vf);</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/>vi=ov_info(vf,-1);</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/>hs=ov_halfrate_p(vf);</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/>ch1=vi-&gt;channels;</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/>n1=vorbis_info_blocksize(vi,0)&gt;&gt;(1+hs);</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/>w1=vorbis_window(&amp;vf-&gt;vd,0);<sp/><sp/></highlight><highlight class="comment">/*<sp/>window<sp/>arrays<sp/>from<sp/>libvorbis<sp/>are</highlight></codeline>
<codeline lineno="1883"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>persistent;<sp/>even<sp/>if<sp/>the<sp/>decode<sp/>state</highlight></codeline>
<codeline lineno="1884"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>this<sp/>link<sp/>gets<sp/>dumped,<sp/>this</highlight></codeline>
<codeline lineno="1885"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window<sp/>array<sp/>continues<sp/>to<sp/>exist<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/>lappcm=alloca(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*lappcm)*ch1);</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ch1;i++)</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/>lappcm[i]=alloca(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**lappcm)*n1);</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/>_ov_getlap(vf,vi,&amp;vf-&gt;vd,lappcm,n1);</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>have<sp/>lapping<sp/>data;<sp/>seek<sp/>and<sp/>prime<sp/>the<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/>ret=localseek(vf,pos);</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/>ret=_ov_initprime(vf);</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Guard<sp/>against<sp/>cross-link<sp/>changes;<sp/>they&apos;re<sp/>perfectly<sp/>legal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/>vi=ov_info(vf,-1);</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/>ch2=vi-&gt;channels;</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/>n2=vorbis_info_blocksize(vi,0)&gt;&gt;(1+hs);</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/>w2=vorbis_window(&amp;vf-&gt;vd,0);</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>consolidate<sp/>and<sp/>expose<sp/>the<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/>vorbis_synthesis_lapout(&amp;vf-&gt;vd,&amp;pcm);</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>splice<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/>_ov_splice(pcm,lappcm,n1,n2,ch1,ch2,w1,w2);</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>done<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="1912"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ov_raw_seek_lap(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,ogg_int64_t<sp/>pos){</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ov_64_seek_lap(vf,pos,ov_raw_seek);</highlight></codeline>
<codeline lineno="1916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ov_pcm_seek_lap(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,ogg_int64_t<sp/>pos){</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ov_64_seek_lap(vf,pos,ov_pcm_seek);</highlight></codeline>
<codeline lineno="1920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ov_pcm_seek_page_lap(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,ogg_int64_t<sp/>pos){</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ov_64_seek_lap(vf,pos,ov_pcm_seek_page);</highlight></codeline>
<codeline lineno="1924"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_ov_d_seek_lap(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pos,</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*localseek)(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi;</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>**lappcm;</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>**pcm;</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*w1,*w2;</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n1,n2,ch1,ch2,hs;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,ret;</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vf-&gt;ready_state&lt;OPENED)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(OV_EINVAL);</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/>ret=_ov_initset(vf);</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/>vi=ov_info(vf,-1);</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/>hs=ov_halfrate_p(vf);</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/>ch1=vi-&gt;channels;</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/>n1=vorbis_info_blocksize(vi,0)&gt;&gt;(1+hs);</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/>w1=vorbis_window(&amp;vf-&gt;vd,0);<sp/><sp/></highlight><highlight class="comment">/*<sp/>window<sp/>arrays<sp/>from<sp/>libvorbis<sp/>are</highlight></codeline>
<codeline lineno="1944"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>persistent;<sp/>even<sp/>if<sp/>the<sp/>decode<sp/>state</highlight></codeline>
<codeline lineno="1945"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>this<sp/>link<sp/>gets<sp/>dumped,<sp/>this</highlight></codeline>
<codeline lineno="1946"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window<sp/>array<sp/>continues<sp/>to<sp/>exist<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/>lappcm=alloca(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*lappcm)*ch1);</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ch1;i++)</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/>lappcm[i]=alloca(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**lappcm)*n1);</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/>_ov_getlap(vf,vi,&amp;vf-&gt;vd,lappcm,n1);</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>have<sp/>lapping<sp/>data;<sp/>seek<sp/>and<sp/>prime<sp/>the<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/>ret=localseek(vf,pos);</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/>ret=_ov_initprime(vf);</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Guard<sp/>against<sp/>cross-link<sp/>changes;<sp/>they&apos;re<sp/>perfectly<sp/>legal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/>vi=ov_info(vf,-1);</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/>ch2=vi-&gt;channels;</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/>n2=vorbis_info_blocksize(vi,0)&gt;&gt;(1+hs);</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/>w2=vorbis_window(&amp;vf-&gt;vd,0);</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>consolidate<sp/>and<sp/>expose<sp/>the<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/>vorbis_synthesis_lapout(&amp;vf-&gt;vd,&amp;pcm);</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>splice<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/>_ov_splice(pcm,lappcm,n1,n2,ch1,ch2,w1,w2);</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>done<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="1973"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ov_time_seek_lap(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pos){</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ov_d_seek_lap(vf,pos,ov_time_seek);</highlight></codeline>
<codeline lineno="1977"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"></highlight></codeline>
<codeline lineno="1979"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ov_time_seek_page_lap(<ref refid="struct_ogg_vorbis___file" kindref="compound">OggVorbis_File</ref><sp/>*vf,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pos){</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ov_d_seek_lap(vf,pos,ov_time_seek_page);</highlight></codeline>
<codeline lineno="1981"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/sound/OggVorbis/vorbissrc/vorbisfile.c"/>
  </compounddef>
</doxygen>
