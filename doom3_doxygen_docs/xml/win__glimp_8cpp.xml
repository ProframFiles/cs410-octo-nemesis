<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="win__glimp_8cpp" kind="file">
    <compoundname>win_glimp.cpp</compoundname>
    <includes refid="precompiled_8h" local="yes">../../idlib/precompiled.h</includes>
    <includes refid="win__local_8h" local="yes">win_local.h</includes>
    <includes refid="_a_f_editor__resource_8h" local="yes">rc/AFEditor_resource.h</includes>
    <includes refid="doom__resource_8h" local="yes">rc/doom_resource.h</includes>
    <includes refid="tr__local_8h" local="yes">../../renderer/tr_local.h</includes>
      <sectiondef kind="define">
      <memberdef kind="define" id="win__glimp_8cpp_1ac08792306c4cb9c9f258979cebd7895d" prot="public" static="no">
        <name>WGL_NUMBER_PIXEL_FORMATS_ARB</name>
        <initializer>0x2000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="80" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a9b0723a3d7c302c78c2c225a142e6e84" prot="public" static="no">
        <name>WGL_DRAW_TO_WINDOW_ARB</name>
        <initializer>0x2001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="81" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a1509eb13bd86db634067c22218dbbde2" prot="public" static="no">
        <name>WGL_DRAW_TO_BITMAP_ARB</name>
        <initializer>0x2002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="82" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a131f3cc56b5489a6fd8f7efa556634ea" prot="public" static="no">
        <name>WGL_ACCELERATION_ARB</name>
        <initializer>0x2003</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="83" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1ab2dc3925b8ae5000a84920192d80cecf" prot="public" static="no">
        <name>WGL_NEED_PALETTE_ARB</name>
        <initializer>0x2004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="84" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a35239e4dce57200276d0d72fc2ccf5b6" prot="public" static="no">
        <name>WGL_NEED_SYSTEM_PALETTE_ARB</name>
        <initializer>0x2005</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="85" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1ac314b1700a0bcda2d7530373d9dde7c2" prot="public" static="no">
        <name>WGL_SWAP_LAYER_BUFFERS_ARB</name>
        <initializer>0x2006</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="86" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a2c1814f7285f6392517ed940fb675f15" prot="public" static="no">
        <name>WGL_SWAP_METHOD_ARB</name>
        <initializer>0x2007</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="87" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a85f0cf7dcb4fa8628282ffcb64bc8c07" prot="public" static="no">
        <name>WGL_NUMBER_OVERLAYS_ARB</name>
        <initializer>0x2008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="88" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a740af5b0cb6eaa7c3b509ae41b7c3297" prot="public" static="no">
        <name>WGL_NUMBER_UNDERLAYS_ARB</name>
        <initializer>0x2009</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="89" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a2a9cc47f0c03ed77341edc8c502b9ff1" prot="public" static="no">
        <name>WGL_TRANSPARENT_ARB</name>
        <initializer>0x200A</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="90" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1aba970a427c2dca2f2a3907d867d3ca7e" prot="public" static="no">
        <name>WGL_SHARE_DEPTH_ARB</name>
        <initializer>0x200C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="91" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a5b0fd4fef9367431eb546d3e735803ea" prot="public" static="no">
        <name>WGL_SHARE_STENCIL_ARB</name>
        <initializer>0x200D</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="92" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a6da7ce52485fdd258b9ab494eedcd98e" prot="public" static="no">
        <name>WGL_SHARE_ACCUM_ARB</name>
        <initializer>0x200E</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="93" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1aba61f71193fd3d3d86c685f7b34e56dd" prot="public" static="no">
        <name>WGL_SUPPORT_GDI_ARB</name>
        <initializer>0x200F</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="94" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1afddc80fbff35c1f270613b83090eca85" prot="public" static="no">
        <name>WGL_SUPPORT_OPENGL_ARB</name>
        <initializer>0x2010</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="95" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a8acd69a2be1c4ed51226145c520ecbe5" prot="public" static="no">
        <name>WGL_DOUBLE_BUFFER_ARB</name>
        <initializer>0x2011</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="96" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a2aa289efbc19a76be9dc0ac303f01689" prot="public" static="no">
        <name>WGL_STEREO_ARB</name>
        <initializer>0x2012</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="97" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a74709fd85aae5b059d39dd4b51694249" prot="public" static="no">
        <name>WGL_PIXEL_TYPE_ARB</name>
        <initializer>0x2013</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="98" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1af979369c958742bf188a9dc993886b0f" prot="public" static="no">
        <name>WGL_COLOR_BITS_ARB</name>
        <initializer>0x2014</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="99" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1acf6d0dc14bd58ab03b10d4cf1534625a" prot="public" static="no">
        <name>WGL_RED_BITS_ARB</name>
        <initializer>0x2015</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="100" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a266ab3ccd927f4caf9df1f426c960c1b" prot="public" static="no">
        <name>WGL_RED_SHIFT_ARB</name>
        <initializer>0x2016</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="101" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a4b67d94c2dbd3c5ad5235eeac10749db" prot="public" static="no">
        <name>WGL_GREEN_BITS_ARB</name>
        <initializer>0x2017</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="102" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a6d6fd2424c846bcd2800ea296e76113f" prot="public" static="no">
        <name>WGL_GREEN_SHIFT_ARB</name>
        <initializer>0x2018</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="103" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a25743041a05d4564428d28a2e0e35e09" prot="public" static="no">
        <name>WGL_BLUE_BITS_ARB</name>
        <initializer>0x2019</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="104" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a33128dba5304ec64ed26475722828a9b" prot="public" static="no">
        <name>WGL_BLUE_SHIFT_ARB</name>
        <initializer>0x201A</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="105" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a5d54c3606cc49e80cb6420b145a2119a" prot="public" static="no">
        <name>WGL_ALPHA_BITS_ARB</name>
        <initializer>0x201B</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="106" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1aa5f833102cee048157f3c96a887d9922" prot="public" static="no">
        <name>WGL_ALPHA_SHIFT_ARB</name>
        <initializer>0x201C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="107" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1ae70e59419a58e3c6c1951cad5e78c055" prot="public" static="no">
        <name>WGL_ACCUM_BITS_ARB</name>
        <initializer>0x201D</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="108" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1ac457cdee636955daf428b8d5311f7870" prot="public" static="no">
        <name>WGL_ACCUM_RED_BITS_ARB</name>
        <initializer>0x201E</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="109" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a491952e52b2caad0be533c23b65b16e2" prot="public" static="no">
        <name>WGL_ACCUM_GREEN_BITS_ARB</name>
        <initializer>0x201F</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="110" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a0044e12ada2c0cee252e1205400413a1" prot="public" static="no">
        <name>WGL_ACCUM_BLUE_BITS_ARB</name>
        <initializer>0x2020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="111" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1aeb27a625f80aaa587b86c28ea44fbe65" prot="public" static="no">
        <name>WGL_ACCUM_ALPHA_BITS_ARB</name>
        <initializer>0x2021</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="112" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a75b1340d23a385c2b1ce88a303930820" prot="public" static="no">
        <name>WGL_DEPTH_BITS_ARB</name>
        <initializer>0x2022</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="113" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a0adda3bf0bcae1b1f66094f4331570bd" prot="public" static="no">
        <name>WGL_STENCIL_BITS_ARB</name>
        <initializer>0x2023</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="114" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1ade9ba085a4a1ad9db1fea0ede7139948" prot="public" static="no">
        <name>WGL_AUX_BUFFERS_ARB</name>
        <initializer>0x2024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="115" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a6e99b85ae842730daef27353a9e3d434" prot="public" static="no">
        <name>WGL_NO_ACCELERATION_ARB</name>
        <initializer>0x2025</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="116" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a5352d3160045983765b46358b3a43d4a" prot="public" static="no">
        <name>WGL_GENERIC_ACCELERATION_ARB</name>
        <initializer>0x2026</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="117" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1ac7e61d450f6af6ffd08143f33421958e" prot="public" static="no">
        <name>WGL_FULL_ACCELERATION_ARB</name>
        <initializer>0x2027</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="118" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a0d1f93ca815d7a25ab315f7c0eacae84" prot="public" static="no">
        <name>WGL_SWAP_EXCHANGE_ARB</name>
        <initializer>0x2028</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="119" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1ac27ce73d3f143c8353ef1df789ef046e" prot="public" static="no">
        <name>WGL_SWAP_COPY_ARB</name>
        <initializer>0x2029</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="120" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1addc0aa8a0b99095e09cc748e17dcd8bb" prot="public" static="no">
        <name>WGL_SWAP_UNDEFINED_ARB</name>
        <initializer>0x202A</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="121" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a9ef316350bc3d0261a55e22242da3573" prot="public" static="no">
        <name>WGL_TYPE_RGBA_ARB</name>
        <initializer>0x202B</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="122" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a8bf596fcd313de5ab063c732774063cb" prot="public" static="no">
        <name>WGL_TYPE_COLORINDEX_ARB</name>
        <initializer>0x202C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="123" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a9f6ea6a06f906059c0103fc38479170a" prot="public" static="no">
        <name>WGL_TRANSPARENT_RED_VALUE_ARB</name>
        <initializer>0x2037</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="124" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1af61c714bf83ed4ab06e6e5e8970008e8" prot="public" static="no">
        <name>WGL_TRANSPARENT_GREEN_VALUE_ARB</name>
        <initializer>0x2038</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="125" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1abc05aa81ef07b7c2e4f3a55bd30dfded" prot="public" static="no">
        <name>WGL_TRANSPARENT_BLUE_VALUE_ARB</name>
        <initializer>0x2039</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="126" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a4ed17228cd09c34f556948807c91a2d3" prot="public" static="no">
        <name>WGL_TRANSPARENT_ALPHA_VALUE_ARB</name>
        <initializer>0x203A</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="127" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1ab0dce9ba7c0a09bb36e508d872d313cf" prot="public" static="no">
        <name>WGL_TRANSPARENT_INDEX_VALUE_ARB</name>
        <initializer>0x203B</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="128" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1ac9792da6e4869780e07504635b3e1a42" prot="public" static="no">
        <name>WGL_SAMPLE_BUFFERS_ARB</name>
        <initializer>0x2041</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="131" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win__glimp_8cpp_1a99289a023da8e683eb7de95543e22c87" prot="public" static="no">
        <name>WGL_SAMPLES_ARB</name>
        <initializer>0x2042</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="132" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="win__glimp_8cpp_1ad19b433592f67abb0c14bcd50dd03ff2" prot="public" static="no" mutable="no">
        <type>PFNWGLGETEXTENSIONSSTRINGARBPROC</type>
        <definition>PFNWGLGETEXTENSIONSSTRINGARBPROC wglGetExtensionsStringARB</definition>
        <argsstring></argsstring>
        <name>wglGetExtensionsStringARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="55" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="win__glimp_8cpp_1a3a9b5b7e20d8bc8473fc115de4a9b8fc" prot="public" static="no" mutable="no">
        <type>PFNWGLSWAPINTERVALEXTPROC</type>
        <definition>PFNWGLSWAPINTERVALEXTPROC wglSwapIntervalEXT</definition>
        <argsstring></argsstring>
        <name>wglSwapIntervalEXT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="58" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="win__glimp_8cpp_1a726476873aa26b05c7ed06ffecdfd794" prot="public" static="no" mutable="no">
        <type>PFNWGLGETPIXELFORMATATTRIBIVARBPROC</type>
        <definition>PFNWGLGETPIXELFORMATATTRIBIVARBPROC wglGetPixelFormatAttribivARB</definition>
        <argsstring></argsstring>
        <name>wglGetPixelFormatAttribivARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="61" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="win__glimp_8cpp_1afdb7088f74a3a289213eca507dcd1a93" prot="public" static="no" mutable="no">
        <type>PFNWGLGETPIXELFORMATATTRIBFVARBPROC</type>
        <definition>PFNWGLGETPIXELFORMATATTRIBFVARBPROC wglGetPixelFormatAttribfvARB</definition>
        <argsstring></argsstring>
        <name>wglGetPixelFormatAttribfvARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="62" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="win__glimp_8cpp_1a53c4eedbe0975749d0623d45107c8f9d" prot="public" static="no" mutable="no">
        <type>PFNWGLCHOOSEPIXELFORMATARBPROC</type>
        <definition>PFNWGLCHOOSEPIXELFORMATARBPROC wglChoosePixelFormatARB</definition>
        <argsstring></argsstring>
        <name>wglChoosePixelFormatARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="63" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="win__glimp_8cpp_1a50b6afa76c19f26f0da9b79f13bc3e6e" prot="public" static="no" mutable="no">
        <type>PFNWGLCREATEPBUFFERARBPROC</type>
        <definition>PFNWGLCREATEPBUFFERARBPROC wglCreatePbufferARB</definition>
        <argsstring></argsstring>
        <name>wglCreatePbufferARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="66" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="win__glimp_8cpp_1a2e06225b1d39ce644168fd10d8a7c41c" prot="public" static="no" mutable="no">
        <type>PFNWGLGETPBUFFERDCARBPROC</type>
        <definition>PFNWGLGETPBUFFERDCARBPROC wglGetPbufferDCARB</definition>
        <argsstring></argsstring>
        <name>wglGetPbufferDCARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="67" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="win__glimp_8cpp_1a6236b87874e888f00b9797ed491027a4" prot="public" static="no" mutable="no">
        <type>PFNWGLRELEASEPBUFFERDCARBPROC</type>
        <definition>PFNWGLRELEASEPBUFFERDCARBPROC wglReleasePbufferDCARB</definition>
        <argsstring></argsstring>
        <name>wglReleasePbufferDCARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="68" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="win__glimp_8cpp_1ad20fa1aacce82e90b9e93d55881c780e" prot="public" static="no" mutable="no">
        <type>PFNWGLDESTROYPBUFFERARBPROC</type>
        <definition>PFNWGLDESTROYPBUFFERARBPROC wglDestroyPbufferARB</definition>
        <argsstring></argsstring>
        <name>wglDestroyPbufferARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="69" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="win__glimp_8cpp_1a27f1ddf364790c00210b47114ce0c8ab" prot="public" static="no" mutable="no">
        <type>PFNWGLQUERYPBUFFERARBPROC</type>
        <definition>PFNWGLQUERYPBUFFERARBPROC wglQueryPbufferARB</definition>
        <argsstring></argsstring>
        <name>wglQueryPbufferARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="70" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="win__glimp_8cpp_1a1eedc993febab7ade78345c11ee5a411" prot="public" static="no" mutable="no">
        <type>PFNWGLBINDTEXIMAGEARBPROC</type>
        <definition>PFNWGLBINDTEXIMAGEARBPROC wglBindTexImageARB</definition>
        <argsstring></argsstring>
        <name>wglBindTexImageARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="73" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="win__glimp_8cpp_1a59e8bedd6b62411c26e0172bfc681c9a" prot="public" static="no" mutable="no">
        <type>PFNWGLRELEASETEXIMAGEARBPROC</type>
        <definition>PFNWGLRELEASETEXIMAGEARBPROC wglReleaseTexImageARB</definition>
        <argsstring></argsstring>
        <name>wglReleaseTexImageARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="74" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="win__glimp_8cpp_1ac94810763674de5820fc46ac4869fdac" prot="public" static="no" mutable="no">
        <type>PFNWGLSETPBUFFERATTRIBARBPROC</type>
        <definition>PFNWGLSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB</definition>
        <argsstring></argsstring>
        <name>wglSetPbufferAttribARB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="75" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="win__glimp_8cpp_1a646450c10f511727e5ca948292762391" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>volatile bool renderThreadActive</definition>
        <argsstring></argsstring>
        <name>renderThreadActive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="1177" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="1177" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="win__glimp_8cpp_1a7859b380ddea78dfb751d018a970cf90" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void GLW_InitExtensions</definition>
        <argsstring>(void)</argsstring>
        <name>GLW_InitExtensions</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1a35a812eb826e7b370ee0528fcd022fe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QGL_Init</definition>
        <argsstring>(const char *dllname)</argsstring>
        <name>QGL_Init</name>
        <param>
          <type>const char *</type>
          <declname>dllname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="139" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="1690" bodyend="2070"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1a91c676b8d3aed375a3188f8009af20e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QGL_Shutdown</definition>
        <argsstring>(void)</argsstring>
        <name>QGL_Shutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="140" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_qgl.cpp" bodystart="1302" bodyend="1673"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1a3b20bdc4e085bdc285ee6bf2407a697e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void GLimp_SaveGamma</definition>
        <argsstring>(void)</argsstring>
        <name>GLimp_SaveGamma</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="149" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="149" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1a3f50978c6f5543f066fc6a1c28458966" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void GLimp_RestoreGamma</definition>
        <argsstring>(void)</argsstring>
        <name>GLimp_RestoreGamma</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="164" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="164" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1a38ab40102293d75d5d7af3e613040e49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_SetGamma</definition>
        <argsstring>(unsigned short red[256], unsigned short green[256], unsigned short blue[256])</argsstring>
        <name>GLimp_SetGamma</name>
        <param>
          <type>unsigned short</type>
          <declname>red</declname>
          <array>[256]</array>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>green</declname>
          <array>[256]</array>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>blue</declname>
          <array>[256]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="188" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="188" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1a9391135ed05121d617e13758d2569475" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LONG WINAPI</type>
        <definition>LONG WINAPI FakeWndProc</definition>
        <argsstring>(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam)</argsstring>
        <name>FakeWndProc</name>
        <param>
          <type>HWND</type>
          <declname>hWnd</declname>
        </param>
        <param>
          <type>UINT</type>
          <declname>uMsg</declname>
        </param>
        <param>
          <type>WPARAM</type>
          <declname>wParam</declname>
        </param>
        <param>
          <type><ref refid="class_c_prop_tree_item" kindref="compound">LPARAM</ref></type>
          <declname>lParam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="224" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="224" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1a7a2d0037c620f1373e0c9fcb1e729b31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLW_CheckWGLExtensions</definition>
        <argsstring>(HDC hDC)</argsstring>
        <name>GLW_CheckWGLExtensions</name>
        <param>
          <type>HDC</type>
          <declname>hDC</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="281" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="281" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1ae14b062d4604fdeb25aa280e8e1c9385" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void GLW_GetWGLExtensionsWithFakeWindow</definition>
        <argsstring>(void)</argsstring>
        <name>GLW_GetWGLExtensionsWithFakeWindow</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="317" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="317" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1a7368e3e008c3f32eafd4c3bc5c1e0895" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLW_WM_CREATE</definition>
        <argsstring>(HWND hWnd)</argsstring>
        <name>GLW_WM_CREATE</name>
        <param>
          <type>HWND</type>
          <declname>hWnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="354" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="354" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1a41d9fc29fe5535390958316d770df6f6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool GLW_InitDriver</definition>
        <argsstring>(glimpParms_t parms)</argsstring>
        <name>GLW_InitDriver</name>
        <param>
          <type><ref refid="structglimp_parms__t" kindref="compound">glimpParms_t</ref></type>
          <declname>parms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="367" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="367" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1a2186722a3f0d89be8ea0df340bd624ef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void GLW_CreateWindowClasses</definition>
        <argsstring>(void)</argsstring>
        <name>GLW_CreateWindowClasses</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="500" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="500" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1ad6d95e76ebb34cc993a7d953ed0b9917" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool GLW_CreateWindow</definition>
        <argsstring>(glimpParms_t parms)</argsstring>
        <name>GLW_CreateWindow</name>
        <param>
          <type><ref refid="structglimp_parms__t" kindref="compound">glimpParms_t</ref></type>
          <declname>parms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="557" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="557" bodyend="643"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1adbfb47baf59128a4e675d066058ec25d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void PrintCDSError</definition>
        <argsstring>(int value)</argsstring>
        <name>PrintCDSError</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="647" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="647" bodyend="671"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1aecc902468741d7fe55b3e544a7198223" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool GLW_SetFullScreen</definition>
        <argsstring>(glimpParms_t parms)</argsstring>
        <name>GLW_SetFullScreen</name>
        <param>
          <type><ref refid="structglimp_parms__t" kindref="compound">glimpParms_t</ref></type>
          <declname>parms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="679" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="679" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1aec8d8937397a20b8708bb48898dd74c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GLimp_Init</definition>
        <argsstring>(glimpParms_t parms)</argsstring>
        <name>GLimp_Init</name>
        <param>
          <type><ref refid="structglimp_parms__t" kindref="compound">glimpParms_t</ref></type>
          <declname>parms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="793" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="793" bodyend="857"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1a7d7a6454a8d0675d5ab4dda42e902ea9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GLimp_SetScreenParms</definition>
        <argsstring>(glimpParms_t parms)</argsstring>
        <name>GLimp_SetScreenParms</name>
        <param>
          <type><ref refid="structglimp_parms__t" kindref="compound">glimpParms_t</ref></type>
          <declname>parms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="867" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="867" bodyend="935"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1a6610a0f20ac90d03d00d86ecb125846d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_Shutdown</definition>
        <argsstring>(void)</argsstring>
        <name>GLimp_Shutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="945" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="945" bodyend="998"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1ae933f3d45500980594e4f3d26c73ba0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_SwapBuffers</definition>
        <argsstring>(void)</argsstring>
        <name>GLimp_SwapBuffers</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="1006" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="1006" bodyend="1022"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1a6ce9e58ba8c71dcd2fb3625c6f06cb4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_ActivateContext</definition>
        <argsstring>(void)</argsstring>
        <name>GLimp_ActivateContext</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="1040" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="1040" bodyend="1044"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1a972d2493706d76c5a207374ec22f7688" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_DeactivateContext</definition>
        <argsstring>(void)</argsstring>
        <name>GLimp_DeactivateContext</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="1052" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="1052" bodyend="1064"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1abcc0b166fde9e7543f485776d019be12" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void GLimp_RenderThreadWrapper</definition>
        <argsstring>(void)</argsstring>
        <name>GLimp_RenderThreadWrapper</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="1072" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="1072" bodyend="1077"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1a14a394921926116b00e993f86e2a068d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GLimp_SpawnRenderThread</definition>
        <argsstring>(void(*function)(void))</argsstring>
        <name>GLimp_SpawnRenderThread</name>
        <param>
          <type>void(*)(void)</type>
          <declname>function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="1086" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="1086" bodyend="1122"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1af4ddc92fe387ce1dc8b15a45398b61da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* GLimp_BackEndSleep</definition>
        <argsstring>(void)</argsstring>
        <name>GLimp_BackEndSleep</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="1133" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="1133" bodyend="1158"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1a37b1a16b98d48e2d612bb364080fed23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_FrontEndSleep</definition>
        <argsstring>(void)</argsstring>
        <name>GLimp_FrontEndSleep</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="1166" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="1166" bodyend="1175"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1a06eabf65806dc35a01ad35a67c3e7d7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimp_WakeBackEnd</definition>
        <argsstring>(void *data)</argsstring>
        <name>GLimp_WakeBackEnd</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="1185" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="1185" bodyend="1219"/>
      </memberdef>
      <memberdef kind="function" id="win__glimp_8cpp_1a38c414a96bb1ac4a8c8c56a3e97889d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLExtension_t</type>
        <definition>GLExtension_t GLimp_ExtensionPointer</definition>
        <argsstring>(const char *name)</argsstring>
        <name>GLimp_ExtensionPointer</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" line="1230" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp" bodystart="1230" bodyend="1240"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment">**<sp/>WIN_GLIMP.C</highlight></codeline>
<codeline lineno="30"><highlight class="comment">**</highlight></codeline>
<codeline lineno="31"><highlight class="comment">**<sp/>This<sp/>file<sp/>contains<sp/>ALL<sp/>Win32<sp/>specific<sp/>stuff<sp/>having<sp/>to<sp/>do<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="32"><highlight class="comment">**<sp/>OpenGL<sp/>refresh.<sp/><sp/>When<sp/>a<sp/>port<sp/>is<sp/>being<sp/>made<sp/>the<sp/>following<sp/>functions</highlight></codeline>
<codeline lineno="33"><highlight class="comment">**<sp/>must<sp/>be<sp/>implemented<sp/>by<sp/>the<sp/>port:</highlight></codeline>
<codeline lineno="34"><highlight class="comment">**</highlight></codeline>
<codeline lineno="35"><highlight class="comment">**<sp/>GLimp_SwapBuffers</highlight></codeline>
<codeline lineno="36"><highlight class="comment">**<sp/>GLimp_Init</highlight></codeline>
<codeline lineno="37"><highlight class="comment">**<sp/>GLimp_Shutdown</highlight></codeline>
<codeline lineno="38"><highlight class="comment">**<sp/>GLimp_SetGamma</highlight></codeline>
<codeline lineno="39"><highlight class="comment">**</highlight></codeline>
<codeline lineno="40"><highlight class="comment">**<sp/>Note<sp/>that<sp/>the<sp/>GLW_xxx<sp/>functions<sp/>are<sp/>Windows<sp/>specific<sp/>GL-subsystem</highlight></codeline>
<codeline lineno="41"><highlight class="comment">**<sp/>related<sp/>functions<sp/>that<sp/>are<sp/>relevant<sp/>ONLY<sp/>to<sp/>win_glimp.c</highlight></codeline>
<codeline lineno="42"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../idlib/precompiled.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>hdrstop</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;win_local.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rc/AFEditor_resource.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rc/doom_resource.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../renderer/tr_local.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>GLW_InitExtensions(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WGL_ARB_extensions_string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">PFNWGLGETEXTENSIONSSTRINGARBPROC<sp/>wglGetExtensionsStringARB;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WGL_EXT_swap_interval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">PFNWGLSWAPINTERVALEXTPROC<sp/>wglSwapIntervalEXT;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WGL_ARB_pixel_format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">PFNWGLGETPIXELFORMATATTRIBIVARBPROC<sp/>wglGetPixelFormatAttribivARB;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">PFNWGLGETPIXELFORMATATTRIBFVARBPROC<sp/>wglGetPixelFormatAttribfvARB;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">PFNWGLCHOOSEPIXELFORMATARBPROC<sp/>wglChoosePixelFormatARB;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WGL_ARB_pbuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">PFNWGLCREATEPBUFFERARBPROC<sp/><sp/>wglCreatePbufferARB;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">PFNWGLGETPBUFFERDCARBPROC<sp/><sp/><sp/>wglGetPbufferDCARB;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">PFNWGLRELEASEPBUFFERDCARBPROC<sp/><sp/><sp/>wglReleasePbufferDCARB;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">PFNWGLDESTROYPBUFFERARBPROC<sp/>wglDestroyPbufferARB;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">PFNWGLQUERYPBUFFERARBPROC<sp/><sp/><sp/>wglQueryPbufferARB;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WGL_ARB_render_texture<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">PFNWGLBINDTEXIMAGEARBPROC<sp/><sp/><sp/><sp/><sp/><sp/><sp/>wglBindTexImageARB;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">PFNWGLRELEASETEXIMAGEARBPROC<sp/><sp/><sp/><sp/>wglReleaseTexImageARB;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">PFNWGLSETPBUFFERATTRIBARBPROC<sp/><sp/><sp/>wglSetPbufferAttribARB;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ARB_pixel_format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WGL_NUMBER_PIXEL_FORMATS_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2000</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_DRAW_TO_WINDOW_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2001</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_DRAW_TO_BITMAP_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2002</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_ACCELERATION_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2003</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_NEED_PALETTE_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2004</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_NEED_SYSTEM_PALETTE_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2005</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_SWAP_LAYER_BUFFERS_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2006</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_SWAP_METHOD_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2007</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_NUMBER_OVERLAYS_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2008</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_NUMBER_UNDERLAYS_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2009</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_TRANSPARENT_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x200A</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_SHARE_DEPTH_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x200C</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_SHARE_STENCIL_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x200D</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_SHARE_ACCUM_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x200E</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_SUPPORT_GDI_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x200F</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_SUPPORT_OPENGL_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2010</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_DOUBLE_BUFFER_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2011</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_STEREO_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2012</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_PIXEL_TYPE_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2013</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_COLOR_BITS_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2014</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_RED_BITS_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2015</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_RED_SHIFT_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2016</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_GREEN_BITS_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2017</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_GREEN_SHIFT_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2018</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_BLUE_BITS_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2019</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_BLUE_SHIFT_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x201A</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_ALPHA_BITS_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x201B</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_ALPHA_SHIFT_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x201C</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_ACCUM_BITS_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x201D</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_ACCUM_RED_BITS_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x201E</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_ACCUM_GREEN_BITS_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x201F</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_ACCUM_BLUE_BITS_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2020</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_ACCUM_ALPHA_BITS_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2021</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_DEPTH_BITS_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2022</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_STENCIL_BITS_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2023</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_AUX_BUFFERS_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2024</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_NO_ACCELERATION_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2025</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_GENERIC_ACCELERATION_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2026</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_FULL_ACCELERATION_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2027</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_SWAP_EXCHANGE_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2028</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_SWAP_COPY_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2029</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_SWAP_UNDEFINED_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x202A</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_TYPE_RGBA_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x202B</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_TYPE_COLORINDEX_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x202C</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_TRANSPARENT_RED_VALUE_ARB<sp/><sp/><sp/><sp/><sp/><sp/>0x2037</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_TRANSPARENT_GREEN_VALUE_ARB<sp/><sp/><sp/><sp/>0x2038</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_TRANSPARENT_BLUE_VALUE_ARB<sp/><sp/><sp/><sp/><sp/>0x2039</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_TRANSPARENT_ALPHA_VALUE_ARB<sp/><sp/><sp/><sp/>0x203A</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_TRANSPARENT_INDEX_VALUE_ARB<sp/><sp/><sp/><sp/>0x203B</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ARB_multisample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WGL_SAMPLE_BUFFERS_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2041</highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>WGL_SAMPLES_ARB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2042</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function<sp/>declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>QGL_Init(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dllname<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QGL_Shutdown(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="145"><highlight class="comment">========================</highlight></codeline>
<codeline lineno="146"><highlight class="comment">GLimp_GetOldGammaRamp</highlight></codeline>
<codeline lineno="147"><highlight class="comment">========================</highlight></codeline>
<codeline lineno="148"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GLimp_SaveGamma(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>HDC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hDC;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>hDC<sp/>=<sp/>GetDC(<sp/>GetDesktopWindow()<sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>success<sp/>=<sp/>GetDeviceGammaRamp(<sp/>hDC,<sp/>win32.oldHardwareGamma<sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;DPrintf(<sp/></highlight><highlight class="stringliteral">&quot;...getting<sp/>default<sp/>gamma<sp/>ramp:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>success<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;success&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>ReleaseDC(<sp/>GetDesktopWindow(),<sp/>hDC<sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="160"><highlight class="comment">========================</highlight></codeline>
<codeline lineno="161"><highlight class="comment">GLimp_RestoreGamma</highlight></codeline>
<codeline lineno="162"><highlight class="comment">========================</highlight></codeline>
<codeline lineno="163"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GLimp_RestoreGamma(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>HDC<sp/>hDC;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOL<sp/>success;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>never<sp/>read<sp/>in<sp/>a<sp/>reasonable<sp/>looking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>table,<sp/>don&apos;t<sp/>write<sp/>it<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>win32.oldHardwareGamma[0][255]<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>hDC<sp/>=<sp/>GetDC(<sp/>GetDesktopWindow()<sp/>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>success<sp/>=<sp/>SetDeviceGammaRamp(<sp/>hDC,<sp/>win32.oldHardwareGamma<sp/>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;DPrintf<sp/>(<sp/></highlight><highlight class="stringliteral">&quot;...restoring<sp/>hardware<sp/>gamma:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>success<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;success&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>ReleaseDC(<sp/>GetDesktopWindow(),<sp/>hDC<sp/>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="182"><highlight class="comment">========================</highlight></codeline>
<codeline lineno="183"><highlight class="comment">GLimp_SetGamma</highlight></codeline>
<codeline lineno="184"><highlight class="comment"></highlight></codeline>
<codeline lineno="185"><highlight class="comment">The<sp/>renderer<sp/>calls<sp/>this<sp/>when<sp/>the<sp/>user<sp/>adjusts<sp/>r_gamma<sp/>or<sp/>r_brightness</highlight></codeline>
<codeline lineno="186"><highlight class="comment">========================</highlight></codeline>
<codeline lineno="187"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GLimp_SetGamma(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>red[256],<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>green[256],<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>blue[256]<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>table[3][256];</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!win32.hDC<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>256;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table[0][i]<sp/>=<sp/>red[i];</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table[1][i]<sp/>=<sp/>green[i];</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table[2][i]<sp/>=<sp/>blue[i];</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!SetDeviceGammaRamp(<sp/>win32.hDC,<sp/>table<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>SetDeviceGammaRamp<sp/>failed.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="208"><highlight class="comment">=============================================================================</highlight></codeline>
<codeline lineno="209"><highlight class="comment"></highlight></codeline>
<codeline lineno="210"><highlight class="comment">WglExtension<sp/>Grabbing</highlight></codeline>
<codeline lineno="211"><highlight class="comment"></highlight></codeline>
<codeline lineno="212"><highlight class="comment">This<sp/>is<sp/>gross<sp/>--<sp/>creating<sp/>a<sp/>window<sp/>just<sp/>to<sp/>get<sp/>a<sp/>context<sp/>to<sp/>get<sp/>the<sp/>wgl<sp/>extensions</highlight></codeline>
<codeline lineno="213"><highlight class="comment"></highlight></codeline>
<codeline lineno="214"><highlight class="comment">=============================================================================</highlight></codeline>
<codeline lineno="215"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="218"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="219"><highlight class="comment">FakeWndProc</highlight></codeline>
<codeline lineno="220"><highlight class="comment"></highlight></codeline>
<codeline lineno="221"><highlight class="comment">Only<sp/>used<sp/>to<sp/>get<sp/>wglExtensions</highlight></codeline>
<codeline lineno="222"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="223"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">LONG<sp/>WINAPI<sp/>FakeWndProc<sp/>(</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>HWND<sp/><sp/><sp/><sp/>hWnd,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>UINT<sp/><sp/><sp/><sp/>uMsg,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>WPARAM<sp/><sp/>wParam,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_prop_tree_item" kindref="compound">LPARAM</ref><sp/><sp/>lParam)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>uMsg<sp/>==<sp/>WM_DESTROY<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PostQuitMessage(0);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>uMsg<sp/>!=<sp/>WM_CREATE<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DefWindowProc(hWnd,<sp/>uMsg,<sp/>wParam,<sp/>lParam);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PIXELFORMATDESCRIPTOR<sp/>pfd<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PIXELFORMATDESCRIPTOR),</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PFD_DRAW_TO_WINDOW<sp/>|<sp/>PFD_SUPPORT_OPENGL<sp/>|<sp/>PFD_DOUBLEBUFFER,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PFD_TYPE_RGBA,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>24,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8,<sp/>0,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>0,<sp/>0,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>24,<sp/>8,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PFD_MAIN_PLANE,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>pixelFormat;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>HDC<sp/>hDC;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>HGLRC<sp/>hGLRC;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>hDC<sp/>=<sp/>GetDC(hWnd);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>OpenGL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>pixelFormat<sp/>=<sp/>ChoosePixelFormat(hDC,<sp/>&amp;pfd);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPixelFormat(hDC,<sp/>pixelFormat,<sp/>&amp;pfd);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>hGLRC<sp/>=<sp/>qwglCreateContext(hDC);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>qwglMakeCurrent(hDC,<sp/>hGLRC);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>things</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>wglMakeCurrent(NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>wglDeleteContext(hGLRC);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>ReleaseDC(hWnd,<sp/>hDC);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DefWindowProc(hWnd,<sp/>uMsg,<sp/>wParam,<sp/>lParam);</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="277"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="278"><highlight class="comment">GLW_GetWGLExtensionsWithFakeWindow</highlight></codeline>
<codeline lineno="279"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="280"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GLW_CheckWGLExtensions(<sp/>HDC<sp/>hDC<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>wglGetExtensionsStringARB<sp/>=<sp/>(PFNWGLGETEXTENSIONSSTRINGARBPROC)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLimp_ExtensionPointer(</highlight><highlight class="stringliteral">&quot;wglGetExtensionsStringARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>wglGetExtensionsStringARB<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glConfig.wgl_extensions_string<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>wglGetExtensionsStringARB(hDC);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glConfig.wgl_extensions_string<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WGL_EXT_swap_control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>wglSwapIntervalEXT<sp/>=<sp/>(PFNWGLSWAPINTERVALEXTPROC)<sp/>GLimp_ExtensionPointer(<sp/></highlight><highlight class="stringliteral">&quot;wglSwapIntervalEXT&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>r_swapInterval.SetModified();<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>a<sp/>set<sp/>next<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WGL_ARB_pixel_format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>wglGetPixelFormatAttribivARB<sp/>=<sp/>(PFNWGLGETPIXELFORMATATTRIBIVARBPROC)GLimp_ExtensionPointer(</highlight><highlight class="stringliteral">&quot;wglGetPixelFormatAttribivARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>wglGetPixelFormatAttribfvARB<sp/>=<sp/>(PFNWGLGETPIXELFORMATATTRIBFVARBPROC)GLimp_ExtensionPointer(</highlight><highlight class="stringliteral">&quot;wglGetPixelFormatAttribfvARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>wglChoosePixelFormatARB<sp/>=<sp/>(PFNWGLCHOOSEPIXELFORMATARBPROC)GLimp_ExtensionPointer(</highlight><highlight class="stringliteral">&quot;wglChoosePixelFormatARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WGL_ARB_pbuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>wglCreatePbufferARB<sp/>=<sp/>(PFNWGLCREATEPBUFFERARBPROC)GLimp_ExtensionPointer(</highlight><highlight class="stringliteral">&quot;wglCreatePbufferARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>wglGetPbufferDCARB<sp/>=<sp/>(PFNWGLGETPBUFFERDCARBPROC)GLimp_ExtensionPointer(</highlight><highlight class="stringliteral">&quot;wglGetPbufferDCARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>wglReleasePbufferDCARB<sp/>=<sp/>(PFNWGLRELEASEPBUFFERDCARBPROC)GLimp_ExtensionPointer(</highlight><highlight class="stringliteral">&quot;wglReleasePbufferDCARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>wglDestroyPbufferARB<sp/>=<sp/>(PFNWGLDESTROYPBUFFERARBPROC)GLimp_ExtensionPointer(</highlight><highlight class="stringliteral">&quot;wglDestroyPbufferARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>wglQueryPbufferARB<sp/>=<sp/>(PFNWGLQUERYPBUFFERARBPROC)GLimp_ExtensionPointer(</highlight><highlight class="stringliteral">&quot;wglQueryPbufferARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WGL_ARB_render_texture<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>wglBindTexImageARB<sp/>=<sp/>(PFNWGLBINDTEXIMAGEARBPROC)GLimp_ExtensionPointer(</highlight><highlight class="stringliteral">&quot;wglBindTexImageARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>wglReleaseTexImageARB<sp/>=<sp/>(PFNWGLRELEASETEXIMAGEARBPROC)GLimp_ExtensionPointer(</highlight><highlight class="stringliteral">&quot;wglReleaseTexImageARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>wglSetPbufferAttribARB<sp/>=<sp/>(PFNWGLSETPBUFFERATTRIBARBPROC)GLimp_ExtensionPointer(</highlight><highlight class="stringliteral">&quot;wglSetPbufferAttribARB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="313"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="314"><highlight class="comment">GLW_GetWGLExtensionsWithFakeWindow</highlight></codeline>
<codeline lineno="315"><highlight class="comment">==================</highlight></codeline>
<codeline lineno="316"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GLW_GetWGLExtensionsWithFakeWindow(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>HWND<sp/><sp/><sp/><sp/>hWnd;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>MSG<sp/><sp/><sp/><sp/><sp/>msg;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>window<sp/>for<sp/>the<sp/>sole<sp/>purpose<sp/>of<sp/>getting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>valid<sp/>context<sp/>to<sp/>get<sp/>the<sp/>wglextensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>hWnd<sp/>=<sp/>CreateWindow(WIN32_FAKE_WINDOW_CLASS_NAME,<sp/>GAME_NAME,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WS_OVERLAPPEDWINDOW,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>40,<sp/>40,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>640,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>480,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>win32.hInstance,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!hWnd<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;FatalError(<sp/></highlight><highlight class="stringliteral">&quot;GLW_GetWGLExtensionsWithFakeWindow:<sp/>Couldn&apos;t<sp/>create<sp/>fake<sp/>window&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>HDC<sp/>hDC<sp/>=<sp/>GetDC(<sp/>hWnd<sp/>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>HGLRC<sp/>gRC<sp/>=<sp/>wglCreateContext(<sp/>hDC<sp/>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>wglMakeCurrent(<sp/>hDC,<sp/>gRC<sp/>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>GLW_CheckWGLExtensions(<sp/>hDC<sp/>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>wglDeleteContext(<sp/>gRC<sp/>);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>ReleaseDC(<sp/>hWnd,<sp/>hDC<sp/>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>DestroyWindow(<sp/>hWnd<sp/>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>GetMessage(<sp/>&amp;msg,<sp/>NULL,<sp/>0,<sp/>0<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TranslateMessage(<sp/>&amp;msg<sp/>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DispatchMessage(<sp/>&amp;msg<sp/>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="350"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="351"><highlight class="comment">GLW_WM_CREATE</highlight></codeline>
<codeline lineno="352"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="353"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GLW_WM_CREATE(<sp/>HWND<sp/>hWnd<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="360"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="361"><highlight class="comment">GLW_InitDriver</highlight></codeline>
<codeline lineno="362"><highlight class="comment"></highlight></codeline>
<codeline lineno="363"><highlight class="comment">Set<sp/>the<sp/>pixelformat<sp/>for<sp/>the<sp/>window<sp/>before<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="364"><highlight class="comment">shown,<sp/>and<sp/>create<sp/>the<sp/>rendering<sp/>context</highlight></codeline>
<codeline lineno="365"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="366"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GLW_InitDriver(<sp/><ref refid="structglimp_parms__t" kindref="compound">glimpParms_t</ref><sp/>parms<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>PIXELFORMATDESCRIPTOR<sp/>src<sp/>=<sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PIXELFORMATDESCRIPTOR),<sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>this<sp/>pfd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>version<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PFD_DRAW_TO_WINDOW<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>support<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PFD_SUPPORT_OPENGL<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>support<sp/>OpenGL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PFD_DOUBLEBUFFER,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>double<sp/>buffered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PFD_TYPE_RGBA,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RGBA<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>32-bit<sp/>color<sp/>depth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>color<sp/>bits<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>8<sp/>bit<sp/>destination<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shift<sp/>bit<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>accumulation<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accum<sp/>bits<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>24,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>24-bit<sp/>z-buffer<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>8-bit<sp/>stencil<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>auxiliary<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PFD_MAIN_PLANE,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>main<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reserved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>layer<sp/>masks<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;Initializing<sp/>OpenGL<sp/>driver\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>a<sp/>DC<sp/>for<sp/>our<sp/>window<sp/>if<sp/>we<sp/>don&apos;t<sp/>already<sp/>have<sp/>one<sp/>allocated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>win32.hDC<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;...getting<sp/>DC:<sp/>&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>win32.hDC<sp/>=<sp/>GetDC(<sp/>win32.hWnd<sp/>)<sp/>)<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;^3failed^0\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;succeeded\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>multisample<sp/>path<sp/>uses<sp/>the<sp/>wgl<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>wglChoosePixelFormatARB<sp/>&amp;&amp;<sp/>parms.multiSamples<sp/>&gt;<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>iAttributes[20];</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLOAT<sp/><sp/><sp/>fAttributes[]<sp/>=<sp/>{0,<sp/>0};</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT<sp/><sp/><sp/><sp/>numFormats;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>specify<sp/>all<sp/>the<sp/>other<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iAttributes[0]<sp/>=<sp/>WGL_SAMPLE_BUFFERS_ARB;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iAttributes[1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iAttributes[2]<sp/>=<sp/>WGL_SAMPLES_ARB;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iAttributes[3]<sp/>=<sp/>parms.multiSamples;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iAttributes[4]<sp/>=<sp/>WGL_DOUBLE_BUFFER_ARB;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iAttributes[5]<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iAttributes[6]<sp/>=<sp/>WGL_STENCIL_BITS_ARB;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iAttributes[7]<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iAttributes[8]<sp/>=<sp/>WGL_DEPTH_BITS_ARB;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iAttributes[9]<sp/>=<sp/>24;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iAttributes[10]<sp/>=<sp/>WGL_RED_BITS_ARB;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iAttributes[11]<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iAttributes[12]<sp/>=<sp/>WGL_BLUE_BITS_ARB;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iAttributes[13]<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iAttributes[14]<sp/>=<sp/>WGL_GREEN_BITS_ARB;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iAttributes[15]<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iAttributes[16]<sp/>=<sp/>WGL_ALPHA_BITS_ARB;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iAttributes[17]<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iAttributes[18]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iAttributes[19]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wglChoosePixelFormatARB(<sp/>win32.hDC,<sp/>iAttributes,<sp/>fAttributes,<sp/>1,<sp/>&amp;win32.pixelformat,<sp/>&amp;numFormats<sp/>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>the<sp/>&quot;classic&quot;<sp/>choose<sp/>pixel<sp/>format<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eventually<sp/>we<sp/>may<sp/>need<sp/>to<sp/>have<sp/>more<sp/>fallbacks,<sp/>but<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now,<sp/>ask<sp/>for<sp/>everything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>parms.stereo<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;...attempting<sp/>to<sp/>use<sp/>stereo\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src.dwFlags<sp/>|=<sp/>PFD_STEREO;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>choose,<sp/>set,<sp/>and<sp/>describe<sp/>our<sp/>desired<sp/>pixel<sp/>format.<sp/><sp/>If<sp/>we&apos;re</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>a<sp/>minidriver<sp/>then<sp/>we<sp/>need<sp/>to<sp/>bypass<sp/>the<sp/>GDI<sp/>functions,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise<sp/>use<sp/>the<sp/>GDI<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>win32.pixelformat<sp/>=<sp/>ChoosePixelFormat(<sp/>win32.hDC,<sp/>&amp;src<sp/>)<sp/>)<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;...^3GLW_ChoosePFD<sp/>failed^0\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;...PIXELFORMAT<sp/>%d<sp/>selected\n&quot;</highlight><highlight class="normal">,<sp/>win32.pixelformat<sp/>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>full<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>DescribePixelFormat(<sp/>win32.hDC,<sp/>win32.pixelformat,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>win32.pfd<sp/>),<sp/>&amp;win32.pfd<sp/>);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.colorBits<sp/>=<sp/>win32.pfd.cColorBits;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.depthBits<sp/>=<sp/>win32.pfd.cDepthBits;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.stencilBits<sp/>=<sp/>win32.pfd.cStencilBits;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>XP<sp/>seems<sp/>to<sp/>set<sp/>this<sp/>incorrectly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!glConfig.stencilBits<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glConfig.stencilBits<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>same<sp/>SetPixelFormat<sp/>is<sp/>used<sp/>either<sp/>way</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>SetPixelFormat(<sp/>win32.hDC,<sp/>win32.pixelformat,<sp/>&amp;win32.pfd<sp/>)<sp/>==<sp/>FALSE<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;...^3SetPixelFormat<sp/>failed^0\n&quot;</highlight><highlight class="normal">,<sp/>win32.hDC<sp/>);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>startup<sp/>the<sp/>OpenGL<sp/>subsystem<sp/>by<sp/>creating<sp/>a<sp/>context<sp/>and<sp/>making<sp/>it<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;...creating<sp/>GL<sp/>context:<sp/>&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>win32.hGLRC<sp/>=<sp/>qwglCreateContext(<sp/>win32.hDC<sp/>)<sp/>)<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;^3failed^0\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;succeeded\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;...making<sp/>context<sp/>current:<sp/>&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!qwglMakeCurrent(<sp/>win32.hDC,<sp/>win32.hGLRC<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qwglDeleteContext(<sp/>win32.hGLRC<sp/>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>win32.hGLRC<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;^3failed^0\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;succeeded\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="496"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="497"><highlight class="comment">GLW_CreateWindowClasses</highlight></codeline>
<codeline lineno="498"><highlight class="comment">====================</highlight></codeline>
<codeline lineno="499"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GLW_CreateWindowClasses(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>WNDCLASS<sp/>wc;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>register<sp/>the<sp/>window<sp/>class<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>win32.windowClassRegistered<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>&amp;wc,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>wc<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>wc.style<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>wc.lpfnWndProc<sp/><sp/><sp/>=<sp/>(WNDPROC)<sp/>MainWndProc;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>wc.cbClsExtra<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>wc.cbWndExtra<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>wc.hInstance<sp/><sp/><sp/><sp/><sp/>=<sp/>win32.hInstance;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>wc.hIcon<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>LoadIcon(<sp/>win32.hInstance,<sp/>MAKEINTRESOURCE(IDI_ICON1));</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>wc.hCursor<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>LoadCursor<sp/>(NULL,IDC_ARROW);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>wc.hbrBackground<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">HBRUSH__<sp/>*)COLOR_GRAYTEXT;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>wc.lpszMenuName<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>wc.lpszClassName<sp/>=<sp/>WIN32_WINDOW_CLASS_NAME;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!RegisterClass(<sp/>&amp;wc<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;FatalError(<sp/></highlight><highlight class="stringliteral">&quot;GLW_CreateWindow:<sp/>could<sp/>not<sp/>register<sp/>window<sp/>class&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;...registered<sp/>window<sp/>class\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>register<sp/>the<sp/>fake<sp/>window<sp/>class<sp/>that<sp/>is<sp/>only<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>get<sp/>wgl<sp/>extensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>wc.style<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>wc.lpfnWndProc<sp/><sp/><sp/>=<sp/>(WNDPROC)<sp/>FakeWndProc;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>wc.cbClsExtra<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>wc.cbWndExtra<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>wc.hInstance<sp/><sp/><sp/><sp/><sp/>=<sp/>win32.hInstance;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>wc.hIcon<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>LoadIcon(<sp/>win32.hInstance,<sp/>MAKEINTRESOURCE(IDI_ICON1));</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>wc.hCursor<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>LoadCursor<sp/>(NULL,IDC_ARROW);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>wc.hbrBackground<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">HBRUSH__<sp/>*)COLOR_GRAYTEXT;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>wc.lpszMenuName<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>wc.lpszClassName<sp/>=<sp/>WIN32_FAKE_WINDOW_CLASS_NAME;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!RegisterClass(<sp/>&amp;wc<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;FatalError(<sp/></highlight><highlight class="stringliteral">&quot;GLW_CreateWindow:<sp/>could<sp/>not<sp/>register<sp/>window<sp/>class&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;...registered<sp/>fake<sp/>window<sp/>class\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>win32.windowClassRegistered<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="550"><highlight class="comment">=======================</highlight></codeline>
<codeline lineno="551"><highlight class="comment">GLW_CreateWindow</highlight></codeline>
<codeline lineno="552"><highlight class="comment"></highlight></codeline>
<codeline lineno="553"><highlight class="comment">Responsible<sp/>for<sp/>creating<sp/>the<sp/>Win32<sp/>window.</highlight></codeline>
<codeline lineno="554"><highlight class="comment">If<sp/>cdsFullscreen<sp/>is<sp/>true,<sp/>it<sp/>won&apos;t<sp/>have<sp/>a<sp/>border</highlight></codeline>
<codeline lineno="555"><highlight class="comment">=======================</highlight></codeline>
<codeline lineno="556"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GLW_CreateWindow(<sp/><ref refid="structglimp_parms__t" kindref="compound">glimpParms_t</ref><sp/>parms<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stylebits;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x,<sp/>y,<sp/>w,<sp/>h;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exstyle;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>width<sp/>and<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>parms.fullScreen<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exstyle<sp/>=<sp/>WS_EX_TOPMOST;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stylebits<sp/>=<sp/>WS_POPUP|WS_VISIBLE|WS_SYSMENU;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>parms.width;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>parms.height;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RECT<sp/><sp/><sp/><sp/>r;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adjust<sp/>width<sp/>and<sp/>height<sp/>for<sp/>window<sp/>border</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.bottom<sp/>=<sp/>parms.height;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.left<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.top<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.right<sp/>=<sp/>parms.width;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exstyle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stylebits<sp/>=<sp/>WINDOW_STYLE|WS_SYSMENU;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdjustWindowRect<sp/>(&amp;r,<sp/>stylebits,<sp/>FALSE);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>r.right<sp/>-<sp/>r.left;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>r.bottom<sp/>-<sp/>r.top;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>win32.win_xpos.GetInteger();</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>win32.win_ypos.GetInteger();</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adjust<sp/>window<sp/>coordinates<sp/>if<sp/>necessary<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>that<sp/>the<sp/>window<sp/>is<sp/>completely<sp/>on<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x<sp/>+<sp/>w<sp/>&gt;<sp/>win32.desktopWidth<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>(<sp/>win32.desktopWidth<sp/>-<sp/>w<sp/>);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>y<sp/>+<sp/>h<sp/>&gt;<sp/>win32.desktopHeight<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>(<sp/>win32.desktopHeight<sp/>-<sp/>h<sp/>);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>y<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>win32.hWnd<sp/>=<sp/>CreateWindowEx<sp/>(</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exstyle,<sp/></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WIN32_WINDOW_CLASS_NAME,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GAME_NAME,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stylebits,</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x,<sp/>y,<sp/>w,<sp/>h,</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>win32.hInstance,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!win32.hWnd<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;^3GLW_CreateWindow()<sp/>-<sp/>Couldn&apos;t<sp/>create<sp/>window^0\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>::SetTimer(<sp/>win32.hWnd,<sp/>0,<sp/>100,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>ShowWindow(<sp/>win32.hWnd,<sp/>SW_SHOW<sp/>);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateWindow(<sp/>win32.hWnd<sp/>);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;...created<sp/>window<sp/>@<sp/>%d,%d<sp/>(%dx%d)\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>w,<sp/>h<sp/>);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!GLW_InitDriver(<sp/>parms<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowWindow(<sp/>win32.hWnd,<sp/>SW_HIDE<sp/>);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DestroyWindow(<sp/>win32.hWnd<sp/>);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>win32.hWnd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>SetForegroundWindow(<sp/>win32.hWnd<sp/>);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>SetFocus(<sp/>win32.hWnd<sp/>);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.isFullscreen<sp/>=<sp/>parms.fullScreen;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PrintCDSError(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>value<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DISP_CHANGE_RESTART:</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;restart<sp/>required\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DISP_CHANGE_BADPARAM:</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;bad<sp/>param\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DISP_CHANGE_BADFLAGS:</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;bad<sp/>flags\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DISP_CHANGE_FAILED:</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;DISP_CHANGE_FAILED\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DISP_CHANGE_BADMODE:</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;bad<sp/>mode\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DISP_CHANGE_NOTUPDATED:</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>updated\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;unknown<sp/>error<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="675"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="676"><highlight class="comment">GLW_SetFullScreen</highlight></codeline>
<codeline lineno="677"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="678"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GLW_SetFullScreen(<sp/><ref refid="structglimp_parms__t" kindref="compound">glimpParms_t</ref><sp/>parms<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="681"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>some<sp/>reason,<sp/>bounds<sp/>checker<sp/>claims<sp/>that<sp/>windows<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>writing<sp/>past<sp/>the<sp/>bounds<sp/>of<sp/>dm<sp/>in<sp/>the<sp/>get<sp/>display<sp/>frequency<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEVMODE<sp/>dm;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/><sp/><sp/><sp/>filler[1024];</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>hack;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="688"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>DEVMODE<sp/>dm;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>cdsRet;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>DEVMODE<sp/><sp/><sp/><sp/><sp/>devmode;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modeNum;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matched;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>make<sp/>sure<sp/>the<sp/>user<sp/>is<sp/>not<sp/>trying<sp/>to<sp/>select<sp/>a<sp/>mode<sp/>that<sp/>his<sp/>card/monitor<sp/>can&apos;t<sp/>handle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>matched<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>modeNum<sp/>=<sp/>0<sp/>;<sp/>;<sp/>modeNum++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!EnumDisplaySettings(<sp/>NULL,<sp/>modeNum,<sp/>&amp;devmode<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>matched<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>got<sp/>a<sp/>resolution<sp/>match,<sp/>but<sp/>not<sp/>a<sp/>frequency<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>disable<sp/>the<sp/>frequency<sp/>requirement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;...^3%dhz<sp/>is<sp/>unsupported<sp/>at<sp/>%dx%d^0\n&quot;</highlight><highlight class="normal">,<sp/>parms.displayHz,<sp/>parms.width,<sp/>parms.height<sp/>);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms.displayHz<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;...^3%dx%d<sp/>is<sp/>unsupported<sp/>in<sp/>32<sp/>bit^0\n&quot;</highlight><highlight class="normal">,<sp/>parms.width,<sp/>parms.height<sp/>);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)devmode.dmPelsWidth<sp/>&gt;=<sp/>parms.width</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)devmode.dmPelsHeight<sp/>&gt;=<sp/>parms.height</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>devmode.dmBitsPerPel<sp/>==<sp/>32<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matched<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>parms.displayHz<sp/>==<sp/>0<sp/>||<sp/>devmode.dmDisplayFrequency<sp/>==<sp/>parms.displayHz<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>&amp;dm,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>dm<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>dm.dmSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>dm<sp/>);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>dm.dmPelsWidth<sp/><sp/>=<sp/>parms.width;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>dm.dmPelsHeight<sp/>=<sp/>parms.height;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>dm.dmBitsPerPel<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>dm.dmFields<sp/><sp/><sp/><sp/><sp/>=<sp/>DM_PELSWIDTH<sp/>|<sp/>DM_PELSHEIGHT<sp/>|<sp/>DM_BITSPERPEL;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>parms.displayHz<sp/>!=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm.dmDisplayFrequency<sp/>=<sp/>parms.displayHz;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm.dmFields<sp/>|=<sp/>DM_DISPLAYFREQUENCY;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;...calling<sp/>CDS:<sp/>&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>setting<sp/>the<sp/>exact<sp/>mode<sp/>requested,<sp/>because<sp/>some<sp/>drivers<sp/>don&apos;t<sp/>report</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>low<sp/>res<sp/>modes<sp/>in<sp/>EnumDisplaySettings,<sp/>but<sp/>still<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>cdsRet<sp/>=<sp/>ChangeDisplaySettings(<sp/>&amp;dm,<sp/>CDS_FULLSCREEN<sp/>)<sp/>)<sp/>==<sp/>DISP_CHANGE_SUCCESSFUL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;ok\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>win32.cdsFullscreen<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>exact<sp/>mode<sp/>failed,<sp/>so<sp/>scan<sp/>EnumDisplaySettings<sp/>for<sp/>the<sp/>next<sp/>largest<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;^3failed^0,<sp/>&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>PrintCDSError(<sp/>cdsRet<sp/>);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;...trying<sp/>next<sp/>higher<sp/>resolution:&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>could<sp/>do<sp/>a<sp/>better<sp/>matching<sp/>job<sp/>here...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>modeNum<sp/>=<sp/>0<sp/>;<sp/>;<sp/>modeNum++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!EnumDisplaySettings(<sp/>NULL,<sp/>modeNum,<sp/>&amp;devmode<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)devmode.dmPelsWidth<sp/>&gt;=<sp/>parms.width</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)devmode.dmPelsHeight<sp/>&gt;=<sp/>parms.height</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>devmode.dmBitsPerPel<sp/>==<sp/>32<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>cdsRet<sp/>=<sp/>ChangeDisplaySettings(<sp/>&amp;devmode,<sp/>CDS_FULLSCREEN<sp/>)<sp/>)<sp/>==<sp/>DISP_CHANGE_SUCCESSFUL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;ok\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>win32.cdsFullscreen<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;\n...^3no<sp/>high<sp/>res<sp/>mode<sp/>found^0\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="779"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="780"><highlight class="comment">GLimp_Init</highlight></codeline>
<codeline lineno="781"><highlight class="comment"></highlight></codeline>
<codeline lineno="782"><highlight class="comment">This<sp/>is<sp/>the<sp/>platform<sp/>specific<sp/>OpenGL<sp/>initialization<sp/>function.<sp/><sp/>It</highlight></codeline>
<codeline lineno="783"><highlight class="comment">is<sp/>responsible<sp/>for<sp/>loading<sp/>OpenGL,<sp/>initializing<sp/>it,</highlight></codeline>
<codeline lineno="784"><highlight class="comment">creating<sp/>a<sp/>window<sp/>of<sp/>the<sp/>appropriate<sp/>size,<sp/>doing</highlight></codeline>
<codeline lineno="785"><highlight class="comment">fullscreen<sp/>manipulations,<sp/>etc.<sp/><sp/>Its<sp/>overall<sp/>responsibility<sp/>is</highlight></codeline>
<codeline lineno="786"><highlight class="comment">to<sp/>make<sp/>sure<sp/>that<sp/>a<sp/>functional<sp/>OpenGL<sp/>subsystem<sp/>is<sp/>operating</highlight></codeline>
<codeline lineno="787"><highlight class="comment">when<sp/>it<sp/>returns<sp/>to<sp/>the<sp/>ref.</highlight></codeline>
<codeline lineno="788"><highlight class="comment"></highlight></codeline>
<codeline lineno="789"><highlight class="comment">If<sp/>there<sp/>is<sp/>any<sp/>failure,<sp/>the<sp/>renderer<sp/>will<sp/>revert<sp/>back<sp/>to<sp/>safe</highlight></codeline>
<codeline lineno="790"><highlight class="comment">parameters<sp/>and<sp/>try<sp/>again.</highlight></codeline>
<codeline lineno="791"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="792"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GLimp_Init(<sp/><ref refid="structglimp_parms__t" kindref="compound">glimpParms_t</ref><sp/>parms<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*driverName;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>HDC<sp/><sp/><sp/><sp/><sp/>hDC;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;Initializing<sp/>OpenGL<sp/>subsystem\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>our<sp/>desktop<sp/>attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>hDC<sp/>=<sp/>GetDC(<sp/>GetDesktopWindow()<sp/>);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>win32.desktopBitsPixel<sp/>=<sp/>GetDeviceCaps(<sp/>hDC,<sp/>BITSPIXEL<sp/>);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>win32.desktopWidth<sp/>=<sp/>GetDeviceCaps(<sp/>hDC,<sp/>HORZRES<sp/>);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>win32.desktopHeight<sp/>=<sp/>GetDeviceCaps(<sp/>hDC,<sp/>VERTRES<sp/>);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>ReleaseDC(<sp/>GetDesktopWindow(),<sp/>hDC<sp/>);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can&apos;t<sp/>run<sp/>in<sp/>a<sp/>window<sp/>unless<sp/>it<sp/>is<sp/>32<sp/>bpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>win32.desktopBitsPixel<sp/>&lt;<sp/>32<sp/>&amp;&amp;<sp/>!parms.fullScreen<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(</highlight><highlight class="stringliteral">&quot;^3Windowed<sp/>mode<sp/>requires<sp/>32<sp/>bit<sp/>desktop<sp/>depth^0\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>the<sp/>hardware<sp/>gamma<sp/>so<sp/>it<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>restored<sp/>on<sp/>exit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>GLimp_SaveGamma();</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>our<sp/>window<sp/>classes<sp/>if<sp/>we<sp/>haven&apos;t<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>GLW_CreateWindowClasses();</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>will<sp/>load<sp/>the<sp/>dll<sp/>and<sp/>set<sp/>all<sp/>our<sp/>qgl*<sp/>function<sp/>pointers,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>doesn&apos;t<sp/>create<sp/>a<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>r_glDriver<sp/>is<sp/>only<sp/>intended<sp/>for<sp/>using<sp/>instrumented<sp/>OpenGL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dlls.<sp/><sp/>Normal<sp/>users<sp/>should<sp/>never<sp/>have<sp/>to<sp/>use<sp/>it,<sp/>and<sp/>it<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>archived.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>driverName<sp/>=<sp/>r_glDriver.GetString()[0]<sp/>?<sp/>r_glDriver.GetString()<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;opengl32&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!QGL_Init(<sp/>driverName<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;^3GLimp_Init()<sp/>could<sp/>not<sp/>load<sp/>r_glDriver<sp/>\&quot;%s\&quot;^0\n&quot;</highlight><highlight class="normal">,<sp/>driverName<sp/>);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>getting<sp/>the<sp/>wgl<sp/>extensions<sp/>involves<sp/>creating<sp/>a<sp/>fake<sp/>window<sp/>to<sp/>get<sp/>a<sp/>context,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>is<sp/>pretty<sp/>disgusting,<sp/>and<sp/>seems<sp/>to<sp/>mess<sp/>with<sp/>the<sp/>AGP<sp/>VAR<sp/>allocation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>GLW_GetWGLExtensionsWithFakeWindow();</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>change<sp/>to<sp/>fullscreen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>parms.fullScreen<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!GLW_SetFullScreen(<sp/>parms<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLimp_Shutdown();</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>create<sp/>a<sp/>window<sp/>with<sp/>the<sp/>correct<sp/>pixel<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>init<sp/>the<sp/>renderer<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!GLW_CreateWindow(<sp/>parms<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLimp_Shutdown();</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wglSwapinterval,<sp/>etc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>GLW_CheckWGLExtensions(<sp/>win32.hDC<sp/>);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>logging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>GLimp_EnableLogging(<sp/>(<sp/>r_logFile.GetInteger()<sp/>!=<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="857"><highlight class="normal">}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="861"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="862"><highlight class="comment">GLimp_SetScreenParms</highlight></codeline>
<codeline lineno="863"><highlight class="comment"></highlight></codeline>
<codeline lineno="864"><highlight class="comment">Sets<sp/>up<sp/>the<sp/>screen<sp/>based<sp/>on<sp/>passed<sp/>parms..<sp/></highlight></codeline>
<codeline lineno="865"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="866"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GLimp_SetScreenParms(<sp/><ref refid="structglimp_parms__t" kindref="compound">glimpParms_t</ref><sp/>parms<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exstyle;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stylebits;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y,<sp/>w,<sp/>h;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>DEVMODE<sp/>dm;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>&amp;dm,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>dm<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>dm.dmSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>dm<sp/>);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>dm.dmFields<sp/><sp/><sp/><sp/><sp/>=<sp/>DM_PELSWIDTH<sp/>|<sp/>DM_PELSHEIGHT<sp/>|<sp/>DM_BITSPERPEL;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>parms.displayHz<sp/>!=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm.dmDisplayFrequency<sp/>=<sp/>parms.displayHz;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm.dmFields<sp/>|=<sp/>DM_DISPLAYFREQUENCY;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>win32.cdsFullscreen<sp/>=<sp/>parms.fullScreen;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>glConfig.isFullscreen<sp/>=<sp/>parms.fullScreen;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>parms.fullScreen<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exstyle<sp/>=<sp/>WS_EX_TOPMOST;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stylebits<sp/>=<sp/>WS_POPUP|WS_VISIBLE|WS_SYSMENU;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetWindowLong(<sp/>win32.hWnd,<sp/>GWL_STYLE,<sp/>stylebits<sp/>);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetWindowLong(<sp/>win32.hWnd,<sp/>GWL_EXSTYLE,<sp/>exstyle<sp/>);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm.dmPelsWidth<sp/><sp/>=<sp/>parms.width;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm.dmPelsHeight<sp/>=<sp/>parms.height;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm.dmBitsPerPel<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>y<sp/>=<sp/>w<sp/>=<sp/>h<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RECT<sp/><sp/><sp/><sp/>r;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adjust<sp/>width<sp/>and<sp/>height<sp/>for<sp/>window<sp/>border</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.bottom<sp/>=<sp/>parms.height;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.left<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.top<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.right<sp/>=<sp/>parms.width;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>r.right<sp/>-<sp/>r.left;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>r.bottom<sp/>-<sp/>r.top;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>win32.win_xpos.GetInteger();</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>win32.win_ypos.GetInteger();</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adjust<sp/>window<sp/>coordinates<sp/>if<sp/>necessary<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>that<sp/>the<sp/>window<sp/>is<sp/>completely<sp/>on<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x<sp/>+<sp/>w<sp/>&gt;<sp/>win32.desktopWidth<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>(<sp/>win32.desktopWidth<sp/>-<sp/>w<sp/>);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>y<sp/>+<sp/>h<sp/>&gt;<sp/>win32.desktopHeight<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>(<sp/>win32.desktopHeight<sp/>-<sp/>h<sp/>);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>y<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm.dmPelsWidth<sp/><sp/>=<sp/>win32.desktopWidth;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm.dmPelsHeight<sp/>=<sp/>win32.desktopHeight;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm.dmBitsPerPel<sp/>=<sp/>win32.desktopBitsPixel;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exstyle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stylebits<sp/>=<sp/>WINDOW_STYLE|WS_SYSMENU;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdjustWindowRect<sp/>(&amp;r,<sp/>stylebits,<sp/>FALSE);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetWindowLong(<sp/>win32.hWnd,<sp/>GWL_STYLE,<sp/>stylebits<sp/>);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetWindowLong(<sp/>win32.hWnd,<sp/>GWL_EXSTYLE,<sp/>exstyle<sp/>);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;%i<sp/>%i<sp/>%i<sp/>%i\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>w,<sp/>h<sp/>);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>(<sp/>ChangeDisplaySettings(<sp/>&amp;dm,<sp/>parms.fullScreen<sp/>?<sp/>CDS_FULLSCREEN<sp/>:<sp/>0<sp/>)<sp/>==<sp/>DISP_CHANGE_SUCCESSFUL<sp/>);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>SetWindowPos(<sp/>win32.hWnd,<sp/>parms.fullScreen<sp/>?<sp/>HWND_TOPMOST<sp/>:<sp/>HWND_NOTOPMOST,<sp/>x,<sp/>y,<sp/>w,<sp/>h,<sp/>parms.fullScreen<sp/>?<sp/>SWP_NOSIZE<sp/>|<sp/>SWP_NOMOVE<sp/>:<sp/>SWP_SHOWWINDOW<sp/>);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="935"><highlight class="normal">}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="938"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="939"><highlight class="comment">GLimp_Shutdown</highlight></codeline>
<codeline lineno="940"><highlight class="comment"></highlight></codeline>
<codeline lineno="941"><highlight class="comment">This<sp/>routine<sp/>does<sp/>all<sp/>OS<sp/>specific<sp/>shutdown<sp/>procedures<sp/>for<sp/>the<sp/>OpenGL</highlight></codeline>
<codeline lineno="942"><highlight class="comment">subsystem.</highlight></codeline>
<codeline lineno="943"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="944"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GLimp_Shutdown(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*success[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;failed&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;success&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;Shutting<sp/>down<sp/>OpenGL<sp/>subsystem\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>current<sp/>context<sp/>to<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>qwglMakeCurrent<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/>qwglMakeCurrent(<sp/>NULL,<sp/>NULL<sp/>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;...wglMakeCurrent(<sp/>NULL,<sp/>NULL<sp/>):<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>success[retVal]<sp/>);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>HGLRC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>win32.hGLRC<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/>qwglDeleteContext(<sp/>win32.hGLRC<sp/>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;...deleting<sp/>GL<sp/>context:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>success[retVal]<sp/>);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>win32.hGLRC<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>release<sp/>DC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>win32.hDC<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/>ReleaseDC(<sp/>win32.hWnd,<sp/>win32.hDC<sp/>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;...releasing<sp/>DC:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>success[retVal]<sp/>);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>win32.hDC<sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>destroy<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>win32.hWnd<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;...destroying<sp/>window\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowWindow(<sp/>win32.hWnd,<sp/>SW_HIDE<sp/>);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DestroyWindow(<sp/>win32.hWnd<sp/>);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>win32.hWnd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>display<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>win32.cdsFullscreen<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;...resetting<sp/>display\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ChangeDisplaySettings(<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>win32.cdsFullscreen<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>close<sp/>the<sp/>thread<sp/>so<sp/>the<sp/>handle<sp/>doesn&apos;t<sp/>dangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>win32.renderThreadHandle<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;...closing<sp/>smp<sp/>thread\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseHandle(<sp/>win32.renderThreadHandle<sp/>);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>win32.renderThreadHandle<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>restore<sp/>gamma</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/>GLimp_RestoreGamma();</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shutdown<sp/>QGL<sp/>subsystem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>QGL_Shutdown();</highlight></codeline>
<codeline lineno="998"><highlight class="normal">}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1002"><highlight class="comment">=====================</highlight></codeline>
<codeline lineno="1003"><highlight class="comment">GLimp_SwapBuffers</highlight></codeline>
<codeline lineno="1004"><highlight class="comment">=====================</highlight></codeline>
<codeline lineno="1005"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GLimp_SwapBuffers(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wglSwapinterval<sp/>is<sp/>a<sp/>windows-private<sp/>extension,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>must<sp/>check<sp/>for<sp/>it<sp/>here<sp/>instead<sp/>of<sp/>portably</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r_swapInterval.IsModified()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_swapInterval.ClearModified();</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>wglSwapIntervalEXT<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wglSwapIntervalEXT(<sp/>r_swapInterval.GetInteger()<sp/>);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>qwglSwapBuffers(<sp/>win32.hDC<sp/>);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight><highlight class="comment">//Sys_DebugPrintf(<sp/>&quot;***<sp/>SwapBuffers()<sp/>***\n&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1025"><highlight class="comment">===========================================================</highlight></codeline>
<codeline lineno="1026"><highlight class="comment"></highlight></codeline>
<codeline lineno="1027"><highlight class="comment">SMP<sp/>acceleration</highlight></codeline>
<codeline lineno="1028"><highlight class="comment"></highlight></codeline>
<codeline lineno="1029"><highlight class="comment">===========================================================</highlight></codeline>
<codeline lineno="1030"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/><sp/><sp/>REALLOC_DC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1035"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="1036"><highlight class="comment">GLimp_ActivateContext</highlight></codeline>
<codeline lineno="1037"><highlight class="comment"></highlight></codeline>
<codeline lineno="1038"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="1039"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GLimp_ActivateContext(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!qwglMakeCurrent(<sp/>win32.hDC,<sp/>win32.hGLRC<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>win32.wglErrors++;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1047"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="1048"><highlight class="comment">GLimp_DeactivateContext</highlight></codeline>
<codeline lineno="1049"><highlight class="comment"></highlight></codeline>
<codeline lineno="1050"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="1051"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GLimp_DeactivateContext(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>qglFinish();</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!qwglMakeCurrent(<sp/>win32.hDC,<sp/>NULL<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>win32.wglErrors++;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>REALLOC_DC</highlight></codeline>
<codeline lineno="1058"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>makeCurrent<sp/>NULL<sp/>frees<sp/>the<sp/>DC,<sp/>so<sp/>get<sp/>another</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>win32.hDC<sp/>=<sp/>GetDC(<sp/>win32.hWnd<sp/>)<sp/>)<sp/>==<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>win32.wglErrors++;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1063"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1067"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="1068"><highlight class="comment">GLimp_RenderThreadWrapper</highlight></codeline>
<codeline lineno="1069"><highlight class="comment"></highlight></codeline>
<codeline lineno="1070"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="1071"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GLimp_RenderThreadWrapper(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>win32.glimpRenderThread();</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unbind<sp/>the<sp/>context<sp/>before<sp/>we<sp/>die</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>qwglMakeCurrent(<sp/>win32.hDC,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1080"><highlight class="comment">=======================</highlight></codeline>
<codeline lineno="1081"><highlight class="comment">GLimp_SpawnRenderThread</highlight></codeline>
<codeline lineno="1082"><highlight class="comment"></highlight></codeline>
<codeline lineno="1083"><highlight class="comment">Returns<sp/>false<sp/>if<sp/>the<sp/>system<sp/>only<sp/>has<sp/>a<sp/>single<sp/>processor</highlight></codeline>
<codeline lineno="1084"><highlight class="comment">=======================</highlight></codeline>
<codeline lineno="1085"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GLimp_SpawnRenderThread(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">function</highlight><highlight class="normal">)(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>SYSTEM_INFO<sp/>info;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>number<sp/>of<sp/>processors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>GetSystemInfo(<sp/>&amp;info<sp/>);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>info.dwNumberOfProcessors<sp/>&lt;<sp/>2<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>IPC<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>win32.renderCommandsEvent<sp/>=<sp/>CreateEvent(<sp/>NULL,<sp/>TRUE,<sp/>FALSE,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>win32.renderCompletedEvent<sp/>=<sp/>CreateEvent(<sp/>NULL,<sp/>TRUE,<sp/>FALSE,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>win32.renderActiveEvent<sp/>=<sp/>CreateEvent(<sp/>NULL,<sp/>TRUE,<sp/>FALSE,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>win32.glimpRenderThread<sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>win32.renderThreadHandle<sp/>=<sp/>CreateThread(</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LPSECURITY_ATTRIBUTES<sp/>lpsa,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DWORD<sp/>cbStack,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LPTHREAD_START_ROUTINE)GLimp_RenderThreadWrapper,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LPTHREAD_START_ROUTINE<sp/>lpStartAddr,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LPVOID<sp/>lpvThreadParm,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>DWORD<sp/>fdwCreate,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;win32.renderThreadId<sp/>);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!win32.renderThreadHandle<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Error(<sp/></highlight><highlight class="stringliteral">&quot;GLimp_SpawnRenderThread:<sp/>failed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>SetThreadPriority(<sp/>win32.renderThreadHandle,<sp/>THREAD_PRIORITY_ABOVE_NORMAL<sp/>);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="1116"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>they<sp/>always<sp/>run<sp/>on<sp/>different<sp/>processors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>SetThreadAffinityMask(<sp/>GetCurrentThread,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>SetThreadAffinityMask(<sp/>win32.renderThreadHandle,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1120"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/><sp/><sp/>DEBUG_PRINTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1128"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="1129"><highlight class="comment">GLimp_BackEndSleep</highlight></codeline>
<codeline lineno="1130"><highlight class="comment"></highlight></codeline>
<codeline lineno="1131"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="1132"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*GLimp_BackEndSleep(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*data;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PRINTS</highlight></codeline>
<codeline lineno="1137"><highlight class="preprocessor"></highlight><highlight class="normal">OutputDebugString(<sp/></highlight><highlight class="stringliteral">&quot;--&gt;GLimp_BackEndSleep\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1139"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ResetEvent(<sp/>win32.renderActiveEvent<sp/>);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>after<sp/>this,<sp/>the<sp/>front<sp/>end<sp/>can<sp/>exit<sp/>GLimp_FrontEndSleep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>SetEvent(<sp/>win32.renderCompletedEvent<sp/>);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>WaitForSingleObject(<sp/>win32.renderCommandsEvent,<sp/>INFINITE<sp/>);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>ResetEvent(<sp/>win32.renderCompletedEvent<sp/>);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>ResetEvent(<sp/>win32.renderCommandsEvent<sp/>);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>win32.smpData;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>after<sp/>this,<sp/>the<sp/>main<sp/>thread<sp/>can<sp/>exit<sp/>GLimp_WakeRenderer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>SetEvent(<sp/>win32.renderActiveEvent<sp/>);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PRINTS</highlight></codeline>
<codeline lineno="1155"><highlight class="preprocessor"></highlight><highlight class="normal">OutputDebugString(<sp/></highlight><highlight class="stringliteral">&quot;&lt;--GLimp_BackEndSleep\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1157"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1161"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="1162"><highlight class="comment">GLimp_FrontEndSleep</highlight></codeline>
<codeline lineno="1163"><highlight class="comment"></highlight></codeline>
<codeline lineno="1164"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="1165"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GLimp_FrontEndSleep(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PRINTS</highlight></codeline>
<codeline lineno="1168"><highlight class="preprocessor"></highlight><highlight class="normal">OutputDebugString(<sp/></highlight><highlight class="stringliteral">&quot;--&gt;GLimp_FrontEndSleep\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1170"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>WaitForSingleObject(<sp/>win32.renderCompletedEvent,<sp/>INFINITE<sp/>);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PRINTS</highlight></codeline>
<codeline lineno="1173"><highlight class="preprocessor"></highlight><highlight class="normal">OutputDebugString(<sp/></highlight><highlight class="stringliteral">&quot;&lt;--GLimp_FrontEndSleep\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1175"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/>renderThreadActive;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1180"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="1181"><highlight class="comment">GLimp_WakeBackEnd</highlight></codeline>
<codeline lineno="1182"><highlight class="comment"></highlight></codeline>
<codeline lineno="1183"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="1184"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GLimp_WakeBackEnd(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>r;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PRINTS</highlight></codeline>
<codeline lineno="1189"><highlight class="preprocessor"></highlight><highlight class="normal">OutputDebugString(<sp/></highlight><highlight class="stringliteral">&quot;--&gt;GLimp_WakeBackEnd\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1191"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>win32.smpData<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>renderThreadActive<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;FatalError(<sp/></highlight><highlight class="stringliteral">&quot;GLimp_WakeBackEnd:<sp/>already<sp/>active&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>WaitForSingleObject(<sp/>win32.renderActiveEvent,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r<sp/>==<sp/>WAIT_OBJECT_0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;FatalError(<sp/></highlight><highlight class="stringliteral">&quot;GLimp_WakeBackEnd:<sp/>already<sp/>signaled&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>WaitForSingleObject(<sp/>win32.renderCommandsEvent,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r<sp/>==<sp/>WAIT_OBJECT_0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;FatalError(<sp/></highlight><highlight class="stringliteral">&quot;GLimp_WakeBackEnd:<sp/>commands<sp/>already<sp/>signaled&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>after<sp/>this,<sp/>the<sp/>renderer<sp/>can<sp/>continue<sp/>through<sp/>GLimp_RendererSleep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>SetEvent(<sp/>win32.renderCommandsEvent<sp/>);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>WaitForSingleObject(<sp/>win32.renderActiveEvent,<sp/>5000<sp/>);</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r<sp/>==<sp/>WAIT_TIMEOUT<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;FatalError(<sp/></highlight><highlight class="stringliteral">&quot;GLimp_WakeBackEnd:<sp/>WAIT_TIMEOUT&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PRINTS</highlight></codeline>
<codeline lineno="1217"><highlight class="preprocessor"></highlight><highlight class="normal">OutputDebugString(<sp/></highlight><highlight class="stringliteral">&quot;&lt;--GLimp_WakeBackEnd\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1219"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight><highlight class="comment">//===================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1224"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="1225"><highlight class="comment">GLimp_ExtensionPointer</highlight></codeline>
<codeline lineno="1226"><highlight class="comment"></highlight></codeline>
<codeline lineno="1227"><highlight class="comment">Returns<sp/>a<sp/>function<sp/>pointer<sp/>for<sp/>an<sp/>OpenGL<sp/>extension<sp/>entry<sp/>point</highlight></codeline>
<codeline lineno="1228"><highlight class="comment">===================</highlight></codeline>
<codeline lineno="1229"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal">GLExtension_t<sp/>GLimp_ExtensionPointer(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/><sp/><sp/><sp/>(*proc)(void);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/>proc<sp/>=<sp/>(GLExtension_t)qwglGetProcAddress(<sp/>name<sp/>);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!proc<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>common-&gt;Printf(<sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>find<sp/>proc<sp/>address<sp/>for:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>name<sp/>);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>proc;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_glimp.cpp"/>
  </compounddef>
</doxygen>
