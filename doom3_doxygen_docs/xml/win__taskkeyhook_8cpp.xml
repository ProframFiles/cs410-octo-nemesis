<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="win__taskkeyhook_8cpp" kind="file">
    <compoundname>win_taskkeyhook.cpp</compoundname>
    <includes refid="precompiled_8h" local="yes">../../idlib/precompiled.h</includes>
    <includes local="no">afxwin.h</includes>
    <includes refid="win__local_8h" local="yes">win_local.h</includes>
    <incdepgraph>
      <node id="2603">
        <label>E:/sources/3rd_party/DOOM/neo/sys/win32/win_taskkeyhook.cpp</label>
        <link refid="win_taskkeyhook.cpp"/>
        <childnode refid="2604" relation="include">
        </childnode>
      </node>
      <node id="2604">
        <label>afxwin.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="win__taskkeyhook_8cpp_1a808e08638be3cba36e36759e5b150de0" prot="public" static="no">
        <name>DLLEXPORT</name>
        <initializer>__declspec(dllexport)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_taskkeyhook.cpp" line="40" column="9" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_taskkeyhook.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="win__taskkeyhook_8cpp_1ab254b8d1541b5189add5456e07d5cd0f" prot="public" static="no" mutable="no">
        <type>LPCTSTR</type>
        <definition>LPCTSTR KEY_DisableTaskMgr</definition>
        <argsstring></argsstring>
        <name>KEY_DisableTaskMgr</name>
        <initializer>= &quot;Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_taskkeyhook.cpp" line="43" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_taskkeyhook.cpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="win__taskkeyhook_8cpp_1a79b0248bcbdc8ef3bde96c2d36bdb535" prot="public" static="no" mutable="no">
        <type>LPCTSTR</type>
        <definition>LPCTSTR VAL_DisableTaskMgr</definition>
        <argsstring></argsstring>
        <name>VAL_DisableTaskMgr</name>
        <initializer>= &quot;DisableTaskMgr&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_taskkeyhook.cpp" line="44" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_taskkeyhook.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="win__taskkeyhook_8cpp_1a3c93087d0ac13b6aefc4f4db5fa4da9f" prot="public" static="no" mutable="no">
        <type>HHOOK</type>
        <definition>HHOOK g_hHookKbdLL</definition>
        <argsstring></argsstring>
        <name>g_hHookKbdLL</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_taskkeyhook.cpp" line="49" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_taskkeyhook.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="win__taskkeyhook_8cpp_1ab7a81465de32e8346d7ac98fb41c56bb" prot="public" static="no" mutable="no">
        <type>BOOL</type>
        <definition>BOOL g_bBeep</definition>
        <argsstring></argsstring>
        <name>g_bBeep</name>
        <initializer>= FALSE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_taskkeyhook.cpp" line="50" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_taskkeyhook.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="win__taskkeyhook_8cpp_1a964fdacf6cb4f35142dff85715a6d7b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LRESULT CALLBACK</type>
        <definition>LRESULT CALLBACK MyTaskKeyHookLL</definition>
        <argsstring>(int nCode, WPARAM wp, LPARAM lp)</argsstring>
        <name>MyTaskKeyHookLL</name>
        <param>
          <type>int</type>
          <declname>nCode</declname>
        </param>
        <param>
          <type>WPARAM</type>
          <declname>wp</declname>
        </param>
        <param>
          <type><ref refid="class_c_prop_tree_item" kindref="compound">LPARAM</ref></type>
          <declname>lp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_taskkeyhook.cpp" line="62" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_taskkeyhook.cpp" bodystart="62" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="win__taskkeyhook_8cpp_1a4f42a728f1ce2f1782e78d72b0598a2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL AreTaskKeysDisabled</definition>
        <argsstring>()</argsstring>
        <name>AreTaskKeysDisabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_taskkeyhook.cpp" line="91" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_taskkeyhook.cpp" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="win__taskkeyhook_8cpp_1a500a16b2fc3b568a8f504e0823e6a875" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL IsTaskMgrDisabled</definition>
        <argsstring>()</argsstring>
        <name>IsTaskMgrDisabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_taskkeyhook.cpp" line="100" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_taskkeyhook.cpp" bodystart="100" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="win__taskkeyhook_8cpp_1a78687cf14f9f4330463181225b4fd5fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DisableTaskKeys</definition>
        <argsstring>(BOOL bDisable, BOOL bBeep, BOOL bTaskMgr)</argsstring>
        <name>DisableTaskKeys</name>
        <param>
          <type>BOOL</type>
          <declname>bDisable</declname>
        </param>
        <param>
          <type>BOOL</type>
          <declname>bBeep</declname>
        </param>
        <param>
          <type>BOOL</type>
          <declname>bTaskMgr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_taskkeyhook.cpp" line="117" column="1" bodyfile="E:/sources/3rd_party/DOOM/neo/sys/win32/win_taskkeyhook.cpp" bodystart="117" bodyend="145"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Copyright<sp/>(C)<sp/>1999-2011<sp/>id<sp/>Software<sp/>LLC,<sp/>a<sp/>ZeniMax<sp/>Media<sp/>company.<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Doom<sp/>3<sp/>GPL<sp/>Source<sp/>Code<sp/>(?Doom<sp/>3<sp/>Source<sp/>Code?).<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment">it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment">the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment">(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment">GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment">along<sp/>with<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">In<sp/>addition,<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code<sp/>is<sp/>also<sp/>subject<sp/>to<sp/>certain<sp/>additional<sp/>terms.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>these<sp/>additional<sp/>terms<sp/>immediately<sp/>following<sp/>the<sp/>terms<sp/>and<sp/>conditions<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>which<sp/>accompanied<sp/>the<sp/>Doom<sp/>3<sp/>Source<sp/>Code.<sp/><sp/>If<sp/>not,<sp/>please<sp/>request<sp/>a<sp/>copy<sp/>in<sp/>writing<sp/>from<sp/>id<sp/>Software<sp/>at<sp/>the<sp/>address<sp/>below.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">If<sp/>you<sp/>have<sp/>questions<sp/>concerning<sp/>this<sp/>license<sp/>or<sp/>the<sp/>applicable<sp/>additional<sp/>terms,<sp/>you<sp/>may<sp/>contact<sp/>in<sp/>writing<sp/>id<sp/>Software<sp/>LLC,<sp/>c/o<sp/>ZeniMax<sp/>Media<sp/>Inc.,<sp/>Suite<sp/>120,<sp/>Rockville,<sp/>Maryland<sp/>20850<sp/>USA.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">===========================================================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../idlib/precompiled.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>hdrstop</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>implements<sp/>the<sp/>low-level<sp/>keyboard<sp/>hook<sp/>that<sp/>traps<sp/>the<sp/>task<sp/>keys.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>_WIN32_WINNT<sp/>0x0500<sp/>//<sp/>for<sp/>KBDLLHOOKSTRUCT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;afxwin.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MFC<sp/>core<sp/>and<sp/>standard<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;win_local.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DLLEXPORT<sp/>__declspec(dllexport)</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Magic<sp/>registry<sp/>key/value<sp/>for<sp/>&quot;Remove<sp/>Task<sp/>Manager&quot;<sp/>policy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">LPCTSTR<sp/>KEY_DisableTaskMgr<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">LPCTSTR<sp/>VAL_DisableTaskMgr<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;DisableTaskMgr&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>section<sp/>is<sp/>SHARED<sp/>among<sp/>all<sp/>instances<sp/>of<sp/>this<sp/>DLL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>low-level<sp/>keyboard<sp/>hook<sp/>is<sp/>always<sp/>a<sp/>system-wide<sp/>hook.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>data_seg<sp/>(&quot;.mydata&quot;)</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="normal">HHOOK<sp/>g_hHookKbdLL<sp/>=<sp/>NULL;<sp/><sp/></highlight><highlight class="comment">//<sp/>hook<sp/>handle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">BOOL<sp/><sp/>g_bBeep<sp/>=<sp/>FALSE;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>beep<sp/>on<sp/>illegal<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>data_seg<sp/>()</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>comment(linker,<sp/>&quot;/SECTION:.mydata,RWS&quot;)<sp/>//<sp/>tell<sp/>linker:<sp/>make<sp/>it<sp/>shared</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="55"><highlight class="comment">================</highlight></codeline>
<codeline lineno="56"><highlight class="comment">MyTaskKeyHookLL</highlight></codeline>
<codeline lineno="57"><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/>Low-level<sp/>keyboard<sp/>hook:</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/>Trap<sp/>task-switching<sp/>keys<sp/>by<sp/>returning<sp/>without<sp/>passing<sp/>along.</highlight></codeline>
<codeline lineno="60"><highlight class="comment">================</highlight></codeline>
<codeline lineno="61"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">LRESULT<sp/>CALLBACK<sp/>MyTaskKeyHookLL(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCode,<sp/>WPARAM<sp/>wp,<sp/><ref refid="class_c_prop_tree_item" kindref="compound">LPARAM</ref><sp/>lp<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>KBDLLHOOKSTRUCT<sp/>*pkh<sp/>=<sp/>(KBDLLHOOKSTRUCT<sp/>*)<sp/>lp;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>nCode<sp/>==<sp/>HC_ACTION<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOL<sp/>bCtrlKeyDown<sp/>=<sp/>GetAsyncKeyState(<sp/>VK_CONTROL)&gt;&gt;((</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SHORT)<sp/>*<sp/>8)<sp/>-<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><sp/><sp/><sp/>(<sp/>pkh-&gt;vkCode<sp/>==<sp/>VK_ESCAPE<sp/>&amp;&amp;<sp/>bCtrlKeyDown<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ctrl+Esc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(<sp/>pkh-&gt;vkCode<sp/>==<sp/>VK_TAB<sp/>&amp;&amp;<sp/>pkh-&gt;flags<sp/>&amp;<sp/>LLKHF_ALTDOWN<sp/>)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Alt+TAB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(<sp/>pkh-&gt;vkCode<sp/>==<sp/>VK_ESCAPE<sp/>&amp;&amp;<sp/>pkh-&gt;flags<sp/>&amp;<sp/>LLKHF_ALTDOWN<sp/>)<sp/><sp/></highlight><highlight class="comment">//<sp/>Alt+Esc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(<sp/>pkh-&gt;vkCode<sp/>==<sp/>VK_LWIN<sp/>||<sp/>pkh-&gt;vkCode<sp/>==<sp/>VK_RWIN<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>Menu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>g_bBeep<sp/>&amp;&amp;<sp/>(<sp/>wp<sp/>==<sp/>WM_SYSKEYDOWN<sp/>||<sp/>wp<sp/>==<sp/>WM_KEYDOWN<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MessageBeep(<sp/>0<sp/>);<sp/></highlight><highlight class="comment">//<sp/>beep<sp/>on<sp/>downstroke<sp/>if<sp/>requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/></highlight><highlight class="comment">//<sp/>return<sp/>without<sp/>processing<sp/>the<sp/>key<sp/>strokes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CallNextHookEx(<sp/>g_hHookKbdLL,<sp/>nCode,<sp/>wp,<sp/>lp<sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="84"><highlight class="comment">================</highlight></codeline>
<codeline lineno="85"><highlight class="comment">AreTaskKeysDisabled</highlight></codeline>
<codeline lineno="86"><highlight class="comment"></highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/>Are<sp/>task<sp/>keys<sp/>disabled--ie,<sp/>is<sp/>hook<sp/>installed?</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/>Note:<sp/>This<sp/>assumes<sp/>there&apos;s<sp/>no<sp/>other<sp/>hook<sp/>that<sp/>does<sp/>the<sp/>same<sp/>thing!</highlight></codeline>
<codeline lineno="89"><highlight class="comment">================</highlight></codeline>
<codeline lineno="90"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">BOOL<sp/>AreTaskKeysDisabled()<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g_hHookKbdLL<sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="96"><highlight class="comment">================</highlight></codeline>
<codeline lineno="97"><highlight class="comment">IsTaskMgrDisabled</highlight></codeline>
<codeline lineno="98"><highlight class="comment">================</highlight></codeline>
<codeline lineno="99"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">BOOL<sp/>IsTaskMgrDisabled()<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>HKEY<sp/>hk;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>RegOpenKey(<sp/>HKEY_CURRENT_USER,<sp/>KEY_DisableTaskMgr,<sp/>&amp;hk<sp/>)<sp/>!=<sp/>ERROR_SUCCESS<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;<sp/></highlight><highlight class="comment">//<sp/>no<sp/>key<sp/>==&gt;<sp/>not<sp/>disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>val<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>len<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RegQueryValueEx(<sp/>hk,<sp/>VAL_DisableTaskMgr,<sp/>NULL,<sp/>NULL,<sp/>(BYTE*)&amp;val,<sp/>&amp;len<sp/>)<sp/>==<sp/>ERROR_SUCCESS<sp/>&amp;&amp;<sp/>val<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="113"><highlight class="comment">================</highlight></codeline>
<codeline lineno="114"><highlight class="comment">DisableTaskKeys</highlight></codeline>
<codeline lineno="115"><highlight class="comment">================</highlight></codeline>
<codeline lineno="116"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DisableTaskKeys(<sp/>BOOL<sp/>bDisable,<sp/>BOOL<sp/>bBeep,<sp/>BOOL<sp/>bTaskMgr<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>task<sp/>keys<sp/>(Ctrl+Esc,<sp/>Alt-Tab,<sp/>etc.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bDisable<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!g_hHookKbdLL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_hHookKbdLL<sp/>=<sp/>SetWindowsHookEx(<sp/>WH_KEYBOARD_LL,<sp/>MyTaskKeyHookLL,<sp/>win32.hInstance,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>g_hHookKbdLL<sp/>!=<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnhookWindowsHookEx(<sp/>g_hHookKbdLL<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_hHookKbdLL<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>g_bBeep<sp/>=<sp/>bBeep;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>task<sp/>manager<sp/>(Ctrl+Alt+Del)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bTaskMgr<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HKEY<sp/>hk;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>RegOpenKey(<sp/>HKEY_CURRENT_USER,<sp/>KEY_DisableTaskMgr,<sp/>&amp;hk<sp/>)<sp/>!=<sp/>ERROR_SUCCESS<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegCreateKey(<sp/>HKEY_CURRENT_USER,<sp/>KEY_DisableTaskMgr,<sp/>&amp;hk<sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bDisable<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>TM:<sp/>set<sp/>policy<sp/>=<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DWORD<sp/>val<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegSetValueEx(<sp/>hk,<sp/>VAL_DisableTaskMgr,<sp/>NULL,<sp/>REG_DWORD,<sp/>(BYTE*)&amp;val,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(val)<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enable<sp/>TM:<sp/>remove<sp/>policy<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegDeleteValue(<sp/>hk,VAL_DisableTaskMgr<sp/>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="E:/sources/3rd_party/DOOM/neo/sys/win32/win_taskkeyhook.cpp"/>
  </compounddef>
</doxygen>
